{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetField/AssetField.js","PageNotFound/PageNotFound.module.scss","SmartNumber/SmartNumber.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","FlexLoader/FlexLoader.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","length","undefined","_this","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","setProps","FunctionsUtil","loadUtils","newState","callback","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","flexProps","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","ref","_ref12","_ref13","_ref14","_ref15","govTokenConfig","govTokenIndex","distributionFrequency","position","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","text","mt","textProps","children","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","RoundButton","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","_this5","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this6","batchId","callbackClaim","_this7","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","disabledTokens","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","config","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","headers","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","sendBiconomyTxWithPersonalSign","_ref49","_callee44","_this$getSignaturePar2","_context44","getNonce","call","_x54","_x55","_x56","_x57","signPermitEIP2612","_ref50","_callee45","erc20Name","owner","spender","deadline","domain","domainData","_context45","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","signPermit","_ref51","_callee46","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args46","_context46","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","sendSignedTx","_ref52","_callee47","MetaTransaction","dataToSign","_context47","_x75","_x76","_x77","_x78","_x79","_ref53","_callee48","contractAddr","walletAddr","_ref54","_ref55","allowance","_context48","getAllowance","_x80","_x81","_x82","_ref56","_callee49","_context49","_x83","_x84","_x85","txData","disableERC20","toTwosComplement","_ref57","_callee50","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref58","_ref59","curveAvgBuyPrice","curveTokenBalance","_ref60","_ref61","amountLentCurve1","redeemableBalanceCurve","_ref62","_ref63","earningPerYear","_ref64","_ref65","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref66","_ref67","tokenPriceFirstDeposit","_ref68","_ref69","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref70","_ref71","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref72","_ref73","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref74","_ref75","amountLentCurve2","redeemableBalanceCurve1","_ref76","_ref77","redeemableBalance2","_args50","_context50","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x86","_x87","_x88","_x89","getIdleTokenSupply","_ref78","_callee51","idleTokenSupply","_args51","_context51","_x90","_ref79","_callee52","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args52","_context52","_x91","clearCachedData","useLocalStorage","_ref80","_callee53","_ref81","_ref82","idleTokensTotalSupply","userShare","_context53","_x92","_x93","_callee55","_args55","_context55","_ref84","_callee54","coverageTokens","protocolImage","_context54","_x94","_ref85","_callee56","etherscanEndpoint","_context56","_x95","_callee58","filter_by_status","_args58","_context58","_ref87","_callee57","_ref88","_ref89","_context57","_x96","_ref90","_callee59","fixDecimals","_args59","_context59","_x97","_ref91","_callee60","_ref92","_ref93","_args60","_context60","_x98","_x99","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref94","_callee61","_args61","_context61","_x100","_x101","getProtocolBalance","_ref95","_callee62","_context62","_x102","_x103","getAprs","_ref96","_callee63","_context63","_x104","genericIdleCall","_ref97","_callee64","callParams","_args64","_context64","_x105","estimateGas","_ref98","_callee65","_contract$methods3","_args65","_context65","_x106","_x107","getTxDecodedLogs","_ref99","_callee67","logAddr","decodeLogs","internalTransfers","_context67","_ref100","_callee66","_context66","_x112","_x113","_x108","_x109","_x110","_x111","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee68","_context68","getContractPastEvents","_ref102","_callee69","_args69","_context69","getPastEvents","_x114","_x115","_ref103","_callee70","_contract$methods4","_args70","_context70","_x116","_x117","_ref104","_callee71","_args71","_context71","_x118","_x119","apr2apy","getUnlentBalance","_ref105","_callee72","unlentBalance","_context72","_x120","_ref106","_callee73","_args73","_context73","_x121","_ref107","_callee75","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args75","_context75","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref108","_callee74","_ref109","_ref110","protocolBalance","protocolAllocation","_context74","_x123","_x124","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x122","getUniswapConversionRate_path","_ref111","_callee76","unires","_context76","_x125","_ref112","_callee77","tokenConfigFrom","tokenConfigDest","WETHAddr","_context77","_x126","_x127","getCurveDepositedTokens","_ref113","_callee78","idleTokensBalances","remainingCurveTokens","_args78","_context78","_x128","getCurveUnevenTokenAmounts","_ref114","_callee79","amounts","max_burn_amount","unevenAmounts","_context79","getCurveDepositContract","_x129","_x130","_callee80","curveRatesInfo","_context80","strategyTokens","getCurveAPYContract","_callee81","blocksForPrevTokenPrice","_ref117","_ref118","prevTokenPrice","blocksMultiplier","curveAPR","_context81","getCurveTokenSupply","_callee82","_context82","getCurvePoolContract","_callee83","_args83","_context83","_callee84","_args84","_context84","_ref122","_callee85","_ref123","_ref124","_context85","_x131","_callee86","depositContractInfo","_context86","getCurveZapContract","_callee87","zapContractInfo","_context87","_callee88","poolContractInfo","_context88","getCurveSwapContract","_callee89","_context89","getCurveIdleTokensAmounts","_callee91","max_slippage","curveTokenSupply","curveTokenShare","_args91","_context91","_ref130","_callee90","curveIdleTokens","_context90","_x132","getCurveTokensAmounts","_callee93","useCoinIndex","_args93","_context93","_ref132","_callee92","_ref133","_ref134","totalTokenSupply","_context92","_x133","getCurveAmounts","_ref135","_callee95","_args95","_context95","_ref136","_callee94","_context94","_x136","_x134","_x135","getCurveTokenAmount","_ref137","_callee96","_args96","_context96","_x137","getCurveSlippage","_ref138","_callee97","uneven_amounts","_ref139","_ref140","virtualPrice","Sv","_args97","_context97","_x138","_x139","getCompAPR","_ref141","_callee98","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args98","_context98","_x140","_x141","getCompSpeed","_ref142","_callee99","cTokenAddress","compSpeed","_context99","_x142","_ref143","_callee100","annualize","cTokenInfo","compoundAllocationPerc","_ref144","_ref145","cTokenTotalSupply","compoundPoolShare","_args100","_context100","_x143","_callee102","_args102","_context102","_ref147","_callee101","_ref148","_ref149","_context101","_x144","_callee104","_args104","_context104","_ref151","_callee103","_ref152","_ref153","compApr","_context103","_x145","getTokensCsv","_callee107","csv","_context107","prototype","sum","pv","cv","avg","_ref155","_callee106","_context106","_ref156","_callee105","header","aprAvg","scoreAvg","lastRow","_context105","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x147","_x146","_callee109","_args109","_context109","_ref158","_callee108","compTokenBalance","_context108","_x148","speed","getGovTokensUserDistributionSpeed","_ref159","_callee111","govTokensUserDistribution","_args111","_context111","_ref160","_callee110","_context110","_x150","_x149","_ref161","_callee113","govTokensDistribution","_args113","_context113","_ref162","_callee112","govSpeed","_context112","_x152","_x151","_ref163","_callee115","_args115","_context115","_ref164","_callee114","_ref165","_ref166","compoundInfo","_context114","_x155","_x153","_x154","_callee117","_args117","_context117","_ref168","_callee116","tokenConversionRate","fromTokenConfig","_context116","_x156","getGovTokenConfigByAddress","_callee118","checkShowBalance","govTokensEarnings","_args118","_context118","govTokenAmount","_callee121","govTokenConfigForced","_args121","_context121","_ref171","_callee120","govTokensAmounts","_context120","_ref172","_callee119","govTokenAddress","_context119","_x158","_x159","_x157","_callee122","_args122","_context122","_callee123","_ref175","_ref176","gain","fees","_args123","_context123","_ref177","_callee124","_args124","_context124","_x160","getTotalTVL","_callee125","tokensTVL","_context125","getTokensTVL","totalTVL","tokenTVL","_callee129","_context129","_ref180","_callee128","_context128","_ref181","_callee127","oldTokenTVL","idleTokenName","_ref182","_ref183","totalSupply","_ref187","_ref188","oldTokenPrice","oldTotalSupply","_context127","_ref184","_callee126","_ref185","_ref186","govTokenConversionRate","govTokenBalanceConverted","_context126","_x163","_x162","_x161","getSubstackLatestFeed","_callee130","endpointInfo","idleSubstackFeed","latestFeed","_context130","items","getAggregatedStats","_callee131","totalAUM","_args131","_context131","getAggregatedStats_chain","_callee135","avgAPR","_args135","_context135","_ref192","_callee134","_context134","_ref193","_callee133","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context133","_ref194","_callee132","_ref195","_ref196","_context132","_x166","_x165","_x164","getTokenApy","_ref197","_callee136","_context136","_x167","_callee139","_args139","_context139","_ref199","_callee138","_context138","_ref200","_callee137","_ref201","_context137","_x169","_x168","getProtocolsTokensBalances","_callee141","tokenBalances","minTokenBalance","protocolsTokens","_args141","_context141","_ref203","_callee140","tokenContract","_context140","_x170","_ref204","_callee142","_args142","_context142","_x171","_x172","_x173","getAvgAPYStats","_ref205","_callee143","apiResults","_args143","_context143","_x174","_x175","_ref206","_callee144","_conversionRate","_args144","_context144","_x176","_x177","_ref207","_callee145","_ref208","_ref209","_context145","protocolScore","getTokenScoreApi","_x178","_x179","_ref210","_callee146","_context146","_x180","_x181","_ref211","_callee148","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args148","_context148","_ref212","_callee147","addrIndex","protocolApr","protocolApy","_context147","_x183","_x184","_x182","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly"],"mappings":"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","file":"static/js/main.1a27876c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    const amountLent = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,s.name,checkedStrategies);\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}