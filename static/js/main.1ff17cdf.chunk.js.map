{"version":3,"sources":["AssetField/AssetField.js","ExtLink/ExtLink.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","CustomField/CustomField.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","defiScoreDisabled","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","target","rel","children","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","text","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","transactionsList","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","textProps","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundButton","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","button","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","isDisabled","image","align","imageProps","useIconOnly","iconColor","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","hashChanged","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","getDistribution","slicedToArray","getUniswapConversionRate","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","arr1","arr2","replaceArrayPropsRecursive","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","events","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","analytics","google","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","loadTrancheField","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","_ref178","_callee109","protocolsAprs","_ref179","_ref180","tokenAllocations","govTokensBalances","promises","_args109","_context109","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x191","getSushiswapPoolTokenPrice","_ref181","_callee110","pairAddresses","_ref182","_ref183","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref184","_ref185","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context110","getSushiswapConversionRate","_x192","_x193","_ref186","_callee111","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context111","_x194","_x195","_ref187","_callee112","unires","_context112","addressForPrice","_x196","_x197","getCurveDepositedTokens","_ref188","_callee113","idleTokensBalances","remainingCurveTokens","_args113","_context113","_x198","getCurveUnevenTokenAmounts","_ref189","_callee114","amounts","max_burn_amount","unevenAmounts","_context114","getCurveDepositContract","_x199","_x200","_callee115","curveRatesInfo","_context115","strategyTokens","getCurveAPYContract","_callee116","blocksForPrevTokenPrice","_ref192","_ref193","prevTokenPrice","blocksMultiplier","curveAPR","_context116","getCurveTokenSupply","_callee117","_context117","getCurvePoolContract","_callee118","_args118","_context118","_callee119","_args119","_context119","_ref197","_callee120","_ref198","_ref199","_context120","_x201","_callee121","depositContractInfo","_context121","getCurveZapContract","_callee122","zapContractInfo","_context122","_callee123","poolContractInfo","_context123","getCurveSwapContract","_callee124","migrationContractInfo","_context124","getCurveIdleTokensAmounts","_callee126","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args126","_context126","_ref205","_callee125","coinIndex","curveIdleTokens","_context125","migrationParams","_x202","getCurveTokensAmounts","_callee128","useCoinIndex","_args128","_context128","_ref207","_callee127","_ref208","_ref209","idleTokenPrice","totalTokenSupply","_context127","_x203","getCurveAmounts","_ref210","_callee130","_args130","_context130","_ref211","_callee129","_context129","_x206","_x204","_x205","getCurveTokenAmount","_ref212","_callee131","_args131","_context131","_x207","getCurveSlippage","_ref213","_callee132","uneven_amounts","depositContract","_ref214","_ref215","Sv","_args132","_context132","_x208","_x209","_ref216","_callee133","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref217","_ref218","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args133","_context133","_x210","_callee135","_args135","_context135","_ref220","_callee134","_ref221","_ref222","_context134","_x211","getStkAaveApr","_ref223","_callee136","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args136","_context136","_x212","_x213","getCompAPR","_ref224","_callee137","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args137","_context137","_x214","_x215","getCompSpeed","_ref225","_callee138","cTokenAddress","compSpeed","_context138","_x216","_ref226","_callee139","cTokenInfo","compoundAllocationPerc","_ref227","_ref228","cTokenTotalSupply","compoundPoolShare","_args139","_context139","_x217","_callee141","_args141","_context141","_ref230","_callee140","_ref231","_ref232","_context140","_x218","_callee143","_args143","_context143","_ref234","_callee142","_ref235","_ref236","compApr","_context142","_x219","getTokensCsv","_callee146","csv","_context146","prototype","sum","pv","cv","avg","_ref238","_callee145","_context145","_ref239","_callee144","header","aprAvg","scoreAvg","lastRow","_context144","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x221","_x220","_callee148","convertToken","_args148","_context148","_ref241","_callee147","compTokenBalance","_context147","_x222","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref242","_callee150","govTokensUserDistribution","_args150","_context150","_ref243","_callee149","_context149","_x224","_x223","_ref244","_callee152","govTokensDistribution","tokenGovTokens","_args152","_context152","_ref245","_callee151","govSpeed","_context151","_x226","_x225","_ref246","_callee154","_args154","_context154","_ref247","_callee153","_ref248","_ref249","_ref250","_ref251","cTokenConfig","_context153","aprTooltipMode","_x229","_x227","_x228","_callee156","_args156","_context156","_ref253","_callee155","govTokenBalance","tokenConversionRate","fromTokenConfig","_context155","_x230","_callee157","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args157","_context157","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref255","_callee159","govTokensAmounts","_context159","getGovTokensUserAmounts","_ref256","_callee158","_context158","getGovTokenAddessByIndex","_x233","_x234","_x231","_x232","_ref257","_callee160","_context160","_x235","_x236","_ref258","_callee161","_context161","_x237","_x238","_callee164","govTokenConfigForced","_args164","_context164","_ref260","_callee163","_context163","_ref261","_callee162","_context162","_x240","_x241","_x239","_callee165","_args165","_context165","_callee166","_ref264","_ref265","gain","fees","_args166","_context166","_ref266","_callee167","_args167","_context167","_x242","getTotalTVL","_callee168","tokensTVL","_context168","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee172","_context172","_ref269","_callee171","_context171","_ref270","_callee170","oldTokenTVL","idleTokenName","_ref271","_ref272","_ref276","_ref277","oldTokenPrice","oldTotalSupply","_context170","showAUM","_ref273","_callee169","_ref274","_ref275","govTokenConversionRate","govTokenBalanceConverted","_context169","_x245","_x244","_x243","getSubstackLatestFeed","_callee173","endpointInfo","idleSubstackFeed","latestFeed","_context173","items","getAggregatedStats","_callee174","tvls","totalAUM","_args174","_context174","getAggregatedStats_chain","_callee178","avgAPR","_args178","_context178","_ref281","_callee177","_context177","_ref282","_callee176","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context176","_ref283","_callee175","_ref284","_ref285","_context175","_x248","_x247","_x246","getTokenApy","_ref286","_callee179","_context179","_x249","getTokensToMigrate","_callee182","tokensToMigrate","_args182","_context182","_ref288","_callee181","_context181","_ref289","_callee180","_ref290","_context180","_x251","_x250","getProtocolsTokensBalances","_callee184","tokenBalances","minTokenBalance","protocolsTokens","_args184","_context184","_ref292","_callee183","tokenContract","_context183","_x252","_ref293","_callee185","_args185","_context185","_x253","_x254","_x255","getAvgAPYStats","_ref294","_callee186","apiResults","_args186","_context186","_x256","_x257","_ref295","_callee187","_conversionRate","_args187","_context187","_x258","_x259","_ref296","_callee188","_ref297","_ref298","_context188","protocolScore","getTokenScoreApi","_x260","_x261","_ref299","_callee189","scores","_context189","_x262","_x263","_ref300","_callee190","idleGovTokenShowAPR","idleAPR","_args190","_context190","_x264","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","Staking","selectedOption","toolProps","SelectedComponent","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","rewardMultiplier","accountingData","selectedAction","successMessage","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","urlParams","param3","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","loadPortfolio","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","TotalEarningsCounter","loadTotalEarnings","counterStyle","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","aggregatedValues","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_TotalBalanceCounter_TotalBalanceCounter","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","ActiveCoverages","AssetsList","visibleOnDesktop","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functions","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","hex","rgb","baseName","features","long","stake","unstake","cantUnstake","cantWithdraw","best","visible","comingSoon","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.1ff17cdf.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      tokenUsdConversionRate,\n      totalSupply,\n      tokenAllocations,\n      govTokensBalances,\n      allAvailableTokens\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllocations'),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllAvailableTokens')\n    ]);\n\n    if (!allAvailableTokens){\n      const promises = tokenAllocations.map( (p,index) => this.genericContractCall(tokenConfig.idle.token,'allAvailableTokens',[index]) );\n      allAvailableTokens = await Promise.all(promises);\n    }\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (allAvailableTokens && tokenAllocations && allAvailableTokens.length === tokenAllocations.length){\n      allAvailableTokens.forEach( (protocolAddr,index) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(tokenAllocations[index]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\n// import Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v6.0',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      12:{\n        description:'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds\\' coverage given by Junior Tranches',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    /*\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      component:Tranches,\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.',\n      descLong:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles. A Junior tranche receives a larger portion of the yield generated by the underlying pool, and therefore a Senior tranche has a lower yield. This is because the senior tranches have first lien on the underlying assets – they are in line to be repaid first, in case of default (hack, loss of funds). Junior tranches have a second lien or no lien at all. These products allow to tranche a spectrum of risks related to underlying assets and smart contract failures. In this way, risk-tolerant users can get higher returns for taking an higher risk, while risk-averse users will receive protection in exchange of a share of their profits with their risk-tolerant equivalents.',\n    },\n    */\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}