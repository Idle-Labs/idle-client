{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","IconBox/IconBox.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","AssetsUnderManagement/AssetsUnderManagement.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","FlexLoader/FlexLoader.js","Title/Title.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TrancheField/TrancheField.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","IconBox","isVisible","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref32","_ref33","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref34","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref35","_ref36","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref37","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref38","_ref39","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref40","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref41","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref42","_callee24","_context24","_x26","_x27","_x28","_ref43","_callee25","_ref44","_ref45","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref48","_ref49","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref50","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref51","_callee28","_context28","_x32","match","_ref52","_callee29","_context29","_x33","_ref53","_callee30","_context30","_x34","items","to_address","_ref54","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref60","_callee38","_ref61","_ref62","_context38","getTransactionReceipt","_x36","_ref63","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref64","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref65","_callee41","processTxs","_args41","_context41","_x40","_ref66","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref67","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref68","_callee46","minedTxs","_context46","_ref69","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref70","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref71","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref72","_callee53","txsToProcess","_args53","_context53","_ref73","_callee52","_context52","_ref74","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref75","_callee48","_context48","_x54","_x55","_ref76","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref77","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","makePostRequest","_ref78","_callee54","postData","error_callback","config","_args54","_context54","post","catch","_x60","_ref79","_callee55","_args55","_context55","_x61","_ref80","_callee56","apiKeyIndex","apiKey","_args56","_context56","message","_x62","_ref81","_callee57","return_data","_args57","_context57","_x63","makeCachedPostRequest","_ref82","_callee58","_args58","_context58","_x64","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee59","page","googlePageviewInfo","isOrigin","_args59","_context59","ga","_ref84","_callee61","googleEventsInfo","debugEnabled","originOk","_args61","_context61","analytics","google","addPostfixForTestnet","availableNetworks","_ref85","_callee60","_context60","hitCallback","hitCallbackFail","_x66","_x67","_x65","createContract","_ref86","_callee62","_context62","_x68","_x69","_x70","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee65","activeOnly","whitelist","query","proposals","currTime","validProposals","_args65","_context65","addr","_ref88","_callee64","checkedStrategies","_context64","end","author","snapshot","strategies","_ref89","_callee63","tokenContract","_context63","_x72","_x71","getAprsFromApi","_callee66","endpointInfo","aprs","_args66","_context66","_ref91","_callee67","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args67","_context67","_x73","getTokenExchangeRate","_ref92","_callee68","exchangeRateParams","exchangeRate","_context68","_x74","_x75","getTokenDecimals","_ref93","_callee69","_context69","_x76","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee70","idleTokenConfig","feeDistributorConfig","_context70","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee71","contractPaused","_args71","_context71","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref96","_callee73","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context73","lastAllocationsPromise","_ref97","_callee72","lastAllocations","_context72","_x78","_x79","alloc","_x77","_ref98","_callee74","oldContractBalance","oldContractTokenDecimals","oldContractName","_context74","_x80","_x81","_ref99","_callee75","eventName","_args75","_context75","getContractPastEvents","_x82","_x83","estimateMethodGasUsage","_ref100","_callee76","methodParams","_contract$methods","functionCall","gasLimit","_ref101","_ref102","_args76","_context76","getGasPrice","estimateGas","_x84","_x85","_ref103","_callee77","userAddress","signedParameters","callback_receipt","_contract$methods2","_context77","on","once","confirmationNumber","receipt","_x86","_x87","_x88","_x89","_x90","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref104","_callee78","biconomyInfo","res","_context78","limits","apiId","headers","x-api-key","_x91","sendTxWithPermit","_ref105","_callee79","_contract$methods3","messageToSign","_this$getSignaturePar","_context79","encodeABI","personal","sign","_x92","_x93","_x94","_x95","_x96","_x97","buildBiconomyErc20ForwarderTx","_ref106","_callee80","permitType","callData","buildParams","_context80","txGas","erc20ForwarderClient","buildTx","_x98","_x99","_x100","_x101","_x102","_ref107","_callee82","_context82","_ref108","_callee81","_context81","_x104","_x105","_x103","sendBiconomyTxWithErc20Forwarder","_ref109","_callee83","req","metaInfo","txResponse","fetchReceiptIntervalId","_context83","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x106","_x107","_x108","_x109","sendBiconomyTxWithPersonalSign","_ref110","_callee84","_this$getSignaturePar2","_context84","getNonce","_x110","_x111","_x112","_x113","signPermitEIP2612","_ref111","_callee85","erc20Name","owner","spender","deadline","domain","permit","domainData","_context85","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x114","_x115","_x116","_x117","_x118","_x119","_x120","_x121","signPermit","_ref112","_callee86","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args86","_context86","net","getId","round","nonceMethod","pow","allowed","response","_x122","_x123","_x124","_ref113","_callee87","permitParams","methodAbi","useNonce","_args87","_context87","_jsonInterface","f","unshift","_x125","_x126","_x127","_x128","_x129","_x130","_x131","sendSignedTx","_ref114","_callee88","MetaTransaction","dataToSign","_context88","_x132","_x133","_x134","_x135","_x136","checkTokenApproved","_ref115","_callee89","contractAddr","walletAddr","_ref116","_ref117","allowance","_context89","getAllowance","gte","_x137","_x138","_x139","_ref118","_callee90","_context90","_x140","_x141","_x142","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee92","highestValue","_args92","_context92","lendRates","aprInfo","tokenAPR","_ref120","_callee91","_context91","_x143","_ref121","_callee93","stakedBalance","_args93","_context93","_x144","_x145","getTrancheStakingRewards","_ref122","_callee95","_context95","_ref123","_callee94","tokenGlobalConfig","_context94","_x148","_x146","_x147","_ref124","_callee96","field","addGovTokens","_args96","_context96","loadTrancheField","_x149","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_ref125","_callee97","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref126","_ref127","totalSupply","virtualPrice","_ref128","_ref129","staked1","lastPrice1","_ref130","_ref131","deposited1","lastPrice","_ref132","_ref133","redeemable1","staked2","_ref134","_ref135","earningsStart","trancheApy2","deposited3","earningsEnd","_ref136","_ref137","trancheFee","earningsCounter","feesStart","feesEnd","_ref138","_ref139","deposited4","redeemable3","_ref140","_ref141","deposited2","redeemable2","trancheApyDecimals","_ref142","_ref143","_ref144","_ref145","earningsPerc","secondsFromFirstTx","_ref146","_ref147","rewardsTokens","incentiveTokens","govTokens","_args97","_context97","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x157","_x158","_x159","_x160","_x161","_x162","_x163","loadAssetField","_ref148","_callee98","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref149","_ref150","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref151","_ref152","amountLentCurve1","redeemableBalanceCurve","_ref153","_ref154","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref155","_ref156","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref157","_ref158","tokenPriceFirstDeposit","_ref159","_ref160","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref161","_ref162","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref163","_ref164","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref165","_ref166","amountLentCurve2","redeemableBalanceCurve1","_ref167","_ref168","redeemableBalance2","_args98","_context98","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x164","_x165","_x166","_x167","getIdleTokenSupply","_ref169","_callee99","idleTokenSupply","_args99","_context99","_x168","getIdleTokenPriceWithFee","_ref170","_callee100","_ref171","_ref172","fee","priceWFee","_args100","_context100","eq","_x169","_x170","_ref173","_callee101","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args101","_context101","_x171","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref174","_callee102","_ref175","_ref176","idleTokensTotalSupply","userShare","_context102","_x172","_x173","open","_callee104","coverProtocolConfig","nexusMutualConfig","_args104","_context104","_ref178","_callee103","coverage","coverageTokens","protocolImage","_context103","tokens","expirationTimestamp","utc","_x174","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref179","_callee106","incidentsInfo","_ref180","_ref181","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context106","directProps","startBlock","contractInfo","buyer","_ref182","_callee105","cover","coverId","claimSubmittedEvent","_ref183","_ref184","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref185","_ref186","_context105","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x176","_x175","getBatchedDepositExecutions","_ref187","_callee107","_context107","_x177","getBatchedDeposits","_callee109","filter_by_status","batchDepositConfig","batchedDeposits","_args109","_context109","_ref189","_callee108","currBatchIndex","batchIndex","_ref190","_ref191","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context108","_x178","getETHBalance","_ref192","_callee110","fixDecimals","_args110","_context110","_x179","_ref193","_callee111","_ref194","_ref195","_args111","_context111","_x180","_x181","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref196","_callee112","_args112","_context112","_x182","_ref197","_callee113","_args113","_context113","_x183","_ref198","_callee114","_args114","_context114","_x184","_x185","getProtocolBalance","_ref199","_callee115","_context115","_x186","_x187","getAprs","_ref200","_callee116","_context116","addresses","_x188","genericIdleCall","_ref201","_callee117","callParams","_args117","_context117","_x189","_ref202","_callee118","_contract$methods4","_args118","_context118","_x190","_x191","_ref203","_callee120","_args120","_context120","_ref204","_callee119","_context119","_x193","_x194","_x192","getTxDecodedLogs","_ref205","_callee122","logAddr","decodeLogs","internalTransfers","_context122","_ref206","_callee121","_context121","_x199","_x200","_x195","_x196","_x197","_x198","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee123","_context123","_callee124","_args124","_context124","getBlock","_ref209","_callee125","_args125","_context125","getPastEvents","_x201","_x202","_ref210","_callee126","_args126","_context126","_x203","_x204","cachedContractCall","_ref211","_callee127","_args127","_context127","_x205","_x206","_ref212","_callee128","_contract$methods5","_args128","_context128","_x207","_x208","_ref213","_callee129","async","_args129","_context129","_x209","_x210","getUnlentBalance","_ref214","_callee130","unlentBalance","_context130","_x211","_ref215","_callee131","_args131","_context131","_x212","getLastAllocations","_ref216","_callee133","tokenAllocations","_context133","_ref217","_callee132","_context132","_x214","_x215","_x213","_ref218","_callee134","protocolsAprs","_ref219","_ref220","govTokensBalances","_args134","_context134","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x216","getSushiswapPoolTokenPrice","_ref221","_callee135","_ref222","_ref223","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref224","_ref225","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context135","getSushiswapConversionRate","_x217","_ref226","_callee136","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context136","_x218","_x219","_ref227","_callee137","unires","_args137","_context137","addressForPrice","_x220","_x221","getCurveDepositedTokens","_ref228","_callee138","idleTokensBalances","remainingCurveTokens","_args138","_context138","_x222","getCurveUnevenTokenAmounts","_ref229","_callee139","amounts","max_burn_amount","unevenAmounts","_context139","getCurveDepositContract","_x223","_x224","_callee140","curveRatesInfo","_context140","strategyTokens","getCurveAPYContract","_callee141","blocksForPrevTokenPrice","_ref232","_ref233","prevTokenPrice","blocksMultiplier","curveAPR","_context141","getCurveTokenSupply","_callee142","_context142","getCurvePoolContract","_callee143","_args143","_context143","_callee144","_args144","_context144","_ref237","_callee145","_ref238","_ref239","_context145","_x225","_callee146","depositContractInfo","_context146","getCurveZapContract","_callee147","zapContractInfo","_context147","_callee148","poolContractInfo","_context148","getCurveSwapContract","_callee149","migrationContractInfo","_context149","getCurveIdleTokensAmounts","_callee151","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args151","_context151","_ref245","_callee150","coinIndex","curveIdleTokens","_context150","migrationParams","_x226","getCurveTokensAmounts","_callee153","useCoinIndex","_args153","_context153","_ref247","_callee152","_ref248","_ref249","idleTokenPrice","totalTokenSupply","_context152","_x227","getCurveAmounts","_ref250","_callee155","_args155","_context155","_ref251","_callee154","_context154","_x230","_x228","_x229","getCurveTokenAmount","_ref252","_callee156","_args156","_context156","_x231","getCurveSlippage","_ref253","_callee157","uneven_amounts","depositContract","_ref254","_ref255","Sv","_args157","_context157","_x232","_x233","_ref256","_callee158","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref257","_ref258","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args158","_context158","IAaveIncentivesController","emissionPerSecond","_x234","_callee160","_args160","_context160","_ref260","_callee159","_ref261","_ref262","_context159","_x235","getWMaticApr","_ref263","_callee161","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args161","_context161","_x236","_x237","getStkAaveApr","_ref264","_callee162","aaveConversionRate","stkAaveAPR","stkAaveValue","_args162","_context162","_x238","_x239","getCompAPR","_ref265","_callee163","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args163","_context163","_x240","_x241","getCompSpeed","_ref266","_callee164","cTokenAddress","compSpeed","_context164","_x242","_ref267","_callee165","cTokenInfo","compoundAllocationPerc","_ref268","_ref269","cTokenTotalSupply","compoundPoolShare","_args165","_context165","_x243","_callee167","_args167","_context167","_ref271","_callee166","_ref272","_ref273","_context166","_x244","_callee169","_args169","_context169","_ref275","_callee168","_ref276","_ref277","compApr","_context168","_x245","getTokensCsv","_callee172","csv","_context172","prototype","sum","pv","cv","avg","_ref279","_callee171","_context171","_ref280","_callee170","rates","header","aprAvg","scoreAvg","lastRow","_context170","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x247","_x246","_callee174","convertToken","_args174","_context174","_ref282","_callee173","compTokenBalance","_context173","_x248","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref283","_callee176","govTokensUserDistribution","_args176","_context176","_ref284","_callee175","_context175","_x250","_x249","getGovTokensDistributionSpeed","_ref285","_callee178","govTokensDistribution","_args178","_context178","_ref286","_callee177","govSpeed","_context177","_x252","_x251","getGovTokensAprs","_ref287","_callee180","govTokensAprs","_args180","_context180","_ref288","_callee179","_ref289","_ref290","_ref291","_ref292","cTokenConfig","_context179","aprTooltipMode","_x255","_x253","_x254","_callee182","_args182","_context182","_ref294","_callee181","govTokenBalance","fromTokenConfig","_context181","_x256","_callee183","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args183","_context183","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref296","_callee185","govTokensAmounts","_context185","getGovTokensUserAmounts","_ref297","_callee184","govTokenIndex","_context184","getGovTokenAddessByIndex","_x259","_x260","_x257","_x258","_ref298","_callee186","_context186","_x261","_x262","_ref299","_callee187","_context187","_x263","_x264","_callee190","govTokenConfigForced","_args190","_context190","_ref301","_callee189","_context189","_ref302","_callee188","_context188","_x266","_x267","_x265","getTokenFees","_callee191","_args191","_context191","_callee192","_ref305","_ref306","feePercentage","gain","fees","_args192","_context192","_ref307","_callee193","_args193","_context193","_x268","getTotalTVL","_callee194","tokensTVL","_context194","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee198","_context198","_ref310","_callee197","_context197","_ref311","_callee196","oldTokenTVL","idleTokenName","_ref312","_ref313","oldTokenConfig","_ref317","_ref318","oldTokenPrice","oldTotalSupply","_context196","showAUM","_ref314","_callee195","_ref315","_ref316","govTokenConversionRate","govTokenBalanceConverted","_context195","_x271","oldProtocols","oldProtocol","protocolPos","_x270","_x269","getSubstackLatestFeed","_callee199","idleSubstackFeed","latestFeed","_context199","getTrancheAggregatedStats","_callee203","totalAUM","_args203","_context203","_ref321","_callee202","_context202","_ref322","_callee201","_context201","_ref323","_callee200","_ref324","_ref325","_context200","_x274","_x273","_x272","getAggregatedStats","_callee205","allNetworks","networkIds","_args205","_context205","_ref327","_callee204","tvls","_context204","getAggregatedStats_chain","_x275","_callee209","avgAPR","_args209","_context209","_ref329","_callee208","_context208","_ref330","_callee207","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context207","_ref331","_callee206","_ref332","_ref333","_context206","_x278","_x277","_x276","getTokenApy","_ref334","_callee210","_context210","_x279","getTokensToMigrate","_callee213","_args213","_context213","_ref336","_callee212","_context212","_ref337","_callee211","_ref338","_context211","_x281","_x280","getProtocolsTokensBalances","_callee215","tokenBalances","minTokenBalance","protocolsTokens","_args215","_context215","_ref340","_callee214","_context214","_x282","getTokenConversionRateField","_ref341","_callee216","_args216","_context216","getTokenConversionRateUniswap","_x283","_x284","_ref342","_callee217","_args217","_context217","_x285","_x286","_x287","getAvgAPYStats","_ref343","_callee218","apiResults","_args218","_context218","_x288","_x289","_ref344","_callee219","ToTokenConfig","_args219","_context219","_x290","_ref345","_callee220","count","_conversionRate","_args220","_context220","_x291","_x292","getTokenScore","_ref346","_callee221","_ref347","_ref348","tokenScore","_context221","protocolScore","getTokenScoreApi","_x293","_x294","_ref349","_callee222","scores","_context222","_x295","_x296","_ref350","_callee223","idleGovTokenShowAPR","idleAPR","_args223","_context223","_x297","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","PortfolioEquityTranches","transactionsList","lastTxTimestamp","tokenBalanceConfig","tranchePriceAA","tranchePriceBB","tokenDataAA","tokenDataBB","lastTimestamp","filteredTrancheBalances","_timeStamp","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","CRV","FRAX3CRV","MIM3CRV","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","limitCap","badgeText","badgeColor","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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B,CACjB4nB,IAAKixF,GACLttI,KAAM,yBACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,cAKdwtI,cAAe,CACbp0I,SAAU,GACVijD,IAAKqxD,GACL/yE,SAAU,OACVjE,UAAW,OACX12B,KAAM,kBACN0L,MAAO,kBACPjH,QAAS,6CACTgwB,kBAAmB,CACjB4nB,IAAKixF,GACLttI,KAAM,yBACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,cAKdytI,cAAe,CACbr0I,SAAU,GACVijD,IAAKqxD,GACL/yE,SAAU,OACVjE,UAAW,OACX12B,KAAM,kBACN0L,MAAO,kBACPjH,QAAS,6CACTgwB,kBAAmB,CACjB4nB,IAAKixF,GACLttI,KAAM,yBACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,cAKd0tI,YAAa,CACXt0I,SAAU,GACVijD,IAAKqxD,GACL/yE,SAAU,OACVjE,UAAW,MACX12B,KAAM,gBACN0L,MAAO,gBACPjH,QAAS,6CACTgwB,kBAAmB,CACjB4nB,IAAKixF,GACLttI,KAAM,4BACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,cAKd2tI,aAAc,CACZv0I,SAAU,GACVijD,IAAKqxD,GACL/yE,SAAU,OACVjE,UAAW,OACX12B,KAAM,iBACN0L,MAAO,iBACPjH,QAAS,6CACTgwB,kBAAmB,CACjB4nB,IAAKixF,GACLttI,KAAM,6BACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,cAKd4tI,aAAc,CACZx0I,SAAU,GACVijD,IAAKqxD,GACL/yE,SAAU,OACVjE,UAAW,OACX12B,KAAM,iBACN0L,MAAO,iBACPjH,QAAS,6CACTgwB,kBAAmB,CACjB4nB,IAAKixF,GACLttI,KAAM,6BACNyE,QAAS,6CACTuoG,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,iBAQpB6tI,eAAgB,CACdphH,SAAS,EACTlnB,KAAM,YACN8mE,MAAO,UACP5qB,kBAAmB,CAAC,GACpBr8C,MAAO,kBACP4lG,KAAM,yEACN+gC,aAAczR,GACd7hI,MAAO,CACLg8B,kBAAmB,CACjBz0B,KAAM,kBACNq8C,IAAKuxD,GACLnpG,QAAS,6CACTkwB,aAAc,GACdq4E,UAAW,CACT,CACE5nG,MAAO,UACPpF,KAAM,uBAIZmuB,oBAAqB,CAAC,OAAQ,QAC9BvmB,gBAAiB,CACfkmI,UAAW,CACT10I,SAAU,GACVqzB,SAAS,EACT0L,SAAU,OACVzB,UAAW,MACX2lB,IAAK0xF,GACLriI,MAAO,aACPnG,KAAM,4BACNwvH,gBAAiB,oBACjBtwH,QAAS,8CAEXunG,KAAM,CACJ5yG,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,OACPgrB,UAAW,MACXyB,SAAU,WACV48F,gBAAiB,4BACjBtwH,QAAS,8CAEXupI,KAAM,CACJ50I,SAAU,GACVqzB,SAAS,EACT/gB,MAAO,OACPgrB,UAAW,MACXyB,SAAU,UACV48F,gBAAiB,2BACjBtwH,QAAS,8CAEXwpI,KAAM,CACJ70I,SAAU,GACVqzB,SAAS,EACT/gB,MAAO,OACPysB,SAAU,OACVzB,UAAW,MACXq+F,gBAAiB,wBACjBtwH,QAAS,8CAEXypI,OAAQ,CACN90I,SAAU,GACVqzB,SAAS,EACT/gB,MAAO,SACP2wC,IAAK6xF,GAAO7xF,IACZ3lB,UAAW,MACXyB,SAAU,QACV5yB,KAAM,yBACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEX0pI,OAAQ,CACN/0I,SAAU,GACVqzB,SAAS,EACT/gB,MAAO,SACPgrB,UAAW,MACX2lB,IAAK6xF,GAAO7xF,IACZlkB,SAAU,QACV5yB,KAAM,yBACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEX2pI,WAAY,CACVh1I,SAAU,GACVqzB,SAAS,EACT0L,SAAU,OACVkkB,IAAK0xF,GACLr3G,UAAW,OACXhrB,MAAO,cACPnG,KAAM,6BACNwvH,gBAAiB,oBACjBtwH,QAAS,8CAEX4pI,MAAO,CACLj1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,WACV48F,gBAAiB,4BACjBtwH,QAAS,8CAEX6pI,MAAO,CACLl1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,UACV48F,gBAAiB,2BACjBtwH,QAAS,8CAEX8pI,MAAO,CACLn1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPysB,SAAU,OACVzB,UAAW,OACXq+F,gBAAiB,wBACjBtwH,QAAS,8CAEX+pI,QAAS,CACPp1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,UACPysB,SAAU,QACVkkB,IAAKmyF,GAAQnyF,IACb3lB,UAAW,OACXnxB,KAAM,0BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEXgqI,QAAS,CACPr1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,UACPysB,SAAU,QACVkkB,IAAKmyF,GAAQnyF,IACb3lB,UAAW,OACXnxB,KAAM,0BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEXiqI,MAAO,CACLt1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,WACV48F,gBAAiB,4BACjBtwH,QAAS,8CAEXkqI,MAAO,CACLv1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,UACV48F,gBAAiB,2BACjBtwH,QAAS,8CAEXmqI,MAAO,CACLx1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPysB,SAAU,OACVzB,UAAW,OACXq+F,gBAAiB,wBACjBtwH,QAAS,8CAEXoqI,QAAS,CACPz1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,UACP2wC,IAAKwyF,GAAQxyF,IACblkB,SAAU,QACVzB,UAAW,OACXnxB,KAAM,0BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEXqqI,QAAS,CACP11I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,UACP2wC,IAAKwyF,GAAQxyF,IACblkB,SAAU,QACVzB,UAAW,OACXnxB,KAAM,0BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEXsqI,WAAY,CACV31I,SAAU,GACVqzB,SAAS,EACT4vB,IAAK0xF,GACL51G,SAAU,OACVzB,UAAW,OACXhrB,MAAO,mBACPyiB,oBAAqB,CAAC,QACtB4mG,gBAAiB,oBACjBxvH,KAAM,kCACNd,QAAS,8CAEXuqI,MAAO,CACL51I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPysB,SAAU,OACVzB,UAAW,OACXq+F,gBAAiB,wBACjBtwH,QAAS,8CAEXwqI,QAAS,CACP71I,SAAU,GACVqzB,SAAS,EACT/gB,MAAO,UACP2wC,IAAK4yF,GACLv4G,UAAW,OACXyB,SAAU,QACVhK,oBAAqB,CAAC,QACtB5oB,KAAM,4BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEXyqI,WAAY,CACV91I,SAAU,GACVqzB,SAAS,EACT4vB,IAAK0xF,GACL51G,SAAU,OACVzB,UAAW,OACXhrB,MAAO,mBACPyiB,oBAAqB,CAAC,QACtB4mG,gBAAiB,oBACjBxvH,KAAM,kCACNd,QAAS,8CAEX0qI,MAAO,CACL/1I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPysB,SAAU,OACVzB,UAAW,OACXq+F,gBAAiB,wBACjBtwH,QAAS,8CAEX2qI,QAAS,CACPh2I,SAAU,GACVqzB,SAAS,EACT4vB,IAAK+yF,GACL1jI,MAAO,UACPgrB,UAAW,OACXyB,SAAU,QACV5yB,KAAM,4BACNwvH,gBAAiB,yBACjBtwH,QAAS,8CAEX4qI,MAAO,CACLj2I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,WACV48F,gBAAiB,4BACjBtwH,QAAS,8CAEX6qI,MAAO,CACLl2I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPgrB,UAAW,OACXyB,SAAU,UACV48F,gBAAiB,2BACjBtwH,QAAS,8CAEX8qI,MAAO,CACLn2I,SAAU,EACVqzB,SAAS,EACT/gB,MAAO,QACPysB,SAAU,OACVzB,UAAW,OACXq+F,gBAAiB,wBACjBtwH,QAAS,iDAKjB+qI,SAAU,CACR/iH,SAAS,EACT4/C,MAAO,YACPjnE,MAAO,YACPq8C,kBAAmB,CAAC,GACpBl8C,KAAM,mBACNylG,KAAM,oEACN+gC,aAActnC,IACd13B,YAAa,CACXy5B,YAAY,EACZsC,eAAe,IAGnB2mC,UAAW,CACThjH,SAAS,EACTlnB,KAAM,OACN8mE,MAAO,aACPjnE,MAAO,aACPq8C,kBAAmB,CAAC,GACpBupD,KAAM,kDACN+gC,aAAczsB,GACd7mH,MAAO,CACLmP,gBAAiB,CACf0/H,IAAK,CAAE57H,MAAO,OACd4gG,IAAK,CAAE5gG,MAAO,OACdsiG,KAAM,CAAEtiG,MAAO,QACfwiG,KAAM,CAAExiG,MAAO,QACf2hG,KAAM,CAAE3hG,MAAO,QACfgkI,KAAM,CAAEhkI,MAAO,QACfqiG,KAAM,CAAEriG,MAAO,QACfyiG,KAAM,CAAEziG,MAAO,QACf4hG,KAAM,CAAE5hG,MAAO,QACfikI,KAAM,CAAEjkI,MAAO,QACfkkI,KAAM,CAAElkI,MAAO,QACfmkI,OAAQ,CAAEnkI,MAAO,QACjBokI,IAAK,CAAEpkI,MAAO,OACdqkI,MAAO,CAAErkI,MAAO,SAChBskI,KAAM,CAAEtkI,MAAO,QACfukI,IAAK,CAAEvkI,MAAO,OACdwkI,IAAK,CAAExkI,MAAO,OACdykI,KAAM,CAAEzkI,MAAO,QACf0kI,IAAK,CAAE1kI,MAAO,OACd2kI,IAAK,CAAE3kI,MAAO,OACd4kI,IAAK,CAAE5kI,MAAO,OACd6kI,IAAK,CAAE7kI,MAAO,OACd8kI,IAAK,CAAE9kI,MAAO,OACd+kI,IAAK,CAAE/kI,MAAO,OACdglI,IAAK,CAAEhlI,MAAO,OACdilI,IAAK,CAAEjlI,MAAO,OACdklI,IAAK,CAAEllI,MAAO,OACdmlI,IAAK,CAAEnlI,MAAO,OACdolI,IAAK,CAAEplI,MAAO,OACdqlI,IAAK,CAAErlI,MAAO,OACdslI,MAAO,CAAEtlI,MAAO,SAChBulI,IAAK,CAAEvlI,MAAO,OACdwlI,IAAK,CAAExlI,MAAO,OACdylI,IAAK,CAAEzlI,MAAO,OACd0lI,IAAK,CAAE1lI,MAAO,OACd2lI,IAAK,CAAE3lI,MAAO,OACd4lI,KAAM,CAAE5lI,MAAO,QACf6lI,IAAK,CAAE7lI,MAAO,OACd8lI,IAAK,CAAE9lI,MAAO,OACd+lI,KAAM,CAAE/lI,MAAO,QACfgmI,KAAM,CAAEhmI,MAAO,QACfimI,KAAM,CAAEjmI,MAAO,QACfkmI,IAAK,CAAElmI,MAAO,OACdmmI,KAAM,CAAEnmI,MAAO,QACfomI,IAAK,CAAEpmI,MAAO,OACdqmI,IAAK,CAAErmI,MAAO,OACdsmI,IAAK,CAAEtmI,MAAO,OACdumI,IAAK,CAAEvmI,MAAO,OACdwmI,IAAK,CAAExmI,MAAO,OACdymI,IAAK,CAAEzmI,MAAO,OACd0mI,IAAK,CAAE1mI,MAAO,OACd2mI,MAAO,CAAE3mI,MAAO,SAChB4mI,KAAM,CAAE5mI,MAAO,QACf6mI,IAAK,CAAE7mI,MAAO,OACd8mI,IAAK,CAAE9mI,MAAO,OACd+mI,IAAK,CAAE/mI,MAAO,OACdgnI,IAAK,CAAEhnI,MAAO,OACdinI,KAAM,CAAEjnI,MAAO,QACfknI,IAAK,CAAElnI,MAAO,OACdmnI,IAAK,CAAEnnI,MAAO,OACdonI,KAAM,CAAEpnI,MAAO,QACfqnI,KAAM,CAAErnI,MAAO,QACfsnI,GAAI,CAAEtnI,MAAO,MACbunI,IAAK,CAAEvnI,MAAO,OACdwnI,IAAK,CAAExnI,MAAO,OACdynI,IAAK,CAAEznI,MAAO,OACd0nI,IAAK,CAAE1nI,MAAO,OACd2nI,IAAK,CAAE3nI,MAAO,OACd4nI,IAAK,CAAE5nI,MAAO,OACd6nI,IAAK,CAAE7nI,MAAO,OACd8nI,IAAK,CAAE9nI,MAAO,OACd+nI,IAAK,CAAE/nI,MAAO,OACdgoI,IAAK,CAAEhoI,MAAO,OACdioI,IAAK,CAAEjoI,MAAO,OACdkoI,IAAK,CAAEloI,MAAO,OACdmoI,MAAO,CAAEnoI,MAAO,SAChBooI,IAAK,CAAEpoI,MAAO,OACdqoI,IAAK,CAAEroI,MAAO,OACdsoI,IAAK,CAAEtoI,MAAO,OACduoI,KAAM,CAAEvoI,MAAO,QACfwoI,IAAK,CAAExoI,MAAO,OACdyoI,IAAK,CAAEzoI,MAAO,OACd0oI,IAAK,CAAE1oI,MAAO,SAGlBqhE,YAAa,KAGjBsnE,UAAW,CACThI,YAAa,CACXjnI,MAAO,eACPoS,MAAO,oCACP88H,UAAW,2CAEbxH,cAAe,CACb1nI,MAAO,iBACPoS,MAAO,kCACP88H,UAAW,oCAGfruC,SAAU,CAERn2D,QAAS,CACPykG,KAAM,CACJ7xF,gBAAiB,KACjB2kD,iBAAiB,EACjB5uG,MAAO,CACLwwG,SAAU,kBACVL,QAAS,iBAGb4rC,KAAM,CACJ9xF,gBAAiB,KACjB2kD,iBAAiB,EACjB5uG,MAAO,CACLwwG,SAAU,wBACVL,QAAS,gBAGb6rC,OAAQ,CACN/xF,gBAAiB,gBACjB2kD,iBAAiB,EACjB5uG,MAAO,CACLwwG,SAAU,6BACVL,QAAS,kBACTnxF,WAAY,CACVmO,QAAS,CAAC,IAAK,WAKvB8V,UAAW,CACT+wE,KAAM,CACJhgF,SAAS,EACTw8E,SAAU,2BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAY,gBACZpzB,iBAAkB,CAAC,QACnBc,mBAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/DZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCe,gBAAiB,GACjB3qE,IAAK,OACLo3G,UAAW,CACTrS,KAAM,CACJsS,UAAW,kBAEbC,KAAM,CACJD,UAAW,mBAGfjuC,QAAS,SAAAluG,GACP,IAAM4sB,EAAO,GACb,GAAI5sB,EAAMisG,gBAAkBjsG,EAAMisG,eAChC,OAAQjsG,EAAMisG,gBACZ,IAAK,OACHr/E,EAAKg1G,WAAL,8BACA,MACF,IAAK,OACHh1G,EAAKg1G,WAAL,4BAMN,OAAOh1G,GAET6gF,cAAe,SAACztG,EAAOuM,EAAeigG,GACpC,IAAM1nE,EAAMv4B,EAAcihG,SAASvqE,UAAU+wE,KAAKlvE,IAE5Cu3G,EADY9vI,EAAcihG,SAASvqE,UAAU+wE,KAAKkoC,UAAUp3G,GAC9Bq3G,UAG9B3rH,EAAS,CACb8rH,KAAI,YAAA73I,OAAczE,EAAM+O,SACxBklG,aAAczH,EAAU5jG,cAAgB4jG,EAAU5jG,cAAgB5I,EAAM8I,YAAYkrG,MAAQh0G,EAAM8I,YAAYkrG,KAAKC,aAAej0G,EAAM8I,YAAYkrG,KAAKC,aAAej0G,EAAM4I,cAC9KyzI,oBACAE,YAAahwI,EAAc86C,SAI7B,MACE,GAAA5iD,OAXU,oCAWV,KACAtD,OAAOC,KAAKovB,GACT5sB,IACC,SAAA44I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjsH,EAAOgsH,MAE9D9vI,KAAK,MAGZghG,OAAQ,SAACd,EAAY76E,EAAQ/xB,EAAOuM,GAElC,IADmBqiB,SAASC,eAAe,eAC1B,CACf,IAAM6tH,EAAY9tH,SAAS/sB,cAAc,OA2BzC,GA1BA66I,EAAUzkH,UAAV,68BAAAxzB,OASemoG,EATf,2dAAAnoG,OAgBsB8H,EAAcihG,SAASvqE,UAAU+wE,KAAKxD,SAhB5D,oQAuBA5hF,SAASqrD,KAAKC,YAAYwiE,IAGrB9tH,SAASC,eAAe,oBAAqB,CAChD,IAAM8tH,EAAY/tH,SAAS/sB,cAAc,SACzC86I,EAAUh6I,GAAK,mBACfg6I,EAAU1kH,UAAV,4aAaArJ,SAASqrD,KAAKC,YAAYyiE,OAKlCzoC,KAAM,CACJlgF,SAAS,EACTw8E,SAAU,2BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAU,0BACVpzB,iBAAkB,CAAC,OAAQ,QAC3BouC,MAAO,CACLz5I,KAAM,iBACNI,MAAO,OACPmuB,QAAS,WAEXg9E,gBAAiB,CAAC,MAAO,MAAO,QAChCY,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFpB,QAAS,SAAAluG,GACP,IAAM4sB,EAAO,GACb,OAAQ5sB,EAAMisG,gBACZ,IAAK,OACHr/E,EAAK0iF,mBAAqB,CAAC,MAAO,OAClC1iF,EAAKg1G,WAAL,qBACA,MACF,IAAK,OACHh1G,EAAK0iF,mBAAqB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEF1iF,EAAKg1G,WAAL,gBAKJ,OAAOh1G,GAET6gF,cAAe,SAACztG,EAAOuM,EAAeigG,GACpC,MAAO,CACLqwC,YAAa,OACb3oF,YAAal0D,EAAM+O,QACnB+tI,WAAYh4G,GAAIi4G,mBAChBzvC,QAASttG,EAAM0D,SAAW,SAAW,UACrCs5I,YAAW,GAAAv4I,OAAK8H,EAAc86C,QAAnB,0BACX8sD,UAAW3H,EAAU5jG,cACjB4jG,EAAU5jG,cACV5I,EAAM8I,YAAYorG,MAAQl0G,EAAM8I,YAAYorG,KAAKC,UAC/Cn0G,EAAM8I,YAAYorG,KAAKC,UACvBn0G,EAAM4I,gBAGhB8kG,OAAQ,SAACd,EAAY76E,EAAQ/xB,EAAOuM,GAClC,IAAI0wI,KAAerwC,GAChBr4C,GAAG,IADN,eAAApiD,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KACW,SAAA6N,EAAM2uG,GAAN,IAAAjvH,EAAAwW,EAAA7C,EAAA,OAAAmf,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,OACDhT,EAAgB,IAAII,IAAcD,GACpCqW,EAAgB,KAChB7C,EAAc,KAHX6M,EAAAgU,GAKCy6F,EAAMvuH,KALP8f,EAAAxN,KAMA,wBANAwN,EAAAgU,GAAA,yBAQHr0B,EAAMutG,oBARHltF,EAAAxN,KAAA,EAUmB7S,EAAMwuD,mBAVzB,cAUHn4C,EAVGgK,EAAA1K,KAYHnC,EAAcs7G,EAAMouB,QAAQC,SAAS3pI,YACrCA,EAAc3T,EACXqT,MAAMM,EAAY0P,YAClBD,IACCpjB,EAAcqT,MACZE,KAAKkqD,IAAI,GAAIhqD,SAAS+C,IAAgB6M,aAGzCA,WAGHmB,OAAO2oF,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAAzoG,OAAK+O,EAAL,KAAA/O,OAAoBzE,EAAM4I,cAA1B,2BAChBukG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YA5BRjtF,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,qCAAAhB,EAAAtM,SAAAoM,EAAArgB,SADX,gBAAAqhB,GAAA,OAAAhP,EAAA8B,MAAAnU,KAAAoU,YAAA,IAqCGkpI,SAGPC,QAAS,CACPrpH,SAAS,EACTw8E,SAAU,8BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAU,+BACVpzB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAChEe,gBAAiB,CAAE6tC,0CAA2C,IAC9Dx4G,IAAK,OACL83G,MAAO,CACLz5I,KAAM,UACNuuB,QAAS,WAEXwqH,UAAW,CACTrS,KAAM,CACJlkF,OAAQ7gB,GAAIy4G,2BACZjiH,IAAK,8BAEP8gH,KAAM,CACJz2F,OAAQ7gB,GAAI04G,2BACZliH,IAAK,+BAGT4yE,QAAS,SAAAluG,GACP,IAAM4sB,EAAO,GAEPq/E,EAAiBjsG,EAAMisG,gBAAkBjsG,EAAMisG,eACjDp8B,EAAyB,SAAnBo8B,EAA4B,OAAS,OAE/C,GAAIjsG,EAAMmsG,iBAAmBnsG,EAAMmsG,gBAAgBtiG,MACjD,OAAQ7J,EAAMmsG,gBAAgBtiG,MAAMoN,eAClC,IAAK,MACH2V,EAAKgwH,MAAQ,CACXz5I,KAAM,UACNuuB,QAAS,WAEX9E,EAAKg1G,WAAL,KAAAn9H,OAAuBorE,EAAvB,oBACA,MACF,IAAK,MACHA,EAAM,OACNjjD,EAAKgwH,MAAQ,CACXz5I,KAAM,UACNuuB,QAAS,WAEX9E,EAAKg1G,WAAL,KAAAn9H,OAAuBorE,EAAvB,oBACA,MACF,IAAK,MAEDjjD,EAAKgwH,MADgB,SAAnB3wC,EACW,CACX9oG,KAAM,OACNI,MAAO,WACPmuB,QAAS,WAGE,CACXvuB,KAAM,UACNuuB,QAAS,WAGb9E,EAAKg1G,WAAL,KAAAn9H,OAAuBorE,EAAvB,oBAMN,OAAOjjD,GAET6gF,cAAe,SAACztG,EAAOuM,EAAeigG,GACpC,IAAM1nE,EAAMv4B,EAAcihG,SAASvqE,UAAUo6G,QAAQv4G,IAC/Co3G,EACJ3vI,EAAcihG,SAASvqE,UAAUo6G,QAAQnB,UAAUp3G,GAEjD24G,EAAe,KAEnB,GAAIjxC,EAAUL,iBAAmBK,EAAUL,gBAAgBtiG,MACzD,OAAQ2iG,EAAUL,gBAAgBtiG,MAAMoN,eACtC,IAAK,MACHwmI,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,QACEA,EAAe,MAKrB,IAAIC,EAAqBlxC,EAAU5jG,cAC/B4jG,EAAU5jG,cAAcqD,cACxBjM,EAAM8I,YAAYu0I,SAClBr9I,EAAM8I,YAAYu0I,QAAQM,aACxB39I,EAAM8I,YAAYu0I,QAAQM,aAC1B39I,EAAM4I,cACZ80I,EAAqBA,EAAmBzmI,cAOxC,MAAO,CACL0uC,OANau2F,EAAUv2F,OAOvB+3F,qBACAE,cAPoB59I,EAAM+O,QAQ1B0uI,eACAI,kBARwB79I,EAAM+O,QAS9B+uI,0BAR+B,EAS/B/8I,MAAO,OACPiC,OAAQ,SAIZ0qG,OAAQ,SAACd,EAAY76E,EAAQ/xB,EAAOuM,GAClC,GAAI8X,OAAO05H,cAAe,CAExB,IADsBnvH,SAASC,eAAe,kBAC1B,CAClB,IAAM6tH,EAAY9tH,SAAS/sB,cAAc,OAmBzC,GAlBA66I,EAAUzkH,UAAV,szCAAAxzB,OAQsB8H,EAAcihG,SAASvqE,UAAUo6G,QAAQ7sC,SAR/D,iQAeA5hF,SAASqrD,KAAKC,YAAYwiE,IAGrB9tH,SAASC,eAAe,uBAAwB,CACnD,IAAMmvH,EAAepvH,SAAS/sB,cAAc,SAC5Cm8I,EAAar7I,GAAK,sBAClBq7I,EAAa/lH,UAAb,6cAaArJ,SAASqrD,KAAKC,YAAY8jE,IAI9B35H,OAAO05H,cAAcrwC,OAAOd,EAAY,+BAI9CqxC,QAAS,CACPjqH,SAAS,EACTw8E,SAAU,8BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAY,eACZpzB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,OAAQ,MAAO,OACjC5pE,IAAK,OACLo3G,UAAW,CACTrS,KAAM,CACJvuG,IAAK,iCACLqqB,OAAQ7gB,GAAIo5G,4BAEd9B,KAAM,CACJ9gH,IAAK,yBACLqqB,OAAQ7gB,GAAIq5G,6BAGhBjwC,QAAS,SAAAluG,GACP,IAAM4sB,EAAO,GACb,GAAI5sB,EAAMisG,gBAAkBjsG,EAAMisG,eAChC,OAAQjsG,EAAMisG,gBACZ,IAAK,OACH,GAAIjsG,EAAMmsG,iBAAmBnsG,EAAMmsG,gBAAgBtiG,MACjD,OAAQ7J,EAAMmsG,gBAAgBtiG,MAAMoN,eAClC,IAAK,MACH2V,EAAKgwH,MAAQ,CACXz5I,KAAM,OACNI,MAAO,WACPmuB,QAAS,WAEX9E,EAAKg1G,WAAL,yBACA,MACF,IAAK,MACHh1G,EAAKgwH,MAAQ,CACXz5I,KAAM,OAERypB,EAAKg1G,WAAL,yBACA,MACF,QACEh1G,EAAKgwH,MAAQ,KACbhwH,EAAKg1G,WAAL,6BAIN,MACF,IAAK,OACHh1G,EAAKgwH,MAAQ,KACbhwH,EAAKg1G,WAAL,aAMN,OAAOh1G,GAET6gF,cAAe,SAACztG,EAAOuM,EAAeigG,GACpC,IAAM1nE,EAAMv4B,EAAcihG,SAASvqE,UAAUg7G,QAAQn5G,IAC/Co3G,EACJ3vI,EAAcihG,SAASvqE,UAAUg7G,QAAQ/B,UAAUp3G,GAE/CtU,EAAS,CACbm1B,OAFau2F,EAAUv2F,OAGvBg4F,aAAcnxC,EAAU5jG,cACpB4jG,EAAU5jG,cAAcqD,cACxBjM,EAAM8I,YAAYm1I,SAClBj+I,EAAM8I,YAAYm1I,QAAQN,aACxB39I,EAAM8I,YAAYm1I,QAAQN,aAC1B39I,EAAM4I,cAAcqD,cAC1B2xI,cAAe59I,EAAM+O,QACrBqvI,iBAAkB,MAClBC,uBAAuB,GAGnBhnG,EAAU,CACdykG,KAAM,CACJzV,IAAK,oBACLK,IAAK,sBAEPqV,KAAM,qBAGF5vC,EACJK,EAAUL,iBAAmBK,EAAUL,gBAAgBtiG,MACnD2iG,EAAUL,gBAAgBtiG,MAAMoN,cAChC,KAGN,GAAIu1F,EAAUP,eACZ,OAAQO,EAAUP,gBAChB,IAAK,OAGH,OAFAz7E,EAAO8tH,sBACLjnG,EAAQm1D,EAAUP,gBAAlB,IACME,GACN,IAAK,MACL,IAAK,MACH37E,EAAO8tH,sBACLjnG,EAAQm1D,EAAUP,gBAAgBE,GACpC,MACF,QACE37E,EAAO8tH,sBAAwBn9I,OAAO2R,OACpCukC,EAAQm1D,EAAUP,iBAClBv/F,KAAK,KAGX,MACF,IAAK,OACL,QACE8jB,EAAO8tH,sBACLjnG,EAAQm1D,EAAUP,gBAM1B,OAAQE,GACN,IAAK,MACH37E,EAAO4tH,iBAAmB,MAC1B,MACF,IAAK,MACH5tH,EAAO4tH,iBAAmB,MAC1B,MACF,QACE5tH,EAAO4tH,iBAAmB,MAI9B,IAAI9iH,EAAM4gH,EAAU5gH,IAgBpB,OAbeijH,UAAUC,UAAU1gI,QAAQ,WAAa,IAGnD8Q,SAAS6vH,OAAOrsG,MACf,+CAGFxjB,SAAS6vH,OACP,qEACFnjH,GAAO,gBAKT,GAAA72B,OAAG62B,EAAH,KACAn6B,OAAOC,KAAKovB,GACT5sB,IACC,SAAA44I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjsH,EAAOgsH,MAE9D9vI,KAAK,MAGZghG,OAAQ,SAACd,EAAY76E,EAAQ/xB,EAAOuM,GAElC,IADsBqiB,SAASC,eAAe,kBAC1B,CAClB,IAAM6tH,EAAY9tH,SAAS/sB,cAAc,OA8BzC,GA7BA66I,EAAUzkH,UAAV,iqBAAAxzB,OAQiBmoG,EARjB,yeAAAnoG,OAewB8H,EAAcihG,SAASvqE,UAAUg7G,QAAQztC,SAfjE,iwBA0BA5hF,SAASqrD,KAAKC,YAAYwiE,IAGrB9tH,SAASC,eAAe,uBAAwB,CACnD,IAAM6vH,EAAe9vH,SAAS/sB,cAAc,SAC5C68I,EAAa/7I,GAAK,sBAClB+7I,EAAazmH,UAAb,qbAaArJ,SAASqrD,KAAKC,YAAYwkE,OAKlCnS,cAAe,CACbv4G,SAAS,EACTw8E,SAAU,oCACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAY,gBACZpzB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Be,gBAAiB,CAAEkvC,uCAAwC,IAC3DlxC,cAAe,SACbztG,EACAuM,EACAigG,EACAC,EACAC,GAEA,IAAMkyC,EAAcryI,EAAcumE,OAAO05B,EAAU5jG,eAC7CozG,EAAgB33F,OAAOw6H,mBACzBx6H,OAAOw6H,mBAAmB7iC,cAC1B,KAEJ,OAAK4iC,EAAYrS,cAIV,CACLlzG,UAAW9sB,EAAcykB,QAAQ4R,gBACjC1F,QAAS3wB,EAAcykB,QAAQ4R,gBAC/B1gB,SACE85F,GACoB,aAAlBA,GACA33F,OAAOw6H,mBAAmBC,UAAU9iC,EAAc/vG,eAChDoY,OAAOw6H,mBAAmBC,UAC1Bz6H,OAAOw6H,mBAAmB7iC,cAAc/vG,eACxCiW,SACAmC,OAAO0e,SACbypG,YAAaoS,EAAYrS,cAAcC,YACvCC,cAAemS,EAAYrS,cAAcE,cACzCsS,yBAA0BH,EAAYrS,cAAcr+C,UACpD8wD,oBAAqB,CAACJ,EAAYrS,cAAcr+C,WAChD+wD,gCAAgC,EAChCxyC,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cApBtB,MAuBXgB,OAAQ,SAACd,EAAY76E,GACf1N,OAAOkoH,eAAiB3/B,IACtB76E,IACF66E,EAAWsyC,sBAAwB/yI,WAAW4lB,IAEhD1N,OAAOkoH,cAAc7+B,OAAOd,EAAY,WAI9CuyC,UAAW,CACTnrH,SAAS,EACTw8E,SAAU,4BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,YACT8rC,WAAY,MACZra,WAAY,gBACZpzB,iBAAkB,CAAC,UACnBE,gBAAiB,CACf,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEF0wC,iBAAkB,CAEhBprH,SAAS,EACTsI,gBAAiB,6CACjB+iH,eAAgB,CACd,CACEnoG,aAAc,UACd3vC,KAAM,gBACNhH,KAAM,WAER,CACE22C,aAAc,UACd3vC,KAAM,gBACNhH,KAAM,WAER,CACE22C,aAAc,UACd3vC,KAAM,eACNhH,KAAM,WAER,CACE22C,aAAc,UACd3vC,KAAM,eACNhH,KAAM,aAIZkvG,gBAAiB,CACf6vC,iDAAkD,GAClDC,gDAAiD,CAC/C1vC,cAAejhF,SAASqrD,KACxB21B,QAAS,SAAC5vG,EAAOuM,EAAe0hG,GAG9B,IADA,IAAMphF,EAAU+B,SAAS4wH,iBAAiB,wBACjC3zI,EAAI,EAAGA,EAAIghB,EAAQxrB,OAAQwK,IAClCghB,EAAQhhB,GAAG4zI,SASb,IADA,IAAMC,EAAU9wH,SAAS4wH,iBAAiB,qBACjC3zI,EAAI,EAAGA,EAAI6zI,EAAQr+I,OAAQwK,IAClC6zI,EAAQ7zI,GAAG4zI,SAGb,IAAMr4B,EAAWpnH,EAAMonH,SACnBpnH,EAAMonH,SADO,iBAAA3iH,OAEIzE,EAAM4I,eAC3B,IAAKgmB,SAASC,eAAeu4F,GAAW,CACtC,IAAMxlH,EAAIgtB,SAAS/sB,cAAc,KACjCD,EAAEe,GAAKykH,EACPxlH,EAAEmkB,KAAOkoF,EAAaR,cAAcztG,EAAOuM,GAC3C3K,EAAEikB,OAAS,SACXjkB,EAAEkkB,IAAM,+BACRlkB,EAAE4E,UAAY,kDACd5E,EAAEqO,MAAQ,kBACVrO,EAAEuC,MAAQ,gBACVyqB,SAASqrD,KAAKC,YAAYt4E,OAKlC6rG,cAAe,SAACztG,EAAOuM,GAAoC2H,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,IAAAA,UAAA,OACnD+pB,EAAYj+B,EAAMi+B,UAAYj+B,EAAMi+B,UAAY,MAChDzN,EAAS,CACbmvH,KAAM,KACNp/I,KAAM,OACN02F,KAAM,SACNvyF,MAAO,cACPk7I,iBAAiB,EAEjBC,aAAY,GAAAp7I,OAAKw5B,EAAL,KAAAx5B,OAAkBzE,EAAM4I,eACpCqH,MAAK,QAAAxL,OAAUw5B,EAAV,SAAAx5B,OAA2BzE,EAAM4I,eACtCk3I,YAAW,GAAAr7I,OAAKw5B,EAAL,KAAAx5B,OAAkBzE,EAAM4I,eACnCm3I,aAAc,6CACd/uH,QAC4C,IAA1CzkB,EAAcykB,QAAQ4R,gBAAwB,UAAY,QAK9D,MACE,GAAAn+B,OAHU,uCAGV,KACAtD,OAAOC,KAAKovB,GACT5sB,IACC,SAAA44I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjsH,EAAOgsH,MAE9D9vI,KAAK,MAGZghG,OAAQ,SAACd,EAAY76E,EAAQ/xB,GAC3B,IAAMonH,EAAWpnH,EAAMonH,SACnBpnH,EAAMonH,SADO,iBAAA3iH,OAEIzE,EAAM4I,eACrBhH,EAAIgtB,SAASC,eAAeu4F,GAC9BxlH,GACFA,EAAEo+I,UAgCRC,QAAS,CACPjsH,SAAS,EACTw8E,SAAU,8BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAY,aACZpzB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1B5pE,IAAK,aACL2qE,gBAAiB,CACfywC,mDAAoD,IAEtDzyC,cAAe,SACbztG,EACAuM,EACAigG,EACA2zC,EACAzzC,GAEA,MAAO,CACL5nE,IAAK,aACLmyD,KAAM,MACNhkF,MAAOjT,EAAM8I,YAAYkD,QACzBiyB,UAAW,MACXkiH,WAAYA,GAA0B,aACtCzzC,QAASA,GAAoB,eAGjCgB,OAAQ,SAACd,EAAY76E,EAAQ/xB,GACvBqkB,OAAO+7H,iBACLruH,IACF66E,EAAW76E,OAASA,EAAO7O,YAE7BmB,OAAO+7H,eAAe1yC,OAAOd,EAAY,WAI/CyzC,MAAO,CACLrsH,SAAS,EACTw8E,SAAU,4BACVxxF,WAAY,CACVje,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBoL,GAAI,OAEN+hG,QAAS,WACT8rC,WAAY,MACZra,WAAY,aACZpzB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1B5pE,IAAK,aACL2qE,gBAAiB,CAAE6wC,0CAA2C,IAC9D7yC,cAAe,SACbztG,EACAuM,EACAigG,EACA2zC,EACAzzC,GAEA,MAAO,CACL6zC,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B/6F,OAAQ,KACRg7F,uBAAwB,OAG5BjzC,OAAQ,SAACd,EAAY76E,EAAQ/xB,GAC3B,GAAIqkB,OAAOu8H,YAAa,CACtB,IAAMC,EAAS,eACf,IAAKjyH,SAASC,eAAegyH,GAAS,CACpC,IAAMC,EAAuBlyH,SAAS/sB,cAAc,OACpDi/I,EAAqBn+I,GAAKk+I,EAC1BjyH,SAASqrD,KAAKC,YAAY4mE,GAG5Bz8H,OAAOu8H,YAAYh1H,QAAQm1H,IACzBn0C,EACAh+E,SAASC,eAAegyH,UASvBt0I,kDCn2Hf,IAAA3I,EAAA,CACAo9I,0BAAA,KACAC,8BAAA,MAIA,SAAAC,EAAAloF,GACA,IAAAr2D,EAAAw+I,EAAAnoF,GACA,OAAA1yC,EAAA3jB,GAEA,SAAAw+I,EAAAnoF,GACA,IAAAr2D,EAAAiB,EAAAo1D,GACA,KAAAr2D,EAAA,IACA,IAAAmC,EAAA,IAAAqwD,MAAA,uBAAA6D,EAAA,KAEA,MADAl0D,EAAA8hD,KAAA,mBACA9hD,EAEA,OAAAnC,EAEAu+I,EAAA9/I,KAAA,WACA,OAAAD,OAAAC,KAAAwC,IAEAs9I,EAAArgI,QAAAsgI,EACA3hJ,EAAAC,QAAAyhJ,EACAA,EAAAv+I,GAAA,2BCxBA,IAAAiB,EAAA,CACAw9I,gDAAA,KACAC,6DAAA,KACAC,4DAAA,KACAC,0DAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,2DAAA,KACAC,+CAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,iDAAA,KACAC,oDAAA,KACAC,6CAAA,KACAC,0DAAA,KACAC,sDAAA,KACAC,wDAAA,KACAC,iDAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,+CAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,4CAAA,KACAC,sDAAA,KACAC,kEAAA,KACAC,0DAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,oDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,2DAAA,KACAC,uDAAA,KACAC,+CAAA,KACAC,8CAAA,KACAC,4CAAA,KACAC,2CAAA,KACAC,mDAAA,KACAC,mDAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,4CAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,oDAAA,KACAC,0DAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,8CAAA,KACAC,6CAAA,KACAC,qDAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,wDAAA,KACAC,4DAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,6CAAA,KACAC,4CAAA,KACAC,6CAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,qDAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,2DAAA,KACAC,8CAAA,KACAC,2CAAA,KACAC,iDAAA,KACAC,0DAAA,KACAC,8DAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,+CAAA,KACAC,4CAAA,KACAC,gDAAA,KACAC,6DAAA,KACAC,gDAAA,KACAC,4CAAA,KACAC,mDAAA,KACAC,6CAAA,KACAC,qDAAA,KACAC,kDAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,mDAAA,KACAC,2CAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,sEAAA,KACAC,8CAAA,KACAC,+CAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,kDAAA,KACAC,uDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,0DAAA,KACAC,iDAAA,KACAC,gDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,+CAAA,KACAC,+CAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,0CAAA,KACAC,qDAAA,KACAC,2DAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,iDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,+CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,sDAAA,KACAC,8CAAA,KACAC,+CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,6CAAA,KACAC,0CAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,kDAAA,KACAC,yCAAA,KACAC,wCAAA,KACAC,iDAAA,KACAC,sDAAA,KACAC,yCAAA,KACAC,kDAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,8CAAA,KACAC,2CAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,0CAAA,KACAC,yCAAA,KACAC,0CAAA,KACAC,oDAAA,KACAC,kDAAA,KACAC,kDAAA,KACAC,4CAAA,KACAC,kDAAA,KACAC,oDAAA,KACAC,+CAAA,KACAC,kDAAA,KACAC,4CAAA,KACAC,yCAAA,KACAC,qDAAA,KACAC,6CAAA,KACAC,2DAAA,KACAC,gEAAA,KACAC,yDAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,+DAAA,KACAC,wDAAA,KACAC,wDAAA,KACAC,kDAAA,KACAC,wCAAA,KACAC,gDAAA,KACAC,mEAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,0DAAA,KACAC,6CAAA,KACAC,kDAAA,KACAxN,0BAAA,KACAyN,kBAAA,KACAC,oDAAA,KACAC,iEAAA,KACAC,gEAAA,KACAC,8DAAA,KACAC,+DAAA,KACAC,6DAAA,KACAC,8DAAA,KACAC,gEAAA,KACAC,+DAAA,KACAC,mDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,qDAAA,KACAC,wDAAA,KACAC,iDAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,qDAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,mDAAA,KACAC,sDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,6DAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,8DAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,gDAAA,KACAC,0DAAA,KACAC,sEAAA,KACAC,8DAAA,KACAC,iEAAA,KACAC,uDAAA,KACAC,wDAAA,KACAC,8DAAA,KACAC,6DAAA,KACAC,+DAAA,KACAC,2DAAA,KACAC,mDAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,+CAAA,KACAC,uDAAA,KACAC,uDAAA,KACAC,8DAAA,KACAC,wDAAA,KACAC,gEAAA,KACAC,gDAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,wDAAA,KACAC,gEAAA,KACAC,wDAAA,KACAC,8DAAA,KACAC,yDAAA,KACAC,iEAAA,KACAC,kDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,gEAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,gDAAA,KACAC,iDAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,sDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,6DAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,+DAAA,KACAC,kDAAA,KACAC,+CAAA,KACAC,qDAAA,KACAC,8DAAA,KACAC,kEAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,mDAAA,KACAC,gDAAA,KACAC,oDAAA,KACAC,iEAAA,KACAC,oDAAA,KACAC,gDAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,uDAAA,KACAC,+CAAA,KACAC,sDAAA,KACAC,uDAAA,KACAC,0EAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,2DAAA,KACAC,6DAAA,KACAC,0DAAA,KACAC,8DAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,mDAAA,KACAC,kEAAA,KACAC,8DAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,+DAAA,KACAC,6DAAA,KACAC,4DAAA,KACAC,8CAAA,KACAC,yDAAA,KACAC,+DAAA,KACAC,8DAAA,KACAC,gEAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,qDAAA,KACAC,wDAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,0DAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,8CAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,sDAAA,KACAC,6CAAA,KACAC,4CAAA,KACAC,qDAAA,KACAC,0DAAA,KACAC,6CAAA,KACAC,sDAAA,KACAC,2DAAA,KACAC,qDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,kDAAA,KACAC,+CAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,8CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,wDAAA,KACAC,sDAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,sDAAA,KACAC,wDAAA,KACAC,mDAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,6CAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,+DAAA,KACAC,oEAAA,KACAC,6DAAA,KACAC,kEAAA,KACAC,8DAAA,KACAC,mEAAA,KACAC,4DAAA,KACAC,4DAAA,KACAC,sDAAA,KACAC,4CAAA,KACAC,oDAAA,KACAC,uEAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,8DAAA,KACAC,iDAAA,KACAC,sDAAA,KACA7a,8BAAA,MAIA,SAAAC,EAAAloF,GACA,IAAAr2D,EAAAw+I,EAAAnoF,GACA,OAAA1yC,EAAA3jB,GAEA,SAAAw+I,EAAAnoF,GACA,IAAAr2D,EAAAiB,EAAAo1D,GACA,KAAAr2D,EAAA,IACA,IAAAmC,EAAA,IAAAqwD,MAAA,uBAAA6D,EAAA,KAEA,MADAl0D,EAAA8hD,KAAA,mBACA9hD,EAEA,OAAAnC,EAEAu+I,EAAA9/I,KAAA,WACA,OAAAD,OAAAC,KAAAwC,IAEAs9I,EAAArgI,QAAAsgI,EACA3hJ,EAAAC,QAAAyhJ,EACAA,EAAAv+I,GAAA,mWC/Keo5J,6MA3Qb92J,MAAQ,CACNb,SAAS,GACT+C,SAAS,IACTgpH,UAAU,IACV9hH,UAAS,EACT2tJ,cAAc,CACZxsJ,OAAO,KACPysJ,OAAO,KACP75B,QAAQ,SAIZ85B,UAAY,SAACnpJ,EAAOlJ,GAClBtH,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5B22J,cAAc76J,OAAAg5B,EAAA,EAAAh5B,CAAA,GACTkE,EAAU22J,cADF76J,OAAA+iI,EAAA,EAAA/iI,CAAA,GAEV4R,EAAQlJ,UAKfsyJ,aAAe,WAAiB,IAAhBC,IAAgBloJ,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,KAAAA,UAAA,GACS,oBAA5B3R,EAAKvC,MAAMm8J,cACpB55J,EAAKvC,MAAMm8J,aAAa55J,EAAK0C,MAAM+2J,eAEjCI,GACF75J,EAAK85J,kBAITC,YAAc,SAACvpJ,GACbxQ,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5B22J,cAAc76J,OAAAg5B,EAAA,EAAAh5B,CAAA,GACTkE,EAAU22J,cADF76J,OAAA+iI,EAAA,EAAA/iI,CAAA,GAEV4R,EAAQ,SAEV,WACDxQ,EAAK45J,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBloJ,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,KAAAA,UAAA,GAC9B3R,EAAKkD,SAAS,CACZu2J,cAAc,CACZxsJ,OAAO,KACPysJ,OAAO,KACP75B,QAAQ,OAEV,WACuC,oBAA5B7/H,EAAKvC,MAAMu8J,cACpBh6J,EAAKvC,MAAMu8J,eAETH,GACF75J,EAAK85J,oBAKXA,aAAe,WACb95J,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5BgJ,UAAWhJ,EAAUgJ,qFAIhB,IAAAlO,EAAAL,KACP,OACEwG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE2B,GAAI,EACJsD,IAAK,EACLzK,MAAO,EACPkM,OAAQ,EACRhM,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChB8L,SAAU,CAAC,WAAW,aAEtB1G,EAAA1E,EAAAC,cAACwpG,EAAA,EAAD,CACE1jG,UAAW,CACTC,GAAG,EACHC,GAAG,EACH9G,MAAM,CAAC,EAAGjB,KAAKmF,MAAMoJ,SAAWvO,KAAKmF,MAAMb,SAAWtE,KAAKmF,MAAMkC,UACjEhD,MAAM,CACJq4J,WAAW,2BAGf5/I,eAAiB9c,KAAKmF,MAAMoJ,SAC5BzL,YAAe9C,KAAKmF,MAAMoJ,SAA+B,KAApBvO,KAAKu8J,cAE1C/1J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPoD,MAAO,CACLoK,OAAO,WAETvN,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBuC,QAAU3D,KAAKmF,MAAMoJ,SAAWvO,KAAKu8J,aAAe,MAEpD/1J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACElD,SAAU,EACVC,WAAY,IACZC,MAAO,aAHT,WAOA+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEhD,MAAO,YACP2C,KAAOpG,KAAKE,MAAM0D,SAAW,QAAU,QACvC6D,KAAOzH,KAAKmF,MAAMoJ,SAAW,QAAU,UAG3C/H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,SACfkD,MAAO,CACLE,SAAS,SACTm4J,WAAW,8BACXrsC,UAAUrwH,KAAKmF,MAAMoJ,SAAWvO,KAAKmF,MAAMkrH,UAAY,IAGzD7pH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyW,GAAI,EACJpV,GAAI,EACJ7G,MAAO,EACPE,cAAe,MACfq3H,UAAS,aAAA7zH,OAAeC,IAAMC,OAAOC,UAGnCzD,OAAOC,KAAKtB,KAAKE,MAAMy8J,SAAS74J,IAAI,SAAC84J,GACnC,IAAMC,EAAex8J,EAAKH,MAAMy8J,QAAQC,GACxC,OACEp2J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,SACf4D,IAAG,UAAAJ,OAAYi4J,GACfv4J,MAAO,CACLsJ,UAAU,IACVC,KAAK,YAGPpH,EAAA1E,EAAAC,cAAC+6J,EAAA,EAAD,CACEvqD,GAAI,EACJ/uG,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAENm5J,EAAezlJ,eAGhB9V,OAAOC,KAAKu7J,GAAc/4J,IAAI,SAACi5J,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAY58J,EAAK8E,MAAM+2J,cAAcU,KAAkBG,EAC7D,OACEv2J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE6H,GAAI,EACJ/K,SAAU,CAAC,EAAE,GACbsJ,MAAOmwJ,EACPzgD,QAAS0gD,EACTv2J,UAAWC,IAAOynB,SAClBrpB,IAAG,UAAAJ,OAAYi4J,EAAZ,KAAAj4J,OAA8Bo4J,GACjC1+I,SAAW,SAAArZ,GAAC,OAAI3E,EAAK+7J,UAAUQ,EAAeG,YAUhEv2J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,OAEfqF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAOtC,KAAR,CACEX,WAAY,EACZD,SAAU,CAAC,EAAE,GACb4D,UAAW,YACXxD,QAAS3D,KAAKq8J,cAJhB,iBAQA71J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAOtC,KAAR,CACEb,GAAI,EACJE,WAAY,EACZD,SAAU,CAAC,EAAE,GACb4D,UAAW,YACXxD,QAAS3D,KAAKy8J,cALhB,aAaHz8J,KAAKmF,MAAMoJ,UAAYvO,KAAKE,MAAMg8J,eAAiB76J,OAAO2R,OAAOhT,KAAKE,MAAMg8J,eAAejpJ,OAAQ,SAAApJ,GAAC,OAAW,OAANA,IAActI,OAAO,GAC7HiF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyW,GAAI,EACJjc,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BC,OAAOC,KAAKtB,KAAKE,MAAMg8J,eAAep4J,IAAI,SAACo5J,GACzC,IAAMH,EAAc18J,EAAKH,MAAMg8J,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAAc38J,EAAKH,MAAMy8J,QAAQO,GAAYH,GACnD,OACEv2J,EAAA1E,EAAAC,cAACwpG,EAAA,EAAD,CACE1jG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHK,GAAG,CAAC,EAAE,GACNyF,GAAG,CAAC,EAAE,GACN5M,MAAM,CAAC,EAAEZ,EAAK8E,MAAMkC,WAEtByV,eAAe,EACf/X,IAAG,UAAAJ,OAAYu4J,IAEf12J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPoD,MAAO,CACLoK,OAAO,WAETvN,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBuC,QAAS,SAAAqB,GAAC,OAAI3E,EAAKm8J,YAAYU,KAE/B12J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACElD,SAAU,EACVC,WAAY,IACZC,MAAO,WACPY,MAAO,CACL0J,cAAc,eAGfivJ,GAEHx2J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAM,QACNhE,MAAO,WACP2C,KAAO/F,EAAKH,MAAM0D,SAAW,QAAU,YAMjD,OAAO,OAGX4C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyW,GAAI,CAAC,EAAE,GACP3Z,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,GACbC,MAAO,YACPC,WAAY,YACZ2E,UAAW,CAAC,SAAS,QACrB1E,QAAU,SAAAqB,GAAC,OAAI3E,EAAKo8J,cAAa,KAPnC,8BA3PuBv6J,aCG/Bg/G,6MAEJ/7G,MAAQ,CACN+iD,KAAK,EACLi1G,QAAQ,GACRC,WAAW,EACXrtI,SAAQ,EACRstI,SAAS,KACTvqD,WAAW,KACXopD,cAAc,CACZxsJ,OAAO,KACPysJ,OAAO,KACP75B,QAAQ,MAEVq6B,QAAQ,CACNr6B,QAAQ,CACN73G,QAAQ,UACRhL,OAAO,SACP+L,KAAK,OACLK,QAAQ,UACRnB,QAAQ,UACRe,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXtc,OAAO,CACLG,UAAU,YACVE,QAAQ,UACRD,OAAO,UAETqsJ,OAAO,IAETmB,YAAY,KACZh6H,aAAa,KACbi6H,gBAAgB,QAIlBx9J,cAAgB,OAmChBs8J,aAAe,SAAAH,GACbz5J,EAAKkD,SAAS,CACZu2J,iBACA,WACAz5J,EAAK23C,kBAITqiH,aAAe,WACbh6J,EAAKkD,SAAS,CACZu2J,cAAc,CACZxsJ,OAAO,KACPysJ,OAAO,KACP75B,QAAQ,OAEV,WACA7/H,EAAK23C,kBAmGTA,WAAa,WAAe,IAAd8N,EAAc9zC,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,GAAAA,UAAA,GAAT,KAEjB8zC,EAAOA,GAAczlD,EAAK0C,MAAM+iD,KAEhC,IAAMi5D,EAAmB9/G,OAAOC,KAAKmB,EAAK0C,MAAMw3J,QAAQr6B,SAASx+H,IAAK,SAAAuP,GAAM,OAAKA,EAAOlH,gBAGlFqxJ,EAAan8J,OAAO2R,OAAOvQ,EAAK0C,MAAMg4J,SACvBlqJ,OAAO,SAAAC,GAAE,QAAO7G,WAAW6G,EAAGnJ,SAC9BkJ,OAAO,SAAAC,GAAE,OAC6B,OAApCzQ,EAAK0C,MAAM+2J,cAAcxsJ,QAAoBwD,EAAGxD,QAAUwD,EAAGxD,OAAOvD,gBAAkB1J,EAAK0C,MAAM+2J,cAAcxsJ,OAAOvD,iBAClF,OAApC1J,EAAK0C,MAAM+2J,cAAcC,QAAoBjpJ,EAAGC,OAASD,EAAGC,MAAMhH,gBAAkB1J,EAAK0C,MAAM+2J,cAAcC,OAAOhwJ,gBACnH+G,EAAGG,QAAU8tG,EAAiB7xG,SAAS4D,EAAGG,OAAOlH,iBAAwD,OAArC1J,EAAK0C,MAAM+2J,cAAc55B,SAAqBpvH,EAAGG,OAAOlH,gBAAkB1J,EAAK0C,MAAM+2J,cAAc55B,QAAQn2H,iBAElL6+B,KAAK,SAAClpC,EAAEs5B,GAAH,OAAUt5B,EAAE2R,UAAY2nB,EAAE3nB,WAAc,EAAI,IAGhE4pJ,EAAWG,EAAWj8J,OACtBuxG,EAAax/F,KAAKuF,KAAKwkJ,EAAS56J,EAAK0C,MAAMi4J,YAE3C95H,EAAe,GAIrBk6H,EAAWh8J,QAAQ,SAAC0R,EAAInH,GACtB,IAAMjD,EAAgBoK,EAAGC,MACnBnK,EAAcvG,EAAKvC,MAAMmP,iBAAmB5M,EAAKvC,MAAMmP,gBAAgBvG,GAAiBrG,EAAKvC,MAAMmP,gBAAgBvG,GAAiBrG,EAAK1C,cAAcmX,gBAAgB,CAAC,QAAQ,SAASpO,EAAcqO,gBACvMtW,EAAWyS,KAAKC,IAAIvK,EAAYnI,SAAS,GAEzCkX,EAAO,IAAIxD,KAAkB,IAAbrB,EAAGO,WACnBJ,EAASH,EAAGG,OAASH,EAAGG,OAAS5Q,EAAK1C,cAAc+7B,YAAY5oB,EAAGlK,GAEnEy0J,EAAcpxJ,WAAW6G,EAAGQ,aAE5Bue,EAASwrI,EAAeh7J,EAAKvC,MAAM0D,SAAW65J,EAAYlxJ,QAAQ,GAAKkxJ,EAAYlxJ,QAAQ1L,GAAa,IACxGyW,EAAa7U,EAAK1C,cAAcuU,YAAYyD,GAGlD7E,EAAGG,OAASA,EACZH,EAAG+e,OAASA,EACZ/e,EAAGoE,WAAaA,EAChBpE,EAAGxD,OAASwD,EAAGxD,OAASwD,EAAGxD,OAAS,YAEhC3D,IAAKm8C,EAAK,GAAGzlD,EAAK0C,MAAMi4J,YAAerxJ,GAAIm8C,EAAK,GAAGzlD,EAAK0C,MAAMi4J,WAAY36J,EAAK0C,MAAMi4J,YACvF95H,EAAa92B,KAAK0G,KAQtBzQ,EAAKkD,SAAS,CACZoqB,SAHc,EAIdstI,WACAvqD,aACAxvE,6FA3MEtjC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,wCAIvC8E,GACHA,GACFA,EAAEoJ,iBAEJ,IAAM85C,EAAO50C,KAAKqE,IAAI,EAAE3X,KAAKmF,MAAM+iD,KAAK,GACxCloD,KAAK2F,SAAS,CACZuiD,0CAIKljD,GACHA,GACFA,EAAEoJ,iBAEJ,IAAM85C,EAAO50C,KAAKC,IAAIvT,KAAKmF,MAAM2tG,WAAW9yG,KAAKmF,MAAM+iD,KAAK,GAAGloD,KAAKo6C,WAAW8N,GAC/EloD,KAAK2F,SAAS,CACZuiD,6JAKFloD,KAAKI,YACLJ,KAAK09J,+LAuBkBp4J,EAAWC,mFAClCvF,KAAKI,YACCw/G,EAAsBluG,KAAKC,UAAUrM,EAAUmK,gBAAkBiC,KAAKC,UAAU3R,KAAKE,MAAMuP,gBAC5EiC,KAAKC,UAAUrM,EAAUsM,iBAAmBF,KAAKC,UAAU3R,KAAKE,MAAM0R,kBAEvEguG,yBAClB5/G,KAAK2F,SAAS,CACZuiD,KAAK,EACLi1G,QAAQ,IACR,WACA98J,EAAKq9J,+BAEA,UAEWn4J,EAAU2iD,OAASloD,KAAKmF,MAAM+iD,MAEhDloD,KAAKo6C,0LAIKkuD,8IAAqB,SAC5BtoG,KAAKE,MAAM+O,kDACP,aAGTq5F,EAAQA,GAAgB,EAExBtoG,KAAK2F,SAAS,CACZoqB,SAAQ,IAGJslB,EAAmBr1C,KAAKD,cAAcmX,gBAAgB,CAAC,UAAU,qBAGnEimJ,iBAAcn9J,KAAKmF,MAAMg4J,SACzBI,EAAkBjqJ,KAAKqE,IAAI09B,EAAiBr1C,KAAKmF,MAAMo4J,kBAEvD3rJ,EAAgB5R,KAAKE,MAAM0R,gBACRA,EAAcrQ,SACnCqQ,EAAgBvQ,OAAOC,KAAKtB,KAAKE,MAAMmP,kBAGnC8sJ,iBAAan8J,KAAKmF,MAAMw3J,QAAQR,QAEtCvqJ,EAAcpQ,QAAQ,SAAC2R,GACrBgpJ,EAAOhpJ,GAASA,IAGdmvH,EAAUtiI,KAAKE,MAAMihH,kBAAX9/G,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAmCrB,KAAKmF,MAAMw3J,QAAQr6B,UAE9Dq7B,EAAsD,qBAA9B39J,KAAKE,MAAMy9J,eAAiC39J,KAAKE,MAAMy9J,eAAiB,IAEnFp8J,SACjB+gI,EAAU,GACVq7B,EAAen8J,QAAS,SAAA6R,GACtBivH,EAAQjvH,EAAOlH,eAAiBkH,UAIfrT,KAAKE,MAAM49G,wDAA0B99G,KAAKD,cAAciS,gBAAgBhS,KAAKE,MAAM+O,QAAQsuJ,EAAgB,SAAS3rJ,sCAAnIK,SAKcA,EAAa1Q,QAC/B0Q,EAAazQ,QAAQ,SAAC0R,GAChBA,EAAG04B,QACLuxH,EAAQjqJ,EAAG04B,SAAW14B,EAEtBiqJ,EAAO,IAAAx4J,OAAKuO,EAAGO,YAAeP,KAK9B2D,EAASxV,OAAO2R,OAAOmqJ,GAAS/mJ,QAGxBS,EAAOqM,eAAiBljB,KAAKmF,MAAMo4J,iBAAmB1mJ,EAAOqM,YAAYljB,KAAKmF,MAAMo4J,mBAChGA,EAAkB/pJ,SAASqD,EAAOqM,aAAa,qBAG1CljB,KAAK2F,SAAU,SAAAJ,GAAS,MAAK,CAClC43J,UACAptI,SAAQ,EACRwtI,kBACAZ,QAAQt7J,OAAAg5B,EAAA,EAAAh5B,CAAA,GACHkE,EAAUo3J,QADR,CAELR,SACA75B,cAEA,WACF54H,EAAK0wC,qJAgEA,IAAAg2D,EAAApwG,KAED49J,EAAmBv8J,OAAO2R,OAAOhT,KAAKmF,MAAM+2J,eAAejpJ,OAAQ,SAAApJ,GAAC,OAAW,OAANA,IAActI,OAAO,EAG9F+hC,EAAetjC,KAAKmF,MAAMm+B,aAAejiC,OAAO2R,OAAOhT,KAAKmF,MAAMm+B,cAAgB,KAExF,OACE98B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUF,MAAO,EAAG48J,EAAG,UAExC79J,KAAKmF,MAAM4qB,QACTvpB,EAAA1E,EAAAC,cAAC60G,EAAA,EAAD,CACE51G,UAAW,CACTG,cAAc,MACdkuB,UAAUrvB,KAAKE,MAAMgD,QAEvBsiB,YAAa,CACXpf,KAAK,QAEPsZ,UAAW,CACTpc,GAAG,GAELD,KAAM,4BAGRmD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPiM,SAAU,WACV/L,cAAe,SACf0B,GAAI,8BACJ4e,GAAI,CAAC,EAAGm8I,EAAmB,QAAU,IAErCp3J,EAAA1E,EAAAC,cAAC+7J,EAADz8J,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEy8J,QAAS38J,KAAKmF,MAAMw3J,QACpBT,cAAel8J,KAAKmF,MAAM+2J,cAC1BO,aAAcz8J,KAAKy8J,aAAa9tI,KAAK3uB,MACrCq8J,aAAcr8J,KAAKq8J,aAAa1tI,KAAK3uB,SAGrCsjC,GAAgBA,EAAa/hC,OAC3BiF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPE,cAAe,UAEfqF,EAAA1E,EAAAC,cAACuwG,EAAA,EAAD,CACE3hG,KAAM3Q,KAAKE,MAAMyQ,KACjB/M,SAAU5D,KAAKE,MAAM0D,WAEvB4C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE5D,GAAI,oBACJ1B,cAAe,UAGbmiC,EAAax/B,IAAK,SAACoP,EAAGnP,GACpB,IAAM2f,EAASxQ,EAAG1N,KACZu4J,EAAY7qJ,EAAG04B,QAKrB,OACEplC,EAAA1E,EAAAC,cAAC0vG,EAAA,EAADpwG,OAAAgF,OAAA,GACM+pG,EAAKlwG,MADX,CAEE4xG,SAAU,CACRh1F,eAAc,GAEhBtX,KAAMke,EACNhD,YAAaxN,EACbnO,IAAG,MAAAJ,OAAQZ,GACXjB,YAbgB,SAACkC,GACnB,OAAQ0e,EAASa,OAAO6tD,KAAKg+B,EAAKrwG,cAAcmmB,2BAA2BxC,IAAW,MAapFquF,MAAK,UAAAptG,OAAYo5J,GACjBlsD,OAAM,WAAAltG,OAAao5J,GACnBpsD,eAAgBrgF,UAM1B9qB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEvD,OAAQ,OACRhC,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChByB,GAAI,gCAEJ2D,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMoH,GAAI,GACRrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMoH,GAAI,EAAGlK,QAAU,SAAAqB,GAAC,OAAIorG,EAAKmD,SAASvuG,KACxCwB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAM,oBACNrB,KAAM,MACN3C,MAAQzD,KAAKmF,MAAM+iD,KAAK,EAAI,cAAgB,mBAGhD1hD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM9C,QAAU,SAAAqB,GAAC,OAAIorG,EAAKoD,SAASxuG,KACjCwB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAM,qBACNrB,KAAM,MACN3C,MAAQzD,KAAKmF,MAAM+iD,KAAKloD,KAAKmF,MAAM2tG,WAAa,cAAgB,oBAItEtsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACElD,SAAU,EACVC,WAAY,EACZC,MAAO,YAHT,QAKQzD,KAAKmF,MAAM+iD,KALnB,OAK6BloD,KAAKmF,MAAM2tG,eAM9CtsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAYj3G,UAAW,SAAUkC,WAAY,YAAa/G,WAAY,EAAGD,SAAU,CAAC,GAAIE,MAAO,aAA/F,sCA9WavB,aA2XhBg/G,iQC1XT6b,6MAEJ53H,MAAQ,CACNqwD,MAAM,EACNzlC,SAAQ,EACR1c,OAAO,UACP2M,WAAW,CACTg7F,QAAQ,CACNt3F,OAAO,KACPqM,SAAQ,GAEVrF,QAAQ,CACNhH,OAAO,KACPqM,SAAQ,GAEVtQ,OAAO,CACLiE,OAAO,KACPqM,SAAQ,IAGZkhF,WAAW,GACX+pB,WAAU,EACVgjC,aAAa,KACbC,cAAc,KACdC,eAAc,EACd5lD,gBAAe,EACft2E,iBAAiB,KACjBu4E,oBAAoB,GACpBloD,mBAAmB,KACnB8rG,sBAAqB,EACrB3tB,yBAAwB,EACxBl+E,yBAAyB,KACzBkpE,0BAA0B,QAI5Bz7H,cAAgB,OAUhB4rH,UAAY,SAACt4G,GACI,OAAXA,GACF5Q,EAAKkD,SAAS,CACZ0N,cAKN+qJ,oBAAsB,SAACF,GACrBz7J,EAAKkD,SAAS,CACZu4J,kBAG4C,oBAAnCz7J,EAAKvC,MAAMk+J,qBACpB37J,EAAKvC,MAAMk+J,oBAAoBF,MAInC1jD,iBAAmB,SAACx1G,GAClB,IAAKvC,EAAK0C,MAAMkO,OACd,OAAO,EAET,IAAM4e,EAASjtB,EAAE+gB,OAAOhc,MAAMxI,SAAWf,MAAMwE,EAAE+gB,OAAOhc,OAAStH,EAAK1C,cAAcqT,MAAMpO,EAAE+gB,OAAOhc,OAAStH,EAAK1C,cAAcqT,MAAM,GAErI3Q,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bg1G,oBAAoBl5G,OAAAg9J,EAAA,EAAAh9J,CAAA,GACfkE,EAAUg1G,oBADIl5G,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEhBoB,EAAK0C,MAAMkO,OAAS,OAEvB49F,WAAW5vG,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAU0rG,WADL5vG,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAAS4e,UAK3B8oF,oBAAsB,WAAiB,IAAhB9oF,EAAgB7d,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAK3R,EAAK0C,MAAMkO,OACd,OAAO,EAEJ4e,IACHA,EAASxvB,EAAK0C,MAAM8rG,WAAWxuG,EAAK0C,MAAMkO,SAE5C,IAAIilG,GAAiB,EACrB,GAAIrmF,EAEF,OADAqmF,EAAiBrmF,EAAOuC,IAAI,GACpB/xB,EAAK0C,MAAMkO,QACjB,IAAK,UACL,IAAK,SACHilG,EAAiBA,GAAkBrmF,EAAOlb,GAAGtU,EAAK0C,MAAM84J,eAM9Dx7J,EAAKkD,SAAS,CACZ2yG,sBAIJqC,cAAgB,WACd,IAAKl4G,EAAK0C,MAAMkO,QAAgE,OAAtD5Q,EAAK0C,MAAMo1G,oBAAoB93G,EAAK0C,MAAMkO,QAClE,OAAO,EAGT,IAAI4e,EAAS,KACP2oF,EAAqBn4G,EAAK1C,cAAcqT,MAAM3Q,EAAK0C,MAAMo1G,oBAAoB93G,EAAK0C,MAAMkO,SAAS8P,IAAI,KAE3G,OAAO1gB,EAAK0C,MAAMkO,QAChB,IAAK,UACL,IAAK,SACH4e,EAASxvB,EAAK0C,MAAM84J,cAAgBx7J,EAAK1C,cAAcqT,MAAM3Q,EAAK0C,MAAM84J,eAAe3xJ,MAAMsuG,GAAsB,KAMvHn4G,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5B0rG,WAAW5vG,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAU0rG,WADL5vG,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAAS4e,UAK3B6oF,uBAAyB,SAAC/6F,GACxB,IAAKtd,EAAK0C,MAAMkO,OACd,OAAO,EAET5Q,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bg1G,oBAAoBl5G,OAAAg9J,EAAA,EAAAh9J,CAAA,GACfkE,EAAUg1G,oBADIl5G,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEhBoB,EAAK0C,MAAMkO,OAAS0M,UAK3Bw+I,mCAAgB,SAAAl+I,IAAA,IAAA4wF,EAAAlhF,EAAAwiC,EAAAisG,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAt+I,EAAAxe,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,UAERk+F,EAAaxuG,EAAK0C,MAAM8rG,WAAWxuG,EAAK0C,MAAMkO,SAEhD5Q,EAAK0C,MAAMmzG,gBAAmBrH,IAAcxuG,EAAK1C,cAAcqT,MAAM69F,GAAYz8E,IAAI,GAJ3E,CAAAjU,EAAAxN,KAAA,eAAAwN,EAAAgB,OAAA,UAKL,GALK,OAQRwO,GAAU,EARFxP,EAAAgU,GAUN9xB,EAAK0C,MAAMkO,OAVLkN,EAAAxN,KAWP,WAXOwN,EAAAgU,GAAA,qBAaL9xB,EAAKvC,MAAM8I,YAAYizB,WAAcx5B,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAbjE,CAAA/iC,EAAAxN,KAAA,eAAAwN,EAAAgB,OAAA,UAcD,GAdC,cAiBJgxC,EAAkB9vD,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAY77C,KAE/D+2J,EAAoB/7J,EAAK1C,cAAckwD,qBAAqBghD,EAAW,KAGtD,EACD,KAUhBytD,GADAD,EAAgG,IAClDl9J,SAAyD,IAA/Ck9J,EAA6BzgJ,QAAQ,KAAcvb,EAAK1C,cAAcqT,MAAM,MAAW3Q,EAAK1C,cAAcqT,MAAM,KAExKurJ,EAAiB,SAACzrJ,EAAG2M,GACzB,IAAMghC,EAA4B,YAAd3tC,EAAGxD,OAGjBsgB,EAAY,CAChBC,cAAa,aACbG,YAAa3tB,EAAKvC,MAAM4I,cACxBonB,WAAYhd,EAAGxD,OACf8rG,WAAYhoG,SAASy9F,IAGnBpxF,IACFmQ,EAAUE,WAAaztB,EAAK1C,cAAcuwB,oBAAoBzQ,KAI5DA,GAA8B,UAArBmQ,EAAUtgB,SACrBjN,EAAK1C,cAAcwwB,yBAAyBP,GAG9CvtB,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL3e,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAAQ,CAClBqQ,OAAO,KACPqM,SAAQ,QAKV8wB,GACFp+C,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5B0rG,WAAW5vG,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAU0rG,WADL5vG,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAAS5Q,EAAK1C,cAAcqT,MAAM,SAMhDwrJ,EAAwB,SAAC1rJ,GAC7B,IAAMwQ,EAASxQ,EAAGud,gBAClBhuB,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL3e,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAFJhS,OAAAg9J,EAAA,EAAAh9J,CAAA,GAGHkE,EAAUya,WAAWvd,EAAK0C,MAAMkO,QAH7B,CAINqQ,iBAMRjhB,EAAKvC,MAAM6wB,0BAA0BwhC,EAAiB,kBAAmB,CACvEisG,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCn+I,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,oBAgGd9e,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL3e,OAAAi9J,EAAA,EAAAj9J,CAAA,GAEPoB,EAAK0C,MAAMkO,OAFJhS,OAAAg9J,EAAA,EAAAh9J,CAAA,GAGHkE,EAAUya,WAAWvd,EAAK0C,MAAMkO,QAH7B,CAIN0c,iBArGQ,yBAAAxP,EAAAtM,SAAAoM,EAAArgB,WAoJhB6+J,8BAAgC,SAACruB,GAC/B/tI,EAAKkD,SAAS,CACZ6qI,+BAIJsuB,oDAAiC,SAAAh+I,IAAA,IAAA8oE,EAAAm1E,EAAAxsG,EAAAq/D,EAAA,OAAAtxG,EAAAxe,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,WAC3BtQ,EAAKvC,MAAM8I,YAAYizB,YAAax5B,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAD1C,CAAAjb,EAAAlO,KAAA,YAEvB62E,EAAwBnnF,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBACzD6iI,EAAwBn1E,EAAsBniF,MAC1BhF,EAAK1C,cAAcu5B,kBAAkBylI,GAJlC,CAAA99I,EAAAlO,KAAA,gBAMrBw/C,EAAkB9vD,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAY77C,KAN1CwZ,EAAAlO,KAAA,EAOCtQ,EAAK1C,cAAc2/D,mBAAmBnN,EAAgBq3B,EAAsB19E,QAAQzJ,EAAKvC,MAAM+O,SAPhG,cAOrB2iH,EAPqB3wG,EAAApL,KAAAoL,EAAAM,OAAA,SAQpBqwG,GARoB,eAAA3wG,EAAAM,OAAA,UAWxB,GAXwB,yBAAAN,EAAAhN,SAAA6M,EAAA9gB,WAcjCmiC,oCAAiB,SAAA1vB,IAAA,IAAAsd,EAAAiS,EAAAg8H,EAAAgB,EAAA1sG,EAAAkpE,EAAAx7B,EAAAi+D,EAAA5rG,EAAAoc,EAAAwwF,EAAAC,EAAA3sG,EAAAjP,EAAApnB,EAAA4D,EAAAC,EAAAi7F,EAAAv1H,EAAA05J,EAAA,OAAA7+I,EAAAxe,EAAA8Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEVtQ,EAAKvC,MAAM8I,aAAgBvG,EAAKvC,MAAM+O,QAF5B,CAAA4D,EAAAE,KAAA,eAAAF,EAAA0O,OAAA,UAGN,GAHM,UAMXwO,GAAU,EACdttB,EAAKkD,SAAS,CACZoqB,UACA/P,WAAW,CACTg7F,QAAQ,CACNt3F,OAAO,KACPqM,SAAQ,GAEVrF,QAAQ,CACNhH,OAAO,KACPqM,SAAQ,GAEVtQ,OAAO,CACLiE,OAAO,KACPqM,SAAQ,MAKViS,GAAmB,EACnBg8H,EAAe,aACfgB,EAAyB,KACzB1sG,EAA2B,KAC3BkpE,GAA4B,EAC5Bx7B,EAAgBv9F,EAAK1C,cAAcqT,MAAM,GACzC6qJ,EAAgBx7J,EAAK1C,cAAcqT,MAAM,GACzCi/C,EAAqB5vD,EAAK1C,cAAcqT,MAAM,GAC5Cq7D,OAA6Cn/C,IAA7B7sB,EAAKvC,MAAMuuE,eAA8BhsE,EAAKvC,MAAMuuE,eAGtEhsE,EAAKvC,MAAM8I,YAAYizB,YAAax5B,EAAKvC,MAAM8I,YAAYizB,UAAU/H,QApC1D,CAAArhB,EAAAE,KAAA,YAqCPksJ,EAAkBx8J,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YACnD47G,EAAiBD,EAAgBn7G,IACjCyO,EAAkB0sG,EAAgBx3J,MACpC67C,EAAc7gD,EAAK1C,cAAcu5B,kBAAkBi5B,MAGnC2sG,EA3CP,CAAArsJ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CStQ,EAAKvC,MAAM+nE,aAAa1V,EAAgB0sG,EAAgB/yJ,QAAQgzJ,GA5CzE,QA4CX57G,EA5CWzwC,EAAAgD,KAAA,YA+CTqmB,EAAoBz5B,EAAK1C,cAAcu5B,kBAAkB72B,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAAkBz0B,SAEtFhF,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAAkB4nB,IAjDhE,CAAAjxC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDetQ,EAAKvC,MAAM+nE,aAAaxlE,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAAkBz0B,KAAKhF,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAAkBhwB,QAAQzJ,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBAAkB4nB,KAlD7M,QAkDX5nB,EAlDWrpB,EAAAgD,KAAA,YAqDTytC,IAAepnB,EArDN,CAAArpB,EAAAE,KAAA,gBAuDXirJ,EAAev7J,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAYnwC,MAvDjDN,EAAAE,KAAA,GA8DD4N,QAAQuD,IAAI,CAEpBzhB,EAAK1C,cAAc2uD,iBAAiB6D,GAEpC9vD,EAAKq8J,iCAELr8J,EAAK1C,cAAc+gC,mBAAmByxB,EAAgB9vD,EAAKvC,MAAM+O,SAEhEw/D,EAAgBhsE,EAAK1C,cAAcozB,oBAAoBo/B,EAAgB,cAAgB,OAtE/E,QAAAzyB,EAAAjtB,EAAAgD,KAAAkqB,EAAA1+B,OAAA8iB,EAAA,EAAA9iB,CAAAy+B,EAAA,GA0DTwyB,EA1DSvyB,EAAA,GA2DTy7F,EA3DSz7F,EAAA,GA4DTsyB,EA5DStyB,EAAA,GA6DTigE,EA7DSjgE,EAAA,GA2EPsyB,IAEF4rG,EAAgBx7J,EAAK1C,cAAc4W,iBAAiB07C,EAAmBC,GACnE0tC,IACFA,EAAgBv9F,EAAK1C,cAAc4W,iBAAiBqpF,EAAcv9F,EAAKvC,MAAM8I,YAAYnI,UACzFm+J,EAAyBv8J,EAAK1C,cAAcqT,MAAM6qJ,GAAe3xJ,MAAM7J,EAAK1C,cAAcqT,MAAM4sF,KAGlGh+D,EAAmBv/B,EAAK1C,cAAcqT,MAAMi/C,GAAoBt7C,GAAG,IAnF1D,WAwFfgZ,GAAU,EAGJirG,EAAYv4H,EAAKvC,MAAM86H,UAEvBv1H,EAAW,CACfsqB,UACAirG,YACAgjC,eACAC,gBACAj8H,mBACAqwB,qBACA2sG,yBACA1sG,2BACAkpE,8BAGE/4H,EAAKvC,MAAM0yI,SAzGA,CAAA//H,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgBtQ,EAAK1C,cAAc61D,oBAAoBnzD,EAAKvC,MAAM+O,SA1GlE,SA0GPkwJ,EA1GOtsJ,EAAAgD,QA2GUspJ,EAAe1hG,UACpCh4D,EAAS04J,sBAAuB,GA5GrB,cAgHoC,oBAAxC17J,EAAKvC,MAAMu7H,0BACpBh5H,EAAKvC,MAAMu7H,yBAAyBz5F,GAjHvBnvB,EAAA0O,OAAA,SAuHR9e,EAAKkD,SAASF,IAvHN,yBAAAoN,EAAAoB,SAAAxB,EAAAzS,WA0HjBo/J,0DAAsB,SAAA5pJ,EAAOxQ,GAAP,IAAA4kF,EAAA,OAAAtpE,EAAAxe,EAAA8Q,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAChB/N,GACFA,EAAEoJ,iBAEEw7E,EAAwBnnF,EAAKvC,MAAM8I,YAAYizB,UAAUC,kBACrCz5B,EAAK1C,cAAcu5B,kBAAkBswD,EAAsBniF,OAEnFhF,EAAKy+D,aAAa,KAAKz+D,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAY77C,KAAKmiF,EAAsB19E,SAP7E,wBAAAwJ,EAAAzB,SAAAuB,EAAAxV,iEAWtBomB,uCAAoB,SAAAtE,IAAA,OAAAxB,EAAAxe,EAAA8Q,KAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,OAClBtQ,EAAKkD,SAAS,CACZqa,WAAY,CACVg7F,QAAQ,CACNt3F,OAAO,KACPqM,SAAQ,GAEVrF,QAAQ,CACNhH,OAAO,KACPqM,SAAQ,GAEVtQ,OAAO,CACLiE,OAAO,KACPqM,SAAQ,MAbI,wBAAA/N,EAAA/N,SAAA6N,EAAA9hB,WAmBpBq/J,uDAAmB,SAAAv8I,EAAO9d,GAAP,IAAA4kF,EAAAqxB,EAAAC,EAAA,OAAA56F,EAAAxe,EAAA8Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UACb/N,GACFA,EAAEoJ,iBAEEw7E,EAAwBnnF,EAAKvC,MAAM8I,YAAYizB,UAAUC,mBACrCz5B,EAAK1C,cAAcu5B,kBAAkBswD,EAAsBniF,MALpE,CAAAwb,EAAAlQ,KAAA,eAAAkQ,EAAAlQ,KAAA,EASyBtQ,EAAKq8J,iCAT9B,OAAA77I,EAAApN,KA8EbpT,EAAKkD,SAAS,CACZ61H,2BAA0B,KAlEtBvgB,EAAkB,SAAC/nG,EAAG2M,GAE1B,IAAMmQ,EAAY,CAChBC,cAAe,UACfG,YAAa,UACbF,WAAYhd,EAAKA,EAAGxD,OAAS,MAGzBmxC,EAAc3tC,GAAoB,YAAdA,EAAGxD,OAIzBmQ,IACFmQ,EAAUE,WAAaztB,EAAK1C,cAAcuwB,oBAAoBzQ,KAI5DA,GAA8B,UAArBmQ,EAAUtgB,SACrBjN,EAAK1C,cAAcwwB,yBAAyBP,GAG9CvtB,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bi2H,0BAA2B36E,EAC3B7gC,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAERg7F,QAAQ,CACNt3F,OAAO,KACPqM,SAAQ,QAK4B,oBAA/BttB,EAAKvC,MAAM+6G,iBAAkCp6D,GACtDp+C,EAAKvC,MAAM+6G,gBAAgB/nG,GAG7BzQ,EAAK0/B,kBAGD+4E,EAAyB,SAAChoG,GAC9B,IAAMwQ,EAASxQ,EAAGud,gBAClBhuB,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAERg7F,QAAQ35G,OAAAg9J,EAAA,EAAAh9J,CAAA,GACHkE,EAAUya,WAAWg7F,QADnB,CAELt3F,iBAMRjhB,EAAK1C,cAAcqhE,YAAY3+D,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAY77C,KAAKmiF,EAAsB19E,QAAQ+uG,EAAgBC,GAE/Hz4G,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAERg7F,QAAQ,CACNt3F,OAAO,KACPqM,SAAQ,KAGZyrG,2BAA0B,MA3Ef,wBAAAv4G,EAAAhP,SAAA6O,EAAA9iB,iEAqFnB0qB,8CAAU,SAAAlH,EAAOxe,EAAEs6J,GAAT,IAAA11E,EAAA1tD,EAAAqjI,EAAAC,EAAAliC,EAAAN,EAAAihC,EAAA5gC,EAAAoiC,EAAAtuB,EAAAxmD,EAAA+0E,EAAAjqG,EAAAwmE,EAAAD,EAAA,OAAA17G,EAAAxe,EAAA8Q,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,UACR/N,EAAEoJ,iBAEIw7E,EAAwBnnF,EAAKvC,MAAM8I,YAAYizB,UAAUC,oBACzDA,EAAoBz5B,EAAK1C,cAAcu5B,kBAAkBswD,EAAsBniF,OAJ7E,CAAAqc,EAAA/Q,KAAA,YAaEwsJ,EAAkB,SAACrsJ,EAAG2M,IAErBA,GAAS3M,GAAoB,UAAdA,EAAGxD,OACrBmQ,EAAQ,CACNmmC,QAAQ,kBAEA9yC,GAAM2M,IAChB3M,EAAK,CACHxD,OAAO,UAIX,IAAMmxC,EAAc3tC,GAAoB,YAAdA,EAAGxD,OAGvBsgB,EAAY,CAChBC,cAAe,UACfG,YAAakvI,EACbpvI,WAAYhd,EAAKA,EAAGxD,OAAS,KAC7B8rG,WAAYhoG,SAASyqJ,IAGnBp+I,IACFmQ,EAAUE,WAAaztB,EAAK1C,cAAcuwB,oBAAoBzQ,KAI5DA,GAA8B,UAArBmQ,EAAUtgB,SACrBjN,EAAK1C,cAAcwwB,yBAAyBP,GAK1C6wB,GAEFt8B,OAAO2oF,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGP/qG,EAAKvC,MAAMw7H,mBAA6D,oBAAjCj5H,EAAKvC,MAAMw7H,mBACpDj5H,EAAKvC,MAAMw7H,kBAAkBxoH,KAI/BqR,OAAO2oF,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIX/qG,EAAK0/B,kBAGP1/B,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5By8B,kBAAiB6e,EACjB7gC,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAER0K,QAAQ,CACNhH,OAAO,KACPqM,SAAQ,SAMVyvI,EAAyB,SAACtsJ,GAC9B,IAAMwQ,EAASxQ,EAAGud,gBAClBhuB,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAER0K,QAAQrpB,OAAAg9J,EAAA,EAAAh9J,CAAA,GACHkE,EAAUya,WAAW0K,QADnB,CAELhH,iBAMF45G,EAAiB,WACoB,oBAA9B76H,EAAKvC,MAAMo9H,gBACpB76H,EAAKvC,MAAMo9H,kBAITN,GAAqC,IAAzBv6H,EAAKvC,MAAM88H,WAAuBv6H,EAAKvC,MAAM0yI,UAAYnwI,EAAK0C,MAAMqrI,0BAA4B/tI,EAAK0C,MAAMg5J,qBAGvHF,EAAgBx7J,EAAK0C,MAAM84J,cAC3B5gC,EAAY56H,EAAKvC,MAAMi9H,oBAAsB16H,EAAK1C,cAAc+vD,aAAartD,EAAK1C,cAAckwD,qBAAqBxtD,EAAK0C,MAAM8rG,WAAWxuG,EAAK0C,MAAMkO,QAAQ5Q,EAAK0C,MAAMmtD,2BAA6B7vD,EAAK1C,cAAc+vD,aAAartD,EAAK0C,MAAMktD,oBAGnPotG,EAAsE,qBAA9Ch9J,EAAKvC,MAAM8I,YAAY0sG,mBAAqCjzG,EAAKvC,MAAM8I,YAAY0sG,mBAAqBjzG,EAAK1C,cAAcmX,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnMi6H,EAAwB,MAExBsuB,EApHA,CAAA37I,EAAA/Q,KAAA,cAwHAo+H,EADEnU,EACsBv6H,EAAK1C,cAAcmX,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnEzU,EAAK1C,cAAcmX,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAA4M,EAAA/Q,KAAA,gBAAA+Q,EAAA/Q,KAAA,GA8H8BtQ,EAAK1C,cAAc00B,oBAAoBwpI,EAAcx7J,EAAKvC,MAAM4I,cAAcrG,EAAKvC,MAAM8I,aAAY,GA9HnI,QAAA8a,EAAAjO,KA+HoBuqD,IAAI39D,EAAK1C,cAAcqT,MAAM+9H,MAC/CsuB,GAAiB,GAhInB,QAuI2B,oBAF3B90E,EAAkBloF,EAAKvC,MAAMyqF,gBAAkBloF,EAAKvC,MAAMyqF,gBAAkB,CAAC0yC,EAAU56H,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YAAYp3C,QAAQzJ,EAAKvC,MAAM8I,YAAYmrB,KAAKjoB,QAAQzJ,EAAKvC,MAAM8I,YAAYkD,QAAQuzJ,MAGjN90E,EAAkBA,EAAgB0yC,IAIhCL,GACIvnE,GAAoBiqG,EAAAxjI,EAAkBqb,SAAQ+nH,GAA1BnrJ,MAAAurJ,EAAAr+J,OAAAivG,EAAA,EAAAjvG,CAA8CspF,IAAiB7zB,YACzFr0D,EAAK1C,cAAcg6D,+BAA+B6vB,EAAsBniF,KAAMguD,EAAmB8pG,EAAiBC,KAG5GvjC,EAAiBx5H,EAAK1C,cAAcu5B,kBAAkB72B,EAAKvC,MAAM8I,YAAYvB,MAC7Eu0H,EAAepyC,EAAsB6qB,UAAUhnF,KAAM,SAAA6wC,GAAC,OAAIA,EAAE72D,OAAS63J,IACvE78J,EAAKvC,MAAM86H,WAAaiB,EAC1Bx5H,EAAK1C,cAAcw2D,iBAAiB9zD,EAAKvC,MAAM8I,YAAYvB,KAAMhF,EAAKvC,MAAM+O,QAAS26E,EAAsBniF,KAAMu0H,EAAa/+D,WAAY0tB,EAAiB40E,EAAiBC,EAAwBliC,GAGpM76H,EAAK1C,cAAcgxB,0BAA0B64D,EAAsBniF,KAAM63J,EAAiB30E,EAAiB40E,EAAiBC,IAMhI/8J,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5Bya,WAAW3e,OAAAg9J,EAAA,EAAAh9J,CAAA,GACNkE,EAAUya,WADL,CAER0K,QAAQ,CACNhH,OAAO,KACPqM,SAAQ,QAlKV,eAAAjM,EAAAvC,OAAA,UAyKD,GAzKC,yBAAAuC,EAAA7P,SAAAuP,EAAAxjB,4IA7fJA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAiN9CF,KAAKI,YACLJ,KAAKmiC,yGAOY78B,EAAUC,GAC3BvF,KAAKI,YAEL,IAAMqxB,EAAiBnsB,EAAU2J,UAAYjP,KAAKE,MAAM+O,QAClD0wJ,EAAkBr6J,EAAUstI,WAAa5yI,KAAKE,MAAM0yI,SACpDgtB,EAAmBt6J,EAAU01H,YAAch7H,KAAKE,MAAM86H,WACvC11H,EAAUwD,gBAAkB9I,KAAKE,MAAM4I,gBAAmBxD,EAAU0D,aAAehJ,KAAKE,MAAM8I,aAE/FyoB,GAAkBkuI,GAAmBC,IACvD5/J,KAAKmiC,iBAGP,IAAMw5E,EAAgB37G,KAAKmF,MAAMkO,SAAW9N,EAAU8N,OAChDwsJ,EAA6B7/J,KAAKmF,MAAMo1G,oBAAoBv6G,KAAKmF,MAAMkO,UAAY9N,EAAUg1G,oBAAoBv6G,KAAKmF,MAAMkO,SAC9HsoG,GAAiBkkD,IACnB7/J,KAAK26G,gBAGmBp1G,EAAU0rG,aAAejxG,KAAKmF,MAAM8rG,YAE5DjxG,KAAK+6G,sBAGyBx1G,EAAUi2H,4BAA8Bx7H,KAAKmF,MAAMq2H,2BAGvC,oBAA/Bx7H,KAAKE,MAAM+6G,iBACpBj7G,KAAKE,MAAM+6G,gBAAgBj7G,KAAKmF,MAAMq2H,4DAkbnC,IAAAn7H,EAAAL,KAEP,IAAKA,KAAKE,MAAM8I,cAAgBhJ,KAAKE,MAAM4I,cACzC,OAAO,KAGT,IAAMwxG,EAAmBt6G,KAAKE,MAAM86H,WAAah7H,KAAKmF,MAAMq2H,0BACtD2G,EAAqBniI,KAAKD,cAAcmX,gBAAgB,CAAC,QAAQ,mBACjE4oJ,EAAwB39B,EAAmBjuG,SAAkG,qBAAhFiuG,EAAmBjiI,MAAMmP,gBAAgBrP,KAAKE,MAAM8I,YAAYmrB,KAAKhhB,OAClIivH,EAA+BD,EAAmBhG,eAIlD4jC,EAAyB,SAAC7/J,GAAD,OAC7B8/J,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACT4Z,GAAG,EACH8wF,GAAG,EACHxqG,GAAG,EACHK,GAAG,EACH9B,QAAQ,OACRpF,WAAW,SACXC,cAAc,SACdC,eAAe,SACf8b,GAAG7c,EAAK8E,MAAM+4J,cAAgB,EAAI,IAGpC8B,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEj/J,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB4+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE95J,KAAM,QACN3C,MAAO,WACPgE,KAAM,iBAGVu4J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE1mI,UAAU,EACV+iF,QAASl8G,EAAK8E,MAAM+4J,cACpBrxJ,MAAK,wCACLwR,SAAW,SAAArZ,GAAC,OAAI3E,EAAK+9J,oBAAoBp5J,EAAE+gB,OAAOw2F,cAKlD4jD,EAAkBngK,KAAKD,cAAcmX,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgBlX,KAAKmF,MAAMg5J,qBAExH,OACEn+J,KAAKmF,MAAM4qB,SAAW/vB,KAAKE,MAAM+O,QAC/B+wJ,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,EACFyb,GAAG,EACHmS,UAAU,QACVhrB,MAAM,CACJiC,QAAQ,OACRpF,WAAW,SACXE,eAAe,YAInB4+J,EAAAl+J,EAAAC,cAACq+J,EAAA,EAAD,CACEp/J,UAAW,CACTG,cAAc,OAEhBqkB,YAAa,CACXpf,KAAK,QAEPsZ,UAAW,CACTpc,GAAG,GAELD,KAAM,2BAITrD,KAAKmF,MAAM68B,mBAAqBhiC,KAAKmF,MAAM+4J,cAC1C8B,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CAAKj/J,MAAO,IAEPjB,KAAKE,MAAMg9H,iBACZ8iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,IAGJu+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEh/J,WAAY,SACZC,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE95J,KAAM,QACN3C,MAAO,WACPgE,KAAOzH,KAAKE,MAAMg9H,gBAAkB,YAAc,YAEpD8iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ3Z,SAAU,EACVE,MAAO,WACP4E,UAAW,UAEwB,OAAjCrI,KAAKE,MAAMmgK,kBAA6BrgK,KAAKE,MAAMmgK,kBAAoB,KACtC,OAAjCrgK,KAAKE,MAAMmgK,mBACXL,EAAAl+J,EAAAC,cAAA,WARJ,OAUS/B,KAAKE,MAAMg9H,gBAA4B,GAAV,QAVtC,SAU0D8iC,EAAAl+J,EAAAC,cAAA,cAAS/B,KAAKmF,MAAM84J,cAAc1xJ,QAAQ,GAA1C,IAA+CvM,KAAKmF,MAAM64J,aAA1D,IAAyEh+J,KAAKmF,MAAM65J,uBAAX,IAAAr6J,OAAwC3E,KAAKmF,MAAM65J,uBAAuBzyJ,QAAQ,GAAlF,KAAA5H,OAAwF3E,KAAKE,MAAM4I,cAAnG,KAAsH,IAVzP,eAUiRk3J,EAAAl+J,EAAAC,cAAA,WAClP,OAA3B/B,KAAKE,MAAMogK,YAAuBtgK,KAAKE,MAAMogK,YAAc,+EAOzChxI,IAA3BtvB,KAAKE,MAAM+8H,aAA6Bj9H,KAAKE,MAAM+8H,cAClD+iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,WAGZnB,KAAKE,MAAMg9H,iBACV8iC,EAAAl+J,EAAAC,cAACg+J,EAAD,MAEJC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CAAM93J,GAAI,GAAV,sBAGA43J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEh/J,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB4+J,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,EACFR,MAAM,IACN0xG,YAAY,WACVtyG,EAAKsrH,UAAU,aAGnB7uG,eAAe,EACfgC,SAAiC,YAAtB9e,KAAKmF,MAAMkO,QAEtB2sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE5xJ,GAAI,EACJpN,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB4+J,EAAAl+J,EAAAC,cAACw+J,EAAA,EAAD,CACE7/I,YAAa,CACXrN,OAAO,WAETsa,UAAW,CACTlmB,KAAK,OACLvH,MAAM,CACJ2N,GAAG,MAITmyJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE38J,SAAU,EACVC,WAAY,GAFd,aAQJw8J,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,EACFR,MAAM,IACN0xG,YAAY,WACVtyG,EAAKsrH,UAAU,YAGnB7uG,eAAe,EACfgC,SAAiC,WAAtB9e,KAAKmF,MAAMkO,QAEtB2sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE5xJ,GAAI,EACJpN,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB4+J,EAAAl+J,EAAAC,cAACw+J,EAAA,EAAD,CACE7/I,YAAa,CACXrN,OAAO,UAETsa,UAAW,CACTlmB,KAAK,OACLvH,MAAM,CACJ2N,GAAG,MAITmyJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE38J,SAAU,EACVC,WAAY,GAFd,cAYY,YAAtBxD,KAAKmF,MAAMkO,OACT2sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ9U,GAAI,EACJjH,cAAe,UAGZ2+J,GAAyB19B,IAAiCpiI,KAAKE,MAAMg9H,iBACpE8iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE93J,GAAI,EACJnH,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB4+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE73J,UAAW,SACX3E,WAAY,UACZuiB,KAAI,sBAAAthB,OAAwBw9H,EAAmBruD,MAA3C,KAAAnvE,OAAoD3E,KAAKE,MAAM8I,YAAYmrB,KAAKhhB,QAHtF,wDAOA6sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE58J,GAAI,EACJ8C,KAAM,MACN3C,MAAO,UACPgE,KAAM,qBAKZ6yG,EACEt6G,KAAKmF,MAAM6a,WAAW0K,QAAQqF,QAC5BiwI,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACy+J,EAAA,EAADn/J,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEsF,KAAMxF,KAAKmF,MAAM6a,WAAW0K,QAAQhH,OACpC+B,WAAU,kCACVW,kBAAmBpmB,KAAKomB,kBAAkBuI,KAAK3uB,MAC/C0lB,SAAW1lB,KAAKE,MAAMwlB,SAAW1lB,KAAKE,MAAMwlB,SAAW,yBACvDI,eAAiB9lB,KAAKE,MAAM0yI,UAAY5yI,KAAKmF,MAAMqrI,wBAA0B,8BAAgC,6BAG/GxwI,KAAKE,MAAMi9H,oBACb6iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE93J,GAAI,EACJnH,MAAO,EACPE,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE93J,GAAI,EACJlH,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMu8G,oBAAsB,gBAAkB,YAGjEz8G,KAAKE,MAAMu8G,qBACTujD,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEj/J,MAAO,EACPqD,SAAU,MACVpD,WAAY,SACZC,cAAe,OAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE38J,SAAU,EACVC,WAAY,EACZ6E,UAAW,OACXhE,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfhB,MAAOzD,KAAKE,MAAMu8G,oBAAoBh5G,MAAQzD,KAAKE,MAAMu8G,oBAAoBh5G,MAAQ,aAEpFzD,KAAKE,MAAMu8G,oBAAoBp5G,OAMtCrD,KAAKmF,MAAM84J,eACT+B,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEj/J,MAAO,EACPqD,SAAU,MACVpD,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB4+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE38J,SAAU,EACVC,WAAY,EACZC,MAAO,YACP4E,UAAW,QACX3E,WAAY,YACZC,QAAU,SAACqB,GAAD,OAAO3E,EAAKy6G,uBAAuB,OAN/C,YAQY96G,KAAKmF,MAAM84J,cAAc1xJ,QAAQ,GAR7C,IAQkDvM,KAAKE,MAAM4I,iBAMrEk3J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE3sJ,IAAK,EACL9S,KAAM,SACN+4B,UAAU,EACVt2B,OAAQ,QACRgE,aAAc,EACd1D,WAAY,IACZ+H,YAAa,aACbuC,gBAAiB,SACjBU,UAAW,kBACXuiG,YAAa,gBACb1yF,SAAUre,KAAKw6G,iBAAiB7rF,KAAK3uB,MACrCiD,OAAM,aAAA0B,OAAe3E,KAAKE,MAAM0E,MAAMC,OAAOC,SAC7CiF,MAAO/J,KAAKmF,MAAM8rG,WAAWjxG,KAAKmF,MAAMkO,QAAUrT,KAAKD,cAAcqT,MAAMpT,KAAKmF,MAAM8rG,WAAWjxG,KAAKmF,MAAMkO,SAAS9G,UAAY,KAEnIyzJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK0C,IAAK,SAAAic,GAAU,OAC5BigJ,EAAAl+J,EAAAC,cAAC0+J,EAAA,EAAD,CACE1gJ,WAAYA,EACZhb,IAAG,YAAAJ,OAAcob,GACjB4yF,YAAa,kBAAItyG,EAAKy6G,uBAAuB/6F,IAC7CjB,SAAUze,EAAK8E,MAAMo1G,oBAAoBl6G,EAAK8E,MAAMkO,UAAYG,SAASuM,SAMnFigJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJjc,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGdpB,KAAKE,MAAM8I,YAAYizB,UAAUC,kBAAkBu4E,UAAU3wG,IAAI,SAACk4H,EAAajwH,GAC7E,IAAM20J,EAAe1kC,EAAav0H,KAClC,OACEu4J,EAAAl+J,EAAAC,cAAC4+J,EAAA,EAAD,CACE39J,YAAa,CACX/B,MAAM,CAAC,EAAE,IACTmG,SAAS/G,EAAK8E,MAAMmzG,eACpBnxG,UAAU9G,EAAKH,MAAM0E,MAAMC,OAAO6lB,SAEpC3lB,IAAG,WAAAJ,OAAaoH,GAChBjJ,YAAc,SAAAkC,GAAC,OAAI3E,EAAKqqB,QAAQ1lB,EAAE07J,KAEhC1kC,EAAanvH,WAQ3BmzJ,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,EACFyb,GAAG,IAGL8iJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEh/J,WAAY,SACZC,cAAe,UAGbnB,KAAKE,MAAM0gK,eACTZ,EAAAl+J,EAAAC,cAACm+J,EAAA,EACKlgK,KAAKE,MAAM0gK,gBAGjBZ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE95J,KAAM,QACN3C,MAAO,WACPgE,KAAOzH,KAAKE,MAAMk9H,cAAgBp9H,KAAKE,MAAMk9H,cAAiBp9H,KAAKE,MAAMg9H,gBAAkB,YAAc,WAI/G8iC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ3Z,SAAU,EACVE,MAAO,WACP4E,UAAW,UAGTrI,KAAKE,MAAMq9H,cACTyiC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAKv6I,KAAN,CACEk7I,mBAAoB7gK,KAAKE,MAAM2gK,mBAC/B7yJ,wBAAyB,CACvBC,OAAOjO,KAAKE,MAAMq9H,iBAKtByiC,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAKv6I,KAAN,CACEliB,MAAO,YADT,oDAGqDzD,KAAKE,MAAMg9H,gBAAkBl9H,KAAKmF,MAAM84J,cAAc1xJ,QAAQ,GAAK,MAHxH,IAGiIvM,KAAKmF,MAAM64J,aAAeh+J,KAAKE,MAAMg9H,gBAAX,kBAAAv4H,OAA+C3E,KAAKE,MAAM8I,YAAYmK,MAAtE,KAAAxO,OAA+E3E,KAAKE,MAAMoV,iBAA1F,aAAwH,GAHnR,MAQN0qJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEj/J,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhB++J,GACEH,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEp4J,GAAI,EACJC,GAAI,EACJmV,GAAI,EACJjc,MAAO,EACPiG,aAAc,EACdhG,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB0M,gBAAiB,cACjB7K,OAAM,aAAA0B,OAAe3E,KAAKE,MAAM0E,MAAMC,OAAOwlB,YAE7C21I,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ3Z,SAAU,EACVE,MAAO,WACP4E,UAAW,UAGTrI,KAAKE,MAAM0yI,SAAX,0HAGE,4GAIN5yI,KAAKE,MAAM0yI,UACTotB,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJsc,UAAU,EACV3sB,MAAO,gCACP0vG,QAASv8G,KAAKmF,MAAMqrI,wBACpBnyH,SAAW,SAAArZ,GAAC,OAAI3E,EAAKw+J,8BAA8B75J,EAAE+gB,OAAOw2F,aAMpEv8G,KAAKE,MAAM8I,YAAYizB,UAAUC,kBAAkBu4E,UAAU3wG,IAAI,SAACk4H,EAAajwH,GAC7E,IAAM20J,EAAe1kC,EAAav0H,KAClC,OACEu4J,EAAAl+J,EAAAC,cAAC4+J,EAAA,EAAD,CACE39J,YAAa,CACXka,GAAG,EACHjc,MAAM,CAAC,EAAE,IACTkG,UAAU9G,EAAKH,MAAM0E,MAAMC,OAAO6lB,SAEpC3lB,IAAG,WAAAJ,OAAaoH,GAChBjJ,YAAc,SAAAkC,GAAC,OAAI3E,EAAKqqB,QAAQ1lB,EAAE07J,KAEhC1kC,EAAanvH,YAS3B7M,KAAKmF,MAAM6a,WAAWg7F,QAAQjrF,QAChCiwI,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACy+J,EAAA,EAADn/J,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEwlB,SAAQ,uBACRlgB,KAAMxF,KAAKmF,MAAM6a,WAAWg7F,QAAQt3F,OACpC+B,WAAU,gCACVW,kBAAmBpmB,KAAKomB,kBAAkBuI,KAAK3uB,UAInDggK,EAAAl+J,EAAAC,cAACk+J,EAAA,EAAD,CACEp4J,UAAW,CACTpG,EAAE,EACFyb,GAAG,IAGL8iJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEh/J,WAAY,SACZC,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE95J,KAAM,QACNqB,KAAM,WACNhE,MAAO,aAETu8J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ3Z,SAAU,EACVE,MAAO,WACP4E,UAAW,UAGTrI,KAAKE,MAAM4gK,YAAc9gK,KAAKE,MAAM4gK,YAApC,mBAAAn8J,OAAuE3E,KAAKE,MAAMg9H,gBAA0B,GAAR,MAApG,KAAAv4H,OAAmH3E,KAAKmF,MAAM64J,aAA9H,mDAGJgC,EAAAl+J,EAAAC,cAAC4+J,EAAA,EAAD,CACE39J,YAAa,CACXka,GAAG,EACHjc,MAAM,CAAC,EAAE,KAEX6B,YAAa9C,KAAKq/J,iBAAiB1wI,KAAK3uB,OAL1C,cAeTA,KAAKmF,MAAM6a,WAAWhgB,KAAKmF,MAAMkO,QAAQ0c,QAmExCiwI,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACy+J,EAAA,EAADn/J,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEkmB,kBAAmBpmB,KAAKomB,kBAAkBuI,KAAK3uB,MAC/CwF,KAAMxF,KAAKmF,MAAM6a,WAAWhgB,KAAKmF,MAAMkO,QAAQqQ,OAC/C+B,WAAU,cAAA9gB,OAAgB3E,KAAKmF,MAAMkO,OAA3B,eACVqS,SAAQ,GAAA/gB,OAAK3E,KAAKD,cAAc+M,WAAW9M,KAAKmF,MAAMkO,QAA9C,qBA3EZ2sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ/b,cAAe,UAEf6+J,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACE3sJ,IAAK,EACL9S,KAAM,SACN+4B,UAAU,EACVt2B,OAAQ,QACRgE,aAAc,EACd1D,WAAY,IACZkD,UAAWC,IAAOipB,MAClBrkB,YAAa,aACbuC,gBAAiB,SACjBU,UAAW,kBACX6P,SAAUre,KAAKw6G,iBAAiB7rF,KAAK3uB,MACrCiD,OAAM,aAAA0B,OAAe3E,KAAKE,MAAM0E,MAAMC,OAAOC,SAC7CisG,YAAW,UAAApsG,OAAY3E,KAAKmF,MAAM64J,aAAvB,WACXj0J,MAAoD,OAA7C/J,KAAKmF,MAAM8rG,WAAWjxG,KAAKmF,MAAMkO,QAAmBrT,KAAKD,cAAcqT,MAAMpT,KAAKmF,MAAM8rG,WAAWjxG,KAAKmF,MAAMkO,SAAS+P,WAAa,KAE7I48I,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB4+J,EAAAl+J,EAAAC,cAAC0+J,EAAA,EAAD,CACE1gJ,WAAY,GACZ4yF,YAAa,kBAAItyG,EAAKy6G,uBAAuB,KAC7Ch8F,SAAU9e,KAAKmF,MAAMo1G,oBAAoBv6G,KAAKmF,MAAMkO,UAAYG,SAAS,MAE3EwsJ,EAAAl+J,EAAAC,cAAC0+J,EAAA,EAAD,CACE1gJ,WAAY,GACZ4yF,YAAa,kBAAItyG,EAAKy6G,uBAAuB,KAC7Ch8F,SAAU9e,KAAKmF,MAAMo1G,oBAAoBv6G,KAAKmF,MAAMkO,UAAYG,SAAS,MAE3EwsJ,EAAAl+J,EAAAC,cAAC0+J,EAAA,EAAD,CACE1gJ,WAAY,GACZ4yF,YAAa,kBAAItyG,EAAKy6G,uBAAuB,KAC7Ch8F,SAAU9e,KAAKmF,MAAMo1G,oBAAoBv6G,KAAKmF,MAAMkO,UAAYG,SAAS,MAE3EwsJ,EAAAl+J,EAAAC,cAAC0+J,EAAA,EAAD,CACE1gJ,WAAY,IACZ4yF,YAAa,kBAAItyG,EAAKy6G,uBAAuB,MAC7Ch8F,SAAU9e,KAAKmF,MAAMo1G,oBAAoBv6G,KAAKmF,MAAMkO,UAAYG,SAAS,QAG7EwsJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEhjJ,GAAI,EACJ9b,eAAgB,UAEhB4+J,EAAAl+J,EAAAC,cAAC4+J,EAAA,EAAD,CACE39J,YAAa,CACX/B,MAAM,CAAC,EAAE,IACTmG,SAASpH,KAAKmF,MAAMmzG,eACpBj0G,MAAM,CACJ0J,cAAc,eAGlBjL,YAAa9C,KAAKmF,MAAMmzG,eAAiB,KAAOt4G,KAAKu+J,cAAc5vI,KAAK3uB,OAEvEA,KAAKmF,MAAMkO,WAsB1B2sJ,EAAAl+J,EAAAC,cAACm+J,EAAA,EAAD,CACEj/J,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZpB,KAAKE,MAAMg9H,iBAAmBl9H,KAAKmF,MAAM68B,kBACzCg+H,EAAAl+J,EAAAC,cAACg+J,EAAD,MAGF//J,KAAKE,MAAMoI,SAAWtI,KAAKE,MAAMoI,SAAW,aAp1CpCpG,aA61CP66H,iRCr2CTte,qdAMqBn5G,EAAUC,kMAKjC,OACEW,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACEiC,GAAI,EACJnH,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf+E,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACEuH,GAAI,EACJrJ,MAAO,CACLsJ,UAAU,IACVC,KAAK,WAEP1M,WAAY,SACZE,eAAgB,cAGdpB,KAAKE,MAAMuD,OACXyC,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACE0H,GAAI,EACJ5M,MAAO,OACPiC,OAAQ,OACRgE,aAAc,MACd4G,gBAAiB9N,KAAKE,MAAMuD,QAIhCyC,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACE5C,SAAU,EACVC,WAAY,EACZ6E,UAAW,OACX5E,MAAO,YACPY,MAAO,CACL0J,cAAc,eAGf/N,KAAKE,MAAM2M,QAGhB3G,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACE9B,MAAO,CACLsJ,UAAU,IACVC,KAAK,WAEP1M,WAAY,SACZE,eAAgB,YAEhB8E,EAAApE,EAAAC,cAACoE,EAAA,EAAD,CACE5C,SAAU,EACVC,WAAY,EACZC,MAAO,WACP4E,UAAW,QACXhE,MAAO,CACLG,WAAW,UAEbwJ,wBAAyB,CACvBC,OAAQjO,KAAKE,MAAM6J,kBAnEG7H,aA6ErBu8G,0MCzETic,6MAEJv1H,MAAQ,KAGRpF,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,iMAGkBkF,EAAWC,mEAClCvF,KAAKI,kJAGE,IAAAC,EAAAL,KAEH4R,EAAgB5R,KAAKE,MAAM0R,cAK/B,OAJKA,GAAkBA,EAAcrQ,SACnCqQ,EAAgBvQ,OAAOC,KAAKtB,KAAKE,MAAMmP,kBAIvCxN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMa,GAAG,wBAAwB5B,MAAO,EAAGE,cAAe,UACxDU,EAAAC,EAAAC,cAACoxG,EAAA,EAAD9xG,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEyQ,KAAM3Q,KAAKE,MAAMyQ,KACjB/M,SAAU5D,KAAKE,MAAM0D,YAEvB/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMa,GAAG,cAAc1B,cAAe,UAElCyQ,EAAc9N,IAAI,SAAAqP,GAChB,IAAMnK,EAAc3I,EAAKH,MAAMmP,gBAAkBhP,EAAKH,MAAMmP,gBAAgB8D,GAAS,KACrF,OAAKnK,EAIHnH,EAAAC,EAAAC,cAACg/J,EAAA,EAAD1/J,OAAAgF,OAAA,CACE8M,MAAOA,GACH9S,EAAKH,MAFX,CAGE6E,IAAG,SAAAJ,OAAWwO,GACdnK,YAAaA,EACb+oG,MAAK,aAAAptG,OAAewO,GACpB0+F,OAAM,cAAAltG,OAAgBwO,GACtBw+F,eAAgBtxG,EAAKH,MAAMyxG,gBAAkBgF,OAVxC,gBA1CEz0G,aA+DVw4H,qQC2RAsmC,6MA3Vb77J,MAAQ,2EAGN,OACEqB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,IAAOxE,gBAAiBowG,GAAI,CAAC,EAAE,GAAIxqG,GAAI,CAAC,EAAE,GAAI0Z,GAAI,CAAC,MAAO,QACxEjb,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,IAAOvE,iBACvBoE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyG,SAAU,WAAYC,OAAQ,IACjC3G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUD,WAAY,SAAUoD,SAAU,CAAC,OAAQ,QAASsC,GAAI,OAAQ2rG,GAAI,EAAGlqG,UAAW,SAAUoZ,GAAI,CAAC,MAAO,QACnIjb,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQw6J,GAAT,CAAY12J,WAAY,YAAawhG,WAAY,QAAS3jG,GAAI,QAAS7E,SAAU,CAAC,QAAQ,GAAI8E,UAAW,SAAU5E,MAAO,SAA1H,oBAGA+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CAAY19J,WAAY,MAAOuoG,WAAY,CAAC,QAAS,OAAQxoG,SAAU,CAAC,EAAE,GAAI8E,UAAW,SAAU5E,MAAO,SAA1G,+BAIF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUD,WAAY,SAAUoD,SAAU,CAAC,OAAQ,QAASsC,GAAI,OAAQyB,UAAW,UACtG7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,IAAOpE,cAAerB,WAAY,SAAUD,MAAO,OAAQouB,UAAW,CAAC,OAAO,QAASvhB,gBAAiB,QAASrK,MAAO,YAAahC,EAAG,CAAC,EAAE,GAAI+M,UAAW,wCAAyCtH,aAAc,OAAQ7C,MAAO,CAAC6I,SAAS,aACxP1G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,kBAAmB0vG,GAAI,GAC9B/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM8rG,GAAI,GAAV,wZAGA/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM8rG,GAAI,GAAV,sgBAGA/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM8rG,GAAI,GAAV,ikBAGA/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM8rG,GAAI,GAAV,iuBAGA/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,+mCAKFD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,kBAAmBiF,GAAI,CAAC,EAAE,IACjCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,sBAIAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,sGAIAtB,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,MACpBkE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,4CADF,yKAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,iDADF,mjBAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,wCADF,sLAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,mDADF,4IAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,sDADF,mHAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,yDADF,6JAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,yCADF,mOAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,2CADF,wJAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,wCADF,iFAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,4CADF,4CAGAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,0DADF,sJAMJyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,sBAAuBiF,GAAI,CAAC,EAAE,IACrCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,mCAIAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,mjBAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,WAAYiF,GAAI,CAAC,EAAE,IAC1BtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,gBAKFiD,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,MACpBkE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,+BAA8ByE,EAAA1E,EAAAC,cAAA,WADhC,qTAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,2BAA0ByE,EAAA1E,EAAAC,cAAA,WAD5B,kGAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,2CAA0CyE,EAAA1E,EAAAC,cAAA,WAD5C,qzBAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,kDAAiDyE,EAAA1E,EAAAC,cAAA,WADnD,uMAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,iEAAgEyE,EAAA1E,EAAAC,cAAA,WADlE,oWAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,4CAA2CyE,EAAA1E,EAAAC,cAAA,WAD7C,8EAGEyE,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,KAAM+B,MAAO,CAAC88J,UAAU,gBAC5C36J,EAAA1E,EAAAC,cAAA,0GACAyE,EAAA1E,EAAAC,cAAA,kMACAyE,EAAA1E,EAAAC,cAAA,4KAGJyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,kDAAiDyE,EAAA1E,EAAAC,cAAA,WADnD,iFAGEyE,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,KAAM+B,MAAO,CAAC88J,UAAU,gBAC5C36J,EAAA1E,EAAAC,cAAA,mNACAyE,EAAA1E,EAAAC,cAAA,oKACAyE,EAAA1E,EAAAC,cAAA,gQACAyE,EAAA1E,EAAAC,cAAA,wOACAyE,EAAA1E,EAAAC,cAAA,0LACAyE,EAAA1E,EAAAC,cAAA,2JACAyE,EAAA1E,EAAAC,cAAA,qLACAyE,EAAA1E,EAAAC,cAAA,mEACAyE,EAAA1E,EAAAC,cAAA,uVACAyE,EAAA1E,EAAAC,cAAA,qNACAyE,EAAA1E,EAAAC,cAAA,0OACAyE,EAAA1E,EAAAC,cAAA,yHAIJyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,+CAA8CyE,EAAA1E,EAAAC,cAAA,WADhD,sCAGEyE,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,KAAM+B,MAAO,CAAC88J,UAAU,gBAC5C36J,EAAA1E,EAAAC,cAAA,0LACAyE,EAAA1E,EAAAC,cAAA,+PACAyE,EAAA1E,EAAAC,cAAA,mUACAyE,EAAA1E,EAAAC,cAAA,yIACAyE,EAAA1E,EAAAC,cAAA,6QARJ,uXAYAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,iDAAgDyE,EAAA1E,EAAAC,cAAA,WADlD,sCAGEyE,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,KAAM+B,MAAO,CAAC88J,UAAU,gBAC5C36J,EAAA1E,EAAAC,cAAA,0HACAyE,EAAA1E,EAAAC,cAAA,4GAGJyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,oCAAmCyE,EAAA1E,EAAAC,cAAA,WADrC,80BAMFyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,iBAAkBiF,GAAI,CAAC,EAAE,IAChCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,qBAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,sLAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,qBAAsBiF,GAAI,CAAC,EAAE,IACpCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,yBAGAiD,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,MACpBkE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,iEAAgEyE,EAAA1E,EAAAC,cAAA,WADlE,sjBAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,8EAA6EyE,EAAA1E,EAAAC,cAAA,WAD/E,snCAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,iCAAgCyE,EAAA1E,EAAAC,cAAA,WADlC,wVAOJyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,iCAAkCiF,GAAI,CAAC,EAAE,IAChDtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,uCAGAiD,EAAA1E,EAAAC,cAAA,MAAI2E,UAAWC,IAAOrE,MACpBkE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,0CAAyCyE,EAAA1E,EAAAC,cAAA,WAD3C,uRAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,mCAAkCyE,EAAA1E,EAAAC,cAAA,WADpC,mOAIAyE,EAAA1E,EAAAC,cAAA,UACEyE,EAAA1E,EAAAC,cAAA,+BAA8ByE,EAAA1E,EAAAC,cAAA,WADhC,sRAOJyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,qBAAsBiF,GAAI,CAAC,EAAE,IACpCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,yBAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,sqBAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,kBAAmBiF,GAAI,CAAC,EAAE,IACjCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,sBAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,klCAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,0BAA2BiF,GAAI,CAAC,EAAE,IACzCtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,+BAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,4rBAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,+lBAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,2ZAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,weAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,sWAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,gjCAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,8mBAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,6MAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,0CAA2CiF,GAAI,CAAC,EAAE,IACzDtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,sDAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,wwCAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,0CAA2CiF,GAAI,CAAC,EAAE,IACzDtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,+BAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,yyBAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,iCAAkCiF,GAAI,CAAC,EAAE,IAChDtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,0CAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,woBAIAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,62DAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,40BAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,2xBAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,4bAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,mPAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,2aAGAtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,giCAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,gBAAiBiF,GAAI,CAAC,EAAE,IAC/BtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,qBAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,mzBAKFtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK5D,GAAI,gBAAiBiF,GAAI,CAAC,EAAE,IAC/BtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY77G,MAAO,YAAa4E,UAAW,OAAQ7E,WAAY,EAAGuoG,WAAY,UAAWxoG,SAAU,CAAC,EAAE,IAAtG,qBAGAiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMqB,GAAI,GAAV,62DASVtB,EAAA1E,EAAAC,cAACwvG,EAAA,EAAD,cAtVUrvG,6BCDHk/J,EAAA,CACbz6I,YAAa,CAAC,OAAQ,QAEtBpJ,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCmJ,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACP3W,MAAO,KACP4W,KAAM,KAERvc,MAAO,CACLwc,MAAO,2CACPvc,UAAW,qCACXwc,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnClmB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BomB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAqB,qBAClCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPzgB,SAAU,IAEZvC,OAAQ,CACNijB,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKpK,KAAK,GAC1B0K,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXjL,UAAW,UACXkL,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIPpmB,KAAM,UACNJ,OAAQ,UACR0mB,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACdjP,gBAAiB,UACjBkP,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVzlB,QAAS,UACTmiB,QAAS,UACTxH,OAAQ,UACRzb,KAAM,UACNymB,QAAS,UACTC,QAAS,UACTtR,OAAQ,UACR/O,OAAQ,UACRsgB,OAAQ,UACRC,UAAW,UACXC,WAAY,UACZK,YAAa,UACbC,WAAY,UACZC,WAAY,UACZC,aAAc,UACdN,eAAgB,UAChBC,eAAgB,UAChBF,gBAAiB,UACjBQ,aAAc,UACdC,WAAY,UACZN,gBAAiB,iCACjBxb,aAAc,CACZ4D,OAAQ,CACNmY,KAAM,UACNC,KAAM,UACN41I,KAAM,UACN31I,MAAO,UACPjM,OAAQ,UACRkM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnB1M,SAAU,CACRgM,KAAM,UACNC,KAAM,UACN41I,KAAM,UACN31I,MAAO,UACPjM,OAAQ,UACRkM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBxc,OAAQ,CACNG,UAAW,UACXE,QAAS,UACTD,OAAQ,YAGZqc,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZtE,KAAM,CACJvkB,MAAO,UACP8H,YAAa,UACbuC,gBAAiB,WAEnB2e,QAAS,CACPhpB,MAAO8oB,YAAM,GAAK9C,IAAMzB,MACxBla,gBAAiB0e,YAAK,GAAK/C,IAAMzB,MACjCzc,YAAake,IAAMzB,MAErB0E,QAAS,CACPjpB,MAAO8oB,YAAM,GAAKI,IAAO3E,MACzBla,gBAAiB0e,YAAK,GAAKG,IAAO3E,MAClCzc,YAAaohB,IAAO3E,MAEtB4E,OAAQ,CACNnpB,MAAO8oB,YAAM,GAAKM,IAAI7E,MACtBla,gBAAiB0e,YAAK,GAAKK,IAAI7E,MAC/Bzc,YAAashB,IAAI7E,MAEnB8E,KAAM,CACJrpB,MAAO,UACP8H,YAAa,UACbuC,gBAAiB,YAGrBif,QAAS,CACPjF,QAAS,CACPrkB,MAAOskB,IAAK1kB,KACZyK,gBAAiBia,IAAKC,KAEtBgF,eAAgBjF,IAAKC,KACrBiF,mBAAoBlF,IAAK1kB,MAE3B6pB,OAAQ,CACNzpB,MAAOmlB,IAAWD,MAClBsE,mBAAoBrE,IAAWD,OAEjC8D,QAAS,CACPO,eAAgBvD,IAAMzB,KACtBiF,mBAAoBxD,IAAMpmB,MAE5BupB,OAAQ,CACNI,eAAgBH,IAAI7E,KACpBiF,mBAAoBJ,IAAIxpB,OAG5B8pB,YAAa,CACXC,MAAO,CACL7pB,SAAU,UACVL,OAAQ,OACRmE,SAAU,OACVgmB,QAAS,UAEXC,OAAQ,CACN/pB,SAAU,OACVL,OAAQ,OACRmE,SAAU,QAEZkmB,MAAO,CACLhqB,SAAU,SACVL,OAAQ,OACRmE,SAAU,OACVH,aAAc,+KChPCo6J,cAEnB,SAAAA,EAAYC,GAAQ,IAAA9+J,EAAApB,OAAAoxB,EAAA,EAAApxB,CAAArB,KAAAshK,GAAA,IACLE,EAA+BD,EAApCE,IAAY30D,EAAwBy0D,EAAxBz0D,WAAe40D,EADjBrgK,OAAAsgK,EAAA,EAAAtgK,CAC0BkgK,EAD1B,6BAElB9+J,EAAApB,OAAAm2G,EAAA,EAAAn2G,CAAArB,KAAAqB,OAAAo2G,EAAA,EAAAp2G,CAAAigK,GAAA7pH,KAAAz3C,KAAM0hK,KAED15B,MAAQ,KACbvlI,EAAK++J,MAAQA,EACb/+J,EAAKqqG,WAAaA,EANArqG,6LAUbzC,KAAKgoI,QACRhoI,KAAKgoI,MAAQ,IAAIhoI,KAAKwhK,MAAM,CAC1BI,eAAgB,2BAGd5hK,KAAKgoI,MAAM65B,8BACX7hK,KAAKgoI,MAAM85B,4RAIV,IAAInhJ,QAAJ,eAAAtO,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAa,SAAAsO,EAAOC,EAASC,GAAhB,OAAA6R,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,OAClBgO,EAAQ1gB,EAAK2nI,MAAM5lH,UADD,wBAAAnB,EAAAhN,SAAA6M,EAAA9gB,SAAb,gBAAAqhB,EAAAC,GAAA,OAAAjP,EAAA8B,MAAAnU,KAAAoU,YAAA,kLAKQgO,yFACQpiB,KAAKgoI,MAAM+5B,0BAA5B13G,0CAESrqD,KAAKgoI,MAAMg6B,iBAAiB,CACvCC,SAAS53G,EAAS43G,SAClBC,WAAW73G,EAAS63G,qFAGjB,0QAIDliK,KAAKgoI,MAAMm6B,iJAGLjxI,GACZ7vB,OAAAugB,EAAA,EAAAvgB,QAAAo2G,EAAA,EAAAp2G,CAAAigK,EAAAltE,WAAA,0BAAAp0F,MAAAy3C,KAAAz3C,KAA8B,CAAEoiK,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYf,GAAQ,IAAA9+J,EAAApB,OAAAoxB,EAAA,EAAApxB,CAAArB,KAAAsiK,GAAA,IACLC,EAAgChB,EAArCE,IAAgBvwI,EAAqBqwI,EAArBrwI,QAAYwwI,EADlBrgK,OAAAsgK,EAAA,EAAAtgK,CAC2BkgK,EAD3B,0BAElB9+J,EAAApB,OAAAm2G,EAAA,EAAAn2G,CAAArB,KAAAqB,OAAAo2G,EAAA,EAAAp2G,CAAAihK,GAAA7qH,KAAAz3C,KAAM0hK,KAED35B,UAAY,KACjBtlI,EAAK8/J,UAAYA,EACjB9/J,EAAKyuB,QAAUA,EANGzuB,mMAUbzC,KAAK+nI,YACR/nI,KAAK+nI,UAAY,IAAI/nI,KAAKuiK,UAAUviK,KAAKkxB,mBAEpBlxB,KAAKwiK,0BAAtBpgJ,0CAEEA,EAASqgJ,yCACRrgJ,uRAKF,IAAIzB,QAAJ,eAAAtO,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAa,SAAAsO,EAAOC,EAASC,GAAhB,OAAA6R,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,OAClBgO,EAAQ1gB,EAAK0nI,UAAUy6B,eADL,wBAAAvhJ,EAAAhN,SAAA6M,EAAA9gB,SAAb,gBAAAqhB,EAAAC,GAAA,OAAAjP,EAAA8B,MAAAnU,KAAAoU,YAAA,kLAKQgO,6EACXA,kCACqBA,EAASsgJ,0BAA1BC,YACUA,EAASphK,gDAChBohK,EAAS,oCAGb,yQAIgB3iK,KAAKwiK,0BAAtBpgJ,0CAEEA,EAASwgJ,0CACRxgJ,2IAIG8O,GACZlxB,KAAK6iK,YAAY,CACfpB,IAAKzhK,KAAKuiK,UACVrxI,YAEF7vB,OAAAugB,EAAA,EAAAvgB,QAAAo2G,EAAA,EAAAp2G,CAAAihK,EAAAluE,WAAA,0BAAAp0F,MAAAy3C,KAAAz3C,KAA8B,CAAEoiK,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAAtgK,EAAA,OAAApB,OAAAoxB,EAAA,EAAApxB,CAAArB,KAAA8iK,IAC5BrgK,EAAApB,OAAAm2G,EAAA,EAAAn2G,CAAArB,KAAAqB,OAAAo2G,EAAA,EAAAp2G,CAAAyhK,GAAA3uJ,MAAAnU,KAASoU,aACJ4uJ,YAAa,EAClBvgK,EAAKsgK,iBAAmBA,EACxBtgK,EAAK2f,SAAW,IAAI3f,EAAKsgK,iBACzBtgK,EAAKwgK,eALuBxgK,yLASvBzC,KAAKoiB,WACRpiB,KAAKoiB,SAAW,IAAIpiB,KAAK+iK,mBAGvB/iK,KAAKoiB,yCACDpiB,KAAKoiB,SAAS8gJ,2CACbljK,KAAKoiB,6PAKVpiB,KAAKoiB,yCACMpiB,KAAKoiB,SAAS+gJ,ySAKzBnjK,KAAKoiB,yCACMpiB,KAAKoiB,SAASogJ,0SAKzBxiK,KAAKoiB,yCACMpiB,KAAKoiB,SAASghJ,ySAKzBpjK,KAAKoiB,yCACMpiB,KAAKoiB,SAASg5C,gTAKzBp7D,KAAKoiB,yCACiBpiB,KAAKoiB,SAASihJ,0BAAhCA,SACNrjK,KAAKgjK,YAAa,oBACXK,mPAKLrjK,KAAKoiB,gCACPpiB,KAAKoiB,SAASkhJ,+BACPtjK,KAAKoiB,mHAxD+BigJ,KCA5BkB,cAEnB,SAAAA,EAAYhC,GAAQ,IAAA9+J,EAAApB,OAAAoxB,EAAA,EAAApxB,CAAArB,KAAAujK,GAAA,IACLC,EAAiEjC,EAAtEE,IAAiB57B,EAAqD07B,EAArD17B,QAAS49B,EAA4ClC,EAA5CkC,UAAWrmI,EAAiCmkI,EAAjCnkI,QAASsmI,EAAwBnC,EAAxBmC,WAAehC,EADnDrgK,OAAAsgK,EAAA,EAAAtgK,CAC4DkgK,EAD5D,6DAElB9+J,EAAApB,OAAAm2G,EAAA,EAAAn2G,CAAArB,KAAAqB,OAAAo2G,EAAA,EAAAp2G,CAAAkiK,GAAA9rH,KAAAz3C,KAAM0hK,KAEDt/I,SAAW,KAChB3f,EAAKkhK,WAAa,KAClBlhK,EAAKojI,QAAUA,EACfpjI,EAAK26B,QAAUA,EACf36B,EAAKghK,UAAYA,EACjBhhK,EAAKihK,WAAaA,EAClBjhK,EAAK+gK,WAAaA,EAVA/gK,+LAcbzC,KAAK2jK,aACR3jK,KAAK2jK,WAAa,IAAI3jK,KAAKwjK,WAAW,CACpCI,UAAU,EACV/9B,QAAS7lI,KAAK6lI,QACd49B,UAAWzjK,KAAKyjK,UAChBC,WAAY1jK,KAAK0jK,gBAIfthJ,EAAWpiB,KAAKwiK,+CAEdpgJ,EAASqgJ,yCACRrgJ,2IAQT,OAHKpiB,KAAKoiB,WACRpiB,KAAKoiB,SAAWpiB,KAAK2jK,WAAWE,iBAAiB7jK,KAAKyjK,UAAWzjK,KAAKo9B,UAEjEp9B,KAAKoiB,oFAGGA,6EACXA,kCAEqBA,EAASoJ,KAAK,mCAA/Bm3I,YACUA,EAASphK,gDAChBohK,EAAS,oCAGb,8PAIDvgJ,EAAWpiB,KAAKwiK,sCAEpBxiK,KAAK2jK,WAAWG,sBACV1hJ,EAAS2hJ,wCACR3hJ,2IAIG8O,GACZlxB,KAAK6iK,YAAY,CACf3xI,UACAuwI,IAAKzhK,KAAKwjK,WACV39B,QAAS7lI,KAAK6lI,QACdzoG,QAASp9B,KAAKo9B,QACdqmI,UAAWzjK,KAAKyjK,UAChBC,WAAY1jK,KAAK0jK,aAEnBriK,OAAAugB,EAAA,EAAAvgB,QAAAo2G,EAAA,EAAAp2G,CAAAkiK,EAAAnvE,WAAA,0BAAAp0F,MAAAy3C,KAAAz3C,KAA8B,CAAEoiK,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAYzC,GAAQ,IAAA9+J,EAAApB,OAAAoxB,EAAA,EAAApxB,CAAArB,KAAAgkK,GAAA,IACLC,EAA6D1C,EAAlEE,IAA4CyC,GAAsB3C,EAAtChzH,eAAsCgzH,EAAtB2C,UAAaxC,EAD/CrgK,OAAAsgK,EAAA,EAAAtgK,CACwDkgK,EADxD,4CAElB9+J,EAAApB,OAAAm2G,EAAA,EAAAn2G,CAAArB,KAAAqB,OAAAo2G,EAAA,EAAAp2G,CAAA2iK,GAAAvsH,KAAAz3C,KAAM0hK,KAEDt/I,SAAW,KAChB3f,EAAKwhK,sBAAwBA,EAC7BxhK,EAAKyhK,SAAWA,EANEzhK,yLAUbzC,KAAKoiB,WACRpiB,KAAKoiB,SAAW,IAAIpiB,KAAKikK,sBAAsB,CAC7CC,SAASlkK,KAAKkkK,aAIdlkK,KAAKoiB,yCACDpiB,KAAKoiB,SAASqgJ,yCACbziK,KAAKoiB,mRAKPpiB,KAAKoiB,0PAIRpiB,KAAKoiB,gCACPpiB,KAAKoiB,SAAS2hJ,0BACP/jK,KAAKoiB,mHA/BkCigJ,KCelD8B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIz/H,GAAM4gG,8/CAEN8+B,GAAgB1/H,GAAI2/H,gCACpBC,GAAiB5/H,GAAI6/H,8BACrBt2H,GAAiB9hC,IAAcykB,QAAQ4R,gBACvCgiI,GAAkB9/H,GAAI+/H,gCACtBC,GAAehgI,GAAIigI,yBACnBC,GAAgBlgI,GAAImgI,yBAEpBC,GAAuB,GAE7B/jK,OAAOC,KAAKmL,IAAcykB,QAAQiS,UAAU2uG,OAAO7zG,KAAKz8B,QAAQ,SAAC+3B,EAAUx1B,GACzEw1B,EAAY/lB,SAAS+lB,GACrB6rI,GAAqB7rI,GAAa9sB,IAAcykB,QAAQiS,UAAU2uG,OAAO7zG,IAAI1E,GAAWyL,GAAI+sG,uBAG9F,IAAMszB,GAAW,IAAIlB,GAAkB,CACrCzlI,kBAAmBjyB,IAAcykB,QAAQ0gH,kBAGrC0zB,GAAS,IAAIjB,GAAqB,CACtCkB,YAAaH,GAAqB72H,MAI9Bi3H,GAAS,IAAIlB,GAAgB,CACjC7C,IAAKgE,IACLL,wBACA72H,kBACAm2H,iBACAE,oBAGIc,GAAS,IAAInB,GAAgB,CACjCa,wBACA72H,oBAGIo3H,GAAgB,IAAI3B,GAAuB,CAC/Cz1H,kBACA62H,wBACA3D,IAAKwC,IACLC,SAASl/H,GAAI+sG,qBACb6zB,OAAQ,qCAGJC,GAAY,IAAIrB,GAAmB,CACvC/C,IAAKqE,IACLjgH,OAAQi/G,GACRiB,sBAAsB,IAGlBC,GAAS,IAAIvB,GAAgB,CACjChD,IAAKwE,IACLC,OAAQlB,GACR9zI,QAASg0I,KAGL3C,GAAY,IAAID,EAAmB,CACvCb,IAAK0E,IACLj1I,QAASzkB,IAAcykB,QAAQg4B,kBAAkB3a,IAAgB9mC,KAAK0E,gBAGlEw3J,GAAa,IAAIJ,EAAoB,CACzC9B,IAAK+B,IACLI,UAAU,EACVxmI,QAASmR,GACTs3F,QAASp5H,IAAco5H,QACvB49B,UAAW2B,GAAqB72H,IAChCm1H,WAAY,8CAGRlC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK2E,IACLt5D,WAAW,CACTu5D,SAAU,aACVC,eAAe,EACfp1I,QAAS,CACPq1I,KAAM95J,IAAcykB,QAAQg4B,kBAAkB3a,IAAgB9mC,KAAK0E,cACnEixB,QAASmR,GACT4kG,YAAa1mI,IAAcykB,QAAQg4B,kBAAkB3a,IAAgB9mC,KAAK0E,eAE5Eq6J,iBAAiB,KAMNr/B,GAAA,CACbk+B,YACAC,UACAK,iBACA/9B,OANa,IAAIk7B,EAAoBC,qBAOrCY,cACAkC,aACAG,UACAzD,aACAf,SACAgE,UACAE,mFCtFae,oLAxBX,OACEjgK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKpC,MAVa,CAClB6I,SAAU,QACVtB,OAAQ,EACR5D,KAAM,EACN2D,MAAO,EACP1K,MAAO,OACPkM,OAAQ,MAIiBW,gBAAiB,uBAAwBrM,EAAG,GACnE+E,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKhF,EAAG,GACN+E,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,UAAUhE,MAAM,OAAO2C,KAAK,QAEzCI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,UACnBqF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMjD,WAAY,QAAlB,0CAGAgD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,+CAC0C,IACxCD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWthB,MAAO,CAAE0J,cAAe,eAAnC,IACI/N,KAAKE,MAAMgxB,QAAQyI,QAAQlyB,KAD/B,KAEa,IAJf,sEArBqB+pG,IAAMtvG,WCexBwkK,oLAZX,OACElgK,EAAA1E,EAAAC,cAAA,YAC8C,IAA1C/B,KAAKE,MAAMgxB,QAAQy1I,oBAAgC3mK,KAAKE,MAAMghB,MAC9D1a,EAAA1E,EAAAC,cAAC6kK,GAAD,CACE11I,QAASlxB,KAAKE,MAAMgxB,kBANNsgF,IAAMtvG,4FCiIjB2kK,8MA/HbC,cAAgB,WACd,OACEtgK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CACE39J,SAAU,EACVC,WAAY,EACZuoG,WAAY,UACZz9F,GAAI,GAJN,uCASCy4J,KAAWC,iBACVxgK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,8GAE6C,IAC3C9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,qBACL9V,MAAM,oBACN4V,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,iCACL9V,MAAM,gBACN4V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,+BACL9V,MAAM,kBACN4V,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,qGAE0C,IACxC9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,8BACL9V,MAAM,yBACN4V,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,2BACL9V,MAAM,2BACN4V,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,iCACL9V,MAAM,yBACN4V,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,iCACL9V,MAAM,0BACN4V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWs8F,MAAI,GAAf,0BADF,2DAE8C,IAC5Cz7G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,qBACL9V,MAAM,oBACN4V,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,iCACL9V,MAAM,gBACN4V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,+BACL9V,MAAM,kBACN4V,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACExf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAWpxG,KAAKE,MAAM2tG,YAC/BrnG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACGtxG,KAAK8mK,0BAxHet1D,IAAMtvG,WCiDxB+kK,oLAxCX,OACEzgK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhF,EAAG,EAAG6C,SAAU,SACpBkC,EAAA1E,EAAAC,cAAC0E,EAAA,EAAOtC,KAAR,CACE+iK,UAAQ,EACRl6J,KAAM,QACNvJ,MAAO,YACPyJ,SAAU,WACVxB,IAAK,EACLC,MAAO,EACPuR,GAAI,EACJrP,GAAI,EACJlK,QAAS3D,KAAKE,MAAM2tG,aAGtBrnG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUC,eAAgB,iBAC7CoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUkN,GAAI,GAClC9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,UAAUhE,MAAM,OAAO2C,KAAK,QAGzCI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CAAY5yJ,GAAI,GAAhB,uBAEA9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,4GAKA9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,SAArB,qCAjCcorG,IAAMtvG,WC0CnBklK,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApB9iJ,OAAO0e,SAChBokI,EAAoD,qBAA/B9iJ,OAAO0e,SAASqkI,WACL,qBAAhB/iJ,OAAOrD,OACvBmmJ,EAAgE,qBAA3C9iJ,OAAOrD,KAAKoc,gBAAgBgqI,YAA8B/iJ,OAAOrD,KAAKoc,gBAAgBgqI,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBhjJ,OAAOrD,MAA+D,qBAAhCqD,OAAOrD,KAAKoc,kBACL,qBAAxC/Y,OAAOrD,KAAKoc,gBAAgBkqI,SAA2BjjJ,OAAOrD,KAAKoc,gBAAgBkqI,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBljJ,OAAOrD,MAA+D,qBAAhCqD,OAAOrD,KAAKoc,kBACI,qBAAjD/Y,OAAOrD,KAAKoc,gBAAgBmqI,kBAAoCljJ,OAAOrD,KAAKoc,gBAAgBmqI,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1BnjJ,OAAOojJ,eAM9B,MAJ+B,qBAApBpjJ,OAAO0e,WAChBykI,EAAgD,qBAA7BnjJ,OAAO0e,SAAS2kI,UAA4BrjJ,OAAO0e,SAAS2kI,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAc99B,KAAK0U,UAAUC,YAGtCopB,UAAW,WACT,IAAMA,IAAY,WAAW/9B,KAAK0U,UAAUC,WAE5C,OAAOopB,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmBh+B,KAAK0U,UAAUC,YAAen6H,OAAOyjJ,UAI1D,OAAOD,IC0BIE,8MA7DbnB,cAAgB,WACd,OACEtgK,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CAAY5yJ,GAAI,GAAhB,iBACiB7L,EAAKvC,MAAMgxB,QAAQsI,SAAS/xB,KAD7C,cAC8D,IAC3D2/J,GAAYC,cAAZ,uBAGH7gK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,iCACiC,IAC/B9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWthB,MAAO,CAAE0J,cAAe,eAChCtL,EAAKvC,MAAMgxB,QAAQsI,SAAS/xB,MAClB,IAJf,wCAKmC,IACjCjB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWthB,MAAO,CAAE0J,cAAe,eAChC,IACAtL,EAAKvC,MAAMgxB,QAAQyI,QAAQlyB,MACjB,IATf,YAaC2/J,GAAYC,gBAAkBa,KAAYlB,iBACzCxgK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKynB,GAAI,UAAWzsB,EAAG,EAAG6E,QAAS,CAAC,OAAQ,UAC1CE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyG,SAAU,WAAYjM,MAAO,OAChCuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQL,KAAM,UAGlBI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMjD,WAAY,GAAlB,oCACAgD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMjD,WAAY,GAAlB,sCAMJ,KAEJgD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKH,QAAS,CAAC,QAAS,SACtBE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQ9C,QAASlB,EAAKvC,MAAM2tG,WAAY5sG,MAAO,GAA/C,iFASN,OACEuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAWpxG,KAAKE,MAAM2tG,YAC/BrnG,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACGlrG,KAAK8mK,0BAtDct1D,IAAMtvG,kDCiDvBimK,OA3Df,SAA6BjoK,GAC3B,OACEsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAO,6CAA8C+xG,SAAU,wDAAyDkmD,UAAW,0EACrJ5hK,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChBkN,GAAI,CAAC,EAAG,IACR9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,GAAIyF,GAAI,GACtDrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,cACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,oBACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,UAA9B,6FAKF7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,GAAIyF,GAAI,GACtDrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,qBACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,0BACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,UAA9B,6DAIF7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,GAAIyF,GAAI,GACtDrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,iBACLhE,MAAM,UACN2C,KAAK,QAEPI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,gBACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,wBACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,UAA9B,qGC1CNua,GAAY,WAAc,QAAA8V,EAAAtkB,UAAA7S,OAAVrB,EAAU,IAAAy4B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV14B,EAAU04B,GAAAxkB,UAAAwkB,IAEjB,SAASyvI,GAAsBnoK,GAC5C,IAAMooK,EAAUC,2BAEXD,EAAQ58D,QAAW48D,EAAQzoJ,MAErByoJ,EAAQzoJ,MACjB+C,GAAU,gBAAiB0lJ,GAE3B1lJ,GAAU,kBAAmB0lJ,GAJ7B1lJ,GAAU,kBAAmB0lJ,GAO/B,IAAME,EAAY,eAAAn2J,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAA6N,EAAO67F,EAAcz0G,GAArB,IAAAghK,EAAA,OAAA51I,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,cACf01J,EAAmC,aAAlBvsD,EAA+Bz0G,EAAOy0G,EACvDn4F,eACFA,aAAaktC,QAAQ,iBAAkBw3G,GACvC1kJ,aAAaktC,QAAQ,gBAAiBirD,IAGpCh8G,EAAMsoK,cAA8C,oBAAvBtoK,EAAMsoK,cACrCtoK,EAAMsoK,aAAatsD,EAAcusD,GAIK,oBAA7BvoK,EAAMwoK,oBACfxoK,EAAMwoK,qBAbWnoJ,EAAAgB,OAAA,SAgBZ26F,GAhBY,wBAAA37F,EAAAtM,SAAAoM,EAAArgB,SAAH,gBAAAqhB,EAAAC,GAAA,OAAAjP,EAAA8B,MAAAnU,KAAAoU,YAAA,GAoBZu0J,EAAc,eAAApzJ,EAAAlU,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAsO,IAAA,OAAA+R,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,OACrBu1J,EAAQK,iBACJzoK,EAAMsoK,cAA8C,oBAAvBtoK,EAAMsoK,cACrCtoK,EAAMsoK,aAAa,SAAS,UAHT,wBAAAvnJ,EAAAhN,SAAA6M,EAAA9gB,SAAH,yBAAAuV,EAAApB,MAAAnU,KAAAoU,YAAA,GAUdyzJ,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBkB,EAAaxB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BsB,IAAiB1hC,GAAWS,OAAOxlH,SAAS0mJ,KAC5CrB,EAAmBL,GAAYK,mBAC/BsB,EAAwBH,GAAcf,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoB9oK,EAAM8oK,kBAC1BC,EAAe/oK,EAAM+oK,aAEvB9hC,GAAW6+B,SACTiD,GACF9hC,GAAW6+B,OAAO7pJ,QAAUgrH,GAAW6+B,OAAO7pJ,SAAW,GACzDgrH,GAAW6+B,OAAO7pJ,QAAQ+sJ,uBAAwB,IAElD/hC,GAAW6+B,OAAO7pJ,QAAUgrH,GAAW6+B,OAAO7pJ,SAAW,GACzDgrH,GAAW6+B,OAAO7pJ,QAAQ+sJ,uBAAwB,IAItD,IAAIC,EAAsB9nK,OAAOC,KAAK6lI,IAAYl0H,OAAO,SAAA7D,GAAC,MAAU,WAANA,IAO9D,GALI45J,IACFG,EAAsBA,EAAoBl2J,OAAO,SAAA0kB,GAAC,OAA4F,IAAxFqxI,EAAkBllK,IAAI,SAAC+F,GAAQ,OAAOA,EAAEsC,gBAAkB6R,QAAQ2Z,EAAExrB,kBAIxH08J,EAAa,CACf,IAAMO,EAAgBD,EAAoBnrJ,QAAQ,YAElDmrJ,EAAoBE,OAAOD,EAAc,GAEzC,IAAME,EAAcH,EAAoBnrJ,QAAQ,UAChDmrJ,EAAoBE,OAAOC,EAAY,GAEvCH,EAAoB5qG,QAAQ,cACvB,CACL,IAAM+qG,EAAcH,EAAoBnrJ,QAAQ,UAEhDmrJ,EAAoBE,OAAOC,EAAY,GAGzC,IAAMv8I,EAAUo8I,EAAoBrlK,IAAK,SAACo4G,EAAcn4G,GACtD,OAAQm4G,GACN,IAAK,WACH,GAAI6sD,EAAuB,CACzB,IAAIthK,EAAO,KACPmhK,EACFnhK,EAAO,WACEogK,EACTpgK,EAAO,QACEmgK,EACTngK,EAAO,SACEggK,EACThgK,EAAO,WACE8/J,IACT9/J,EAAO,eAGT,IAAM8hK,EAAgB98J,IAAc06H,WAAW1/H,EAAK0E,eACpD,GAAIo9J,GAAiBA,EAAcr1I,QAAQ,CACzC,IAAMs1I,EAAaD,EAAcv8J,KAAOu8J,EAAcv8J,KAAnC,GAAArI,OAA6C8C,EAAK0E,cAAlD,QACnB,OACE3F,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACP8D,IAAG,UAAAJ,OAAY8C,GACfrG,eAAgB,gBAChBiD,MAAO,CACLuJ,KAAK,UAEPzM,cAAe,CAAC,SAAS,QAEzBqF,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETotG,QAAS5oG,EACT7D,UAAU,EACV3C,MAAO,CAAC,EAAE,KACVie,WAAY,CAACje,MAAM,OAAOiC,OAAO,QACjCwtG,SAAQ,qBAAA/rG,OAAuB6kK,GAC/B1mK,YAAWzB,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAC,IAAA,OAAAogB,EAAA/wB,EAAA8Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBy1J,EAAatsD,EAAcz0G,GAA7C,cAAAoL,EAAA0O,OAAA,SAAA1O,EAAAgD,MAAA,wBAAAhD,EAAAoB,SAAAxB,EAAAzS,SACd8hI,WAAaynC,GAAiBA,EAAcznC,WAAaynC,EAAcznC,WAA1D,iBAAAn9H,OAAwF8C,KAEvGjB,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETW,UAAU,EACV3C,MAAO,CAAC,EAAE,KACVovG,QAAS,gBACTK,SAAQ,wBACRoxB,WAAY,4BACZ5iH,WAAY,CAACje,MAAM,OAAOiC,OAAO,QACjCJ,YAAc,SAAAkC,GAAC,OAAI9E,EAAMqkD,kBAAiB,OAKlD,OAAO,KAEP,IAAMglH,EAAgB98J,IAAc06H,WAAWjrB,EAAc/vG,eAC7D,OACE3F,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETW,UAAU,EACVysG,QAAS,iBACTtrG,IAAG,UAAAJ,OAAYu3G,GACfh9F,WAAY,CAACje,MAAM,OAAOiC,OAAO,QACjCwtG,SAAQ,uCACR5tG,YAAWzB,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAgD,IAAA,OAAAqd,EAAA/wB,EAAA8Q,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAAkBy1J,EAAatsD,GAA/B,cAAAxmG,EAAA6L,OAAA,SAAA7L,EAAAG,MAAA,wBAAAH,EAAAzB,SAAAuB,EAAAxV,SACd8hI,WAAaynC,GAAiBA,EAAcznC,WAAaynC,EAAcznC,WAA1D,iCACb2nC,YAAcvpK,EAAM0D,SAAW,CAACxC,eAAe,aAAawM,KAAK,UAAY,CAACxM,eAAe,aAAawM,KAAK,WAIvH,QACE,IAAM27J,EAAgB98J,IAAc06H,WAAWjrB,EAAc/vG,eAC7D,GAAIo9J,GAAiBA,EAAcr1I,QAAQ,CACzC,IAAMs1I,EAAaD,EAAc7hC,UAAY6hC,EAAc7hC,UAAa6hC,EAAcv8J,KAAOu8J,EAAcv8J,KAAnC,GAAArI,OAA6Cu3G,EAAc/vG,cAA3D,QAEpEkkG,EAAUk5D,EAAc9hK,KAAO8hK,EAAc9hK,KAAOy0G,EACxD,OACE11G,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETW,UAAU,EACVysG,QAASA,EACTtrG,IAAG,UAAAJ,OAAYu3G,GACfxL,SAAQ,qBAAA/rG,OAAuB6kK,GAC/BtqJ,WAAY,CAACje,MAAM,OAAOiC,OAAO,QACjCJ,YAAWzB,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAsP,IAAA,OAAA+Q,EAAA/wB,EAAA8Q,KAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,cAAAiP,EAAAjP,KAAA,EAAkBy1J,EAAatsD,GAA/B,cAAAl6F,EAAAT,OAAA,SAAAS,EAAAnM,MAAA,wBAAAmM,EAAA/N,SAAA6N,EAAA9hB,SACd8hI,WAAaynC,GAAiBA,EAAcznC,WAAaynC,EAAcznC,WAA1D,iBAAAn9H,OAAwFu3G,GACrGutD,YAAcvpK,EAAM0D,SAAW,CAACxC,eAAe,aAAawM,KAAK,UAAY,CAACxM,eAAe,aAAawM,KAAK,WAIrH,OAAO,QAIb,OACEpH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKxF,MAAO,CAAC,IACXuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUD,WAAY,UACxConK,EAAQzoJ,OACPrZ,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKhF,EAAN,CAAQ4G,UAAU,UAAlB,+DAEE7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMwf,KAAK,uBAAuBF,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMExf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMwf,KAAK,8BAA8BF,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBAsiJ,EAAQ58D,QAAW48D,EAAQzoJ,OAASyoJ,EAAQpsD,gBAA6C,WAA1BosD,EAAQpsD,eACvE11G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CACElmK,MAAO,CAAC,IACRyF,UAAW,CAACC,KAAO4nB,QACnBnmB,GAAI,CAAC,EAAG,GACRhC,KAAM,QACNrB,IAAK,QACLpB,QAAOtC,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAE,SAAAsQ,IAAA,OAAA+P,EAAA/wB,EAAA8Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EAAkB41J,IAAlB,cAAA1lJ,EAAA1B,OAAA,SAAA0B,EAAApN,MAAA,wBAAAoN,EAAAhP,SAAA6O,EAAA9iB,UAERsoK,EAAQ58D,OAAS,uBAAyB,UAIjDllG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgqG,SAAU,OACVtvG,cAAe,MACfC,eAAgB,iBAEf2rB,kBCkVM28I,8MApiBbvkK,MAAQ,CACNq9H,WAAU,EACVmnC,YAAW,EACXnlH,cAAc,GACdolH,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBlqK,cAAgB,OAShBmqK,iBAAmB,SAAAllK,GACjBA,EAAEoJ,iBAEF3L,EAAKkD,SAAS,CACZgkK,YAAalnK,EAAK0C,MAAMwkK,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARI7lJ,eACF6lJ,EAAiB7lJ,aAAaC,QAAQ,oBAEpCvhB,EAAKkD,SAAS,CACZikK,mBAICA,KAGT/3J,kBAAoB,WAClBpP,EAAKrC,YACLqC,EAAK0nK,sBAGPzyD,mBAAqB,WACnBj1G,EAAKrC,eAGP2tG,WAAa,SAAA/oG,GACXvC,EAAKkD,SAAS,CACZgkK,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBzB,mDAAe,SAAAnoJ,EAAO67F,EAAcz0G,GAArB,IAAAghK,EAAA,OAAA51I,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,cACT01J,EAAmC,aAAlBvsD,EAA+Bz0G,EAAOy0G,EAG3Dz5G,EAAK1C,cAAcwwB,yBAAyB,CAC1CN,cAAc,UACdC,WAAWu4I,EACXr4I,YAAY,kBAGV3tB,EAAKvC,MAAMsoK,cAAmD,oBAA5B/lK,EAAKvC,MAAMsoK,cAC/C/lK,EAAKvC,MAAMsoK,aAAatsD,EAAcusD,GAIxChmK,EAAKkD,SAAS,CACZskK,oBAAqB/tD,IAGvBz5G,EAAK2nK,iBAnBQ7pJ,EAAAgB,OAAA,SAqBN26F,GArBM,wBAAA37F,EAAAtM,SAAAoM,EAAArgB,mEA0BfoqK,eAAiB,WACf,IAAML,EAAqBtnK,EAAK0C,MAAM4kK,mBAAqBtnK,EAAK0C,MAAM4kK,mBAAmB,EAAI,EACxFA,EAGH1mJ,WAAW,WAAQ5gB,EAAK2nK,kBAAmB,KAF3C3nK,EAAKorG,aAIPprG,EAAKkD,SAAS,CACZokK,0BAIJM,gBAAkB,SAACrlK,EAAEslK,GACnBtlK,EAAEoJ,iBACF3L,EAAKkD,SAAS,CACZskK,oBAAqBK,OAIzBz8D,WAAa,WAEXprG,EAAKsrG,aAELtrG,EAAK0nK,mBAEL1nK,EAAKvC,MAAM2tG,gBAGb08D,kBAAoB,SAACvlK,EAAE4kK,GACrB5kK,EAAEoJ,iBACF3L,EAAKkD,SAAS,CACZikK,mBAGmB,iBAAjBA,IAEFnnK,EAAK1C,cAAcwwB,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,cACbF,WAAY05I,IAGdnnK,EAAK1C,cAAcqkB,gBAAgB,iBAAiBwlJ,OAIxDY,qBAAuB,WAErB,OADqB/nK,EAAK1C,cAAc4+B,aAAal8B,EAAK0C,MAAMq/C,gBAE9D/hD,EAAK8hD,kBAAiB,GACtB9hD,EAAK1C,cAAcwkD,iBAAiB9hD,EAAK0C,MAAMq/C,eAC/C/hD,EAAK+lK,aAAa,SAAS,UAC3BnlJ,WAAW,WAAQ5gB,EAAKorG,cAAe,MAChC,GAEAprG,EAAKkD,SAAS,CACnBqkK,oBAAmB,OAKzBS,oBAAsB,SAACzlK,GACrB,IACMw/C,EAAgBx/C,EAAE+gB,OAAOhc,MACzBy4H,EAAY//H,EAAK1C,cAAc4+B,aAAa6lB,GAClD/hD,EAAKkD,SAAS,CACZ68H,YACAh+E,gBACAwlH,oBANyB,OAU7BzlH,iBAAmB,SAACulH,GAClBrnK,EAAKkD,SAAS,CACZmkK,wBAIJY,mBAAqB,WAEnB,IAAMC,EACJnkK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM4B,UAAW,SAAU9E,SAAU,EAAGuE,GAAI,CAAC,EAAE,IAA/C,kCAAkFtB,EAAA1E,EAAAC,cAAC6oK,GAAA,EAAD,CAAYhwI,GAAG,oBAAoBn3B,MAAO,UAAWY,MAAO,CAACZ,MAAMhB,EAAKvC,MAAM0E,MAAMC,OAAOijB,QAAQ4sG,eAAe,aAAc3uG,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhF6kJ,EAA8C,QAA9BpoK,EAAK0C,MAAMykK,eAC3BkB,EAAsD,WAA9BroK,EAAK0C,MAAMykK,eAGzC,MAFuD,iBAA9BnnK,EAAK0C,MAAMykK,eAIhCpjK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAO,qBAAsB+xG,SAAU,4DACzD17G,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChBkN,GAAI,CAAC,EAAG,IAER9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,GAAIyF,GAAI,GACtDrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,SACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,4BACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,UAA9B,4IAMF7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,GAAIyF,GAAI,GACtDrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,uBACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,4BACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG6E,GAAI,EAAGC,UAAW,UAArC,kJAG2B7B,EAAA1E,EAAAC,cAAA,WACzByE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE0J,MAAM,wCACN3M,WAAY,IACZC,MAAO,OACP4E,UAAW,SACX3E,WAAY,OACZuiB,KAAK,IACLtiB,QAASlB,EAAKynK,kBAPhB,gCAaJ1jK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKmH,KAAM,MAAO3M,MAAO,EAAGic,GAAI,CAAC,EAAG,GAAI9U,GAAI,CAAC,EAAG,IAC9C5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrF,eAAgB,SAAUgH,GAAI,GAClC5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgB,KAAK,SACLhE,MAAM,UACN2C,KAAK,SAGTI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAASlD,SAAU,EAAG8E,UAAW,UAAjC,gCACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,UAA9B,6GAWR5F,EAAK0C,MAAM2kK,iBAEXtjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CACElhG,MAAO,qBACPnD,KAAM,uBACNk1G,SAAU,+BAGZ17G,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPoG,SAAU,CAAC,EAAE,QACblG,cAAe,SACfC,eAAgB,UAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACP4L,MAAO,oBAEPrG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE+yB,UAAQ,EACRv4B,MAAO,EACPR,KAAM,OACNiG,UAAWC,KAAOipB,MAClBrkB,YAAa,aACbuC,gBAAiB,SACjBs3H,QAAS,sBACTr7H,MAAOtH,EAAK0C,MAAMq/C,cAClBnmC,SAAW,SAAArZ,GAAC,OAAIvC,EAAKgoK,oBAAoBzlK,IACzC+rG,YAAa,qCAIftuG,EAAK0C,MAAM6kK,oBACTxjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE2B,GAAI,EACJ7E,SAAU,EACVE,MAAO,MACPD,WAAY,EACZ6E,UAAW,UALb,mCAWJ7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEsB,GAAI,CAAC,EAAE,GACPnB,GAAI,OACJpD,WAAY,EACZ4C,KAAM,SACN7C,SAAU,CAAC,EAAE,GACb2D,aAAc,EACdqyG,cAAe,UACf7yG,UAAW,CAACC,KAAO6oB,gBACnB7rB,QAAU,SAAAqB,GAAC,OAAIvC,EAAK+nK,yBATtB,YAcFhkK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgb,GAAI,EACJvgB,WAAY,SACZE,eAAgB,UAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE/C,WAAY,OACZ2E,UAAW,SACX1E,QAAU,SAAAqB,GAAC,OAAIvC,EAAK8hD,kBAAiB,KAHvC,0BAQAomH,IAMNG,EAEAtkK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAO,qBAAsB+xG,SAAU,6BAA8Bl1G,KAAM,yBAC7FxG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMxF,MAAO,EAAG8G,GAAI,CAAC,EAAE,GAAI5G,cAAe,SAAUC,eAAgB,UAClEoF,EAAA1E,EAAAC,cAACsmK,GAAD,CACEpnK,MAAO,GACP2C,SAAUnB,EAAKvC,MAAM0D,SACrB4kK,aAAc/lK,EAAK+lK,aACnBE,mBAAoBjmK,EAAKorG,WACzBznG,KAAM3D,EAAKvC,MAAM0D,SAAW,SAAW,QACvC2gD,iBAAkB9hD,EAAK8hD,iBAAiB51B,KAAtBttB,OAAA0pK,GAAA,EAAA1pK,QAAA0pK,GAAA,EAAA1pK,CAAAoB,QAGtB+D,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgb,GAAI,EAAGvgB,WAAY,SAAUE,eAAgB,UACjDoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM4B,UAAW,SAAU3E,WAAY,OAAQC,QAAU,SAAAqB,GAAC,OAAIvC,EAAK8nK,kBAAkBvlK,EAAE,SAAvF,0BAEA2lK,IAMNE,EAEArkK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAO,0CAA4CnD,KAAM,yBAC3ExG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KAEK7uG,EAAK0C,MAAM8kK,oBAoCVzjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAG8E,UAAW,SAAU7E,WAAY,EAAGuoG,WAAY,KAAnE,4BAC4BtpG,EAAK0C,MAAM8kK,oBADvC,uBAGAzjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyW,GAAI,EACJ9b,eAAgB,SAChBF,WAAY,SACZmH,UAAW,UACX7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQL,KAAK,SALf,IAKyBI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGG,MAAO,aAApB,cAA6ChB,EAAK0C,MAAM4kK,mBAAxD,iBA5C3BvjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMxF,MAAO,EAAG8G,GAAI,CAAC,EAAE,GAAI5G,cAAe,SAAUC,eAAgB,UAClEoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK2B,GAAI,GACP5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,CAAC,EAAE,GAAI8E,UAAW,SAAU7E,WAAY,EAAGuoG,WAAY,KAAvE,yCAIFvlG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,EAAGjH,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFoF,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETotG,QAAS,aACTK,SAAU,mBACV9sG,SAAUnB,EAAKvC,MAAM0D,SACrBk+H,WAAY,oBACZh/H,YAAc,SAAAkC,GAAC,OAAIvC,EAAK+lK,aAAa,SAAS,WAC9CtpJ,WAAazc,EAAKvC,MAAM0D,SAAW,CAAC3C,MAAM,OAAOiC,OAAO,QAAU,CAACkF,GAAG,MAAMnH,MAAM,OAAOiC,OAAO,UAElGsD,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETotG,QAAS,mBACTzsG,SAAUnB,EAAKvC,MAAM0D,SACrB8sG,SAAU,oBACVoxB,WAAY,uBACZh/H,YAAc,SAAAkC,GAAC,OAAIvC,EAAK+lK,aAAa,YAAY,cACjDtpJ,WAAazc,EAAKvC,MAAM0D,SAAW,CAAC3C,MAAM,OAAOiC,OAAO,QAAU,CAACkF,GAAG,MAAMnH,MAAM,OAAOiC,OAAO,WAGpGsD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,SAAUE,eAAgB,UAC1CoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM4B,UAAW,SAAU3E,WAAY,OAAQC,QAAU,SAAAqB,GAAC,OAAIvC,EAAK8nK,kBAAkBvlK,EAAE,YAAvF,6BAkBN2lK,IAORnkK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAO,kBAAmBnD,KAAM,yBAClDxG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KAEI9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACP8G,GAAI,CAAC,EAAE,GACP5G,cAAe,SACfC,eAAgB,UAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK2B,GAAI,GACP5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEjD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbwoG,WAAY,IACZ1jG,UAAW,UAJb,wCASF7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE2B,GAAI,CAAC,EAAE,GACPlH,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBqF,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETotG,QAAO,kBACPzsG,SAAUnB,EAAKvC,MAAM0D,SACrBk+H,WAAY,wBACZpxB,SAAU,6BACV5tG,YAAc,SAAAkC,GAAC,OAAIvC,EAAK8nK,kBAAkBvlK,EAAE,WAC5Cka,WAAYzc,EAAKvC,MAAM0D,SAAW,CAAC3C,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAO8nK,aAAa,SAE5GxkK,EAAA1E,EAAAC,cAACw7G,GAAA,EAAD,CACEv6G,YAAa,CACXC,OAAO,GAETotG,QAAO,aACPzsG,SAAUnB,EAAKvC,MAAM0D,SACrBk+H,WAAY,oBACZpxB,SAAU,wBACV5tG,YAAc,SAAAkC,GAAC,OAAIvC,EAAK8nK,kBAAkBvlK,EAAE,QAC5Cka,WAAYzc,EAAKvC,MAAM0D,SAAW,CAAC3C,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAO8nK,aAAa,UAG9GxkK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEvF,WAAY,SACZE,eAAgB,UAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEhD,MAAO,UACPC,WAAY,UACZC,QAAU,SAAAqB,GAAC,OAAIvC,EAAK8hD,kBAAiB,KAHvC,4BAUJomH,OAMVM,aAAe,WAEb,OAAIxoK,EAAK0C,MAAM8kK,qBAAwBxnK,EAAK0C,MAAMykK,gBAAkBnnK,EAAK0C,MAAM2kK,iBACtE,KAIPtjK,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUpG,OAAX,KACK9uG,EAAK0C,MAAMykK,iBAcNnnK,EAAK0C,MAAM2kK,kBAAgD,iBAA5BrnK,EAAK0C,MAAMykK,iBAC9CpjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO6oB,eAAe7oB,KAAO8oB,OACzC9rB,QAASlB,EAAKsrG,WACd3nG,KAAM,SACNc,aAAc,EACdqyG,cAAe,OACf/1G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbqD,GAAI,OACJmB,GAAI,CAAC,EAAE,IATT,QAdAvB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO6oB,eAAe7oB,KAAO8oB,OACzC9rB,QAAU,SAAAqB,GAAC,OAAIvC,EAAK8nK,kBAAkBvlK,EAAE,iBACxCoB,KAAM,SACNc,aAAc,EACdqyG,cAAe,OACf/1G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbqD,GAAI,OACJmB,GAAI,CAAC,EAAE,IATT,kGA9dJ/H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,wCA6f9C,OACEsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAWpxG,KAAK6tG,aACE,IAA1B7tG,KAAKmF,MAAMwkK,WACVnjK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACGlrG,KAAK0qK,qBACL1qK,KAAKirK,gBAGRzkK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAACmpK,GAAD,MACClrK,KAAKirK,yBA5hBUz5D,IAAMtvG,WCkCrBipK,8MA9CbrE,cAAgB,WACd,OACEtgK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CAAY5yJ,GAAI,GAAhB,4BAEA9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,kFAEqB,IAClB84J,GAAYC,cAAZ,2CAHH,KASA7gK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKynB,GAAI,UAAWzsB,EAAG,EAAG6E,QAAS,CAAC,OAAQ,UAC1CE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyG,SAAU,WAAYjM,MAAO,OAChCuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQL,KAAM,UAGlBI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMjD,WAAY,GAAlB,0CAGAgD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMjD,WAAY,GAAlB,mHASV,OACEgD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAWpxG,KAAKE,MAAM2tG,YAC/BrnG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACGtxG,KAAK8mK,0BAvCmBt1D,IAAMtvG,WCmC5BkpK,8MA1CbC,iBAAmB,SAAAr8C,GACjBvsH,EAAKvC,MAAM2tG,aACXprG,EAAKvC,MAAMorK,iBAGbxE,cAAgB,WACd,OACEtgK,EAAA1E,EAAAC,cAACyE,EAAA1E,EAAMopG,SAAP,KACE1kG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,CAAY5yJ,GAAI,GAAhB,sDAIA9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,GAAV,8EAKA9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAY8b,GAAI,GACtE1W,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgBxjK,QAASlB,EAAKvC,MAAM2tG,WAAYhgG,GAAI,CAAC,EAAG,GAAIzF,GAAI,CAAC,EAAG,IAApE,qBAGA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQ9C,QAASlB,EAAK4oK,kBAAtB,wFASN,OACE7kK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAWpxG,KAAKE,MAAM2tG,YAC/BrnG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACGtxG,KAAK8mK,0BAnCwBt1D,IAAMtvG,WCiRjCqpK,8MApQbpmK,MAAQ,CACNqmK,eAAe,EACf7B,YAAY,KAGd8B,gBAAkB,WAChBhpK,EAAKkD,SAAS,CACZ6lK,eAAgB/oK,EAAK0C,MAAMqmK,mBAI/BtB,iBAAmB,SAAAllK,GACjBq0B,QAAQwY,IAAI,aAAcpvC,EAAK0C,MAAMwkK,YACrC3kK,EAAEoJ,iBAEF3L,EAAKkD,SAAS,CACZgkK,YAAalnK,EAAK0C,MAAMwkK,sFAK1B,OACEnjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEiH,GAAI,CAAC,EAAG,GACRtJ,GAAI,CAAC,EAAG,GACRqd,GAAI,CAAC,OAAQ,GACb8wF,GAAI,CAAC,OAAQ,GACbjuG,SAAU,QACVC,SAAU,SACV2I,SAAU,YAEV1G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyG,SAAU,YACb1G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACErF,eAAgB,WAChByM,GAAI,CAAC,GAAI,GACTqP,GAAI,CAAC,SAAU,GACfhQ,SAAU,WACVxB,IAAK,IACL1D,KAAM,IACN2D,MAAO,IACPuiB,GAAI,QACJ/gB,OAAQ,KAER3G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAOtC,KAAR,CACE+iK,UAAQ,EACRl6J,KAAM,QACNvJ,MAAO,YACPE,QAAS3D,KAAKE,MAAM2tG,gBAKI,IAA7B7tG,KAAKmF,MAAMqmK,gBACc,IAA1BxrK,KAAKmF,MAAMwkK,WACTnjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEpC,MAAO,CAAEE,SAAU,QACnB8rH,UAAW,uBAEX7pH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKsB,GAAI,CAAC,EAAG,GAAI0Z,GAAI,CAAC,EAAG,GAAI8wF,GAAI,CAAC,EAAG,IAGnC/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKilK,aAAa,SAAS5jK,GAAI,GAC7BtB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQy6J,GAAT,+CAIF16J,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,GAAV,+KAG8D,IAC5D5B,EAAA1E,EAAAC,cAAA,kDAAkD,IAClDyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE0J,MAAM,wCACNw7J,GAAI,IACJ1lJ,KAAK,IACLtiB,QAAS3D,KAAKkqK,kBAJhB,+BAUF1jK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,yBAEA94G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEvF,WAAY,UACZ0F,GAAI,EACJwB,GAAI,CAAC,EAAG,GACR8U,GAAI,CAAC,EAAG,GACRuzF,SAAU,CAAC,OAAQ,YAEnBjqG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKhF,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzBuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,SACfC,eAAgB,gBAChB8B,OAAQ,QAERsD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQmlK,GAAT,iCACAplK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAS,KAAf,oKAQFiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB74J,GAAI,GAClB9H,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,YAAYoG,GAAI,IAD7B,qBAONrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKhF,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzBuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEtF,cAAe,SACfC,eAAgB,gBAChB8B,OAAQ,QAERsD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQmlK,GAAT,sCAGAplK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAS,KAAf,gIAMFiD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB74J,GAAI,EAAG3K,QAAS3D,KAAKyrK,iBACnCjlK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,oBAAoBoG,GAAI,IADrC,8BAWZrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyG,SAAU,WACVtB,OAAQ,IACR5D,KAAM,IACN2D,MAAO,IACP5D,GAAI,CAAC,EAAG,GACR0Z,GAAI,EACJ8wF,GAAI,EACJrkF,GAAI,SAGJ1nB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM+xH,UAAW,EAAGjtH,YAAa,SACjC/E,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgb,GAAI,EAAGrgB,eAAgB,CAAC,SAAU,aACtCoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQ9C,QAAS3D,KAAKE,MAAM2tG,WAAY5sG,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHjB,KAAKmF,MAAMqmK,cACVhlK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK2B,GAAI,GACP5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEpC,MAAO,CAAEE,SAAU,QACnB8rH,UAAW,uBAEX7pH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKsB,GAAI,CAAC,EAAG,GAAI0Z,GAAI,CAAC,EAAG,GAAI8wF,GAAI,CAAC,EAAG,IAEnC/rG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,EAAGlN,eAAgB,UAC3BoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAM,IACN2D,MACE/J,KAAKE,MAAM+O,QAAUjP,KAAKE,MAAM+O,QAAU,gBAKhDzI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAY6H,GAAI,EAAGpC,QAASlM,KAAKE,MAAM+O,UACvCzI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,MAKd5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyG,SAAU,WACVtB,OAAQ,IACR5D,KAAM,IACN2D,MAAO,IACP5D,GAAI,CAAC,EAAG,GACR0Z,GAAI,EACJ8wF,GAAI,EACJrkF,GAAI,SAGJ1nB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM+xH,UAAW,EAAGjtH,YAAa,SACjC/E,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMyW,GAAI,EAAG9b,eAAgB,CAAC,SAAU,aACtCoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CACElmK,MAAO,CAAC,EAAG,QACX0C,QAAS3D,KAAKyrK,iBAFhB,cAUJ,KAEHzrK,KAAKmF,MAAMwkK,WACVnjK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAK2B,GAAI,GACP5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEpC,MAAO,CAAEE,SAAU,QACnB8rH,UAAW,uBAEX7pH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKsB,GAAI,CAAC,EAAG,GAAI0Z,GAAI,CAAC,EAAG,GAAI8wF,GAAI,CAAC,EAAG,IAEnC/rG,EAAA1E,EAAAC,cAACmpK,GAAD,QAIJ1kK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEyG,SAAU,WACVtB,OAAQ,IACR5D,KAAM,IACN2D,MAAO,IACP5D,GAAI,CAAC,EAAG,GACR0Z,GAAI,EACJ8wF,GAAI,EACJrkF,GAAI,SAGJ1nB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgb,GAAI,EACJrgB,eAAgB,CAAC,SAAU,YAC3Bo3H,UAAW,EACXjtH,YAAa,QAEb/E,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CACElmK,MAAO,CAAC,EAAG,QACX0C,QAAS3D,KAAKkqK,kBAFhB,cAUJ,cA9Pc14D,IAAMtvG,WCoDnB2pK,oLAtDX,OACErlK,EAAA1E,EAAAC,cAAA,WACEyE,EAAA1E,EAAAC,cAAC+pK,GAAD,CACEj+D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQw0H,wBACtC76D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAK+jK,yBAC/BtrJ,YAAa1gB,KAAKE,MAAMwgB,cAG1Bla,EAAA1E,EAAAC,cAACkqK,GAAD,CACEp+D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQ20H,mBACtCh7D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAKkkK,oBAC/BzrJ,YAAa1gB,KAAKE,MAAMwgB,cAG1Bla,EAAA1E,EAAAC,cAACqqK,GAAD,CACEv+D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQ80H,uBACtCn7D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAKqkK,wBAC/Bp7I,QAASlxB,KAAKE,MAAMgxB,UAGtB1qB,EAAA1E,EAAAC,cAACwqK,GAADlrK,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEE0D,SAAU5D,KAAKE,MAAM0D,SACrB4kK,aAAcxoK,KAAKE,MAAMsoK,aACzBrjJ,eAAgBnlB,KAAKE,MAAMgxB,QAAQyI,QACnC6yI,gBAAiBxsK,KAAKE,MAAMssK,gBAC5B3+D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQk1H,qBACtCv7D,OAASlxG,KAAKE,MAAMspI,OAAOvhI,KAAKykK,wBAA0B1sK,KAAKE,MAAMysK,oBAGvEnmK,EAAA1E,EAAAC,cAAC6qK,GAAD,CACE/+D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQs1H,4BACtC37D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAK6kK,yBAC/B3nJ,eAAgBnlB,KAAKE,MAAMgxB,QAAQyI,UAErCnzB,EAAA1E,EAAAC,cAACgrK,GAAD,CACEl/D,WACE7tG,KAAKE,MAAMspI,OAAOjyF,QAAQy1H,iCAE5B97D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAKglK,oBAC/B3B,YAAatrK,KAAKE,MAAMorK,cAG1B9kK,EAAA1E,EAAAC,cAACmrK,GAAD,CACEr/D,WAAY7tG,KAAKE,MAAMspI,OAAOjyF,QAAQ41H,mBACtCj8D,OAAQlxG,KAAKE,MAAMspI,OAAOvhI,KAAKmlK,oBAC/BjoJ,eAAgBnlB,KAAKE,MAAMgxB,QAAQyI,QACnC1qB,QAASjP,KAAKE,MAAM+O,kBAjDIuiG,IAAMtvG,sBC8EzBmrK,8MA7EbttK,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGU4E,sEACfA,EAAEoJ,iBAEGpO,KAAKE,MAAM+O,+BAGdjP,KAAKE,MAAMooK,QAAQK,iBACnB3oK,KAAKE,MAAMsoK,aAAa,SAAS,eAC3BxoK,KAAKE,MAAMooK,QAAQgF,uBAAuB,CAAC,kBAEnDttK,KAAKE,MAAMspI,OAAOjyF,QAAQg2H,gKAGnB,IAAAltK,EAAAL,KAEDyoK,EAAiBzoK,KAAKD,cAAcmqD,oBACpCsjH,EAAY/E,GAAmD,WAAjCA,EAAet8J,eAAkF,kBAA3CnM,KAAKE,MAAMspI,OAAOvhI,KAAKwlK,iBAAgCztK,KAAKE,MAAMspI,OAAOvhI,KAAKwlK,gBAAgBthK,cAAcmD,SAAS,UAE/M,OACE9I,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAY,SAAApsG,GAAC,OAAI3E,EAAKwtG,WAAW7oG,KAC1CwB,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAQq9J,EAAW,eAAH,mBAAyCxgK,KAAM,uBACjFxG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,EAAGrN,MAAO,EAAGE,cAAe,SAAUyF,GAAI,QAClDJ,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKhF,EAAN,CAAQgC,MAAO,YAAa4E,UAAW,UAAvC,iEACkEmlK,EAAW,SAAW,UADxF,IACoGhnK,EAAA1E,EAAAC,cAAA,WAClGyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWliB,MAAO,MAAOD,WAAY,GAArC,IAA0CxD,KAAKE,MAAMspI,OAAOvhI,KAAKwlK,gBAAjE,KAA8FjnK,EAAA1E,EAAAC,cAAA,WAE5FyrK,EACEhnK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,sCACgCnf,EAAA1E,EAAAC,cAAA,2BADhC,QAC+DyE,EAAA1E,EAAAC,cAAA,0BAD/D,0BAC+GyE,EAAA1E,EAAAC,cAAA,+BAD/G,QACkJyE,EAAA1E,EAAAC,cAAA,iCADlJ,uCACsNyE,EAAA1E,EAAAC,cAAA,YAGpN,0DAIVyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,EAAGjH,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE6H,GAAI,EACJ1H,GAAI,CAAC,EAAG,GACRM,aAAc,EACdC,UAAW,OACXf,KAAMpG,KAAKE,MAAM0D,SAAW,QAAU,SACtCD,QAAO,eAAA0O,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAsO,EAAO9b,GAAP,OAAA6tB,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,cAAAkO,EAAAlO,KAAA,EAAqB1S,EAAKwtG,WAAW7oG,GAArC,wBAAAic,EAAAhN,SAAA6M,EAAA9gB,SAAH,gBAAAshB,GAAA,OAAAjP,EAAA8B,MAAAnU,KAAAoU,YAAA,IANT,qBA9DqBo9F,IAAMtvG,WC2E1BwrK,8MAvEb3tK,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGU4E,mEACfA,EAAEoJ,iBACFpO,KAAKE,MAAMspI,OAAOjyF,QAAQo2H,iKAGnB,IAAAttK,EAAAL,KAED4tK,EAAmE,kBAA5C5tK,KAAKE,MAAMspI,OAAOvhI,KAAK4lK,kBAAiC7tK,KAAKE,MAAMspI,OAAOvhI,KAAK4lK,iBAAiB1hK,cAAcmD,SAAS,UAC9Iw+J,EAAmE,kBAA5C9tK,KAAKE,MAAMspI,OAAOvhI,KAAK4lK,kBAAiC7tK,KAAKE,MAAMspI,OAAOvhI,KAAK4lK,iBAAiB1hK,cAAcmD,SAAS,8BAEpJ,OACE9I,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAD,CAAWvG,UAAY,SAAApsG,GAAC,OAAI3E,EAAKwtG,WAAW7oG,KAC1CwB,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUtG,OAAX,CAAkBlhG,MAAQ,oBAAsBnD,KAAM,uBACtDxG,EAAA1E,EAAAC,cAAC41G,GAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,EAAGrN,MAAO,EAAGE,cAAe,SAAUyF,GAAI,QAClDJ,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKhF,EAAN,CAAQgC,MAAO,YAAa4E,UAAW,UAAvC,kEACiE7B,EAAA1E,EAAAC,cAAA,WAC/DyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CAAWliB,MAAO,MAAOD,WAAY,GAArC,IAA0CxD,KAAKE,MAAMspI,OAAOvhI,KAAK4lK,iBAAjE,KAA+FrnK,EAAA1E,EAAAC,cAAA,WAE7F6rK,EACEpnK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAKkf,KAAN,CACEpiB,SAAU,GAEViD,EAAA1E,EAAAC,cAAA,WAHF,iCAGsCyE,EAAA1E,EAAAC,cAAA,2BAHtC,QAGqEyE,EAAA1E,EAAAC,cAAA,0BAHrE,0BAGqHyE,EAAA1E,EAAAC,cAAA,+BAHrH,QAGwJyE,EAAA1E,EAAAC,cAAA,iCAHxJ,uCAG4NyE,EAAA1E,EAAAC,cAAA,WAH5N,sEAIqEyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMlD,SAAU,EAAGE,MAAO,OAAQC,WAAY,OAAQqiB,OAAQ,SAAUC,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAME6nJ,EAAgB,8FAAgG,0DAI1HtnK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,EAAGjH,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE6H,GAAI,EACJ1H,GAAI,CAAC,EAAG,GACRM,aAAc,EACdC,UAAW,OACXf,KAAMpG,KAAKE,MAAM0D,SAAW,QAAU,SACtCD,QAAO,eAAA0O,EAAAhR,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAG,SAAAsO,EAAO9b,GAAP,OAAA6tB,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,cAAAkO,EAAAlO,KAAA,EAAqB1S,EAAKwtG,WAAW7oG,GAArC,wBAAAic,EAAAhN,SAAA6M,EAAA9gB,SAAH,gBAAAshB,GAAA,OAAAjP,EAAA8B,MAAAnU,KAAAoU,YAAA,IANT,qBAxDsBo9F,IAAMtvG,WCK1Co1B,EAAQ,MAAUytB,SAElB,IAAMgpH,GAA2Bv8D,IAAMw8D,cAAc,CACnD9sJ,KAAM,GACNjS,QAAS,GACT2jI,SAAU,GACVtoF,SAAU,GACV5wB,UAAW,GACXkY,WAAY,GACZq8H,YAAa,GACbl3H,YAAa,GACb/tC,YAAa,GACbyG,aAAc,GACdy+J,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChBC,SAAU,aACV1B,iBAAkB,GAClB2B,kBAAmB,GACnBhD,YAAa,aACbiD,kBAAmB,GACnB10I,kBAAmB,GACnB2wB,aAAc,aACdyd,aAAc,aACdlQ,qBAAsB,GACtBy2G,oBAAqB,GACrBC,eAAgB,aAChBjC,gBAAiB,aACjBt7I,QAAS,CACPyI,QAAS,GACTH,SAAU,GACVk1I,aAAc,aACd90I,iBAAkB,KAClB+sI,mBAAoB,MAEtBgI,oBAAoB,EACpBjgH,iBAAkB,aAClBkgH,iBAAkB,aAClBnhE,kBAAmB,aACnB0W,sBAAsB,EACtB0qD,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1Bj5C,0BAA2B,aAC3ByT,OAAQ,CACNvhI,KAAM,CACJwlK,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBuC,uBAAwB,GACxB3C,wBAAyB,GACzBuC,yBAA0B,GAC1B/B,yBAA0B,GAC1Bd,yBAA0B,GAC1BkD,iCAAkC,IAEpC33H,QAAS,CACP43H,kBAAmB,aACnBhC,mBAAoB,aACpBiC,sBAAuB,aACvB/C,uBAAwB,aACxBgD,uBAAwB,aACxBtD,wBAAyB,aACzBuD,yBAA0B,aAC1B/B,0BAA2B,aAC3BgC,0BAA2B,aAC3B5B,2BAA4B,aAC5B6B,2BAA4B,aAC5B3C,4BAA6B,aAC7B4C,gCAAiC,aACjCC,gCAAiC,aACjC1C,iCAAkC,aAClC2C,iCAAkC,eAGtCjvJ,YAAa,CACXzY,KAAM,CACJwH,aAAc,IAEhBmgK,KAAM,GACNr4H,QAAS,MAITs4H,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJ3qK,oBAAqB,IAGrBrF,cAAgB,OAkChBiwK,0CAAuB,SAAAlvJ,IAAA,IAAAyY,EAAA02I,EAAA77J,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAqO,GAAA,cAAAA,EAAAnO,KAAAmO,EAAAlO,MAAA,cAAOwmB,EAAP02I,EAAA1uK,OAAA,QAAA+tB,IAAA2gJ,EAAA,GAAAA,EAAA,GAAiB,KACtCxtK,EAAK1C,cAAcgxD,iBAAiB,kBACpCtuD,EAAK1C,cAAcgxD,iBAAiB,0BACpCtuD,EAAK1C,cAAcgxD,iBAAiB,gBAHf9vC,EAAAlO,KAAA,EAIftQ,EAAKvC,MAAMoxE,gBAAXjwE,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAA2B,SAAA6N,IAAA,OAAAwS,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,OAO3BtQ,EAAK0C,MAAM+rB,QAAQsI,UAAYD,GAAa/lB,SAAS+lB,KAAe/lB,SAAS/Q,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,IAC3G0hB,OAAOkX,SAASy0I,SAEhBztK,EAAKkD,SAAS,CACZub,KAAK,KACLwY,UAAU,GACVk5G,SAAS,KACTs7B,aAAa,KACbr0I,kBAAkB,GAClBs2I,oBAAmB,EACnBp4G,qBAAqB,KACrBosD,sBAAqB,GACrB,WACA1hH,EAAKisK,iBApBsB,wBAAAnuJ,EAAAtM,SAAAoM,EAAArgB,UAJZ,wBAAAihB,EAAAhN,SAAA6M,EAAA9gB,WA8BvB6R,uCAAoB,SAAAY,IAAA,OAAAogB,EAAA/wB,EAAA8Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlBtQ,EAAK2tK,oBAKL7rJ,OAAO8rJ,gBAAkB,SAAC5yI,GACxB,IAAM/c,EAAcje,EAAK6tK,oBAGzB,OAFA5vJ,EAAY+c,OAASA,EACrBh7B,EAAK8tK,eAAe7vJ,GACbA,GAGT6D,OAAOm1C,kBAAoB,SAACh5C,EAAYlb,EAAKkK,EAAOghB,GAWlD,OATAhQ,EAAYhR,OAASA,EACrBgR,EAAYgQ,OAASA,EACrBhQ,EAAYjgB,KAAO,WACnBigB,EAAYiiC,QAAUpuC,KAAK0gC,MAC3Bv0B,EAAY+P,gBAAkBjrB,EAI9B/C,EAAKi3D,kBAAkBh5C,GAChBA,GA3BS,wBAAA7N,EAAAoB,SAAAxB,EAAAzS,WA+BpBowK,kBAAoB,WAElB,GADyB3tK,EAAKvC,MAAMinI,WAAWS,OAAOo7B,WACjC,CACnB,IAAMyF,EAAiBhmK,EAAK1C,cAAcmqD,oBACrBznD,EAAKvC,MAAMinI,WAAWS,OAAOo7B,cAAgBvgK,EAAKvC,MAAMinI,WAAWS,OAAOxlH,SAAS0mJ,KAGtGrmK,EAAKvC,MAAMsoK,aAAa,SAAS,UACL,WAAnBC,GACThmK,EAAKvC,MAAMsoK,aAAa,SAAS,UAKvC9wD,yDAAqB,SAAAliG,EAAOlQ,EAAWC,GAAlB,IAAAirK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtI,EAAA,OAAAz1I,EAAA/wB,EAAA8Q,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAEnBtQ,EAAKrC,aAIqBqC,EAAK0C,MAAM0rK,kBAAoBpuK,EAAKvC,MAAMinI,WAAWS,OAAOo7B,YAGpFvgK,EAAKkD,SAAS,CACZkrK,kBAAiB,GACjB,WACApuK,EAAK2tK,sBAIJ9qK,EAAU42G,gBAAkBz5G,EAAKvC,MAAMg8G,eAAiBz5G,EAAKvC,MAAMg8G,eAAmBz5G,EAAKvC,MAAMooK,QAAQ58D,QAAUpmG,EAAUgjK,QAAQ58D,SAAWjpG,EAAKvC,MAAMooK,QAAQ58D,OAEtKjpG,EAAK4rK,WACK/oK,EAAUgjK,UAAY7lK,EAAKvC,MAAMooK,QACvC7lK,EAAKvC,MAAMooK,QAAQzoJ,iBAAiBw1C,OAAS5yD,EAAKvC,MAAMooK,QAAQzoJ,MAAMmmC,QAAQzkD,QAC1EivK,EAAe/tK,EAAKvC,MAAMooK,QAAQzoJ,MAAMmmC,QACxCyqH,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBX,IAAwCY,GAE1ChuK,EAAKvC,MAAMsoK,aAAa,SAAS,MAIjCqH,GAAmB,MAETY,EAIVhuK,EAAK4rK,WAHL5rK,EAAK6sK,yBAAyB,KAAKkB,IAM5B/tK,EAAKvC,MAAMooK,QAAQ58D,QAA6C,kBAAnCjpG,EAAKvC,MAAMooK,QAAQpsD,eAA8D,kBAA3Bz5G,EAAKvC,MAAMg8G,eAEvGz5G,EAAK4rK,YAEG5rK,EAAKvC,MAAMooK,QAAQpsD,eAAiBz5G,EAAKvC,MAAMooK,QAAQpsD,gBAAkBz5G,EAAKvC,MAAMg8G,eAAkB52G,EAAUk/C,gBAAkB/hD,EAAKvC,MAAMskD,gBAEvJ/hD,EAAK4rK,WAGuB5rK,EAAK0C,MAAMgrK,oBAAsB5qK,EAAU2rB,QAAQyI,QAAQ92B,KAAOJ,EAAK0C,MAAM+rB,QAAQyI,QAAQ92B,IAGzHJ,EAAK4rK,WAGwB9oK,EAAU2rB,QAAQsI,SAAS32B,KAAOJ,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,IAG3FJ,EAAKkD,SAAS,CACZ+zB,UAAU,GACVG,kBAAkB,GAClBsqF,sBAAqB,GACpB,WACD1hH,EAAKvC,MAAM4wK,WAAWruK,EAAK0C,MAAM+rB,SACjCzuB,EAAK4rK,gBAI4B/oK,EAAUswB,qBAAuBnzB,EAAKvC,MAAM01B,qBAAyBtwB,EAAUswB,qBAAuBnzB,EAAKvC,MAAM01B,qBAAuBlkB,KAAKC,UAAUtQ,OAAOC,KAAKgE,EAAUswB,wBAA0BlkB,KAAKC,UAAUtQ,OAAOC,KAAKmB,EAAKvC,MAAM01B,uBAnE/P,CAAAlgB,EAAA3C,KAAA,gBAAA2C,EAAA3C,KAAA,GAsEXtQ,EAAKqsK,sBAtEM,QAyEb4B,EAAuBprK,EAAUk/C,gBAAkB/hD,EAAKvC,MAAMskD,cAC9DmsH,EAAwBrrK,EAAUgjK,QAAQr5J,UAAYxM,EAAKvC,MAAMooK,QAAQr5J,QACzE2hK,EAAsBtrK,EAAU42G,gBAAkBz5G,EAAKvC,MAAMg8G,eAA8C,WAA7Bz5G,EAAKvC,MAAMg8G,eAS3Fw0D,GAAwBC,GAAyBC,IACnDnuK,EAAK6oK,cAMchmK,EAAUwD,gBAAkBrG,EAAKvC,MAAM4I,eAE1DrG,EAAKkD,SAAS,CACZ4Q,cAAe,OAKfjR,EAAU0pK,2BAA6BvsK,EAAKvC,MAAM8uK,0BACpDvsK,EAAKkD,SAAS,CACZqpK,yBAAyBvsK,EAAKvC,MAAM8uK,2BAIpCjrJ,gBACIukJ,EAAU52J,KAAKuS,MAAMF,aAAaC,QAAQ,cAC/BvhB,EAAKvC,MAAMooK,QAAQ58D,SAAW48D,EAAQ58D,QAAUjpG,EAAKvC,MAAMooK,QAAQpsD,gBAAkBosD,EAAQpsD,eAC5Gz5G,EAAK1C,cAAcqkB,gBAAgB,UAAU1S,KAAKC,UAAU,CAAC+5F,OAAOjpG,EAAKvC,MAAMooK,QAAQ58D,OAAOwQ,cAAcz5G,EAAKvC,MAAMooK,QAAQpsD,kBAIpG52G,EAAUy/C,OAAOjiB,kBAAoBrgC,EAAKvC,MAAM6kD,OAAOjiB,iBAGpFrgC,EAAKutK,uBAnHY,yBAAAt6J,EAAAzB,SAAAuB,EAAAxV,mEAuHrB+wK,qCAAkB,SAAAjvJ,IAAA,OAAA+Q,EAAA/wB,EAAA8Q,KAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,wBAAAiP,EAAA/N,SAAA6N,EAAA9hB,WAKlBquK,8BAAW,SAAA7qJ,IAAA,IAAA04F,EAAAosD,EAAA/uI,EAAAkvI,EAAAv/G,EAAAvrB,EAAAvb,EAAA2gB,EAAAC,EAAAguI,EAAAC,EAAAr/B,EAAAu8B,EAAAv8H,EAAAq8H,EAAA/sJ,EAAAgwJ,EAAAC,EAAAC,EAAAC,EAAAt6H,EAAAxD,EAAA+6H,EAAAgD,EAAAnsJ,EAAA+pB,EAAAqiI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA97G,EAAA+7G,EAAAl/B,EAAAm/B,EAAA39J,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,UAAOmpG,EAAP61D,EAAAxwK,OAAA,QAAA+tB,IAAAyiJ,EAAA,GAAAA,EAAA,GAAqB,KAOzBtvK,EAAK0C,MAAMgrK,mBAPP,CAAArsJ,EAAA/Q,KAAA,eAAA+Q,EAAAvC,OAAA,UAQA,GARA,UAWH+mJ,EAAU7lK,EAAKvC,MAAMooK,QACrB/uI,EAAY92B,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,GACxC4lK,EAAiBhmK,EAAK1C,cAAcmqD,oBAIpChB,EAAoBzmD,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,sBAClEymB,EAAgBurB,EAAkB3vB,GAClCnX,EAAWub,EAAgBA,EAAcvb,SAAW,SACpD2gB,EAAatgC,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAYkL,EAAS,QAChF4gB,EAAUvgC,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAYkL,EAAS,MAAMmX,IAAYwJ,EAE/FiuI,EAAkBvuK,EAAK0C,MAAMgrK,oBAAsB1tK,EAAK0C,MAAM+rB,QAAQ0I,iBACtEq3I,EAAgBxuK,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMqiB,IAAY92B,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAGxK06H,EAAkBnvI,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,oBAChEi3J,EAAgB9sK,OAAOC,KAAK4nD,GAAmBj2C,OAAQ,SAAA++J,GAAK,OAAIpgC,EAAgBtiI,SAASkE,SAASw+J,MAAUrsI,OAAQ,SAACC,EAAIosI,GAC7H,IAAMr0I,EAAgBurB,EAAkB8oH,GAClCn0I,EAAiBp7B,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAYymB,EAAcvb,WACzF6vJ,EAAcp0I,EAAeI,IAAI+zI,GAAOn0I,EAAe94B,IAE7D,OADA6gC,EAAIosI,GAAS,IAAI9uI,IAAK,IAAIA,IAAKC,UAAUC,aAAa6uI,IAC/CrsI,GACP,IAEIgM,EAAa,IAAI1O,IAAK,IAAIA,IAAKC,UAAUC,aAAa6tI,IAExDhD,EAAc3F,EAAQ4J,QACtBhxJ,EAAO8vJ,EAAkB1I,EAAQ4J,QAAU,KAG1C3tJ,OAAOw6H,oBAAsBupB,EAAQpsD,gBAAkB33F,OAAOw6H,mBAAmB7iC,gBACpF33F,OAAOw6H,mBAAqBupB,GAI1BpsD,EACF2zD,GAAmB,KAEnB3zD,EAAgBz5G,EAAKvC,MAAMg8G,cAgBzBosD,GAA6B,WAAlBpsD,GAA8BA,IAAkBosD,EAAQpsD,gBACjEh7F,GAAgD,oBAAjCA,EAAKoc,gBAAgBslI,QACtC1hJ,EAAKoc,gBAAgBslI,UACZ0F,EAAQtpB,WAAkD,oBAA9BspB,EAAQtpB,UAAU4jB,SACvD0F,EAAQtpB,UAAU4jB,UAEpB1hJ,EAAO,KACP+sJ,EAAc,KACd4B,GAAmB,MAGfqB,EAAwB5I,EAAQpsD,eAAiBosD,EAAQpsD,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB2zD,GAI9H,eAAlB3zD,EAjFK,CAAAp4F,EAAA/Q,KAAA,YAkFFu1J,EAAQ58D,SAAUwlE,EAlFhB,CAAAptJ,EAAA/Q,KAAA,aAoFDmpG,IAAiBg1D,EApFhB,CAAAptJ,EAAA/Q,KAAA,YAsFmB,WAAlBmpG,GAA+Bz5G,EAAK0C,MAAM0rK,iBAtF3C,CAAA/sJ,EAAA/Q,KAAA,gBAAA+Q,EAAAvC,OAAA,UAuFM,GAvFN,eA2FHsuJ,GAAmB3zD,EA3FhBp4F,EAAA/Q,KAAA,GA4FGu1J,EAAQE,aAAatsD,GA5FxB,eAAAp4F,EAAAvC,OAAA,SA8FIL,GA9FJ,WAmGLiwJ,EAAWnuI,EACXouI,EAAe,KAIdlwJ,EAYHkwJ,EAAelwJ,EAAKoc,gBAXhB/Y,OAAO0e,UACTxgC,EAAK1C,cAAc6iB,UAAU,+BAC7BwuJ,EAAe7sJ,OAAO0e,UACb1e,OAAOrD,MAChBze,EAAK1C,cAAc6iB,UAAU,uCAC7BwuJ,EAAe7sJ,OAAOrD,OAEtBze,EAAK1C,cAAc6iB,UAAU,yDAC7BuuJ,EAAWF,GAMXI,GAAgB,EAEdn1D,GAAmC,WAAlBA,IAA+Bk1D,GAA+C,oBAAxBA,EAAa3O,OAzHjF,CAAA3+I,EAAA/Q,KAAA,gBAAA+Q,EAAAhR,KAAA,GAAAgR,EAAA/Q,KAAA,GA2HCq+J,EAAa3O,SA3Hd,QAAA3+I,EAAA/Q,KAAA,iBAAA+Q,EAAAhR,KAAA,GAAAgR,EAAAyQ,GAAAzQ,EAAA,UA6HLstJ,EAAe,KACfD,EAAWF,EACXI,GAAgB,EA/HX,cAoIa,eAAlBn1D,IACFk1D,EAAe,IAAIe,2BAIjBf,GAAgBJ,EAClB9vJ,EAAO,IAAIgiB,IAAKkuI,GAEPD,IACTjwJ,EAAOitJ,EAAc50I,IAKnBwd,EAAc,KACdxD,EAAiB,KACjB+6H,EAAoB,KAGlBgD,EAAgB7kK,IAAcykB,QAAQiS,UAAUkjG,QAEhDlhH,EAAiB1iB,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,oBAAoBqiB,IACnF2V,EAA+C,YAA5B/pB,EAAe/C,SAAyBmX,EAAY92B,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeqiB,IAE5J+3I,GAAiBA,EAAcp9I,SAAWo9I,EAAcrzI,KAAO58B,OAAOC,KAAKgwK,EAAcrzI,KAAK3uB,SAASkE,SAAS07B,GAAkB9rB,cAC9HmuJ,EAAiBD,EAAcrzI,IAAIiR,GAAkBzsC,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,YAAY,UAAU,QAC/H6/B,EAAc,IAAI7T,IAAK,IAAIA,IAAKC,UAAUC,aAAamuI,IAEjDC,EAAgB,IAAItuI,IAAK,IAAIA,IAAKC,UAAUC,aAAamuI,IACzDE,EAAiB,IAAIvuI,IAAK,IAAIA,IAAKC,UAAUC,aAAa6tI,IAI1DS,EAAuB,CAC3BF,gBACAC,iBACAvgJ,QAASyM,EAAczM,QACvBmqC,QAAS19B,EAAc09B,SAEzB9nB,EAAiB,IAAI6+H,KAAQC,eAAeX,GAItCC,EAA0B,CAC9BH,gBACAC,iBACAvgJ,QAASyM,EAAczM,QACvBmqC,QAAS19B,EAAc09B,SAEzBizG,EAAoB,IAAI8D,KAAQT,IAGlCptJ,OAAOwyB,YAAcA,EACrBxyB,OAAOgvB,eAAiBA,EACxBhvB,OAAO+pJ,kBAAoBA,EAGzBL,EADE1pJ,OAAO0e,SACK,IAAIC,IAAK3e,OAAO0e,UACrB1e,OAAOrD,KACF,IAAIgiB,IAAK3e,OAAOrD,MAEhBitJ,EAAc50I,GAG9B92B,EAAKkD,SAAS,CACZisC,aACAq8H,cACAl3H,cACAo3H,gBACA56H,iBACA+6H,qBACA,cAIIsD,EA/MG,eAAAj+I,EAAAtyB,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KA+MY,SAAAsQ,IAAA,IAAA8vH,EAAA,OAAA//G,EAAA/wB,EAAA8Q,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAEnBwR,OAAO+tJ,aAAe7vK,EAAK0C,MAAM+b,KAGY,oBAAlCze,EAAKvC,MAAMqyK,qBACpB9vK,EAAKvC,MAAMqyK,qBACX9vK,EAAKvC,MAAMsyK,sBAAsB,OAPhBvvJ,EAAAnQ,KAAA,GAoBbrQ,EAAK0C,MAAM+rB,QAAQy1I,mBApBN,CAAA1jJ,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,EAuBPtQ,EAAKqsK,sBAvBE,WA0BXxG,EAAQ58D,QAAU48D,EAAQpsD,gBAAgBA,IAAiBosD,EAAQr5J,QA1BxD,CAAAgU,EAAAlQ,KAAA,aA4BTtQ,EAAK0C,MAAMytI,SA5BF,CAAA3vH,EAAAlQ,KAAA,YA6BL6/H,EAAWnwI,EAAK0C,MAAMytI,UACPnmI,IAAcykB,QAAQiS,UAAUyvG,SACpCC,aAAgBD,EAAS6/B,SAAY3C,GA/B3C,CAAA7sJ,EAAAlQ,KAAA,gBAgCT+8J,IAA0B,EAC1Bl9B,EAASkvB,MAAMwG,EAAQr5J,QAAS,SAAC4Q,EAAO69C,GAGtC,GAAI79C,EACF,OAAOpd,EAAKkD,SAAS,CACnBitI,UAAS,GACT,WACAnwI,EAAK6oK,YAAYhD,EAAQr5J,WAI7B6gK,IAA0B,EAEtBpyG,EAASjtC,gBACXhuB,EAAK6oK,YAAYhD,EAAQr5J,SACjByuD,EAASg1G,cACjBjwK,EAAK6oK,YAAYhD,EAAQr5J,WAjDpBgU,EAAA1B,OAAA,UAoDF,GApDE,eAAA0B,EAAAlQ,KAAA,GAwDPtQ,EAAK6oK,YAAYhD,EAAQr5J,SAxDlB,QAAAgU,EAAAlQ,KAAA,wBAAAkQ,EAAAlQ,KAAA,GA0DPtQ,EAAK6oK,cA1DE,QAAAroJ,EAAAlQ,KAAA,iBAAAkQ,EAAAnQ,KAAA,GAAAmQ,EAAAsR,GAAAtR,EAAA,SAmEjBxgB,EAAK6sK,yBAAyB,KAAKrsJ,EAAAsR,GAAMyxB,SAnExB,yBAAA/iC,EAAAhP,SAAA6O,EAAA9iB,KAAA,aA/MZ,yBAAA2zB,EAAAxf,MAAAnU,KAAAoU,YAAA,GAuRHy9J,EAAe3wJ,EACf60C,EAAetpD,IAAcykB,QAAQiS,UAAUyvG,WAE/B,WAAlB12B,GAA8BnmD,GAAgBA,EAAa7hC,SAAW6hC,EAAar3B,kBAAkBpvB,SAASiqB,KAAgBkvI,GAAmB1yG,EAAa+8E,gBAAgBxjI,SAASm5J,EAAet8J,eA+CpM+U,IAASze,EAAK0C,MAAM+b,KACtBze,EAAKkD,SAAS,CACZub,QACC0wJ,IACMtJ,EAAQr5J,SAAWoiK,IAC5BO,KAlDIE,EAAuBV,GAA8B,IAAIluI,IAAKC,UAAUC,aAAa+tI,GAC/D,OAAxB1uK,EAAK0C,MAAMytI,UAAqBnwI,EAAK0C,MAAMytI,SAASt1G,kBAAoBw0I,KACpEl/B,EAAW,IAAI+/B,YAASb,EAAqB/7G,EAAarlC,UACpB,oBAArBkiH,EAASggC,SAC9B1xJ,EAAO,IAAIgiB,IAAK0vG,GAChBA,EAASggC,QAAQhgC,EAASigC,MAAO,WAC/B,GAAIpwK,EAAK2C,qBAA8C,IAAxB3C,EAAK0C,MAAMytI,UAAsBnwI,EAAK0C,MAAMytI,WAAaA,EACtF,OAAO,EAGT,IAAMs7B,EAAet7B,EAASs7B,aACxBn2G,EAAuB66E,EAAS76E,qBAEhCtyD,EAAW,CACfyb,OACA0xH,WACAhhG,aACAs8H,eACAC,gBACAp2G,wBAIE72C,IAASze,EAAK0C,MAAM+b,MACtBze,EAAKkD,SAASF,EAAUmsK,KAEzBgB,QAAQhgC,EAASkgC,MAAO,SAACjzJ,EAAOmmC,GAEjC9kC,EAAO2wJ,GAEqB,IAAxBpvK,EAAK0C,MAAMytI,UACbnwI,EAAKkD,SAAS,CACZub,OACA0xH,UAAS,GACRg/B,MAIPnvK,EAAKkD,SAAS,CACZub,OACA0xH,UAAS,GACRg/B,KArUA9tJ,EAAAvC,OAAA,SAkVFL,GAlVE,yBAAA4C,EAAA7P,SAAAuP,EAAAxjB,KAAA,gBAqVXioE,mDAAe,SAAA5jD,EAAO5c,EAAMyE,EAAS43C,GAAtB,IAAAivH,EAAApxI,EAAAvtB,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAA0R,GAAA,cAAAA,EAAAxR,KAAAwR,EAAAvR,MAAA,cAA2BggK,EAA3BpxI,EAAApgC,OAAA,QAAA+tB,IAAAqS,EAAA,IAAAA,EAAA,GAAArd,EAAAvR,KAAA,EAEAtQ,EAAKknD,eAAeliD,EAAMyE,EAAS43C,EAAKivH,GAFxC,cAAAzuJ,EAAA/C,OAAA,SAAA+C,EAAAzO,MAAA,wBAAAyO,EAAArQ,SAAAoQ,EAAArkB,qEAKfgzK,uBAAyB,SAACvrK,EAAMyE,EAAS43C,GAAwB,IAAnBvqB,EAAmBnlB,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,GAAAA,UAAA,GAAT,KAElDmlB,GAAa/lB,SAAS+lB,KAAe/lB,SAAS/Q,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,KAAOJ,EAAK0C,MAAM+rB,QAAQ0I,mBACtGL,EAAY,MAEd,IAAM63I,EAAe73I,GAAa92B,EAAK0C,MAAMgpK,cAAc50I,GAAa92B,EAAK0C,MAAMgpK,cAAc50I,GAAc92B,EAAK0C,MAAM+rB,QAAQ0I,iBAAmBn3B,EAAK0C,MAAM+b,KAAOze,EAAK0C,MAAMgpK,cAAc1rK,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,IAE5N,IAAKuuK,EACH,OAAO,KAIT,IAEE,MAAO,CAAC3pK,OAAMgyB,SADG,IAAI23I,EAAajwJ,IAAI61B,SAAS8M,EAAK53C,IAEpD,MAAO2T,GACPpd,EAAK1C,cAAci5B,eAAe,6BAA6BvxB,EAAKyE,EAAQ2T,GAG9E,OAAO,QAGT8pC,qDAAiB,SAAA5zB,EAAOtuB,EAAMyE,EAAS43C,GAAtB,IAAAivH,EAAA3B,EAAA33I,EAAAi7C,EAAA9wC,EAAAxvB,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAyjB,GAAA,cAAAA,EAAAvjB,KAAAujB,EAAAtjB,MAAA,UAA2BggK,EAA3BnvI,EAAAriC,OAAA,QAAA+tB,IAAAsU,EAAA,IAAAA,EAAA,GAETwtI,EAAe2B,GAAqBtwK,EAAK0C,MAAMysC,WAAanvC,EAAK0C,MAAMysC,WAAcnvC,EAAK0C,MAAM+rB,QAAQ0I,iBAAmBn3B,EAAK0C,MAAM+b,KAAOze,EAAK0C,MAAMgpK,cAAc1rK,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,IAFzL,CAAAwzB,EAAAtjB,KAAA,eAAAsjB,EAAA9U,OAAA,SASN,MATM,cAYVuiC,IACHA,EAAM,IAbOztB,EAAAvjB,KAAA,EAkBP2mB,EAAW,IAAI23I,EAAajwJ,IAAI61B,SAAS8M,EAAK53C,GAC9CwoE,EAAe,CAACjtE,OAAMgyB,YAE5Bh3B,EAAKkD,SAAS,SAAAJ,GAEZ,IAAMm0B,EAAYn0B,EAAUm0B,UAAUzmB,OAAQ,SAAA7D,GAAC,OAAIA,EAAE3H,OAASitE,EAAajtE,OAG3E,OADAiyB,EAAUltB,KAAKkoE,GACR,CACLh7C,eA3BSrD,EAAA9U,OAAA,SA+BNmzD,GA/BM,QAAAr+C,EAAAvjB,KAAA,GAAAujB,EAAA9B,GAAA8B,EAAA,SAiCbgD,QAAQxZ,MAAM,6BAA6BpY,EAAKyE,EAAQ43C,EAAxDztB,EAAA9B,IAjCa,eAAA8B,EAAA9U,OAAA,SAoCR,MApCQ,yBAAA8U,EAAApiB,SAAA8hB,EAAA/1B,KAAA,yEAuCjBwqD,aAAe,WAEb,GAAI/nD,EAAK0C,MAAMmlD,SACb,OAAO7nD,EAAK0C,MAAMmlD,SAGpB,IAAM2oH,EAAexmK,IAAcykB,QAAQiS,UAAUmnB,SACjDA,EAAW,KACT/wB,EAAY92B,EAAK0C,MAAM+rB,QAAQyI,QAAQ92B,IAAMJ,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,GAE/E,GAAIowK,GAAgBA,EAAa/+I,UAAkE,IAAvD++I,EAAav0I,kBAAkB1gB,QAAQub,GAAmB,CACpG,IAAM25I,EAAiBD,EAAaviJ,OACpCwiJ,EAAehiJ,QAAU+hJ,EAAa//B,WAAWzwI,EAAK0C,MAAM+rB,QAAQyI,QAAQ92B,GAAG4J,IAAcykB,QAAQg4B,mBACrGoB,EAAW,IAAI6oH,KAASD,GAS1B,OANA3uJ,OAAO+lC,SAAWA,EAElB7nD,EAAKkD,SAAS,CACZ2kD,aAGKA,KAGTghH,iCAAc,SAAAh2I,IAAA,IAAArmB,EAAAu1C,EAAAikH,EAAA2K,EAAA9oH,EAAAipF,EAAA8/B,EAAAC,EAAA59I,EAAAthB,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAA+iB,GAAA,cAAAA,EAAA7iB,KAAA6iB,EAAA5iB,MAAA,UAAO9D,EAAPymB,EAAAn0B,OAAA,QAAA+tB,IAAAoG,EAAA,IAAAA,EAAA,GAEN8uB,EAAgB/hD,EAAKvC,MAAMskD,cAC3BikH,EAAiBhmK,EAAK1C,cAAcmqD,kBAAkB,WAExD1F,EALQ,CAAA7uB,EAAA5iB,KAAA,eAAA4iB,EAAApU,OAAA,SAOH9e,EAAKkD,SAAS,CACnBsJ,QAAQu1C,EACRmqH,oBAAmB,GACnB,WACAlsK,EAAKgrG,uBAXG,UAa4B,WAA7BhrG,EAAKvC,MAAMg8G,eAA+Bz5G,EAAKvC,MAAMg8G,cAbpD,CAAAvmF,EAAA5iB,KAAA,eAAA4iB,EAAApU,OAAA,SAcH9e,EAAKkD,SAAS,CACnBsJ,QAAQ,KACR0/J,oBAAmB,KAhBX,UAAAh5I,EAAA7iB,KAAA,EAsBNrQ,EAAKvC,MAAMooK,QAAQ58D,QAAUjpG,EAAKvC,MAAMooK,QAAQpsD,gBAAgBz5G,EAAKvC,MAAMg8G,eAAiBz5G,EAAKvC,MAAMooK,QAAQr5J,UACjHA,EAAUxM,EAAKvC,MAAMooK,QAAQr5J,SAG1BA,EA1BK,CAAA0mB,EAAA5iB,KAAA,gBAAA4iB,EAAA5iB,KAAA,GA+BctQ,EAAK0C,MAAM+b,KAAKC,IAAIuhJ,cA/BlC,SA+BF0Q,EA/BEz9I,EAAA9f,OAiCOu9J,EAAQ7xK,SACrB0N,EAAUmkK,EAAQ,IAlCZ,WAwCLnkK,IACHA,EAAUxM,EAAKvC,MAAMooK,QAAQr5J,SAG1BA,GAAWxM,EAAK0C,MAAM8J,UAAYA,EA5C7B,CAAA0mB,EAAA5iB,KAAA,gBAAA4iB,EAAApU,OAAA,SA6CD9e,EAAKkD,SAAS,CACnBgpK,oBAAoB,KA9Cd,YAmDN1/J,EAnDM,CAAA0mB,EAAA5iB,KAAA,cAsDFu3C,EAAW7nD,EAAK+nD,gBAtDd,CAAA70B,EAAA5iB,KAAA,gBAAA4iB,EAAA5iB,KAAA,GA0DsBu3C,EAASipF,gBA1D/B,SA0DAA,EA1DA59G,EAAA9f,OA4De09H,EAAchyI,QAAUgjB,OAAOgvJ,SAE9CF,EAAqB,GACrBtvJ,eACFsvJ,EAAqBtvJ,aAAaC,QAAQ,uBAAyBtS,KAAKuS,MAAMF,aAAaC,QAAQ,uBAAyBtS,KAAKuS,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLuvH,EAAc/xI,QAAQ,SAACm2B,EAAE5rB,GAEvB,IAAMynK,EAAiB77I,EAAElwB,MAG2B,IAAhD4rK,EAAmBr1J,QAAQw1J,KAC7BjvJ,OAAOgvJ,OAAO/mK,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQ/J,EAAK1C,cAAc+5B,8BAA8BnC,EAAE87I,YAGtGJ,EAAmB7mK,KAAKgnK,MAKxBzvJ,cACFthB,EAAK1C,cAAcqkB,gBAAgB,qBAAqB1S,KAAKC,UAAU0hK,KAlFrE,QAwFR5wK,EAAK1C,cAAcwwB,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,YACbF,WAAYu4I,IAMdhmK,EAAKkD,SAAS,CACZsJ,UAEA0/J,oBAAoB,IAItBlsK,EAAKgrG,oBAxGG93E,EAAA5iB,KAAA,wBAAA4iB,EAAApU,OAAA,SA8GD9e,EAAKkD,SAAS,CACnBsJ,QAAQ,KACR0/J,oBAAoB,KAhHd,QAAAh5I,EAAA5iB,KAAA,oBAAA4iB,EAAA7iB,KAAA,GAAA6iB,EAAApB,GAAAoB,EAAA,SAqHVlzB,EAAKkD,SAAS,CACZgpK,oBAAoB,IAItBlsK,EAAK1C,cAAc6iB,UAAU,yCAA7B+S,EAAApB,MAKIoB,EAAApB,IAASoB,EAAApB,GAAMyxB,SAAWrwB,EAAApB,GAAMyxB,QAAQ12C,SAAS,yCA/H3C,CAAAqmB,EAAA5iB,KAAA,gBAAA4iB,EAAApU,OAAA,kBAoIJ+xJ,EAAU39I,EAAApB,cAAiB8gC,MAC7B5yD,EAAK1C,cAAc8nD,kBAAoByrH,GACzCI,KAAA/9I,EAAApB,IAtIQ,yBAAAoB,EAAA1hB,SAAAqhB,EAAAt1B,KAAA,eA+Id+uK,qBAAuB,SAAAlvJ,GACrB,IAAI2pH,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK6kK,0BAA2B,EACvCtjC,EAAOvhI,KAAKglK,qBAAsB,EAClCxqK,EAAKkD,SAAS,CAAE6jI,cAGlB/7B,wDAAoB,SAAA12E,EAAO48I,GAAP,IAAA79I,EAAAE,EAAAo4I,EAAAI,EAAAj4J,EAAA,OAAAsc,EAAA/wB,EAAA8Q,KAAA,SAAAukB,GAAA,cAAAA,EAAArkB,KAAAqkB,EAAApkB,MAAA,cAElB4gK,EAAiBA,EAAiBlxK,EAAK1C,cAAcqT,MAAMugK,GAAkB,KAF3Dx8I,EAAArkB,KAAA,EAAAqkB,EAAApkB,KAAA,EAM+C4N,QAAQuD,IAAI,CACzEzhB,EAAK0C,MAAM+b,KAAKC,IAAIwR,WAAWlwB,EAAK0C,MAAM8J,SAC1CxM,EAAKqwB,gBAAgBrwB,EAAK0C,MAAM8J,SAChCxM,EAAKisD,qBATS,OAAA54B,EAAAqB,EAAAthB,KAAAmgB,EAAA30B,OAAAgzB,GAAA,EAAAhzB,CAAAy0B,EAAA,GAMXs4I,EANWp4I,EAAA,GAMIw4I,EANJx4I,EAAA,GAMwBzf,EANxByf,EAAA,GAcZo4I,IAGEA,EAAehrJ,WAAW9T,SAAS,OACrC8+J,EAAiB3rK,EAAK0C,MAAM+b,KAAK0W,MAAMK,MAAMm2I,IAI/CA,EAAiB3rK,EAAK0C,MAAM+b,KAAK0W,MAAMI,QACrCo2I,EACA,SAGFA,EAAiB3rK,EAAK1C,cAAcqT,MAAMg7J,GAAgBhrJ,WAE1D3gB,EAAKkD,SAAS,CACZyoK,mBAGF3rK,EAAK1C,cAAc6iB,UAAU,oBAAqBwrJ,IAKhDI,GAEFA,EAAsB/rK,EAAK1C,cAAcqT,MAAMo7J,GAG3CmF,GAAkBlxK,EAAK0C,MAAMqpK,qBAAuB/rK,EAAK1C,cAAckwD,qBAAqBxtD,EAAK0C,MAAMqpK,oBAAoBj4J,GAAe6M,aAAeorJ,EAAoBprJ,aAC/KorJ,EAAsBA,EAAoB76J,KAAKggK,IAGjDnF,EAAsB/rK,EAAK1C,cAAc4W,iBAAiB63J,EAAoBj4J,GAAe6M,WAK7F3gB,EAAKkD,SAALtE,OAAA+iI,EAAA,EAAA/iI,CAAA,CACEmtK,uBADF,iBAAA7pK,OAEoBlC,EAAKvC,MAAM4I,eAAiB0lK,KAIhD/rK,EAAK1C,cAAc6iB,UAAU,kCAAkC4rJ,GA1DjDr3I,EAAApkB,KAAA,iBAAAokB,EAAArkB,KAAA,GAAAqkB,EAAA5C,GAAA4C,EAAA,SA6DhB10B,EAAK1C,cAAci5B,eAAe,iCAAlC7B,EAAA5C,IA7DgB,yBAAA4C,EAAAljB,SAAA8iB,EAAA/2B,KAAA,qEAiEpB8uK,yCAAsB,SAAA/oI,IAAA,IAAArM,EAAAG,EAAA+5I,EAAA1qH,EAAA2qH,EAAAhsG,EAAAg+C,EAAAiuD,EAAAruK,EAAA,OAAAotB,EAAA/wB,EAAA8Q,KAAA,SAAAszB,GAAA,cAAAA,EAAApzB,KAAAozB,EAAAnzB,MAAA,UAEftQ,EAAK0C,MAAM+b,MAASze,EAAKvC,MAAM01B,oBAFhB,CAAAsQ,EAAAnzB,KAAA,eAAAmzB,EAAA3kB,OAAA,UAGX,GAHW,cAQdmY,EAAY,GACZG,EAAoB,GACpB+5I,EAAoBpgK,SAAS/Q,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,IACzDqmD,EAAoBzmD,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,oBAEpEzU,EAAKvC,MAAM6zK,6BACb1yK,OAAOC,KAAKmB,EAAKvC,MAAM6zK,6BAA6BvyK,QAAS,SAAA+3B,GAC3DM,EAAkBN,GAAa,GAC/B,IAAM+yB,EAAa7pD,EAAKvC,MAAM6zK,4BAA4Bx6I,GAC1Dl4B,OAAOC,KAAKgrD,GAAY9qD,QAAS,SAAA4gC,GAC/B,IAAM/yB,EAAkB5M,EAAKvC,MAAM6zK,4BAA4Bx6I,GAAW6I,GAC1E/gC,OAAOC,KAAK+N,GAAiB7N,QAAS,SAAA2R,GACpC,IAAMnK,EAAcqG,EAAgB8D,GAEpC1Q,EAAK1C,cAAc6iB,UAAU,qCAAqCzP,EAAOnK,EAAYkD,SACrF2tB,EAAkBN,GAAW/sB,KAAK/J,EAAKuwK,uBAAuB7/J,EAAOnK,EAAYkD,QAASlD,EAAY86C,IAAKvqB,IAE3G92B,EAAK1C,cAAc6iB,UAAU,qCAAqC5Z,EAAYmrB,KAAKhhB,MAAOnK,EAAYmrB,KAAKjoB,SAC3G2tB,EAAkBN,GAAW/sB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYmrB,KAAKhhB,MAAOnK,EAAYmrB,KAAKjoB,QAASlD,EAAYmrB,KAAK2vB,IAAKvqB,IAEtIvwB,EAAY6C,UAAUrK,QAAtB,eAAAsgC,EAAAzgC,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAA8B,SAAAmkB,EAAOl1B,EAAEsK,GAAT,OAAA8mB,EAAA/wB,EAAA8Q,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,OAC5BtQ,EAAK1C,cAAc6iB,UAAU,6BAA6BnhB,EAAE0R,MAAM,YAAY1R,GAC9Eo4B,EAAkBN,GAAW/sB,KAAK/J,EAAKuwK,uBAAuBvxK,EAAE0R,MAAO1R,EAAEyK,QAASzK,EAAEqiD,IAAKvqB,IAF7D,wBAAA1C,EAAA5iB,SAAA0iB,EAAA32B,SAA9B,gBAAA0nC,EAAAC,GAAA,OAAA7F,EAAA3tB,MAAAnU,KAAAoU,YAAA,WAWFy/J,EAAwBpxK,EAAK1C,cAAcmX,gBAAgB,CAAC,YAAY08J,MAE5EvyK,OAAOC,KAAKuyK,GAAuBryK,QAAS,SAAA6uB,GAC1C,IAAMqkD,EAAem/F,EAAsBxjJ,GAC3C,GAA6B,OAAzBqkD,EAAaxoE,SAAyC,OAArBwoE,EAAa5wB,IAAa,CAC7D,IAAMvqB,EAAYm7C,EAAan7C,UAAY/lB,SAASkhE,EAAan7C,WAAaq6I,EAE9El6I,EAAUltB,KAAK/J,EAAKuwK,uBAAuB3iJ,EAAcqkD,EAAaxoE,QAASwoE,EAAa5wB,IAAKvqB,IACjGM,EAAkB+5I,GAAmBpnK,KAAK/J,EAAKuwK,uBAAuB3iJ,EAAcqkD,EAAaxoE,QAASwoE,EAAa5wB,IAAKvqB,QAK5HsuC,EAAYplE,EAAK1C,cAAcmX,gBAAgB,CAAC,gBAEpD7V,OAAOC,KAAKumE,GAAWrmE,QAAS,SAAA2R,GAC9B,IAAMm1B,EAAiBu/B,EAAU10D,GAC5Bm1B,EAAepU,SAGpBg1B,EAAkB1nD,QAAS,SAAA+3B,GAEzB,IAAMiD,EAAkB8L,EAAe0zC,WAAa1zC,EAAe0zC,UAAUziD,GAAa+O,EAAe0zC,UAAUziD,GAAa+O,EAAep8B,QAC/IzJ,EAAK1C,cAAc6iB,UAAU,qCAAsCzP,EAAOqpB,GACtEhpB,SAAS+lB,KAAe/lB,SAASogK,IACnCl6I,EAAUltB,KAAK/J,EAAKuwK,uBAAuB7/J,EAAOqpB,EAAiB8L,EAAewb,MAEpFjqB,EAAkBN,GAAW/sB,KAAK/J,EAAKuwK,uBAAuB7/J,EAAOqpB,EAAiB8L,EAAewb,IAAKvqB,QAK5G92B,EAAKvC,MAAM01B,qBAEbv0B,OAAOC,KAAKmB,EAAKvC,MAAM01B,qBAAqBp0B,QAAS,SAAA4gC,GACnD,IAAM/yB,EAAkB5M,EAAKvC,MAAM01B,oBAAoBwM,GACvD/gC,OAAOC,KAAK+N,GAAiB7N,QAAS,SAAA2R,GACpC,IAAMnK,EAAcqG,EAAgB8D,GAgBpC,GAdA1Q,EAAK1C,cAAc6iB,UAAU,qCAAqCzP,EAAOnK,EAAYkD,SACrFwtB,EAAUltB,KAAK/J,EAAKuwK,uBAAuB7/J,EAAOnK,EAAYkD,QAASlD,EAAY86C,MAGnFrhD,EAAK1C,cAAc6iB,UAAU,qCAAqC5Z,EAAYmrB,KAAKhhB,MAAOnK,EAAYmrB,KAAKjoB,SAC3GwtB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYmrB,KAAKhhB,MAAOnK,EAAYmrB,KAAKjoB,QAASlD,EAAYmrB,KAAK2vB,MAG9G96C,EAAY6C,UAAUrK,QAAtB,eAAAs1B,EAAAz1B,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAA8B,SAAA+yB,EAAO9jC,EAAEsK,GAAT,OAAA8mB,EAAA/wB,EAAA8Q,KAAA,SAAA8yB,GAAA,cAAAA,EAAA5yB,KAAA4yB,EAAA3yB,MAAA,OAC5BtQ,EAAK1C,cAAc6iB,UAAU,6BAA6BnhB,EAAE0R,MAAM,YAAY1R,GAC9Ei4B,EAAUltB,KAAK/J,EAAKuwK,uBAAuBvxK,EAAE0R,MAAO1R,EAAEyK,QAASzK,EAAEqiD,MAFrC,wBAAApe,EAAAzxB,SAAAsxB,EAAAvlC,SAA9B,gBAAAynC,EAAAyC,GAAA,OAAApT,EAAA3iB,MAAAnU,KAAAoU,YAAA,IAMIpL,EAAYizB,UAAU,CAExB,GAAIjzB,EAAYizB,UAAUqnB,YAAY,CACpC,IAAMA,EAAct6C,EAAYizB,UAAUqnB,YAC1C7gD,EAAK1C,cAAc6iB,UAAU,6BAA6B0gC,EAAY77C,KAAK,YAAY67C,GACvF5pB,EAAUltB,KAAK/J,EAAKuwK,uBAAuB1vH,EAAY77C,KAAM67C,EAAYp3C,QAASo3C,EAAYQ,MAWhG,GAPI96C,EAAYizB,UAAU2kE,cACxB53F,EAAYizB,UAAU2kE,aAAap/F,QAAnC,eAAAw1B,EAAA31B,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAA2C,SAAA4zB,EAAO3kC,EAAEsK,GAAT,OAAA8mB,EAAA/wB,EAAA8Q,KAAA,SAAA2zB,GAAA,cAAAA,EAAAzzB,KAAAyzB,EAAAxzB,MAAA,OACzCtQ,EAAK1C,cAAc6iB,UAAU,6BAA6BnhB,EAAE0R,MAAM,YAAY1R,GAC9Ei4B,EAAUltB,KAAK/J,EAAKuwK,uBAAuBvxK,EAAE0R,MAAO1R,EAAEyK,QAASzK,EAAEqiD,MAFxB,wBAAAvd,EAAAtyB,SAAAmyB,EAAApmC,SAA3C,gBAAAmqC,EAAAF,GAAA,OAAAjT,EAAA7iB,MAAAnU,KAAAoU,YAAA,IAMEpL,EAAYizB,UAAUC,kBAAkB,CAC1C,IAAMA,EAAoBlzB,EAAYizB,UAAUC,kBAChDz5B,EAAK1C,cAAc6iB,UAAU,6BAA6BsZ,EAAkBz0B,KAAK,YAAYy0B,GAC7FxC,EAAUltB,KAAK/J,EAAKuwK,uBAAuB92I,EAAkBz0B,KAAMy0B,EAAkBhwB,QAASgwB,EAAkB4nB,YAOpH+hE,EAAiBpjH,EAAK1C,cAAcmX,gBAAgB,CAAC,aAAa,aACpEzU,EAAKvC,MAAMg/B,mBACb79B,OAAOC,KAAKmB,EAAKvC,MAAMg/B,mBAAmB19B,QAAS,SAAAo+B,GACjD,IAAMozC,EAASvwE,EAAKvC,MAAMg/B,kBAAkBU,GAC5Cv+B,OAAOC,KAAK0xE,GAAQxxE,QAAS,SAAA2R,GAC3B,IAAMnK,EAAcgqE,EAAO7/D,GACtB0yG,EAAe38D,oBAAqB28D,EAAe38D,kBAAkB55C,SAASskK,KAC7E5qK,EAAY86C,KACdpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYmK,MAAMnK,EAAYkD,QAAQlD,EAAY86C,MAE/FpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYk/D,GAAGzgE,KAAKuB,EAAYk/D,GAAGh8D,QAAQlD,EAAYk/D,GAAGpkB,MACrGpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYm/D,GAAG1gE,KAAKuB,EAAYm/D,GAAGj8D,QAAQlD,EAAYm/D,GAAGrkB,MACrGpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYw9B,IAAI/+B,KAAKuB,EAAYw9B,IAAIt6B,QAAQlD,EAAYw9B,IAAIsd,MACxGpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYk/D,GAAGjnC,WAAWx5B,KAAKuB,EAAYk/D,GAAGjnC,WAAW/0B,QAAQlD,EAAYk/D,GAAGjnC,WAAW6iB,MACtIpqB,EAAUltB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYm/D,GAAGlnC,WAAWx5B,KAAKuB,EAAYm/D,GAAGlnC,WAAW/0B,QAAQlD,EAAYm/D,GAAGlnC,WAAW6iB,OAGpI96C,EAAY86C,KACdjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYmK,MAAMnK,EAAYkD,QAAQlD,EAAY86C,IAAI,IAE9GjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYk/D,GAAGzgE,KAAKuB,EAAYk/D,GAAGh8D,QAAQlD,EAAYk/D,GAAGpkB,IAAI,IACpHjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYm/D,GAAG1gE,KAAKuB,EAAYm/D,GAAGj8D,QAAQlD,EAAYm/D,GAAGrkB,IAAI,IACpHjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYw9B,IAAI/+B,KAAKuB,EAAYw9B,IAAIt6B,QAAQlD,EAAYw9B,IAAIsd,IAAI,IACvHjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYk/D,GAAGjnC,WAAWx5B,KAAKuB,EAAYk/D,GAAGjnC,WAAW/0B,QAAQlD,EAAYk/D,GAAGjnC,WAAW6iB,IAAI,IACrJjqB,EAAkB,GAAGrtB,KAAK/J,EAAKuwK,uBAAuBhqK,EAAYm/D,GAAGlnC,WAAWx5B,KAAKuB,EAAYm/D,GAAGlnC,WAAW/0B,QAAQlD,EAAYm/D,GAAGlnC,WAAW6iB,IAAI,QAKrJgwH,EAAezyK,OAAOgF,OAAO,GAAG5D,EAAK0C,MAAMu0B,WACjDA,EAAUl4B,QAAS,SAAAkzE,GACjB,GAAIA,EAAa,CACf,IAAMs/F,EAAgBF,EAAarmJ,KAAM,SAAAre,GAAC,OAAIA,EAAE3H,OAAOitE,EAAajtE,OACpE,GAAKusK,EAEE,CACL,IAAMC,EAAgBH,EAAa91J,QAAQg2J,GAC3CF,EAAaG,GAAiBv/F,OAH9Bo/F,EAAatnK,KAAKkoE,MAUlBjvE,EAAW,CACfo0B,oBACAH,UAAUo6I,EACV3vD,sBAAqB,GArKHj+E,EAAA3kB,OAAA,SAwKb9e,EAAKkD,SAASF,IAxKD,yBAAAygC,EAAAjyB,SAAA8xB,EAAA/lC,WA2KtBs5B,wDAAoB,SAAAiO,EAAOlX,GAAP,IAAAoJ,EAAAzwB,EAAA,OAAA6pB,EAAA/wB,EAAA8Q,KAAA,SAAA40B,GAAA,cAAAA,EAAA10B,KAAA00B,EAAAz0B,MAAA,WACd0mB,EAAWh3B,EAAK0C,MAAMu0B,UAAUjM,KAAK,SAAAre,GAAC,OAAIA,EAAE3H,OAAS4oB,OAExC5tB,EAAKvC,MAAM8I,YAHV,CAAAw+B,EAAAz0B,KAAA,eAIV/J,EAAcvG,EAAKvC,MAAM8I,YAJfw+B,EAAAz0B,KAAA,EAKCtQ,EAAKwlE,aAAa53C,EAAcrnB,EAAYkD,QAASlD,EAAY86C,KALlE,OAKhBrqB,EALgB+N,EAAA3xB,KAAA,cAAA2xB,EAAAjmB,OAAA,SAQXkY,EAAWA,EAASA,SAAW,MARpB,wBAAA+N,EAAAvzB,SAAAszB,EAAAvnC,iEAWpB0uD,sCAAmB,SAAAxmB,IAAA,IAAA3xB,EAAA,OAAAsc,EAAA/wB,EAAA8Q,KAAA,SAAA42B,GAAA,cAAAA,EAAA12B,KAAA02B,EAAAz2B,MAAA,UACbwD,EAAgB,KAEf9T,EAAK0C,MAAMoR,cAHC,CAAAizB,EAAAz2B,KAAA,eAAAy2B,EAAAz2B,KAAA,EAKOtQ,EAAK1C,cAAc2uD,iBAAiBjsD,EAAKvC,MAAM4I,eALtD,OAKfyN,EALeizB,EAAA3zB,KAOfpT,EAAKkD,SAAS,CACZ4Q,kBARaizB,EAAAz2B,KAAA,uBAAAy2B,EAAAz2B,KAAA,GAWQ,IAAI4N,QAAJ,eAAAuzJ,EAAA7yK,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAa,SAAAu0B,EAAOhmB,EAASC,GAAhB,OAAA6R,EAAA/wB,EAAA8Q,KAAA,SAAAy0B,GAAA,cAAAA,EAAAv0B,KAAAu0B,EAAAt0B,MAAA,OAClCgO,EAAQte,EAAK0C,MAAMoR,eADe,wBAAA8wB,EAAApzB,SAAA8yB,EAAA/mC,SAAb,gBAAAgsC,EAAAC,GAAA,OAAAioI,EAAA//J,MAAAnU,KAAAoU,YAAA,IAXR,QAWfmC,EAXeizB,EAAA3zB,KAAA,eAAA2zB,EAAAjoB,OAAA,SAgBVhL,GAhBU,yBAAAizB,EAAAv1B,SAAAi0B,EAAAloC,WAmBnB8yB,sDAAkB,SAAAgV,EAAO74B,GAAP,IAAAwqB,EAAA,OAAA5G,EAAA/wB,EAAA8Q,KAAA,SAAAo1B,GAAA,cAAAA,EAAAl1B,KAAAk1B,EAAAj1B,MAAA,cAAAi1B,EAAAj1B,KAAA,EACOtQ,EAAK62B,kBAAkB72B,EAAKvC,MAAM4I,eADzC,UACV2wB,EADUuO,EAAAnyB,KAAA,CAAAmyB,EAAAj1B,KAAA,eAIdtQ,EAAK1C,cAAci5B,eAAe,sBAAuBv2B,EAAKvC,MAAM4I,eAJtDk/B,EAAAzmB,OAAA,SAKP,MALO,UAQXkY,EAAS8d,QAAT,UARW,CAAAvP,EAAAj1B,KAAA,eASdtQ,EAAKu2B,eAAe,+BATNgP,EAAAzmB,OAAA,SAUP,MAVO,cAAAymB,EAAAj1B,KAAA,GAaH0mB,EAAS8d,QAAQ48H,UAAUllK,GAASwoC,OAAO0N,MAAM,SAAAtlC,GAC5Dpd,EAAK1C,cAAc6iB,UAAnB,iBAAAje,OAA8ClC,EAAKvC,MAAM4I,cAAzD,YAAkF+W,KAdpE,eAAAmoB,EAAAzmB,OAAA,SAAAymB,EAAAnyB,MAAA,yBAAAmyB,EAAA/zB,SAAA6zB,EAAA9nC,iEAkBlBo0K,2BAA6B,WAE3B,IAAMviC,EACyB,qBAAtBpvI,EAAKvC,MAAM6kD,QACiC,qBAA5CtiD,EAAKvC,MAAM6kD,OAAO8sF,sBACrBpvI,EAAKvC,MAAM6kD,OAAO8sF,sBAClB,EAEA08B,EACJ9rK,EAAK0C,MAAMipK,eAAiBv8B,EAE9BpvI,EAAKkD,SAAS,CACZ4oK,yBAIJx4C,gEAA4B,SAAA7qF,EAAOqnI,GAAP,OAAA1/I,EAAA/wB,EAAA8Q,KAAA,SAAA64B,GAAA,cAAAA,EAAA34B,KAAA24B,EAAA14B,MAAA,OAErBtQ,EAAK0C,MAAM8J,UACdxM,EAAKvC,MAAMsyK,sBAAsBD,GAEjC9vK,EAAK4xK,uBALmB,wBAAA5oI,EAAAx3B,SAAAi3B,EAAAlrC,iEAS5BmiB,mBAAqB,WAClB,IAAMoX,EAAyC,qBAAtB92B,EAAKvC,MAAM6kD,QAAuE,qBAAtCtiD,EAAKvC,MAAM6kD,OAAOjiB,gBAAkCrgC,EAAKvC,MAAM6kD,OAAOjiB,gBAAkBr2B,IAAcykB,QAAQ4R,gBAEnL,MAAO,CACLjgC,GAAI02B,EACJ9xB,KAHkB8xB,GAAa9sB,IAAcykB,QAAQg4B,kBAAkB3vB,GAAa9sB,IAAcykB,QAAQg4B,kBAAkB3vB,GAAW9xB,KAAO,cAOlJ4mC,uCAAoB,SAAAhE,IAAA,IAAA9Q,EAAA00I,EAAA96B,EAAAmhC,EAAAlgK,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAm4B,GAAA,cAAAA,EAAAj4B,KAAAi4B,EAAAh4B,MAAA,UAAOwmB,EAAP+6I,EAAA/yK,OAAA,QAAA+tB,IAAAglJ,EAAA,GAAAA,EAAA,GAAiB,KAC7BrG,EAAcxrK,EAAK1C,cAAcs9B,iBADrB0N,EAAAxW,GAGN/gB,SAAS+lB,GAHHwR,EAAAxW,GAAA,CAAAwW,EAAAh4B,KAAA,eAAAg4B,EAAAh4B,KAAA,EAGuBk7J,EAAY9sJ,IAAIi8C,IAAIC,QAH3C,OAAAtyB,EAAAxW,GAAAwW,EAAAl1B,KAAA,UAGlB0jB,EAHkBwR,EAAAxW,GAAAwW,EAAA4L,GAIEl0C,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,oBAAoBqiB,EAAU,SAJ9EwR,EAAA4L,GAAA,CAAA5L,EAAAh4B,KAAA,gBAAAg4B,EAAAh4B,KAAA,GAIgGk7J,EAAY9sJ,IAAIi8C,IAAIm3G,iBAJpH,QAAAxpI,EAAA4L,GAAA5L,EAAAl1B,KAAA,eAIZs9H,EAJYpoG,EAAA4L,GAAA5L,EAAAxpB,OAAA,SAMX,CACL1e,GAAG02B,EACH9xB,KAAK0rI,IARW,yBAAApoG,EAAA92B,SAAAo2B,EAAArqC,WAYrBw0K,kCAAe,SAAApoI,IAAA,OAAAvZ,EAAA/wB,EAAA8Q,KAAA,SAAAy5B,GAAA,cAAAA,EAAAv5B,KAAAu5B,EAAAt5B,MAAA,cAAAs5B,EAAAv5B,KAAA,EAAAu5B,EAAA9qB,OAAA,SAEJ9e,EAAK0C,MAAM+b,KAAKC,IAAIi8C,IAAIC,MAAM,SAACx9C,EAAO0Z,GAC3C,IAAII,EAAOt4B,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAM+rB,QAAQyI,SACtCA,EAAQ92B,GAAK02B,EACb,IAAIrI,EAAU7vB,OAAOgF,OAAO,GAAG5D,EAAK0C,MAAM+rB,SAC1CA,EAAQyI,QAAUA,EAClBzI,EAAQ0I,iBAAmBntB,IAAcykB,QAAQ0gH,gBAAgBtiI,SAASiqB,GAC1E92B,EAAKkD,SAAS,CAAEurB,eARP,OAAAmb,EAAAv5B,KAAA,EAAAu5B,EAAA9X,GAAA8X,EAAA,SAWX5pC,EAAK1C,cAAc6iB,UAAU,6BAA7BypB,EAAA9X,IAXW,wBAAA8X,EAAAp4B,SAAAm4B,EAAApsC,KAAA,cAef0uK,kCAAe,SAAA/hI,IAAA,IAAApT,EAAArI,EAAAi/I,EAAAsE,EAAAC,EAAAC,EAAAvgK,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAg6B,GAAA,cAAAA,EAAA95B,KAAA85B,EAAA75B,MAAA,cAAOwmB,EAAPo7I,EAAApzK,OAAA,QAAA+tB,IAAAqlJ,EAAA,GAAAA,EAAA,GAAiB,MACxBzjJ,EADO7vB,OAAAg5B,EAAA,EAAAh5B,CAAA,GACOoB,EAAK0C,MAAM+rB,UAEvBsI,SAAW/2B,EAAK0f,qBAHXyqB,EAAA75B,KAAA,EAIWtQ,EAAK4rC,kBAAkB9U,GAJlC,cAIbrI,EAAQyI,QAJKiT,EAAA/2B,KAMPs6J,IAAuBj/I,EAAQyI,QAAQ92B,GAC7CquB,EAAQ0I,kBAAoBu2I,GAAsBj/I,EAAQyI,QAAQ92B,KAAOquB,EAAQsI,SAAS32B,GAC1FquB,EAAQy1I,oBAAsBz1I,EAAQyI,QAAQ92B,IAAM4J,IAAcykB,QAAQ0gH,gBAAgBtiI,SAAS4hB,EAAQyI,QAAQ92B,IAE7G4xK,EAAwBvjJ,EAAQyI,QAAQ92B,IAAMquB,EAAQyI,QAAQ92B,KAAOJ,EAAK0C,MAAM+rB,QAAQyI,QAAQ92B,GAChG6xK,EAAyBxjJ,EAAQsI,SAAS32B,IAAMquB,EAAQsI,SAAS32B,KAAOJ,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,GAErGJ,EAAK0C,MAAM+rB,QAAQyI,QAAQ92B,KAAM4xK,IAAyBC,GAA2BjyK,EAAK0C,MAAMgrK,oBACnG1tK,EAAKkD,SAAS,CACZurB,UACAi/I,uBAhBSvjI,EAAArrB,OAAA,SAoBN2P,GApBM,yBAAA0b,EAAA34B,SAAA04B,EAAA3sC,WAuBf+wB,gEAA4B,SAAAmc,EAAO7c,EAAcukJ,GAArB,IAAAlkJ,EAAA3mB,EAAArE,EAAA4uD,EAAAb,EAAAsN,EAAArgD,EAAAm0J,EAAA5lK,EAAAyqB,EAAAD,EAAAq7I,EAAAvhH,EAAAgB,EAAA9xC,EAAAsyJ,EAAAC,EAAAC,EAAAC,EAAA5B,EAAA6B,EAAA/gK,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAAu6B,GAAA,cAAAA,EAAAr6B,KAAAq6B,EAAAp6B,MAAA,UAAqC2d,EAArCykJ,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAA8C,GAAIprK,EAAlDorK,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAA0D,KAAMzvK,EAAhEyvK,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAA2E,KAAM7gH,EAAjF6gH,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAAoG,KAAM1hH,EAA1G0hH,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAAqH,KAAMp0G,EAA3Ho0G,EAAA5zK,OAAA,QAAA+tB,IAAA6lJ,EAAA,GAAAA,EAAA,GAAoI,KAEzJ1yK,EAAK0C,MAAM+rB,QAAQ0I,iBAFE,CAAAuT,EAAAp6B,KAAA,eAIxBtQ,EAAK0C,MAAMqkI,OAAOjyF,QAAQ63H,wBAJFjiI,EAAA5rB,OAAA,UAKjB,GALiB,UASrB9e,EAAK0C,MAAM8J,QATU,CAAAk+B,EAAAp6B,KAAA,gBAUxBtQ,EAAK4xK,sBACmB,oBAAb3uK,GACTA,EAAS,KAAK,yBAZQynC,EAAA5rB,OAAA,UAcjB,GAdiB,YAkBtB9e,EAAK0C,MAAMopK,kBAlBW,CAAAphI,EAAAp6B,KAAA,gBAmBxBtQ,EAAK0sK,oBACmB,oBAAbzpK,GACTA,EAAS,KAAK,uBArBQynC,EAAA5rB,OAAA,UAuBjB,GAvBiB,YA8BtBb,EAAcje,EAAK6tK,kBAAkBvvG,IAC7BtjC,OAASm3I,EAErBnyK,EAAK8tK,eAAe7vJ,GAGpBA,EAAYjgB,KAAO,WACnBigB,EAAYhR,OAAS,UACrBgR,EAAYgQ,OAASA,EAGrBjuB,EAAKi3D,kBAAkBh5C,GAzCGm0J,EA2CKpyK,EAAK0C,MAA5B8J,EA3CkB4lK,EA2ClB5lK,QAASyqB,EA3CSm7I,EA2CTn7I,UACbD,EAAWC,EAAUjM,KAAK,SAAAre,GAAC,OAAIA,EAAE3H,OAAS4oB,IA5CpB,CAAA8c,EAAAp6B,KAAA,eA8CA,oBAAbrN,GACTA,EAAS,KAAK,sBA/CQynC,EAAA5rB,OAAA,SAiDjB9e,EAAK1C,cAAc6iB,UAAnB,yBAAAje,OAAsD0rB,KAjDrC,eAoD1BoJ,EAAWA,EAASA,SAOhBq7I,EAA8B,KA3DR3nI,EAAAr6B,KAAA,GA+DnB/I,IACHA,EAAQtH,EAAK1C,cAAcqT,MAAM,IAGnC3Q,EAAK1C,cAAc6iB,UAAU,4BAA4ByN,EAAaoJ,EAASgQ,SAASx6B,EAAQ2lK,EAAelkJ,EAAQ3mB,EAAQ,CAAEuB,KAAM2D,EAASlF,SAAU,CAAEuB,KAAM2D,IAnE1Ik+B,EAAAp6B,KAAA,IAsERwgD,EAAA95B,EAAS8d,SAAQq9H,GAAjBzgK,MAAAo/C,EAAAlyD,OAAA6/B,GAAA,EAAA7/B,CAAoCqvB,IACjDqjC,YAAYhqD,EAAQ,CAAEuB,KAAM2D,EAASlF,SAAU,CAAEuB,KAAM2D,IACvDk2C,MAAM,SAAAngD,GAAC,OAAIq0B,QAAQxZ,MAAM7a,KAxEJ,eAsEpByd,EAtEoB0qB,EAAAt3B,QA6EtB4M,GADAA,EAAMhgB,EAAK1C,cAAcqT,MAAMqP,IACrB9O,KAAK8O,EAAInW,MAAM7J,EAAK1C,cAAcqT,MAAM,SAG9CqgD,GAAYhxC,EAAI5O,GAAGpR,EAAK1C,cAAcqT,MAAMqgD,MAC9ChxC,EAAMhgB,EAAK1C,cAAcqT,MAAMqgD,IAIjChxC,EAAMhgB,EAAK0C,MAAM+b,KAAK0W,MAAMF,KAAKjV,EAAIqtC,aAAat3B,KAAUu3B,eAGxDglH,EAAuB,SAACpgH,EAAoBC,GAI5CkgH,GACFvwJ,OAAOC,aAAaswJ,GAKtBp0J,EAAY00J,mBAAqB,EAEjC,IAAM36D,GAAiBhuG,IAAcykB,QAAQwgH,UAAgC,oBAAbhsI,GAA2D,IAAhCgb,EAAY00J,kBAGjGC,EAAsB5yK,EAAKvC,MAAM6kD,OAAO4sF,uBAAyB,EAEjC,IAAlCjxH,EAAY00J,kBAEd10J,EAAYhR,OAAS,YACZgR,EAAY00J,kBAInB10J,EAAY00J,oBAAsBC,EAGhCzgH,EAAQllD,OACVgR,EAAYhR,OAAS,UACXklD,EAAQllD,SAClBgR,EAAYhR,OAAS,SAEdgR,EAAY00J,kBAKnB36D,IAEE7lD,IACFl0C,EAAY4wB,UAAYsjB,GAE1Bl0C,EAAY40J,YAAc,eAC1B7yK,EAAKi3D,kBAAkBh5C,GAEvBhb,EAASgb,GAETje,EAAK1C,cAAc6iB,UAAU,YAAa+xC,EAAoBC,EAASl0C,KAIrEs0J,EAAqB,SAArBA,EAAsBvkJ,EAAgB8kJ,GAC1C,IAAK9kJ,EACH,OAAO,EAEThuB,EAAK0C,MAAM+b,KAAKC,IAAI62B,sBAAsBvnB,EAAgB,SAACrP,EAAIkwB,GACzDA,GAAaA,EAAU5hC,QACzBjN,EAAK1C,cAAc6iB,UAAU,wBAAyB0uB,GACtDyjI,EAAqB,EAAEzjI,IAEvBwjI,EAA8BvwJ,OAAOlB,WAAY,kBAAM2xJ,EAAmBvkJ,EAAgB8kJ,IAAWA,MAKrGN,EAAkB,SAAArgH,GAIlBkgH,GACFvwJ,OAAOC,aAAaswJ,GAIlBlgH,IACFl0C,EAAY4wB,UAAYsjB,GAE1Bl0C,EAAY40J,YAAc,UAGtB7oK,IAAcykB,QAAQwgH,UACxBhxH,EAAYhR,OAAS,UACG,oBAAbhK,GACTA,EAASgb,KAGXje,EAAKi3D,kBAAkBh5C,GAGnBk0C,EAAQllD,SACVolK,EAA8BvwJ,OAAOlB,WAAY,kBAAM2xJ,EAAmBpgH,EAAQnkC,gBAAgB,MAAO,QAlLvF0c,EAAA5rB,OAAA,UA0LjBgzC,EAAA96B,EAAS8d,SAAQq9H,GAAjBzgK,MAAAogD,EAAAlzD,OAAA6/B,GAAA,EAAA7/B,CAAoCqvB,IACxClF,KAAKzhB,EAAQ,CAAEuB,KAAM2D,EAASlF,QAAO0Y,OAAoB,CAAEnX,KAAM2D,EAASwT,QAC1EgyC,GAAG,kBAAmB,SAAAjvD,GAGrB,GAFA/C,EAAK1C,cAAc6iB,UAAU,sBAAuBpd,IAE/CA,EAEH,OADA/C,EAAK1C,cAAc6iB,UAAU,yCAA0Cpd,IAChE,EAGTkb,EAAY+P,gBAAkBjrB,EAC9Bkb,EAAYhR,OAAS,UACrBgR,EAAY40J,YAAc,kBAC1B7yK,EAAKi3D,kBAAkBh5C,GAEnB4zC,GACFA,EAAiB5zC,GAIfje,EAAKvC,MAAM0D,WACTkxK,GACFvwJ,OAAOC,aAAaswJ,GAEtBA,EAA8BvwJ,OAAOlB,WAAY,kBAAM2xJ,EAAmBxvK,EAAK,MAAQ,QAG1FivD,GAAG,UAAWwgH,GACdxgH,GAAG,eAAgBsgH,GACnBtgH,GAAG,QAAS,SAAA50C,GAEXwZ,QAAQwY,IAAI,WAAWhyB,GAEvB,IAAMq1J,KAAar1J,IAASA,EAAMmmC,SAA6C,oBAA3BnmC,EAAMmmC,QAAQ12C,WAA0BuQ,EAAMmmC,QAAQ12C,SAAS,qCASnH,GANAoR,EAAYhR,OAAS,QACrBgR,EAAY40J,YAAc,QAC1B7yK,EAAKi3D,kBAAkBh5C,IAIlBw0J,EAAW,CACd3wJ,OAAO2oF,cAAcC,WAAW,uBAAwB,CACtDngG,KAAM,QACNsgG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAMkmE,EAAUzzJ,aAAiBw1C,MAEJ,qBAAlBx1C,EAAMmmC,QACfvjD,EAAK8sK,0BAA0B,KAAK1vJ,EAAMmmC,SACjCvjD,EAAK1C,cAAc8nD,kBAAoByrH,GAChDI,KAAwB7zJ,GAIJ,oBAAbna,GACTA,EAASgb,EAAYb,MAxPH,eAAAstB,EAAAr6B,KAAA,GAAAq6B,EAAA5Y,GAAA4Y,EAAA,UA6PxB9T,QAAQwY,IAAI,iBAAZ1E,EAAA5Y,IAEA7T,EAAYhR,OAAS,QACrBjN,EAAKi3D,kBAAkBh5C,GAIvB6D,OAAO2oF,cAAcC,WAAW,4CAA6C,CAC3EngG,KAAM,QACNsgG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGd8nE,KAAa/nI,EAAA5Y,KAAS4Y,EAAA5Y,GAAMyxB,UAAU7Y,EAAA5Y,GAAMyxB,QAAQ12C,SAAS,qCAE7DgkK,EAAUnmI,EAAA5Y,cAAiB8gC,MAC5B5yD,EAAK1C,cAAc8nD,kBAAoByrH,IAAY4B,GACtDxB,KAAAvmI,EAAA5Y,IAGsB,oBAAb7uB,GAETA,EAASgb,EAADysB,EAAA5Y,IAtRc4Y,EAAA5rB,OAAA,UAyRjB,GAzRiB,yBAAA4rB,EAAAl5B,SAAAi5B,EAAAltC,KAAA,wEA8R5BswK,kBAAoB,WAAiB,IAAhBvvG,EAAgB3sD,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,GAAAA,UAAA,GAAT,KACtBsM,EAAWrf,OAAAg5B,EAAA,EAAAh5B,CAAA,GACV0/D,GAUL,OARArgD,EAAY4wB,UAAY,GACxB5wB,EAAYiiC,QAAUpuC,KAAK0gC,MAC3Bv0B,EAAY00J,kBAAoB,EAChC10J,EAAYhR,OAAS,cACrBgR,EAAY80J,YAAcjhK,KAAK0gC,MAC/Bv0B,EAAYvN,MAAQ1Q,EAAKvC,MAAM4I,cAC/B4X,EAAY0hB,SAAW3/B,EAAKvC,MAAMoV,iBAClCoL,EAAY6Y,UAAY92B,EAAK1C,cAAcmX,gBAAgB,CAAC,UAAU,oBAC/DwJ,KAGT6vJ,eAAiB,SAAA7vJ,GACf,IAAMjR,EAAYpO,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMsK,cACrCA,EAAY,KAAA9K,OAAM+b,EAAYiiC,UAAajiC,EAC3Cje,EAAKkD,SAAS,CAAE8J,oBAIlBiqD,kBAAoB,SAAA+7G,GAClB,IAAMhmK,EAAYpO,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMsK,cAC/BiR,EAAWrf,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQo0K,GAezB,OAdA/0J,EAAY80J,YAAcjhK,KAAK0gC,MAC/BxlC,EAAY,KAAA9K,OAAM8wK,EAAmB9yH,UAAajiC,EAClDje,EAAKkD,SAAS,CAAE8J,iBAIZiR,EAAY+P,kBAEdhuB,EAAK1C,cAAcuxE,kBAGnB7uE,EAAK1C,cAAc+8C,qBAAnB,KAAAn4C,OAA6C+b,EAAYiiC,SAAUjiC,IAG9DA,KAIT+rJ,qBAAuB,SAAAznK,GACJ,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKykK,uBAAwB,EAEpCjqK,EAAKkD,SAAS,CAAE6jI,cAGlB6qC,oBAAsB,SAAArvK,GACH,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKykK,uBAAwB,EACpCjqK,EAAKkD,SAAS,CAAE6jI,OAAQA,OAG1BqjC,4BAA8B,SAAA7nK,GACX,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK6kK,0BAA2B,EACvCrqK,EAAKkD,SAAS,CAAE6jI,cAGlBgmC,2BAA6B,SAAAxqK,GACV,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK6kK,0BAA2B,EACvCtjC,EAAOvhI,KAAKinK,kCAAmC,EAC/C1lC,EAAOvhI,KAAKykK,uBAAwB,EAEpCjqK,EAAKkD,SAAS,CAAE6jI,cAGlBmkC,2BAA6B,SAAA3oK,GACV,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK4lK,kBAAmB,EAC/BprK,EAAKkD,SAAS,CAAE6jI,cAGlB+lC,0BAA4B,SAACvqK,EAAE6a,GACZ,qBAAN7a,GAAqBA,GAC9BA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK4lK,iBAAmBhuJ,EAE/Bpd,EAAKkD,SAAS,CAAE6jI,cAGlB+jC,0BAA4B,SAAAvoK,GAM1B,GALiB,qBAANA,GACTA,EAAEoJ,kBAIC3L,EAAK0C,MAAMqkI,OAAOvhI,KAAKwlK,gBAC1B,OAAO,EAGT,IAAIjkC,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKwlK,iBAAkB,EAC9BhrK,EAAKkD,SAAS,CAAE6jI,cAGlB8lC,yBAA2B,SAACtqK,EAAE6a,GACX,qBAAN7a,GAAqBA,GAC9BA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAGjB,oBAAR3pH,IACFA,EAAQ,mCAGNpd,EAAK0C,MAAMqkI,OAAOvhI,KAAKwlK,kBAAoB5tJ,IAE7C2pH,EAAOvhI,KAAKwlK,gBAAkB5tJ,EAC9Bpd,EAAKkD,SAAS,CAAE6jI,eAIpBwjC,iCAAmC,SAAAhoK,GAChB,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKglK,qBAAsB,EAClCxqK,EAAKkD,SAAS,CAAE6jI,cAGlBimC,gCAAkC,SAAAzqK,GACf,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKglK,qBAAsB,EAClCxqK,EAAKkD,SAAS,CAAE6jI,cAGlBuiC,wBAA0B,SAAA/mK,GACP,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK+jK,0BAA2B,EACvCvpK,EAAKkD,SAAS,CAAE6jI,cAGlB6lC,uBAAyB,SAAArqK,GACN,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAK+jK,0BAA2B,EACvCvpK,EAAKkD,SAAS,CAAE6jI,cAGlB0iC,mBAAqB,SAAAlnK,GACF,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKkkK,qBAAsB,EAClC1pK,EAAKkD,SAAS,CAAE6jI,cAGlBksC,kBAAoB,SAAA1wK,GACD,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKkkK,qBAAsB,EAClC1pK,EAAKkD,SAAS,CAAE6jI,cAGlB6iC,uBAAyB,SAAArnK,GACN,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKqkK,yBAA0B,EACtC7pK,EAAKkD,SAAS,CAAE6jI,cAGlB4lC,sBAAwB,SAAApqK,GACL,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKqkK,yBAA0B,EACtC7pK,EAAKkD,SAAS,CAAE6jI,cAGlB2jC,mBAAqB,SAAAnoK,GACF,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKmlK,qBAAsB,EAClC3qK,EAAKkD,SAAS,CAAE6jI,cAGlB2lC,kBAAoB,SAAAnqK,GACD,qBAANA,GACTA,EAAEoJ,iBAGJ,IAAIo7H,EAAMnoI,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAQoB,EAAK0C,MAAMqkI,QAC7BA,EAAOvhI,KAAKmlK,qBAAsB,EAClC3qK,EAAKkD,SAAS,CAAE6jI,cAGlBrkI,MAAQ,CACN+b,KAAM,KACNonJ,QAAQ,KACRr5J,QAAS,KACTyqB,UAAW,GACXk5G,SAAU,KACVtoF,SAAU,KACV1Y,WAAW,KACXniC,aAAc,GACd0+J,cAAc,GACdwH,YAAa,KACb1H,YAAa,KACbC,aAAa,KACb33J,cAAc,KACd63J,eAAgB,KAChBv0I,kBAAmB,GACnBylH,iBAAkB,KAClBqtB,iBAAkB,KAClBkE,kBAAiB,EACjBvC,kBAAkB,KAClBsH,kBAAmB,KACnBvH,SAAU5rK,EAAK4rK,SACfE,kBAAmB,KACnB4B,oBAAmB,EACnBxB,oBAAmB,EACnB52G,qBAAqB,KACrB89G,uBAAuB,GACvB1xD,sBAAqB,EACrBmnD,YAAa7oK,EAAK6oK,YAClBuD,yBAA0B,KAC1BrkH,aAAc/nD,EAAK+nD,aACnByd,aAAcxlE,EAAKwlE,aACnBwmG,eAAgBhsK,EAAKgsK,eACrBjC,gBAAiB/pK,EAAK+pK,gBACtBoC,iBAAkBnsK,EAAKmsK,iBACvBlgH,iBAAkBjsD,EAAKisD,iBACvB++C,kBAAmBhrG,EAAKgrG,kBACxBqhE,oBAAqBrsK,EAAKqsK,oBAC1BC,qBAAsBtsK,EAAKssK,qBAC3Bh+I,0BAA2BtuB,EAAKsuB,0BAChCglG,0BAA2BtzH,EAAKszH,0BAChCi5C,yBAA0BvsK,EAAKvC,MAAM8uK,yBACrC99I,QAAS,CACPyI,QAAS,GACTH,SAAU,GACVI,iBAAkB,KAClB80I,aAAcjsK,EAAKisK,cAErBllC,OAAQ,CACNvhI,KAAM,CACJwlK,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBuC,uBAAwB,KACxB3C,wBAAyB,KACzBQ,yBAA0B,KAC1B+B,yBAA0B,KAC1BK,iCAAkC,KAClC/C,oBAAqB1pK,EAAK0pK,oBAC1BH,yBAA0BvpK,EAAKupK,0BAEjCz0H,QAAS,CACP43H,kBAAmB1sK,EAAK0sK,kBACxBuG,kBAAmBjzK,EAAKizK,kBACxBxJ,mBAAoBzpK,EAAKypK,mBACzBiB,mBAAoB1qK,EAAK0qK,mBACzBkH,oBAAqB5xK,EAAK4xK,oBAC1B5H,qBAAsBhqK,EAAKgqK,qBAC3B2C,sBAAuB3sK,EAAK2sK,sBAC5B/C,uBAAwB5pK,EAAK4pK,uBAC7BgD,uBAAwB5sK,EAAK4sK,uBAC7BtD,wBAAyBtpK,EAAKspK,wBAC9BuD,yBAA0B7sK,EAAK6sK,yBAC/B/B,0BAA2B9qK,EAAK8qK,0BAChCgC,0BAA2B9sK,EAAK8sK,0BAChC5B,2BAA4BlrK,EAAKkrK,2BACjC6B,2BAA4B/sK,EAAK+sK,2BACjC3C,4BAA6BpqK,EAAKoqK,4BAClC6C,gCAAiCjtK,EAAKitK,gCACtCD,gCAAiChtK,EAAKgtK,gCACtCE,iCAAkCltK,EAAKktK,iCACvC3C,iCAAkCvqK,EAAKuqK,mCAG3CtsJ,YAAa,CACXzY,KAAM,CACJwH,aAAc,MAEhBmgK,KAAM,GACNr4H,QAAS,gFAtwDX,IAAMr3C,EAAQmB,OAAOgF,OAAO,GAAGrG,KAAKE,OACpCA,EAAMw5B,UAAY15B,KAAKmF,MAAMu0B,UACzB15B,KAAKD,eACPG,EAAM+O,QAAUjP,KAAKmF,MAAM8J,QAC3BjP,KAAKD,cAAcE,SAASC,KAE5BA,EAAM+O,QAAUjP,KAAKmF,MAAM8J,QAC3BjP,KAAKD,cAAgB,IAAII,KAAcD,mDAKzCF,KAAKoF,oBAAqB,yKAI1BpF,KAAKI,qBACCJ,KAAK0uK,sBAGPnqJ,OAAO0e,UACT1e,OAAO0e,SAASwxB,GAAG,iBAAnB,eAAAztB,EAAA3lC,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAAqC,SAAAg7B,EAAOjU,GAAP,OAAA1G,EAAA/wB,EAAA8Q,KAAA,SAAAg7B,GAAA,cAAAA,EAAA96B,KAAA86B,EAAA76B,MAAA,OACnC1S,EAAK2vK,qBAAqBz2I,GADS,wBAAAqU,EAAA35B,SAAAu5B,EAAAxtC,SAArC,gBAAA6sC,GAAA,OAAA7F,EAAA7yB,MAAAnU,KAAAoU,YAAA,IAMFmQ,OAAO8pJ,SAAWruK,KAAKquK,SACvB9pJ,OAAO+mJ,YAActrK,KAAKsrK,+IA+uD1B,IAAMwK,EAA+E,kBAA3C91K,KAAKmF,MAAMqkI,OAAOvhI,KAAKwlK,iBAAgCztK,KAAKmF,MAAMqkI,OAAOvhI,KAAKwlK,gBAAgBlsK,OAAO,EACzIw0K,EAAiF,kBAA5C/1K,KAAKmF,MAAMqkI,OAAOvhI,KAAK4lK,kBAAiC7tK,KAAKmF,MAAMqkI,OAAOvhI,KAAK4lK,iBAAiBtsK,OAAO,EAClJ,OACEiF,EAAA1E,EAAAC,cAAA,WACEyE,EAAA1E,EAAAC,cAACgsK,GAAyBiI,SAA1B30K,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEE6J,MAAO/J,KAAKmF,SAEdqB,EAAA1E,EAAAC,cAACk0K,GAAD50K,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEspI,OAAQxpI,KAAKmF,MAAMqkI,OACnBt4G,QAASlxB,KAAKmF,MAAM+rB,QACpBjiB,QAASjP,KAAKmF,MAAM8J,QACpBrL,SAAU5D,KAAKE,MAAM0D,SACrB0nK,YAAatrK,KAAKmF,MAAMmmK,YACxB9C,aAAcxoK,KAAKE,MAAMsoK,aACzBgE,gBAAiBxsK,KAAKmF,MAAMqnK,gBAC5BG,iBAAkB3sK,KAAKmF,MAAMwnK,iBAC7BG,yBAA0B9sK,KAAKmF,MAAM2nK,yBACrC+B,yBAA0B7uK,KAAKmF,MAAM0pK,4BAEvCroK,EAAA1E,EAAAC,cAACm0K,GAAD,CACE1sC,OAAQxpI,KAAKmF,MAAMqkI,OACnBv6H,QAASjP,KAAKmF,MAAM8J,QACpBq5J,QAAStoK,KAAKE,MAAMooK,QACpBp3D,OAAQ6kE,IAEVvvK,EAAA1E,EAAAC,cAACo0K,GAAD,CACE3sC,OAAQxpI,KAAKmF,MAAMqkI,OACnBv6H,QAASjP,KAAKmF,MAAM8J,QACpBq5J,QAAStoK,KAAKE,MAAMooK,QACpBp3D,OAAQ4kE,EACRtN,aAAcxoK,KAAKE,MAAMsoK,eAE3BhiK,EAAA1E,EAAAC,cAACq0K,GAAD,CACEl1J,KAAMlhB,KAAKmF,MAAM+b,KACjBtc,MAAO5E,KAAKE,MAAM0E,MAClBssB,QAASlxB,KAAKmF,MAAM+rB,QACpB04I,eAAgB5pK,KAAKE,MAAM0pK,yBA1zDLp4D,IAAMtvG,WAAhC6tK,GACGsG,SAAWtI,GAAyBsI,SAg0D9BtG,4BCzuDA1+D,8MAvLblsG,MAAQ,KAKRpF,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,4JAK9CF,KAAKI,kQAKLJ,KAAKI,iMAGkBkF,EAAWC,sEAElCvF,KAAKI,aAEDJ,KAAKE,MAAMgxB,SAAYlxB,KAAKE,MAAMgxB,QAAQ0I,2DACrC,yIAIF,IAAAv5B,EAAAL,KAEHs2K,EAAU,kBACVC,EAAa,CAAC,OAAO,QACLv2K,KAAKD,cAAc2nD,mBAErC6uH,EAAa,CAAC,OAAO,QACrBD,EAAU,6BAEZ,IAAME,EAAoBx2K,KAAKD,cAAcmX,gBAAgB,CAAC,aAAa,YAE3E,OACE1Q,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEpC,MAAO,CACL2D,KAAM,IACN2D,MAAO,IACPwB,OAAQ,GACRD,SAAU,aAGZ1G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEhF,EAAG,EACHP,WAAY,SACZE,eAAgB,SAChB0M,gBAAiB,YACjB3M,cAAe,CAAC,SAAS,QAEzBqF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEhD,MAAO,QACP4E,UAAW,UAFb,sCAMA7B,EAAA1E,EAAAC,cAACu6G,GAAA,EAAD,CACE5uG,GAAI,EACJ5F,GAAI,EACJoV,GAAI,CAAC,EAAE,GACP5Z,GAAI,CAAC,EAAE,GACPc,GAAI,OACJX,MAAO,QACPY,MAAO,CACLiC,QAAQ,OACRY,aAAa,MACb/F,cAAc,MACdD,WAAW,YAEb4M,gBAAiB,UACjBmY,KAAM,uEAdR,YAiBEzf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEnD,GAAI,EACJ8C,KAAM,QACN3C,MAAO,QACPgE,KAAM,yBAKZjB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEgb,GAAI,CAAC,EAAE,GACP7a,GAAI,OACJsnB,GAAI,cACJjtB,MAAO,CAAC,MAAM,QACdqD,SAAU,CAAC,OAAO,SAClBpD,WAAY,CAAC,SAAS,eAEtBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEnD,GAAI,CAAC,EAAG,GACRrC,MAAO,CAAC,GAAK,MAEbuF,EAAA1E,EAAAC,cAAC6oK,GAAA,EAAD,CACEhwI,GAAG,KAEHp0B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE2G,IAAKkpK,EACLppK,SAAU,WACVhK,OAAQqzK,MAId/vK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,CAAC,GAAI,EAAE,IACdC,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEiH,GAAI,CAAC,EAAE,GACPxM,WAAY,SACZC,cAAe,OAGbq1K,GACEhwK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACElD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB1E,QAAU,SAACqB,GAAD,OAAOuf,OAAOkX,SAASj2B,KAAK,iBANxC,eAYDxF,KAAKE,MAAM0D,UACV4C,EAAA1E,EAAAC,cAAAyE,EAAA1E,EAAAopG,SAAA,KACE1kG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEG,GAAI,EACJrD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB1E,QAAS,SAACqB,GAAO3E,EAAKN,cAAc46B,SAAS7L,SAASC,eAAe,YAAY0nJ,UAAU,OAP7F,cAWAjwK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACElD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB1E,QAAS,SAACqB,GAAO3E,EAAKN,cAAc46B,SAAS7L,SAASC,eAAe,OAAO0nJ,UAAU,OANxF,oBAxJCjlE,IAAMtvG,sBCPZ,SAASw0K,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRtyJ,OAAOoW,SAAS,EAAG,IAClB,CAACg8I,IAEG,+BCwCMG,8MAxCb3xK,MAAQ,2EAGN,OACEqB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,KAAOxE,gBAAiB4F,GAAI,CAAC,EAAE,GAAI0Z,GAAI,CAAC,MAAO,QAC7Djb,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,KAAOvE,iBACvBoE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyG,SAAU,WAAYC,OAAQ,IACjC3G,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,SAAUD,WAAY,SAAUoD,SAAU,CAAC,OAAQ,QAASsC,GAAI,OAAQyB,UAAW,SAAUoZ,GAAI,CAAC,MAAO,QAC5Hjb,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQw6J,GAAT,CAAY12J,WAAY,YAAawhG,WAAY,QAAS3jG,GAAI,QAAS7E,SAAU,CAAC,QAAQ,GAAI8E,UAAW,SAAU5E,MAAO,SAA1H,4BAGA+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAY/0G,WAAY,YAAawhG,WAAY,QAAS3jG,GAAI,QAAS5E,WAAY,EAAGD,SAAU,CAAC,QAAQ,GAAI8E,UAAW,SAAU5E,MAAO,SAAzI,wDAGA+C,EAAA1E,EAAAC,cAAC6oK,GAAA,EAAD,CAAYhwI,GAAG,IAAIv2B,MAAO,CAACqwH,eAAe,SACxCluH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEC,UAAWqwK,KAAcvnJ,eACzBtoB,aAAc,EACdd,MAAMpG,KAAKE,MAAM0D,SAAW,UAC5BuD,UAAW,OACXoyG,cAAe,QACf/1G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbqD,GAAI,OACJmB,GAAI,CAAC,EAAE,GACPmV,GAAI,GAVN,sBAkBR1W,EAAA1E,EAAAC,cAACwvG,EAAA,EAAD,cAnCmBrvG,aCyCZ80K,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIz0K,EAAKvC,MAAMgxB,QACb,OAAQzuB,EAAKvC,MAAMgxB,QAAQruB,IACzB,KAAK,EACHq0K,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBjwK,aAAc,MACd4G,gBAAiB9N,KAAKi3K,wBACtB/zK,OAAQ,MACRjC,MAAO,OAGT,OACEuF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKpC,MAAO8yK,EAAetpK,GAAI,IAC/BrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMpC,MAAO,CAAE0J,cAAe,eAC3B/N,KAAKE,MAAMgxB,QAAQzpB,cAxCA+pG,IAAMtvG,WCW9Bk1K,GAAkB,SAAAl3K,GAAK,OAC3BsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKyW,GAAI,EAAGs7G,UAAW,EAAGjtH,YAAY,UAAUkW,GAAI,GAClDjb,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQiI,GAAT,CAAYrG,UAAW,UAAvB,cACA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE9C,QAASzD,EAAMspI,OAAOjyF,QAAQ63H,sBAC9BhpK,KAAK,QACLyH,GAAI,EACJzF,GAAI,GAJN,0BASA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE9C,QAASzD,EAAMspI,OAAOjyF,QAAQ88H,oBAC9BjuK,KAAK,QACLyH,GAAI,EACJzF,GAAI,GAJN,cAQA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAASzD,EAAMspI,OAAOjyF,QAAQi4H,2BAC9B3hK,GAAI,EACJzF,GAAI,GAJN,sBAQA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAASzD,EAAMspI,OAAOjyF,QAAQk4H,gCAC9B5hK,GAAI,EACJzF,GAAI,GAJN,uBAQA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAAS,SAAAqrH,GACP9uH,EAAMspI,OAAOjyF,QAAQ43H,kBAAkBngD,IAEzCnhH,GAAI,EACJzF,GAAI,GANN,aAUA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAASzD,EAAMspI,OAAOjyF,QAAQ83H,uBAC9BxhK,GAAI,EACJzF,GAAI,GAJN,oBAQA5B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAASzD,EAAMspI,OAAOjyF,QAAQm+H,kBAC9B7nK,GAAI,EACJzF,GAAI,GAJN,eAuOWivK,oLA1NX,OACE7wK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMxF,MAAO,QAAS2F,GAAI,OAAQmB,GAAI,GACpCvB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAQ64G,GAAT,CAAYj3G,UAAW,UAAvB,iBAEA7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,QAASoK,GAAI,IACvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,wCAIJD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UACflB,KAAKE,MAAMghB,KACV1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,QAASoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,MAAOoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,kCAGAzG,KAAKE,MAAMghB,KAgBT,KAfF1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGpC,WAAY,SAAUE,eAAgB,iBACjDoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,OAAOoG,GAAI,EAAGpK,MAAM,SAC/B+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,QAAZ,8BAGF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEwf,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBxf,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,SAArB,6BAQPpG,KAAKE,MAAMghB,KACV1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEqB,GAAI,EACJwG,GAAI,EACJkqH,UAAW,EACXphB,aAAc,EACd7rG,YAAa,UACblD,UAAW,SACXjH,eAAgB,eAChBF,WAAY,UAEZsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEL,KAAK,QACLzC,QAAS3D,KAAKE,MAAM61H,0BACpB3uH,UAAWpH,KAAKE,MAAMghB,MAHxB,sBAOA1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,eACAD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAQL,KAAK,QAAQgB,UAAQ,GAA7B,6BAIA,KAEJZ,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UACflB,KAAKE,MAAMgxB,QAAQ0I,iBAClBpzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,QAASoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,MAAOoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,yBAGDzG,KAAKE,MAAMghB,OAASlhB,KAAKE,MAAMgxB,QAAQ0I,iBACtCpzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGpC,WAAY,SAAUE,eAAgB,iBACjDoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,OAAOoG,GAAI,EAAGpK,MAAM,SAC/B+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEoH,GAAI,EACJpK,MAAM,OACNY,MAAO,CAAE0J,cAAe,eAH1B,oBAOAvH,EAAA1E,EAAAC,cAACu1K,GAAD,CAAiBpmJ,QAASlxB,KAAKE,MAAMgxB,QAAQyI,WAE/CnzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEoH,GAAI,EACJpK,MAAM,OACNY,MAAO,CAAE0J,cAAe,eAH1B,qBAOAvH,EAAA1E,EAAAC,cAACu1K,GAAD,CAAiBpmJ,QAASlxB,KAAKE,MAAMgxB,QAAQsI,cAKnDhzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,QAAQzC,QAAS3D,KAAKE,MAAMwuK,cAAjD,kBAIA,KACH1uK,KAAKE,MAAMghB,MAAQlhB,KAAKE,MAAM05B,iBAC7BpzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGpC,WAAY,UACvBsF,EAAA1E,EAAAC,cAACu1K,GAAD,CAAiBpmJ,QAASlxB,KAAKE,MAAMgxB,QAAQyI,WAE7C,MAGNnzB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UACflB,KAAKE,MAAM+O,SAAWjP,KAAKE,MAAMysK,iBAChCnmK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,QAASoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,MAAOoK,GAAI,IAEvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,uCAGAzG,KAAKE,MAAM+O,UACbjP,KAAKE,MAAMghB,MACVlhB,KAAKE,MAAM+sK,oBAWR,KAVFzmK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGpC,WAAY,SAAUE,eAAgB,iBACjDoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,OAAOoG,GAAI,EAAGpK,MAAM,SAC/B+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,QAAZ,gCAGF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,QAAQzC,QAAS3D,KAAKE,MAAMorK,aAAjD,YAKHtrK,KAAKE,MAAM+O,SAAWjP,KAAKE,MAAMghB,KAChC1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGpC,WAAY,UACvBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQhE,MAAO,QAASoK,GAAI,IACvCrH,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,QAAZ,oBAAqCzD,KAAKE,MAAM+O,SAChDzI,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAOzD,KAAKE,MAAMquK,kBAAoB,MAAQ,QAApD,mBACmBvuK,KAAKE,MAAMkuK,kBAIhC,KAEHpuK,KAAKE,MAAM+sK,oBACVzmK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,EAAGlC,eAAgB,iBAC3BoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQoG,GAAI,EAAGpK,MAAM,QAChC+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,OAAZ,kCAGF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,QAAQzC,QAAS3D,KAAKE,MAAMorK,aAAjD,YAIA,KAE8B,OAAhCtrK,KAAKE,MAAMysK,mBACqB,IAAhC3sK,KAAKE,MAAMysK,mBACb3sK,KAAKE,MAAMghB,KAgBP,KAfF1a,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEnD,GAAI,EACJgL,GAAI,EACJpN,WAAY,SACZE,eAAgB,iBAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,OAAOoG,GAAI,EAAGpK,MAAM,SAC/B+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,QAAZ,yBAGF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,QAAQzC,QAAS3D,KAAKE,MAAMssK,iBAAjD,cAM6B,IAAhCxsK,KAAKE,MAAMysK,iBACVnmK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACEnD,GAAI,EACJgL,GAAI,EACJpN,WAAY,SACZE,eAAgB,iBAEhBoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMvF,WAAY,UAChBsF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQoG,GAAI,EAAGpK,MAAM,QAChC+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,OAAZ,yBAGF+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAO0gK,QAAR,CAAgB/gK,KAAK,QAAQzC,QAAS3D,KAAKE,MAAMssK,iBAAjD,aAIA,MAEmC,IAAtCxsK,KAAKE,MAAM+uK,uBACVzoK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMnD,GAAI,GACRkD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMgB,KAAK,QAAQoG,GAAI,EAAGpK,MAAM,QAChC+C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAM,OAAZ,yBAEA,MAGN+C,EAAA1E,EAAAC,cAACw1K,GAAoBv3K,KAAKE,OAE1BsG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAauvK,SAAd,CAAuBpxD,IAAK,SAAA4yD,GAAI,OAAKjzJ,OAAO2oF,cAAgBsqE,aAtNzChmE,IAAMtvG,6DCsRlBg9B,GAjWW,CACxB/K,KAAK,CACH4/E,IAAI,CACFrmD,MAAM,EACNv6C,MAAM,MACNtS,SAAS,GACT++B,SAAS,OACT1c,YAAY,SACZhX,QAAQ,6CACRs6B,IAAI,CACFsd,IAAI2zH,GACJ52K,SAAS,GACT4G,KAAK,uBACLyE,QAAQ,8CAEV87D,SAAS,CACPlkB,IAAI4zH,GACJjwK,KAAK,6BAEPygE,GAAG,CACDpkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTijD,IAAI6zH,GACJlwK,KAAK,wCACLyE,QAAQ,6CACR+5B,eAAe,CACb,CACE9yB,MAAM,OACN+gB,SAAQ,EACRhoB,QAAQ,gDAIdW,MAAM,aACNqW,YAAY,SACZzb,KAAK,kBACL0L,MAAM,kBACNjH,QAAQ,8CAEVi8D,GAAG,CACDrkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTijD,IAAI6zH,GACJlwK,KAAK,wCACLyE,QAAQ,6CACR+5B,eAAe,CACb,CACE9yB,MAAM,OACN+gB,SAAQ,EACRhoB,QAAQ,gDAIdW,MAAM,aACNqW,YAAY,SACZzb,KAAK,kBACL0L,MAAM,kBACNjH,QAAQ,+CAGZ8pG,IAAI,CACFtoD,MAAM,EACNv6C,MAAM,MACNtS,SAAS,GACT++B,SAAS,OACT1c,YAAY,SACZhX,QAAQ,6CACRs6B,IAAI,CACFsd,IAAI2zH,GACJ52K,SAAS,GACT4G,KAAK,uBACLyE,QAAQ,8CAEV87D,SAAS,CACPlkB,IAAI4zH,GACJjwK,KAAK,6BAEPygE,GAAG,CACDpkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTijD,IAAI6zH,GACJlwK,KAAK,wCACLyE,QAAQ,6CACR+5B,eAAe,CACb,CACE9yB,MAAM,OACN+gB,SAAQ,EACRhoB,QAAQ,gDAIdW,MAAM,aACNqW,YAAY,SACZzb,KAAK,kBACL0L,MAAM,kBACNjH,QAAQ,8CAEVi8D,GAAG,CACDrkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,wCACLyE,QAAQ,8CAEVW,MAAM,aACNqW,YAAY,SACZzb,KAAK,kBACL0L,MAAM,kBACNjH,QAAQ,gDAIdkkI,KAAK,CACHwnC,MAAM,CACJlqH,MAAM,EACN5J,IAAI8vD,GACJ/yG,SAAS,GACTsS,MAAM,QACNysB,SAAS,OACT1c,YAAY,SACZhX,QAAQ,6CACRs6B,IAAI,CACFsd,IAAI2zH,GACJ52K,SAAS,GACT4G,KAAK,qBACLyE,QAAQ,8CAEV87D,SAAS,CACPlkB,IAAI4zH,GACJjwK,KAAK,2BAEPygE,GAAG,CACDpkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,sCACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,gBACL0L,MAAM,gBACNtG,MAAM,gBACNX,QAAQ,8CAEVi8D,GAAG,CACDrkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,sCACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,gBACL0L,MAAM,gBACNtG,MAAM,gBACNX,QAAQ,gDAIdmkI,OAAO,CACLlB,SAAS,CACPrrF,IAAI8vD,GACJ/yG,SAAS,GACT6sD,MAAM,IACNv6C,MAAM,WACNysB,SAAS,SACTtU,cAAa,EACbpI,YAAY,SACZikB,YAAY,CAAC,MAAM,OACnBj7B,QAAQ,6CACRs6B,IAAI,CACFsd,IAAI2zH,GACJ52K,SAAS,GACT4G,KAAK,0BACLyE,QAAQ,8CAEV87D,SAAS,CACPlkB,IAAI4zH,GACJjwK,KAAK,gCAEPygE,GAAG,CACDpkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,2CACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,qBACL0L,MAAM,qBACNtG,MAAM,qBACNX,QAAQ,8CAEVi8D,GAAG,CACDrkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,2CACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,qBACL0L,MAAM,qBACNtG,MAAM,qBACNX,QAAQ,+CAGZkjI,QAAQ,CACNtrF,IAAI8vD,GACJ/yG,SAAS,GACT6sD,MAAM,IACNv6C,MAAM,UACNysB,SAAS,SACTtU,cAAa,EACbpI,YAAY,SACZikB,YAAY,CAAC,MAAM,OACnBj7B,QAAQ,6CACRs6B,IAAI,CACFsd,IAAI2zH,GACJ52K,SAAS,GACT4G,KAAK,yBACLyE,QAAQ,8CAEV87D,SAAS,CACPlkB,IAAI4zH,GACJjwK,KAAK,+BAEPygE,GAAG,CACDpkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,0CACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,oBACL0L,MAAM,oBACNtG,MAAM,oBACNX,QAAQ,8CAEVi8D,GAAG,CACDrkB,IAAI8vD,GACJ/yG,SAAS,GACTm/B,QAAQ,KACRy0E,UAAU,CACRu4B,MAAM,QACNC,QAAQ,UACRxiH,QAAQ,YACRuB,SAAS,cAEXiV,WAAW,CACTpgC,SAAS,GACTolC,eAAe,GACf6d,IAAI6zH,GACJlwK,KAAK,0CACLyE,QAAQ,8CAEVgX,YAAY,SACZzb,KAAK,oBACL0L,MAAM,oBACNtG,MAAM,oBACNX,QAAQ,iDChTC2rK,GAhDgB,CAC7B33J,YAAa,CACX8lC,QAAS,+BACTonD,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxgG,KAAM,eAER8qK,QAAS,CACP9xH,QAAS,6BACTonD,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxgG,KAAM,eAER+C,QAAS,CACPi2C,QAAS,iCACTonD,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTxgG,KAAM,eAER+qK,UAAW,CACT/xH,QAAS,wBACTonD,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTxgG,KAAM,eAERyf,QAAS,CACPu5B,QAAS,6BACTwnD,QAAS,UACTxgG,KAAM,eAER6S,MAAO,CACLmmC,QAAS,0BACTonD,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxgG,KAAM,UCoJGgrK,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACP72K,OAAOC,KAAK42K,GAAgB32K,SAC1BF,OAAOC,KAAK62K,GAAmB52K,UAKrC62K,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYh3K,OAAOC,KAAK62K,GAAmBllK,OAAO,SAAAlO,GACtD,OAAQ1D,OAAOC,KAAK42K,GAAgB5oK,SAASvK,KAE/C,OAAOozK,EAAkBE,GAEzB,OAAOh3K,OAAOC,KAAK62K,GAAmBr0K,IAAI,SAAAiB,GACxC,OAAOozK,EAAkBpzK,QAM/BuzK,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2B92K,OAAOC,KAAK42K,GACpCp0K,IAAI,SAAAiB,GACH,OACEmzK,EAAenzK,GAAKywK,cAAgB2C,EAAkBpzK,GAAKywK,YAEpD2C,EAAkBpzK,GAElB,OAGVkO,OAAO,SAAAslK,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAA/zK,OAAM8zK,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIjlK,EAAK,KACL0lK,EAAY,GACZC,EAAS,GAEb,GAAIp2K,EAAKw1K,uBAAuBC,EAAgBC,GAC9CjlK,EAAKzQ,EAAK21K,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYn2K,EAAK61K,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASp2K,EAAK+1K,6BACZI,EAAUj2H,QACVu1H,GAMAU,EAAUlpK,SAAWmpK,EAAOnpK,SAC9BwD,EAAK0lK,GAGT,OAAO1lK,KAIT4lK,0BAA4B,SAAAxzK,GAC1B,IAAI4N,EAAK,KACL7R,OAAOC,KAAKmB,EAAKvC,MAAMuP,cAAclO,SACvC2R,EAAKzQ,EAAKk2K,sBACRrzK,EAAUmK,aACVhN,EAAKvC,MAAMuP,eAIXyD,GACFzQ,EAAKs2K,qBAAqB7lK,MAI9B6lK,qBAAuB,SAAAr4J,GAGrB,IAAIs4J,EAAYv2K,EAAKw2K,wBAAwBv4J,GAC7Cs4J,EAAU3rE,WAAa5qG,EAAKvC,MAAM2Q,UAClCmoK,EAAUE,WAAY,EAItB30J,OAAO2oF,cAAcC,WAAW,IAAK6rE,MAGvCC,wBAA0B,SAAAv4J,GACxB,IAAIy4J,EAAuB,GAG3B,OAFaz4J,EAAYhR,QAGvB,IAAK,cACHypK,EAAuBtB,GAAyB33J,YAChD,MACF,IAAK,UACHi5J,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyB9nK,QAChD,MACF,IAAK,YACHopK,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyBprJ,QAChD,MACF,IAAK,QACH0sJ,EAAuBtB,GAAyBh4J,MAOpD,IAAIu5J,EAAoB,GACxB,OAAQ14J,EAAY+c,QAClB,IAAK,kBACH27I,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoB14J,EAAY+c,OAAO47I,OAAO,GAAGliK,cAAgBuJ,EAAY+c,OAAOvY,OAAO,GAM/F,IAAIo0J,GAFJH,EAAuBznK,KAAKuS,MAAMvS,KAAKC,UAAUwnK,KAEXnzH,QAAQjsB,QAAQ,WAAWq/I,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGliK,cAAgBmiK,EAAWl+J,MAAM,GACnE+9J,EAAqBnzH,QAAUszH,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqB9rE,WAAa5qG,EAAKvC,MAAM2Q,UAEtCsoK,qFAGU7zK,EAAWC,GAC5BvF,KAAK84K,0BAA0BxzK,oCAI/B,OACEkB,EAAA1E,EAAAC,cAAA,WACEyE,EAAA1E,EAAAC,cAAC0E,EAAA,EAAauvK,SAAd,CAAuBpxD,IAAK,SAAA4yD,GAAI,OAAKjzJ,OAAO2oF,cAAgBsqE,aAtLjChmE,IAAMtvG,WCsBnCq3K,GAAU/nE,IAAMgoE,KAAK,kBAAMhzJ,EAAAxhB,EAAA,GAAAqgH,KAAA7+F,EAAAmI,KAAA,cAC3B8qJ,GAAYjoE,IAAMgoE,KAAK,kBAAM74J,QAAAuD,IAAA,CAAAsC,EAAAxhB,EAAA,GAAAwhB,EAAAxhB,EAAA,GAAAwhB,EAAAxhB,EAAA,GAAAwhB,EAAAxhB,EAAA,KAAAqgH,KAAA7+F,EAAAmI,KAAA,cAC7B+qJ,GAAaloE,IAAMgoE,KAAK,kBAAM74J,QAAAuD,IAAA,CAAAsC,EAAAxhB,EAAA,GAAAwhB,EAAAxhB,EAAA,GAAAwhB,EAAAxhB,EAAA,KAAAqgH,KAAA7+F,EAAAmI,KAAA,cA2kCrBgrJ,8MAxkCbx0K,MAAQ,CACN+rB,QAAS,KACTrD,WAAY,GACZ2+E,SAAU,KACVotE,WAAY,KACZC,YAAa,IACb/lG,MAAO,UACPjjE,UAAW,QACXipK,YAAY,EACZ9wK,YAAa,KACb+wK,aAAc,KACdv1H,cAAe,KACf03D,cAAe,KACfpzG,cAAe,KACfkxK,cAAep1K,IACfglK,eAAgB,KAChBnB,eAAgB,KAChBp5J,gBAAiB,KACjB4qK,gBAAgB,EAChB3kK,iBAAkB,KAClB4kK,kBAAmB,KACnB3H,mBAAoB,KACpBtxK,MAAOsjB,OAAO41J,WACdvkJ,oBAAqB,KACrB1yB,OAAQqhB,OAAO61J,YACfr1H,OAAOt4C,IAAcykB,QACrBmpJ,uBAAwB,KACxBrL,0BAA0B,EAC1B+E,4BAA6B,QAI/Bh0K,cAAgB,OAUhBu6K,kBAAoB,SAACt1K,GACfA,GACFA,EAAEoJ,iBAEJ3L,EAAKkD,SAAS,CACZu0K,kBAAmB,UAIvBK,iBAAmB,SAACr6K,GAClBuC,EAAKkD,SAAS,CACZu0K,kBAAmBh6K,OAIvBs6K,mBAAqB,SAACt6K,EAAOoF,OAyB7BgsE,qCAAkB,SAAAjxD,IAAA,IAAA3a,EAAA6rE,EAAAqiG,EAAA/lJ,EAAA4sJ,EAAAC,EAAAtmK,UAAA,OAAAye,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,UAAOrN,EAAPg1K,EAAAn5K,OAAA,QAAA+tB,IAAAorJ,EAAA,GAAAA,EAAA,GAAkB,KAAMnpG,EAAxBmpG,EAAAn5K,OAAA,QAAA+tB,IAAAorJ,EAAA,IAAAA,EAAA,GAEXj4K,EAAK0C,MAAM+rB,QAFA,CAAA3Q,EAAAxN,KAAA,eAAAwN,EAAAgB,OAAA,UAGP,GAHO,cAMVqyJ,EAAoBnxK,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,GAEhDgrB,EARUxsB,OAAAg5B,EAAA,EAAAh5B,CAAA,GAQQoB,EAAK0C,MAAM0oB,YACnCxsB,OAAOC,KAAKusB,EAAW+lJ,IAAoBpyK,QAAQ,SAAAuD,GAErB,OADf8oB,EAAW+lJ,GAAmB7uK,GAClC2sE,uBACA7jD,EAAW+lJ,GAAmB7uK,MAInC01K,EAAmBlpG,EAAY,GAAK9uE,EAAK1C,cAAco9C,cAAc,gBACnDs9H,EAAiB7G,IACvCvyK,OAAOC,KAAKm5K,EAAiB7G,IAAoBpyK,QAAS,SAAAuD,GAEtB,OADf01K,EAAiB7G,GAAmB7uK,GACxC2sE,uBACN+oG,EAAiB7G,GAAmB7uK,KAKjDtC,EAAK1C,cAAcqkB,gBAAgB,aAAcq2J,GAAkB,GA1BnDl6J,EAAAxN,KAAA,GA4BVtQ,EAAKkD,SAAS,CAClBkoB,cACC,WACuB,oBAAbnoB,GACTA,MAhCY,eAAA6a,EAAAgB,OAAA,UAoCT,GApCS,yBAAAhB,EAAAtM,SAAAoM,EAAArgB,WAuClB8tB,cAAgB,SAAC/oB,EAAKkD,GAA8C,IAAxCs2B,EAAwCnqB,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,GAAAA,UAAA,GAAlC,KAAMq9D,EAA4Br9D,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,IAAAA,UAAA,GAElE,IAAK3R,EAAK0C,MAAM+rB,QACd,OAAO,EAGTnsB,EAAMA,EAAIoH,cACV,IAAM8uB,EAAcznB,SAASe,KAAK0gC,MAAQ,KACpC2+H,EAAoBnxK,EAAK0C,MAAM+rB,QAAQsI,SAAS32B,GAChD83K,EAAiBl4K,EAAK0C,MAAM0oB,WAAW+lJ,GAAqBnxK,EAAK0C,MAAM0oB,WAAW+lJ,GAAmB7uK,GAAO,KAI9G2sB,GAAS,EAEb,IAJoBipJ,GAAsD,OAAlCA,EAAejpG,gBAA2BipG,EAAejpG,gBAAkBz2C,GAAgBvpB,KAAKC,UAAUgpK,EAAe1yK,QAAUyJ,KAAKC,UAAU1J,GAI1K,CACd,IAAMypE,EAAiBnzC,EAAMtD,EAAesD,EAAO,KAGnD,GAAIkzC,EAAiB,CACnB,IAAIgpG,EAAmBh4K,EAAK1C,cAAco9C,cAAc,cACnDs9H,KACHA,EAAmB,IACF7G,GAAqB,IAKxC6G,EAAgBp5K,OAAAg5B,EAAA,EAAAh5B,CAAA,GACXo5K,EADWp5K,OAAA+iI,EAAA,EAAA/iI,CAAA,GAEbuyK,EAFavyK,OAAAg5B,EAAA,EAAAh5B,CAAA,GAGTo5K,EAAiB7G,GAHRvyK,OAAA+iI,EAAA,EAAA/iI,CAAA,GAIX0D,EAAM,CACLkD,OACAypE,sBAKNjvE,EAAK1C,cAAcqkB,gBAAgB,aAAaq2J,GAAiB,GAInEh4K,EAAKkD,SAAS,SAACJ,GAAD,MAAgB,CAC5BsoB,WAAWxsB,OAAAg5B,EAAA,EAAAh5B,CAAA,GACNkE,EAAUsoB,WADLxsB,OAAA+iI,EAAA,EAAA/iI,CAAA,GAEPuyK,EAFOvyK,OAAAg5B,EAAA,EAAAh5B,CAAA,GAGHkE,EAAUsoB,WAAW+lJ,GAHlBvyK,OAAA+iI,EAAA,EAAA/iI,CAAA,GAIL0D,EAAM,CACLkD,OACAypE,wBAIJ,WACFntD,OAAOsJ,WAAaprB,EAAK0C,MAAM0oB,aAGjC6D,GAAS,EAGX,OAAOA,KAGT8gJ,sBAAwB,SAACD,GACvB9vK,EAAKkD,SAAS,CACZ4sK,0BAIJhuH,iBAAmB,SAACC,GAEdA,IAAkBA,EAAcr4C,cAAcmmC,MAAM,gBACtDkS,EAAgB,MAGdA,IAAkB/hD,EAAK0C,MAAMq/C,eAC/B/hD,EAAKkD,SAAS,CACZ6+C,gBACAwqH,0BAA0B,OAiShCtgJ,uBAAyB,WACvB,IAAMjpB,EAAW,CACfxE,MAAOwB,EAAK0C,MAAMlE,MAClBiC,OAAQT,EAAK0C,MAAMjC,QAGf03K,EAAer2J,OAAO41J,aAAe13K,EAAK0C,MAAMlE,MAChD45K,EAAgBt2J,OAAO61J,cAAgB33K,EAAK0C,MAAMjC,OAExD,OAAI03K,GAAgBC,GACdD,IACFn1K,EAASxE,MAAQsjB,OAAO41J,YAEtBU,IACFp1K,EAASvC,OAASqhB,OAAO61J,aAEpB33K,EAAKkD,SAASF,IAGhB,iFA1dHzF,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,iFAwKhC8E,EAAG81K,4FACV96K,KAAK2F,SAAS,SAAAR,GAAK,OAAA9D,OAAAg5B,EAAA,EAAAh5B,CAAA,GAAU8D,EAAV,CAAiB00K,YAAaiB,gSAIlDr1K,EAAW,GACXmwB,EAAsB,GACtBm+I,EAA8B,GAC9BjxI,EAAkB9iC,KAAKmF,MAAM+rB,SAAWlxB,KAAKmF,MAAM+rB,QAAQ0I,iBAAoB55B,KAAKmF,MAAM+rB,QAAQyI,QAAQ92B,IAAM7C,KAAKmF,MAAM+rB,QAAQsI,SAAS32B,GAAM7C,KAAKmF,MAAM4/C,OAAOjiB,gBAK1KzhC,OAAOC,KAAK+N,MAAiB4D,OAAQ,SAAAsmB,GAAS,OAAIl5B,EAAKN,cAAcmX,gBAAgB,CAAC,UAAU,oBAAoB5H,SAASkE,SAAS+lB,MAAc/3B,QAAS,SAAA+3B,GAC3Jw6I,EAA4Bx6I,GAAa,GACzCl4B,OAAOC,KAAK+N,KAAgBkqB,IAAY/3B,QAAQ,SAAC4gC,GAE/C2xI,EAA4Bx6I,GAAW6I,GAAY/gC,OAAOC,KAAK+N,KAAgBkqB,GAAW6I,IAAWuD,OAAO,SAAC/zB,EAAeuB,GAC1H,IAAMnK,EAAcqG,KAAgBkqB,GAAW6I,GAAUjvB,GACnD4nK,GAAc/xK,EAAY8sG,cAAgB9sG,EAAY8sG,YAAYv0G,QAAUyH,EAAY8sG,YAAYxmG,SAASjP,EAAK8E,MAAMy0K,YAI9H,OAHI5wK,EAAYkrB,SAAW6mJ,IACzBnpK,EAAcuB,GAASnK,GAElB4I,GACN,IAEC4B,SAAS+lB,KAAe/lB,SAASsvB,KACnClN,EAAoBwM,GAAY2xI,EAA4Bx6I,GAAW6I,QAK7E38B,EAASmwB,oBAAsBA,EAC/BnwB,EAASsuK,4BAA8BA,GAKjCz+J,EAAmBtV,KAAKmF,MAAMmQ,mBACZsgB,EAAoBtgB,KAC1C7P,EAAS4J,gBAAkBumB,EAAoBtgB,IAGzCxM,EAAgB9I,KAAKmF,MAAM2D,gBACZrD,EAAS4J,gBAAgBvG,KAC5CrD,EAASuD,YAAcvD,EAAS4J,gBAAgBvG,eAM9C9I,KAAK2F,SAASF,uLAGC6P,EAAkBxM,yFAEjCpD,EAAW,WACfgE,EAAKsxK,uBAGDv1K,EAAW,CACfuD,YAAcF,EAAuB9I,KAAKmF,MAAM6D,YAAlB,KAC9BqG,gBAAkBvG,EAAuB9I,KAAKmF,MAAMkK,gBAAlB,KAClCvG,cAAgBA,EAAgC9I,KAAKmF,MAAM2D,cAA3BA,EAChCwM,iBAAmBA,EAAsCtV,KAAKmF,MAAMmQ,iBAA9BA,GAGpCA,GAAoBtV,KAAKmF,MAAMywB,qBAAuBtgB,IAAqBtV,KAAKmF,MAAMmQ,kBAAoBjU,OAAOC,KAAKtB,KAAKmF,MAAMywB,qBAAqBtmB,SAASgG,EAAiBnJ,iBAClL1G,EAAS6P,iBAAmBA,EAAiBnJ,eAG3CrD,GAAiBA,IAAkB9I,KAAKmF,MAAM2D,gBAC5C9I,KAAKmF,MAAMkK,iBAAmBhO,OAAOC,KAAKtB,KAAKmF,MAAMkK,iBAAiBC,SAASxG,EAAcqO,gBAC/F1R,EAASqD,cAAgBA,EAAcqO,cACvC1R,EAASuD,YAAchJ,KAAKmF,MAAMkK,gBAAgBvG,IACzC9I,KAAKmF,MAAMywB,qBAAuBv0B,OAAOC,KAAKtB,KAAKmF,MAAMywB,oBAAoBtgB,IAAmBhG,SAASxG,EAAcqO,iBAChI1R,EAASqD,cAAgBA,EAAcqO,cACvC1R,EAASuD,YAAchJ,KAAKmF,MAAMywB,oBAAoBtgB,GAAkB7P,EAASqD,eACjFrD,EAAS4J,gBAAkBrP,KAAKmF,MAAMywB,oBAAoBtgB,cAMxDtV,KAAK2F,SAASF,EAAUC,2LAGPo9B,wFAAgBm4I,kCACvCn4I,EAAkBtvB,SAASsvB,IACvBr2B,IAAcykB,QAAQ0gH,gBAAgBtiI,SAASwzB,0BACjD9iC,KAAKD,cAAcqkB,gBAAgB,kBAAkB0e,IAEjDm4I,GAAqBj7K,KAAKmF,MAAMykK,gBAAgD,YAA9B5pK,KAAKmF,MAAMykK,iBAC/D5pK,KAAKD,cAAc29B,iBAAiBoF,YAEzB9iC,KAAK2F,SAAS,SAAAJ,GAAS,MAAK,CACvCw/C,OAAO1jD,OAAAg5B,EAAA,EAAAh5B,CAAA,GACFkE,EAAUw/C,OADT,CAEJjiB,8OAMUxtB,mFAEV5P,EAAW,WACf0qG,EAAK4qE,wBAGH1lK,GAAoBA,IAAqBtV,KAAKmF,MAAMmQ,mBAAoBjU,OAAOC,KAAKtB,KAAKmF,MAAMywB,qBAAqBtmB,SAASgG,EAAiBnJ,sCAChJmJ,EAAmBA,EAAiBnJ,uBAC9BnM,KAAK2F,SAAS,CAClB2P,oBACC5P,oCACO4P,oCACJtV,KAAK2F,SAAS,CAClB2P,oBACC5P,gLAIQoD,qFAEPpD,EAAW,WACfygH,EAAK60D,wBAGHlyK,GAAiBA,IAAkB9I,KAAKmF,MAAM2D,gBAAiBzH,OAAOC,KAAKtB,KAAKmF,MAAMkK,iBAAiBC,SAASxG,EAAcqO,sCAChIrO,EAAgBA,EAAcqO,eACxB1R,EAAW,CACfqD,kBAEOE,YAAchJ,KAAKmF,MAAMkK,gBAAgBvG,YAC5C9I,KAAK2F,SAASF,EAAUC,oCACpBoD,oCACJ9I,KAAK2F,SAAS,CAClBmD,gBACAE,YAAa,MACZtD,2QAML1F,KAAKI,YAELmkB,OAAOnR,MAAQpT,KAAKD,cAAcqT,MAGbmR,OAAOkX,SAAS0J,OAAOh5B,cAAcmD,SAAS7C,IAAc86C,QAAQp7C,iBAEvFoY,OAAO8U,QAAQxZ,MAAQ,aACvB0E,OAAO8U,QAAQ6hJ,KAAO,cAGxB32J,OAAO42J,OAASA,IAEZ52J,OAAOR,eACT/jB,KAAKD,cAAcgxD,iBAAiB,WAGpB/wD,KAAKD,cAAco9C,cAAc,WAAW,KAC5C1wC,IAAc4uD,SAE5Br7D,KAAKsxE,gBAAgB,WAEnB45C,EAAKnrH,cAAc2wD,gBAAgB,CAAC,iBAAkB,gBAAiB,YAAa,oBACpFw6D,EAAKnrH,cAAcqkB,gBAAgB,UAAW3X,IAAc4uD,WAC3D,GAGLhiC,QAAQwY,IAAR,mBAAAltC,OAA+B8H,IAAc4uD,YAGzCxqD,EAAY7Q,KAAKD,cAAco9C,cAAc,aAAa,KAE9Dn9C,KAAKo7K,aAAavqK,IAGdiyB,EAAkB9iC,KAAKD,cAAco9C,cAAc,mBAAkB,KAEzEn9C,KAAKu/H,mBAAmBz8F,GAG1Bve,OAAO82J,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAUzsJ,SAAS0sJ,qBAAqB,UACrCzvK,EAAI,EAAGA,EAAIwvK,EAAQh6K,OAAQwK,IAAK,CACvC,IAAM0vK,EAASF,EAAQxvK,GACnB0vK,EAAOC,gBAAkBJ,GAC3B/2J,OAAO42J,OAAOM,GAAQE,QAAQ,qBAAqB,GAAGh8B,WAK5Dp7H,OAAOkK,iBAAiB,SAAUzuB,KAAK0uB,wBAEvC1uB,KAAK47K,yBACL57K,KAAK67K,6RAICjC,EAAa55K,KAAKD,cAAcynD,wBACtCxnD,KAAK2F,SAAS,CACZi0K,cADFv4K,OAAAuxB,EAAA,EAAAvxB,CAAAwxB,EAAA/wB,EAAA0Q,KAEG,SAAAujB,IAAA,OAAAlD,EAAA/wB,EAAA8Q,KAAA,SAAAyjB,GAAA,cAAAA,EAAAvjB,KAAAujB,EAAAtjB,MAAA,OAQDq4G,EAAK4vD,sBARJ,wBAAA3kJ,EAAApiB,SAAA8hB,EAAA/1B,wJAaH,IAAKA,KAAKmF,MAAMq/C,eAES,WADAxkD,KAAKD,cAAcmqD,kBAAkB,UAC3B,CAC/B,IAAM1F,EAAgBxkD,KAAKD,cAAcukD,mBACrCE,GAAiBA,IAAkBxkD,KAAKmF,MAAMq/C,eAChDxkD,KAAK2F,SAAS,CACZ6+C,kEAQRjgC,OAAOqK,oBAAoB,SAAU5uB,KAAK0uB,mEAGzBppB,EAAWC,GAI5B,GAHAvF,KAAKI,YAEyBmF,EAAUqkK,iBAAmB5pK,KAAKmF,MAAMykK,eAEpE,GAAkC,YAA9B5pK,KAAKmF,MAAMykK,eACb5pK,KAAKo7K,aAAa,SAAS,OACtB,CAEL,IAAMvqK,EAAY7Q,KAAKD,cAAco9C,cAAc,aAAa,IAAUn9C,KAAKD,cAAcmX,gBAAgB,CAAC,YAAa,QAAS,SACpIlX,KAAKo7K,aAAavqK,GAItB,IAAMirK,EAAev2K,EAAUuD,gBAAkB9I,KAAKmF,MAAM2D,cACtDizK,EAAkBx2K,EAAU+P,mBAAqBtV,KAAKmF,MAAMmQ,iBAC5D0mK,EAAiBtqK,KAAKC,UAAUpM,EAAU2rB,WAAaxf,KAAKC,UAAU3R,KAAKmF,MAAM+rB,UAEnF4qJ,GAAgBC,GAAmBC,IACrCh8K,KAAKg7K,kEAcP,GAHAz2J,OAAOg2J,iBAAmBv6K,KAAKu6K,iBAC/Bh2J,OAAO+1J,kBAAoBt6K,KAAKs6K,kBAE5Bv2J,aAAc,CAChB,IAAIm4F,EAAgBn4F,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChGykJ,EAAiB1kJ,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAOkX,SAASxV,KAAK3W,SAAS,mBAEjD4sG,EAAgB,aAChBusD,EAAiB,UAInBzoK,KAAKwoK,aAAatsD,EAAeusD,sCA0B3B30F,GACR,OAAO9zE,KAAK2F,SAAS,CAAEmuE,gDAGX9uE,GAIZ,OAHIA,GACFA,EAAEoJ,iBAEGpO,KAAK2F,SAAS,CACnB6mG,SAAU,KACVytE,gBAAgB,yCAIPj1K,EAAGwnG,GAGd,OAFAxnG,EAAEoJ,iBAEKpO,KAAK2F,SAAS,CACnB6mG,WACAytE,gBAAgB,wJAMlBj6K,KAAK2F,SAAS,CACZ6+C,cAAe,OAGjBxkD,KAAKsxE,gBAAgB,WAEnBw+C,EAAK/vH,cAAc2wD,gBAAgB,CAAC,UAAW,YAAa,YAAa,aAAa,2JAI/Ex/B,GACTlxB,KAAK2F,SAAS,CACZurB,UACA0E,oBAAoB,4CAIXsmF,EAAeusD,GAAgB,IAAA14C,EAAA/vH,KAEtCupK,EAAgB98J,IAAc06H,WAAWjrB,EAAc/vG,eAO3D,IANKo9J,GAAiBd,IACpBc,EAAgB98J,IAAc06H,WAAWshC,EAAet8J,gBAKrDo9J,IAAkBA,EAAcr1I,SAA+B,aAAlBgoF,IAAiC76G,OAAOC,KAAKmL,IAAc06H,YAAY73H,SAAS4sG,EAAc/vG,gBAAoBs8J,IAAmBpnK,OAAOC,KAAKmL,IAAc06H,YAAY73H,SAASm5J,EAAet8J,eACnP+vG,EAAgB,SAChBusD,EAAiB,cACZ,GAAsB,aAAlBvsD,EAA8B,CACvC,IAAM+/D,EAAc7U,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQe,GACN,IAAK,YACEwT,GAAevU,IAClBe,EAAiB,UAEnB,MACF,IAAK,UACEf,GAAauU,IAChBxT,EAAiB,aAWzB,OAHAzoK,KAAKD,cAAcqkB,gBAAgB,gBAAiB83F,GACpDl8G,KAAKD,cAAcqkB,gBAAgB,iBAAkBqkJ,GAE9CzoK,KAAK2F,SAAS,CACnBu2G,gBACAusD,kBACC,WACD14C,EAAK8rD,2DAIIhrK,GAAyB,IAAdqrK,IAAc9nK,UAAA7S,OAAA,QAAA+tB,IAAAlb,UAAA,KAAAA,UAAA,GAChC4lK,EAAgB,KAGd9zC,EAAkBlmI,KAAKD,cAAcmX,gBAAgB,CAAC,YAAa,QAAS,oBAKlF,OAJkB,SAAdrG,GAAyBq1H,IAC3Br1H,EAAY,SAGNA,GACN,QACA,IAAK,QACHmpK,EAAgBp1K,IAChB,MACF,IAAK,OACHo1K,EAAgBmC,EAIhBD,GACFl8K,KAAKD,cAAcqkB,gBAAgB,YAAavT,GAGlD7Q,KAAK2F,SAAS,CACZkL,YACAmpK,4DAIcpQ,GAChB5pK,KAAK2F,SAAS,CACZikK,oDAIK,IAAAwS,EAAAp8K,KACD4D,EAAW5D,KAAKmF,MAAMlE,OAAS,IAC/Bu1K,EAAoBx2K,KAAKD,cAAcmX,gBAAgB,CAAC,aAAc,YAItEmlK,EACJ71K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACExF,MAAO,EACPouB,UAAW,QACXnuB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB0M,gBAAiB,YAEjBtH,EAAA1E,EAAAC,cAAC60G,GAAA,EAAD,CACEl3F,UAAW,CACTonG,SAAU,EACVtjH,WAAY,GAEdgiB,YAAa,CACXpd,GAAI,EACJhC,KAAM,OACN3C,MAAO,WAETzC,UAAW,CACTsN,GAAI,EACJnN,cAAe,UAEjBkC,KAAM,MAKZ,OACEmD,EAAA1E,EAAAC,cAAC6oK,GAAA,EAAD,KACEpkK,EAAA1E,EAAAC,cAAC20K,GAAD,MACAlwK,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACE7B,MAAO5E,KAAKmF,MAAM60K,eAElBxzK,EAAA1E,EAAAC,cAACu6K,EAAAx6K,EAAD,CACEy6K,QAASr5I,IACTikG,WAAYA,GACZq1C,YAAa,WAEbh2K,EAAA1E,EAAAC,cAAC06K,EAAA,aAAD,CACEC,yBAAyB,EACzBC,yBAAyB,GAExB,SAAArU,GAEC,OACE9hK,EAAA1E,EAAAC,cAAC66K,GAAD,CACEtU,QAASA,EACT1kK,SAAUA,EACVujI,WAAYA,GACZpiF,OAAQq3H,EAAKj3K,MAAM4/C,OACnBngD,MAAOw3K,EAAKj3K,MAAM60K,cAClBnsJ,WAAYuuJ,EAAKj3K,MAAM0oB,WACvB7kB,YAAaozK,EAAKj3K,MAAM6D,YACxBk2B,kBAAmBA,GACnB4xI,WAAYsL,EAAKtL,WAAWniJ,KAAKytJ,GACjC53H,cAAe43H,EAAKj3K,MAAMq/C,cAC1B17C,cAAeszK,EAAKj3K,MAAM2D,cAC1BozG,cAAekgE,EAAKj3K,MAAM+2G,cAC1B0tD,eAAgBwS,EAAKj3K,MAAMykK,eAC3BnB,eAAgB2T,EAAKj3K,MAAMsjK,eAC3BD,aAAc4T,EAAK5T,aAAa75I,KAAKytJ,GACrC/sK,gBAAiB+sK,EAAKj3K,MAAMkK,gBAC5Bye,cAAesuJ,EAAKtuJ,cAAca,KAAKytJ,GACvC9qG,gBAAiB8qG,EAAK9qG,gBAAgB3iD,KAAKytJ,GAC3C7J,mBAAoB6J,EAAKj3K,MAAMotK,mBAC/B38I,oBAAqBwmJ,EAAKj3K,MAAMywB,oBAChC48I,sBAAuB4J,EAAK5J,sBAAsB7jJ,KAAKytJ,GACvDpN,yBAA0BoN,EAAKj3K,MAAM6pK,yBACrC+E,4BAA6BqI,EAAKj3K,MAAM4uK,6BAExCvtK,EAAA1E,EAAAC,cAAC66K,GAAWvG,SAAZ,KACG,SAAAz1J,GAyCK,IAxCJM,EAwCIN,EAxCJM,KACAsoH,EAuCI5oH,EAvCJ4oH,OACAt4G,EAsCItQ,EAtCJsQ,QACAjiB,EAqCI2R,EArCJ3R,QACAo/J,EAoCIztJ,EApCJytJ,SACA/jH,EAmCI1pC,EAnCJ0pC,SACAsoF,EAkCIhyH,EAlCJgyH,SACAl5G,EAiCI9Y,EAjCJ8Y,UACAkY,EAgCIhxB,EAhCJgxB,WACAmF,EA+BIn2B,EA/BJm2B,YACAr2B,EA8BIE,EA9BJF,YACA4qJ,EA6BI1qJ,EA7BJ0qJ,YACArjG,EA4BIrnD,EA5BJqnD,aACAymG,EA2BI9tJ,EA3BJ8tJ,aACAj/J,EA0BImR,EA1BJnR,aACA+6C,EAyBI5pC,EAzBJ4pC,aACA0jH,EAwBIttJ,EAxBJstJ,aAEAE,GAsBIxtJ,EAvBJrK,cAuBIqK,EAtBJwtJ,gBAEA5B,GAoBI5rJ,EArBJi8J,eAqBIj8J,EApBJ4rJ,iBACAoC,EAmBIhuJ,EAnBJguJ,iBACAjC,EAkBI/rJ,EAlBJ+rJ,iBACAj+G,EAiBI9tC,EAjBJ8tC,iBACA++C,EAgBI7sF,EAhBJ6sF,kBACA5zE,EAeIjZ,EAfJiZ,kBACA00I,EAcI3tJ,EAdJ2tJ,kBACA4B,EAaIvvJ,EAbJuvJ,mBACAxB,EAYI/tJ,EAZJ+tJ,mBACAH,EAWI5tJ,EAXJ4tJ,oBACAvB,EAUIrsJ,EAVJqsJ,oBACA6B,EASIluJ,EATJkuJ,oBACA/2G,EAQIn3C,EARJm3C,qBACAg3G,EAOInuJ,EAPJmuJ,qBACA5qD,EAMIvjG,EANJujG,qBACA8qD,EAKIruJ,EALJquJ,uBACAJ,EAIIjuJ,EAJJiuJ,yBACA94C,EAGIn1G,EAHJm1G,0BACAhlG,EAEInQ,EAFJmQ,0BACA+rJ,EACIl8J,EADJk8J,2BAEA,OACEt2K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,KACED,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,KACEv2K,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,CACEl5K,KAAK,kDACL+pG,OACE,SAAC1tG,GAAD,OACEsG,EAAA1E,EAAAC,cAACi7K,EAAA,SAAD,CACEC,SAAUZ,GAEV71K,EAAA1E,EAAAC,cAAC03K,GAADp4K,OAAAgF,OAAA,GACMnG,EADN,CAEEghB,KAAMA,EACNsoH,OAAQA,EACRt4G,QAASA,EACTo3I,QAASA,EACTr5J,QAASA,EACTiP,aAAa,EACbmwJ,SAAUA,EACVz7B,SAAUA,EACVhvI,SAAUA,EACV0mD,SAAUA,EACV5wB,UAAWA,EACXkY,WAAYA,EACZmF,YAAaA,EACbu0H,YAAaA,EACb4C,aAAcA,EACd1jH,aAAcA,EACdyd,aAAcA,EACdx4D,aAAcA,EACd+8F,SAAU4vE,EAAKj3K,MAAMqnG,SACrB21D,OAAQia,EAAKja,OAAOxzI,KAAKytJ,GACzBhO,eAAgBA,EAChBv9J,UAAWurK,EAAKj3K,MAAM0L,UACtBjM,MAAOw3K,EAAKj3K,MAAM60K,cAClBxN,gBAAiBA,EACjBoN,WAAYwC,EAAKj3K,MAAMy0K,WACvBE,WAAYsC,EAAKj3K,MAAM20K,WACvBjsJ,WAAYuuJ,EAAKj3K,MAAM0oB,WACvBqvJ,SAAUd,EAAKc,SAASvuJ,KAAKytJ,GAC7BzP,iBAAkBA,EAClBj+G,iBAAkBA,EAClBkgH,iBAAkBA,EAClB5lK,YAAaozK,EAAKj3K,MAAM6D,YACxB6wB,kBAAmBA,EACnBqF,kBAAmBA,GACnBuuE,kBAAmBA,EACnB8gE,kBAAmBA,EACnBI,mBAAoBA,EACpBwB,mBAAoBA,EACpBrnK,cAAeszK,EAAKj3K,MAAM2D,cAC1BozG,cAAekgE,EAAKj3K,MAAM+2G,cAC1BihE,YAAaf,EAAKe,YAAYxuJ,KAAKytJ,GACnCnP,oBAAqBA,EACrBuB,oBAAqBA,EACrBM,oBAAqBA,EACrBrG,eAAgB2T,EAAKj3K,MAAMsjK,eAC3BwR,eAAgBmC,EAAKj3K,MAAM80K,eAC3BliH,qBAAsBA,EACtBosD,qBAAsBA,EACtBi5D,aAAchB,EAAKgB,aAAazuJ,KAAKytJ,GACrCrN,qBAAsBA,EACtBsO,gBAAiBjB,EAAKkB,UAAU3uJ,KAAKytJ,GACrC5T,aAAc4T,EAAK5T,aAAa75I,KAAKytJ,GACrChB,aAAcgB,EAAKhB,aAAazsJ,KAAKytJ,GACrC/sK,gBAAiB+sK,EAAKj3K,MAAMkK,gBAC5BkuK,cAAenB,EAAKmB,cAAc5uJ,KAAKytJ,GACvCtuJ,cAAesuJ,EAAKtuJ,cAAca,KAAKytJ,GACvC9mK,iBAAkB8mK,EAAKj3K,MAAMmQ,iBAC7B25J,uBAAwBA,EACxB39F,gBAAiB8qG,EAAK9qG,gBAAgB3iD,KAAKytJ,GAC3C3/C,iBAAkB2/C,EAAK3/C,iBAAiB9tG,KAAKytJ,GAC7CvN,yBAA0BA,EAC1Bj5I,oBAAqBwmJ,EAAKj3K,MAAMywB,oBAChC20I,kBAAmB6R,EAAK7R,kBAAkB57I,KAAKytJ,GAC/CrmD,0BAA2BA,EAC3BhlG,0BAA2BA,EAC3BwuG,mBAAoB68C,EAAK78C,mBAAmB5wG,KAAKytJ,GACjDU,2BAA4BA,EAC5BtK,sBAAuB4J,EAAK5J,sBAAsB7jJ,KAAKytJ,GACvDrI,4BAA6BqI,EAAKj3K,MAAM4uK,mCAQhDyC,GACEhwK,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,CACEl5K,KAAK,kCACL+pG,OACE,SAAC1tG,GAAD,OACEsG,EAAA1E,EAAAC,cAACi7K,EAAA,SAAD,CACEC,SAAUZ,GAEV71K,EAAA1E,EAAAC,cAAC23K,GAADr4K,OAAAgF,OAAA,GACMnG,EADN,CAEEghB,KAAMA,EACNsoH,OAAQA,EACRt4G,QAASA,EACTo3I,QAASA,EACTr5J,QAASA,EACTo/J,SAAUA,EACVz7B,SAAUA,EACVhvI,SAAUA,EACV0mD,SAAUA,EACVkzH,cAAc,EACd9jJ,UAAWA,EACXkY,WAAYA,EACZmF,YAAaA,EACbu0H,YAAaA,EACb9gH,aAAcA,EACdyd,aAAcA,EACdymG,aAAcA,EACdj/J,aAAcA,EACd+8F,SAAU4vE,EAAKj3K,MAAMqnG,SACrB21D,OAAQia,EAAKja,OAAOxzI,KAAKytJ,GACzBhO,eAAgBA,EAChBv9J,UAAWurK,EAAKj3K,MAAM0L,UACtBjM,MAAOw3K,EAAKj3K,MAAM60K,cAClBxN,gBAAiBA,EACjBoN,WAAYwC,EAAKj3K,MAAMy0K,WACvBE,WAAYsC,EAAKj3K,MAAM20K,WACvBjsJ,WAAYuuJ,EAAKj3K,MAAM0oB,WACvBqvJ,SAAUd,EAAKc,SAASvuJ,KAAKytJ,GAC7BzP,iBAAkBA,EAClBj+G,iBAAkBA,EAClBkgH,iBAAkBA,EAClB5lK,YAAaozK,EAAKj3K,MAAM6D,YACxB6wB,kBAAmBA,EACnB4zE,kBAAmBA,EACnB8gE,kBAAmBA,EACnBI,mBAAoBA,EACpBwB,mBAAoBA,EACpBrnK,cAAeszK,EAAKj3K,MAAM2D,cAC1BozG,cAAekgE,EAAKj3K,MAAM+2G,cAC1BihE,YAAaf,EAAKe,YAAYxuJ,KAAKytJ,GACnCnP,oBAAqBA,EACrBuB,oBAAqBA,EACrBM,oBAAqBA,EACrBrG,eAAgB2T,EAAKj3K,MAAMsjK,eAC3BwR,eAAgBmC,EAAKj3K,MAAM80K,eAC3B91D,qBAAsBA,EACtBi5D,aAAchB,EAAKgB,aAAazuJ,KAAKytJ,GACrCrN,qBAAsBA,EACtBsO,gBAAiBjB,EAAKkB,UAAU3uJ,KAAKytJ,GACrC5T,aAAc4T,EAAK5T,aAAa75I,KAAKytJ,GACrChB,aAAcgB,EAAKhB,aAAazsJ,KAAKytJ,GACrC/sK,gBAAiB+sK,EAAKj3K,MAAMkK,gBAC5BkuK,cAAenB,EAAKmB,cAAc5uJ,KAAKytJ,GACvCtuJ,cAAesuJ,EAAKtuJ,cAAca,KAAKytJ,GACvC9mK,iBAAkB8mK,EAAKj3K,MAAMmQ,iBAC7B25J,uBAAwBA,EACxB39F,gBAAiB8qG,EAAK9qG,gBAAgB3iD,KAAKytJ,GAC3C3/C,iBAAkB2/C,EAAK3/C,iBAAiB9tG,KAAKytJ,GAC7CvN,yBAA0BA,EAC1Bj5I,oBAAqBwmJ,EAAKj3K,MAAMywB,oBAChC20I,kBAAmB6R,EAAK7R,kBAAkB57I,KAAKytJ,GAC/CrmD,0BAA2BA,EAC3BhlG,0BAA2BA,EAC3BwuG,mBAAoB68C,EAAK78C,mBAAmB5wG,KAAKytJ,GACjD5J,sBAAuB4J,EAAK5J,sBAAsB7jJ,KAAKytJ,GACvDrI,4BAA6BqI,EAAKj3K,MAAM4uK,mCAQtDvtK,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,KACEv2K,EAAA1E,EAAAC,cAAC07K,GAAD,CACEj0C,OAAQA,EACRt4G,QAASA,EACTo3I,QAASA,EACTr5J,QAASA,EACTo/J,SAAUA,EACVzqK,SAAUA,EACV81B,UAAWA,EACX4xI,YAAaA,EACbrjG,aAAcA,EACdukC,SAAU4vE,EAAKj3K,MAAMqnG,SACrB4hE,eAAgBA,EAChBjM,OAAQia,EAAKja,OAAOxzI,KAAKytJ,GACzB5P,gBAAiBA,EACjBsN,WAAYsC,EAAKj3K,MAAM20K,WACvBnN,iBAAkBA,EAClBj+G,iBAAkBA,EAClBkgH,iBAAkBA,EAClBsO,SAAU,SAAAl4K,GAAOo3K,EAAKc,SAASl4K,IAC/BgE,YAAaozK,EAAKj3K,MAAM6D,YACxB6wB,kBAAmBA,EACnB4zE,kBAAmBA,EACnB8gE,kBAAmBA,EACnB4B,mBAAoBA,EACpBrnK,cAAeszK,EAAKj3K,MAAM2D,cAC1BozG,cAAekgE,EAAKj3K,MAAM+2G,cAC1B+wD,oBAAqBA,EACrBuB,oBAAqBA,EACrB/F,eAAgB2T,EAAKj3K,MAAMsjK,eAC3BwR,eAAgBmC,EAAKj3K,MAAM80K,eAC3B91D,qBAAsBA,EACtBi5D,aAAchB,EAAKgB,aAAazuJ,KAAKytJ,GACrCrN,qBAAsBA,EACtBsO,gBAAiBjB,EAAKkB,UAAU3uJ,KAAKytJ,GACrC5T,aAAc4T,EAAK5T,aAAa75I,KAAKytJ,GACrC/sK,gBAAiB+sK,EAAKj3K,MAAMkK,gBAC5BkuK,cAAenB,EAAKmB,cAAc5uJ,KAAKytJ,GACvCnN,uBAAwBA,EACxBJ,yBAA0BA,EAC1B94C,0BAA2BA,EAC3BwJ,mBAAoB68C,EAAK78C,mBAAmB5wG,KAAKytJ,GACjDrI,4BAA6BqI,EAAKj3K,MAAM4uK,8BAInB,eAArBqI,EAAKj3K,MAAM2uE,OACTttE,EAAA1E,EAAAC,cAAC27K,GAAD,CACEx8J,KAAMA,EACNjS,QAASA,EACTm/J,eAAgBA,EAChBI,oBAAqBA,EACrBD,kBAAmBA,EACnBjD,YAAaA,EACbyD,qBAAsBA,EACtB9B,oBAAqBA,EACrBN,iBAAkBA,EAClBkC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBzC,gBAAiBA,EACjBz2C,0BAA2BA,EAC3ByT,OAAQA,EACRt4G,QAASA,EACTxQ,YAAaA,IAMI,YAArB07J,EAAKj3K,MAAM2uE,OACTttE,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,KACEv2K,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,CAAOY,OAAK,EAAC95K,KAAK,IAChB+pG,OAAQ,SAAC1tG,GAAD,OACNsG,EAAA1E,EAAAC,cAACi7K,EAAA,SAAD,CACEC,SAAUZ,GAEV71K,EAAA1E,EAAAC,cAACw3K,GAADl4K,OAAAgF,OAAA,GACMnG,EADN,CAEEghB,KAAMA,EACNgQ,QAASA,EACTjiB,QAASA,EACTrL,SAAUA,EACV0mD,SAAUA,EACV5wB,UAAWA,EACXuuC,aAAcA,EACdkyG,WAAYiC,EAAKj3K,MAAMlE,MACvBkhK,OAAQia,EAAKja,OAAOxzI,KAAKytJ,GACzBhC,YAAagC,EAAKj3K,MAAMjC,OACxBkrK,eAAgBA,EAChBv9J,UAAWurK,EAAKj3K,MAAM0L,UACtBjM,MAAOw3K,EAAKj3K,MAAM60K,cAClBkD,SAAU,SAAAl4K,GAAMo3K,EAAKc,SAASl4K,IAC9B6oB,WAAYuuJ,EAAKj3K,MAAM0oB,WACvB+rJ,WAAYwC,EAAKj3K,MAAMy0K,WACvBE,WAAYsC,EAAKj3K,MAAM20K,WACvBD,YAAauC,EAAKj3K,MAAM00K,YACxB7wK,YAAaozK,EAAKj3K,MAAM6D,YACxBulK,kBAAmBA,EACnB9gE,kBAAmBA,EACnBvuE,kBAAmBA,GACnBrF,kBAAmBA,EACnBs2I,mBAAoBA,EACpB3rH,cAAe43H,EAAKj3K,MAAMq/C,cAC1B17C,cAAeszK,EAAKj3K,MAAM2D,cAC1B0lK,oBAAqBA,EACrB8L,kBAAmB8B,EAAK9B,kBACxBn2D,qBAAsBA,EACtBi5D,aAAchB,EAAKgB,aAAazuJ,KAAKytJ,GACrChB,aAAcgB,EAAKhB,aAAazsJ,KAAKytJ,GACrC5B,mBAAoB4B,EAAK5B,mBACzBnrK,gBAAiB+sK,EAAKj3K,MAAMkK,gBAC5Bye,cAAesuJ,EAAKtuJ,cAAca,KAAKytJ,GACvCwB,kBAAmBxB,EAAKkB,UAAU3uJ,KAAKytJ,GACvClC,kBAAmBkC,EAAKj3K,MAAM+0K,kBAC9B5oG,gBAAiB8qG,EAAK9qG,gBAAgB3iD,KAAKytJ,GAC3CxmJ,oBAAqBwmJ,EAAKj3K,MAAMywB,oBAChC20I,kBAAmB6R,EAAK7R,kBAAkB57I,KAAKytJ,GAC/CrmD,0BAA2BA,EAC3BwJ,mBAAoB68C,EAAK78C,mBAAmB5wG,KAAKytJ,GACjDrI,4BAA6BqI,EAAKj3K,MAAM4uK,+BAE1CvtK,EAAA1E,EAAAC,cAACuiH,GAAAxiH,EAAD,CACE+7K,QAAS,IACT72K,WAAY,KACZy0B,SAAU,SACVqiJ,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1B35K,MAAO,CAAE+F,WAAY,yBAA0B+C,OAAQ,WACvDs8J,YAAa,CAAEnjK,QAAS1C,EAAW,QAAU,OAAQkK,gBAAiB,UAAWrK,MAAO,QAASw6K,UAAWr6K,EAAW,MAAQ,SAE/H4C,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,MAAOD,WAAY,CAAC,aAAc,UAAWE,eAAgB,aAAcivH,UAAW,CAAC,QAAS,WAAYhsH,MAAOT,EAAW,CAAEs6K,UAAW,UAAa,MAC3K13K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOH,QAAS,CAAC,OAAQ,SAAU8G,IAAK,oBAAqBnM,MAAO,OAAQiC,OAAQ,SACpFsD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMrC,GAAI,CAAC,EAAG,GAAIX,MAAO,YAAaF,SAAU,EAAG8E,UAAW,WAA9D,4RAC2R7B,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMwf,KAAM,gEAAiEF,OAAQ,SAAUC,IAAI,+BAA+BtiB,WAAY,QAA9I,iBAD3R,+LASV8C,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,CAAOY,OAAK,EAAC95K,KAAK,qBAChB2C,EAAA1E,EAAAC,cAACo8K,EAAD,OAEF33K,EAAA1E,EAAAC,cAACg7K,GAAA,EAAD,KACEv2K,EAAA1E,EAAAC,cAACq8K,GAAD,UAOZ53K,EAAA1E,EAAAC,cAACs8K,GAAD,CACE5uK,aAAcA,EACdoB,UAAWurK,EAAKj3K,MAAM0L,4BAxjClC3O,aClBEo8K,QACW,cAA7B/5J,OAAOkX,SAAS8iJ,UAEe,UAA7Bh6J,OAAOkX,SAAS8iJ,UAEhBh6J,OAAOkX,SAAS8iJ,SAASjsI,MACvB,2DCX2B,cAA7B/tB,OAAOkX,SAAS8iJ,UAClB7K,IAAY,CACV8K,IAAK,6DACLC,WAFU,SAECzvD,EAAO0vD,GAChB,IAAIhtJ,EAASs9F,EACPnvG,EAAQ6+J,EAAKC,kBAMnB,OALI9+J,GAASA,EAAMmmC,SACbnmC,EAAMmmC,QAAQ1T,MAAM,iDACtB5gB,GAAS,GAGNA,KAKbktJ,IAAShxE,OAAOpnG,EAAA1E,EAAAC,cAAC88K,GAAD,MAAS/vJ,SAASC,eAAe,SD0G3C,kBAAmB0vH,WACrBA,UAAUqgC,cAAcC,MAAM15D,KAAK,SAAA25D,GACjCA,EAAaC,szEElInBv/K,EAAAC,QAAA,CAAkBu/K,OAAA,uBAAAl7K,KAAA,gvrBCGZ2zG,EAAY,SAAAtlG,GAAA,IAAE/J,EAAF+J,EAAE/J,SAAU8oG,EAAZ/+F,EAAY++F,UAAclxG,EAA1BmB,OAAA89K,EAAA,EAAA99K,CAAAgR,EAAA,iCAChB+sK,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACE59K,EAAG,EACHwB,OAAQ,EACR2D,GAAI,OACJ0H,GAAI,OACJpL,OAAQ,OACRgE,aAAc,EACd3C,SAAU,OACVtD,MAAQf,EAAMe,MAAQf,EAAMe,MAAQ,OACpCoG,SAAWnH,EAAMmH,SAAWnH,EAAMmH,SAAW,OAC7C/C,SAAWpE,EAAMoE,SAAWpE,EAAMoE,SAAW,SAE7C86K,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACE3zK,IAAK,IACLyB,OAAQ,EACRxB,MAAO,IACPuB,SAAU,YAEVkyK,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAOl7K,KAAR,CACE+iK,UAAQ,EACRl6J,KAAM,QACN5G,KAAM,QACNzC,QAASytG,EACTjqG,UAAYjH,EAAMiH,UAAYjH,EAAMiH,UAAa,eAGrDi4K,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACEn8K,OAAQ,OACR0K,KAAM,WACNzM,cAAe,SACfuF,UAAW,CAAExG,EAAMo/K,QAAU34K,IAAOunB,GAAK,MACzC7pB,MAAO,CACLE,SAAU,OACVg7K,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBv/K,EAAMkK,WAAqB,KAAR,MACpCs1K,gBAAgB,mCAChBt1K,WAAYlK,EAAMkK,WAAalK,EAAMkK,WAAa,MAEpD0D,gBAAiB,UAEhBxF,KAKPqvG,EAAUtG,OAAS,SAACnxG,GAAD,OACjBk/K,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACEp+K,MAAO,EACPmH,GAAI,CAAC,EAAE,GACPmqG,GAAI,CAAC,EAAE,GACP9wF,GAAKvhB,EAAMuhB,GAAKvhB,EAAMuhB,GAAMvhB,EAAM8M,KAAO,EAAI,CAAC,EAAE,GAChDoqG,aAAel3G,EAAMk3G,aAAel3G,EAAMk3G,aAAe,kBAEzDgoE,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACEt3K,GAAI,CAAC,EAAE,GACP7G,WAAY,SACZC,cAAe,UAEbjB,EAAM8M,MAAQoyK,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CAAOp+K,MAAQf,EAAM03G,WAAa13G,EAAM03G,WAAa,OAASxqG,IAAKlN,EAAM8M,OACzFoyK,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAQ//D,GAATj+G,OAAAgF,OAAA,CACE+B,GAAI,EACJ7E,SAAU,CAAC,EAAE,GACbE,MAAO,YACP4E,UAAW,SACX6U,GAAIhd,EAAM8M,KAAO,EAAI,EACrBzC,WAAY,aACRrK,EAAMmQ,YAETnQ,EAAMiQ,OAGPjQ,EAAMgiH,UACNk9D,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAQ3wK,GAATrN,OAAAgF,OAAA,CACEob,GAAI,CAAC,EAAE,GACPje,WAAY,EACZD,SAAU,CAAC,EAAE,GACbwoG,WAAY,IACZtoG,MAAO,YACP4E,UAAW,UACPnI,EAAMy/K,eAETz/K,EAAMgiH,UAIThiH,EAAMkoK,WACNgX,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAQ3wK,GAAT,CAAY+S,GAAI,EAAGle,SAAU,CAAC,EAAE,GAAI8E,UAAW,SAAU7E,WAAY,EAAGuoG,WAAY,IAAKtoG,MAAO,aAC7FvD,EAAMkoK,cAOjBzwD,EAAUrG,KAAO,SAAA/7F,GAAA,IAAEjN,EAAFiN,EAAEjN,SAAapI,EAAfmB,OAAA89K,EAAA,EAAA99K,CAAAkU,EAAA,qBACf6pK,EAAAt9K,EAAAC,cAACs9K,EAAA,EAADh+K,OAAAgF,OAAA,CACEpF,MAAO,EACP8G,GAAI,CAAC,EAAE,IACH7H,GAEHoI,IAaLqvG,EAAUpG,OAAS,SAAA3wF,GAAA,IAAEtY,EAAFsY,EAAEtY,SAAFjH,OAAA89K,EAAA,EAAA99K,CAAAuf,EAAA,qBACjBw+J,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACEzxK,KAAM,WACNxM,eAAgB,SAChBo3H,UAAW,EACXjtH,YAAa,aACbxD,GAAI,CAAC,EAAE,GACPD,GAAI,GAEHQ,IAKLqvG,EAAUioE,WAAa,SAAA9/I,GAAA,IAAEn8B,EAAFm8B,EAAEn8B,QAAFtC,OAAA89K,EAAA,EAAA99K,CAAAy+B,EAAA,oBACrBs/I,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAD,CACEnyK,SAAU,WACVxB,IAAK,IACL1D,KAAM,IACN61J,EAAG,EACH3vI,GAAI,SAEJkxJ,EAAAt9K,EAAAC,cAACs9K,EAAA,EAAOlY,QAAR,CACExjK,QAASA,EACTujK,UAAQ,EACRl6J,KAAM,YACN5G,KAAM,YAKGuxG,wKChJT+K,6MAEJv9G,MAAQ,CACNq8F,SAAS,KACTq+E,kBAAkB,QAIpB9/K,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK8/K,oMAGkBx6K,EAAUC,yEACjCvF,KAAKI,YACC+jH,EAAuB7+G,EAAU6+G,uBAAyBnkH,KAAKE,MAAMikH,uBACvC7+G,EAAUswB,qBAAuBlkB,KAAKC,UAAUrM,EAAUswB,uBAAyBlkB,KAAKC,UAAU3R,KAAKE,MAAM01B,sBAC/GuuF,IAChCnkH,KAAK8/K,0RAMDn9E,EAAc3iG,KAAKE,MAAMyiG,cAAe,EAEzC3iG,KAAKE,MAAM01B,qBAAwB51B,KAAKE,MAAMikH,wBAAyBxhB,IAAe3iG,KAAKmF,MAAMq8F,oDAC7F,cAGLxhG,KAAKE,MAAMshG,WAAYxhG,KAAKE,MAAM2/K,2DAC7B7/K,KAAK2F,SAAS,CACnB67F,SAASxhG,KAAKE,MAAMshG,SACpBq+E,kBAAkB7/K,KAAKE,MAAM2/K,+BAI3BE,EAA8B//K,KAAKE,MAAM6/K,6BAA+B,EAAC,EAAKp9E,GAKpC,oBAArC3iG,KAAKE,MAAM0iH,wDAA6Co9D,EAAAhgL,KAAKE,OAAM0iH,sBAAXzuG,MAAA6rK,EAAA3+K,OAAAivG,EAAA,EAAAjvG,CAAoC0+K,iEAAqCE,EAAAjgL,KAAKD,eAAc0iG,mBAAnBtuF,MAAA8rK,EAAA5+K,OAAAivG,EAAA,EAAAjvG,CAAyC0+K,8CAFnL1gJ,WACAmiE,aAGEq+E,EAAoB7/K,KAAKD,cAAcqT,MAAM,GAC5CpT,KAAKD,cAAcqT,MAAMouF,GAAUhhG,SAAYR,KAAKD,cAAcqT,MAAMisB,GAAQ7+B,UACnFq/K,EAAoBr+E,EAAS7tF,KAAK6tF,EAASl1F,MAAM+yB,EAAOlc,IAAI,0BAGvDnjB,KAAK2F,SAAS,CACnB67F,WACAq+E,2JAIK,IAAAx/K,EAAAL,KACP,OAAOA,KAAKmF,MAAMq8F,SAChBp8E,EAAAtjB,EAAAC,cAACm+K,EAAA,EAAD7+K,OAAAgF,OAAA,CACEpF,MAAO,GACHjB,KAAKE,MAAMc,WAEfokB,EAAAtjB,EAAAC,cAACo+K,EAAAr+K,EAAD,CACEyiH,MAAO,EACP1jH,SAAU,EACViqD,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVC,MAAOzuB,WAAWrM,KAAKmF,MAAMq8F,UAC7Br1C,IAAK9/C,WAAWrM,KAAKmF,MAAM06K,mBAC3Bn7D,aAAe,SAAA/sF,GAAC,MAAI,KAAKt3B,EAAKN,cAAcW,YAAYi3B,EAAE,KAEzD,SAAApiB,GAAA,IAAGovG,EAAHpvG,EAAGovG,WAAHpvG,EAAeulB,MAAf,OACC1V,EAAAtjB,EAAAC,cAAA,QACEsC,MAAQhE,EAAKH,MAAMkkH,aAAe/jH,EAAKH,MAAMkkH,aAAe,CAC1D99G,QAAQ,QACR7C,MAAM,YACNe,WAAW,SACX+F,WAAWlK,EAAKH,MAAM0E,MAAM4F,MAAMyc,QAClCzjB,WAAWnD,EAAKH,MAAM0E,MAAM6Y,YAAY,GACxCpV,UAAWhI,EAAKH,MAAM0D,SAAW,SAAW,QAC5CL,SAAUlD,EAAKH,MAAM0D,SAAW,QAAUvD,EAAKH,MAAM0E,MAAM2Y,UAAU,IAEvEqnG,IAAKD,OAKuB,qBAAxB3kH,KAAKE,MAAMgiH,UAA4BliH,KAAKE,MAAMgiH,WACxD98F,EAAAtjB,EAAAC,cAACqO,EAAA,EAAD/O,OAAAgF,OAAA,CACE7C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACP4E,UAAW,CAAC,SAAS,UACjBrI,KAAKE,MAAMy/K,eAEfv6J,EAAAtjB,EAAAC,cAACm+K,EAAA,EAAKv6J,KAAN,CAAWniB,WAAY,UAAWC,MAAO,UAAWF,SAAU,WAAYvD,KAAKE,MAAMgiH,UAAY,6BAMzG98F,EAAAtjB,EAAAC,cAACm+K,EAAA,EAAD,CACEj/K,MAAO,EACPC,WAAY,SACZE,eAAgBpB,KAAKE,MAAMyiH,aAAe,UAE1Cv9F,EAAAtjB,EAAAC,cAACm+K,EAAA,EAAD,CACE95K,KAAM,iBAtHoBlE,aA6HrBwgH,uCCnIfl8F,EAAAhd,EAAAkd,EAAA,sBAAAqB,IAAAvB,EAAAhd,EAAAkd,EAAA,sBAAA+C,IAAAjD,EAAAhd,EAAAkd,EAAA,sBAAAiG,IAAAnG,EAAAhd,EAAAkd,EAAA,sBAAAmG,IAAA,IAAAuzJ,EAAA55J,EAAA,IAGMoC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPxB,KAAM,UACNs4J,SAAU,UACV52J,MAAO,UACPkD,OAAQ,UACRE,IAAK,UACLyzJ,QAAS,UACTC,cAAe,WAIX17K,EAAS,CACby7K,QAAS,CACPt4J,KAAMY,EAAW03J,QACjBj9K,KAAMm9K,YAAc53J,EAAW03J,SAC/Bn4J,MAAO,CAAC,KAAMqE,YAAK,GAAK5D,EAAW03J,UACnC3iK,KAAM,CAAC,KAAM4O,YAAM,GAAK3D,EAAW03J,WAErCv4J,KAAM,CACJC,KAAMY,EAAWb,KACjB1kB,KAAMm9K,YAAc53J,EAAWb,MAC/BI,MAAO,CAAC,KAAMqE,YAAK,GAAK5D,EAAWb,OACnCpK,KAAM,CAAC,KAAM4O,YAAM,GAAK3D,EAAWb,QAErC0B,MAAO,CACLzB,KAAMY,EAAWa,MACjBpmB,KAAMulB,EAAWW,MACjBpB,MAAO,CAAC,KAAMqE,YAAK,GAAK5D,EAAWa,QACnC9L,KAAM,CAAC,KAAM4O,YAAM,GAAK3D,EAAWa,SAErCkD,OAAQ,CACN3E,KAAMY,EAAW+D,OACjBtpB,KAAMm9K,YAAc53J,EAAW+D,QAC/BxE,MAAO,CAAC,KAAMqE,YAAK,GAAK5D,EAAW+D,SACnChP,KAAM,CAAC,KAAM4O,YAAM,GAAK3D,EAAW+D,UAErCE,IAAK,CACH7E,KAAMY,EAAWiE,IACjBxpB,KAAMm9K,YAAc53J,EAAWiE,KAC/B1E,MAAO,CAAC,KAAMqE,YAAK,GAAK5D,EAAWiE,MACnClP,KAAM,CAAC,KAAM4O,YAAM,GAAK3D,EAAWiE,QAKjC9E,EAAOljB,EAAOkjB,KACd0B,EAAQ5kB,EAAO4kB,MACfkD,EAAS9nB,EAAO8nB,OAChBE,EAAMhoB,EAAOgoB,IAOJjE,uGCzDT63J,mLAEK,IAAAh+K,EAAAzC,KAED0gL,EAAgB,kBACpBp5K,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACE/D,MAAiC,OAAzBhB,EAAKvC,MAAMmjH,UAAsB,UAAY,UACrD57G,KAAgC,OAAzBhF,EAAKvC,MAAMmjH,UAAsB,cAAgB,gBACxDj9G,KAAO3D,EAAKvC,MAAMiD,SAAWV,EAAKvC,MAAMiD,SAAaV,EAAKvC,MAAM0D,SAAW,QAAU,SAIzF,OACE0D,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACEtG,WAAY,SACZC,cAAe,MACfF,MAAQjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAQ,EAC9CG,eAAgBpB,KAAKE,MAAMkB,eAAiBpB,KAAKE,MAAMkB,eAAiB,YAGpEpB,KAAKE,MAAMygL,SAAgC,SAArB3gL,KAAKE,MAAMygL,UACjCr5K,EAAAxF,EAAAC,cAAC2+K,EAAD,MAEH1gL,KAAKE,MAAMoI,SAEW,UAArBtI,KAAKE,MAAMygL,SACTr5K,EAAAxF,EAAAC,cAAC2+K,EAAD,cA1BkBx+K,aAiCfu+K,2BCnCf/gL,EAAAC,QAAA,CAAkB+d,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,2rWCAlBle,EAAAC,QAAA,CAAkBihL,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,2pkCCKZpkE,6MAGJ38G,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBkF,EAAUC,mEACjCvF,KAAKI,kJAIL,OACEyB,EAAAC,EAAAC,cAAC8a,EAAA,EAAD,CACEhV,UAASxG,OAAAgN,EAAA,EAAAhN,CAAA,CACPI,EAAE,EACFyb,GAAG,GACAld,KAAKE,MAAM2H,YAGhBhG,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CACE/L,WAAY,SACZC,cAAe,UAEfU,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CACE7G,KAAM,QACNqB,KAAM,QACNhE,MAAO,aAET5B,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CACEiQ,GAAI,EACJ3Z,SAAU,EACVE,MAAO,WACP4E,UAAW,UAJb,uDAQAxG,EAAAC,EAAAC,cAACg/K,EAAA,EAAD,CACE/9K,YAAa,CACXka,GAAG,EACHjc,MAAM,CAAC,EAAE,KAEX6B,YAAa9C,KAAKE,MAAM61H,2BAL1B,oBA/Ce7zH,aA8DVw6G,uoTCjET9F,mLAEF,OACEj0G,EAAAb,EAAAC,cAACa,EAAA,EAADvB,OAAAgF,OAAA,CACEpF,MAAO,EACPC,WAAY,SACZE,eAAgB,UACZpB,KAAKE,MAAMc,WAEf2B,EAAAb,EAAAC,cAACa,EAAA,EAAW5C,KAAKE,MAAMslB,aAErBxlB,KAAKE,MAAMmD,MACTV,EAAAb,EAAAC,cAACa,EAAA,EAAS5C,KAAKE,MAAMwf,UAAY1f,KAAKE,MAAMmD,cAZ/BnB,aAmBV00G,sGCnBTsD,mLACK,IAAAz3G,EAAAzC,KACDE,EAAQ,CACZsD,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YACN4E,UAAU,SACV0jG,WAAW,WAIT/rG,KAAKE,OAASmB,OAAOC,KAAKtB,KAAKE,OAAOqB,QACxCF,OAAOC,KAAKtB,KAAKE,OAAOsB,QAAQ,SAAAC,GAC9BvB,EAAMuB,GAAKgB,EAAKvC,MAAMuB,KAI1B,IAAMu/K,EAAmBhhL,KAAKE,MAAMw2G,UAAY12G,KAAKE,MAAMw2G,UAAY2I,IAAQ4hD,GAE/E,OACE35J,EAAAxF,EAAAC,cAACi/K,EACK9gL,EAEHF,KAAKE,MAAMoI,iBAvBApG,aA6BLg4G,yKCvBT3I,6MAGJxxG,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,+IAIL,IAAM6gL,GAAW,IAAI1sK,MAAO2sK,cACtB1K,EAAoBx2K,KAAKD,cAAcmX,gBAAgB,CAAC,aAAa,YACrEiqK,EAAc3K,EAAoB,IAAM,EAAE,EAChD,OACEtmK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACE1tB,GAAI,EACJvB,GAAI,SACJ3B,WAAY,SACZC,cAAe,SACfuF,UAAWC,IAAOu4K,OAClBpxK,gBAAiB,QACjB1M,eAAgB,cAEhB8O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACE7wB,MAAO,EACP8G,GAAI,CAAC,EAAE,GACP3G,eAAgB,UAEhB8O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACE7wB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChBhC,WAAY,aACZoD,SAAU,CAAC,OAAO,QAClBlD,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzB+O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,CAAC,EAAEkgL,GAAchgL,cAAe,SAAU+B,OAAQ,CAAC,OAAO,SACrEgN,EAAApO,EAAAC,cAAC+vB,EAAA,EAAQwtF,GAAT,CAAYj3G,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAI+K,GAAI,EAAG7K,MAAO,aAAlG,aAGAyM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,EAAGE,cAAe,UAC7B+O,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CACE7uE,GAAI,CAAC,EAAE,GACP9uG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB4d,KAAM,mCAEN/V,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWApxK,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CACE7uE,GAAI,CAAC,EAAE,GACP9uG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB4d,KAAM,mFAEN/V,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWApxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACw/K,EAAA,EAAD,CACE99K,MAAO,OACPm3B,GAAG,oBACHl0B,UAAWC,IAAO3C,MAElBkM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACEtuB,WAAY,EACZC,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,SAErB6H,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJpxK,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CACE7uE,GAAI,CAAC,EAAE,GACP9uG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB4d,KAAM,mDAEN/V,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWApxK,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CACE7uE,GAAI,CAAC,EAAE,GACP9uG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZ6G,WAAY,YACZlC,UAAW,CAAC,SAAS,QACrB4d,KAAM,iEAEN/V,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF9K,GACEtmK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,CAAC,EAAEkgL,GAAchgL,cAAe,SAAU+B,OAAQ,CAAC,OAAO,SACrEgN,EAAApO,EAAAC,cAAC+vB,EAAA,EAAQwtF,GAAT,CAAYj3G,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAI+K,GAAI,EAAG7K,MAAO,aAAlG,cAGAyM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,EAAGE,cAAe,UAC7B+O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACw/K,EAAA,EAAD,CACE99K,MAAO,OACPm3B,GAAI,cACJl0B,UAAWC,IAAO3C,MAElBkM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACw/K,EAAA,EAAD,CACE99K,MAAO,OACPiD,UAAWC,IAAO3C,KAClB42B,GAAI,yBAEJ1qB,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACw/K,EAAA,EAAD,CACE99K,MAAO,OACPiD,UAAWC,IAAO3C,KAClB42B,GAAI,2BAEJ1qB,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,6BACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMygF,GAAI,CAAC,EAAE,GAAItxG,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD8O,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,sGACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,CAAC,EAAEkgL,GAAchgL,cAAe,SAAU+B,OAAQ,CAAC,OAAO,SACrEgN,EAAApO,EAAAC,cAAC+vB,EAAA,EAAQwtF,GAAT,CAAYj3G,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAI+K,GAAI,EAAG7K,MAAO,aAAlG,wBAGAyM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAMzpB,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAIE,MAAO,OAAQC,WAAY,QACvGwM,EAAApO,EAAAC,cAAA,QAAMs/K,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFpxK,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM7wB,MAAO,CAAC,EAAEkgL,GAAchgL,cAAe,UAC3C+O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAQwtF,GAAT,CAAYj3G,UAAW,CAAC,SAAS,QAASkC,WAAY,YAAahH,SAAU,CAAC,EAAE,GAAI+K,GAAI,EAAG7K,MAAO,aAAlG,WAGAyM,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAM3wB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1D8O,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,mCACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,4BAA4BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAEjHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,4BACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,6BAA6BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAElHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,8BACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,4BAA4BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAEjHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,mCACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,2BAA2BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAEhHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,iCACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,2BAA2BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAEhHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,gDACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,6BAA6BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,SAElHgJ,EAAApO,EAAAC,cAACq/K,EAAA,EAAD,CAASn7J,KAAK,mCACZ/V,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CAAO1kB,IAAI,+BAA+BlK,OAAQ,QAAS2K,GAAI,CAAC,OAAO,GAAIS,GAAI,CAAC,EAAE,GAAIE,UAAW,EAAGtH,aAAc,aAM5HgJ,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACE7wB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChB/B,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1B8O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACErwB,EAAG,EACHR,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChB0M,gBAAiB,YACjB3M,cAAe,CAAC,SAAS,QAEzB+O,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACEruB,MAAO,QACP4E,UAAW,CAAC,SAAS,aAFvB,QAIU44K,EAJV,qBAMA/wK,EAAApO,EAAAC,cAACw/K,EAAA,EAAD,CACE99K,MAAO,OACPm3B,GAAI,oBACJv2B,MAAO,CAACqwH,eAAe,SAEvBxkH,EAAApO,EAAAC,cAAC+vB,EAAA,EAAD,CACE1tB,GAAI,EACJX,MAAO,OACP4E,UAAW,CAAC,SAAS,aAHvB,+BAzOOnG,aAwPNqvG,0HC7PTurD,mLACK,IAAAr6J,EAAAzC,KAEDwhL,EAAW,SAACthL,GAAD,OACfyC,EAAAb,EAAAC,cAACC,EAAA,EAAQ0M,GAATrN,OAAAgF,OAAA,CACE7C,WAAY,CAAC,EAAE,GACfC,MAAO,YACPY,MAAO,CACLpD,MAAM,OACNuD,WAAW,UAEbjB,SAAU,CAAC,OAAO,GAClBwoG,WAAY,WACR7rG,GAEHA,EAAMoI,WAIX,OACE3F,EAAAb,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAOjB,KAAKE,MAAMe,OAGfjB,KAAKE,MAAMuyG,MAAQzyG,KAAKE,MAAMuyG,KAAKlxG,OAAO,EACzCoB,EAAAb,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,UAEZyB,EAAAb,EAAAC,cAACy/K,EACKxhL,KAAKE,OAEXyC,EAAAb,EAAAC,cAACC,EAAA,EAAD,CACEqC,MAAO,CACLoK,OAAO,WAET9K,QAAU,SAAAqB,GAAC,OAAIvC,EAAKvC,MAAMiiH,iBAAiB1/G,EAAKvC,MAAMiQ,MAAM1N,EAAKvC,MAAMuyG,QAEvE9vG,EAAAb,EAAAC,cAACC,EAAA,EAAD,CACEiqG,UAAW,MACXjmD,QAAS,iCAETrjD,EAAAb,EAAAC,cAACC,EAAA,EAAD,CACEsB,GAAI,EACJmE,KAAM,OACNhE,MAAO,YACPiD,UAAWC,IAAOsD,QAClB7D,KAAOpG,KAAKE,MAAM0D,SAAW,MAAQ,aAM7CjB,EAAAb,EAAAC,cAACy/K,EACKxhL,KAAKE,eArDOgC,aA8Df46J,sIC9DTt+C,qdAMqBl5G,EAAUC,kMAKjC,OACE1D,EAAAC,EAAAC,cAAC0/K,EAAA,EAAD,CACE18K,IAAK/E,KAAKE,MAAM0H,MAAM/E,GACtBgF,UAAW,CACTC,GAAG,EACHC,GAAG,EACH9G,MAAM,EACN+G,KAAMhI,KAAKE,MAAM0H,MAAMK,KAAKC,SAAWlI,KAAKE,MAAM0H,MAAMK,KAAKC,QAAQ,GAAK,QAAU,MAGtFrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,EACPE,cAAe,UAGbnB,KAAKE,MAAM0H,MAAMK,KAAKE,YACpBtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoG,GAAI,EACJ7E,SAAU,EACVC,WAAY,EACZC,MAAO,WACP4E,UAAW,QAEVrI,KAAKE,MAAM0H,MAAMK,KAAKE,YAG5BnI,KAAKE,MAAMoI,kBArCWpG,aA4ClBs8G,gLClCT9E,6MAEJv0G,MAAQ,CACN45K,OAAM,KAIRh/K,cAAgB,OAChBqF,oBAAqB,IA8DrBmsB,+BAAY,SAAAlR,IAAA,IAAAqhK,EAAA/7K,EAAAgoB,EAAAkE,EAAAyxC,EAAAc,EAAAC,EAAA3yC,EAAAgpJ,EAAAtmK,UAAA,OAAA7B,EAAAzQ,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,UAAM2uK,EAANhH,EAAAn5K,OAAA,QAAA+tB,IAAAorJ,EAAA,GAAAA,EAAA,GAAgB,MAEtBj4K,EAAK2C,oBAAuB3C,EAAKvC,MAAM0/B,UAAan9B,EAAKvC,MAAMiT,OAAU1Q,EAAKvC,MAAM8I,aAAgBvG,EAAKvC,MAAMikH,qBAFzG,CAAA5jG,EAAAxN,KAAA,eAAAwN,EAAAgB,OAAA,UAGD,GAHC,UAMJ5b,EAAyB,OAAd+7K,EACX/zJ,EAAYlrB,EAAKvC,MAAMytB,UACxB+zJ,IACHA,EAAY/zJ,EAAUlmB,MAGlBoqB,EAAalE,EAAUztB,MACvBojE,EAAkD,qBAA5B7gE,EAAKvC,MAAMojE,cAA+B7gE,EAAKvC,MAAMojE,aAC3Ec,EAAgD,qBAA3B3hE,EAAKvC,MAAMkkE,aAA8B3hE,EAAKvC,MAAMkkE,YACzEC,EAAkD,qBAA5B5hE,EAAKvC,MAAMmkE,cAA+B5hE,EAAKvC,MAAMmkE,aAE7E3yC,EAAS,MACTjvB,EAAKvC,MAAMiT,MAlBL,CAAAoN,EAAAxN,KAAA,SAAAwN,EAAAgU,GAmBAmtJ,EAnBAnhK,EAAAxN,KAAA,wBAAAwN,EAAAxN,KAAA,GAqBWtQ,EAAK1C,cAAc0jE,iBAAiBi+G,EAAU7vJ,EAAWpvB,EAAKvC,MAAM0/B,SAASn9B,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8/B,QAAQv9B,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+/B,cAAcx9B,EAAKvC,MAAM+O,QAAQq0D,EAAac,EAAYC,GArBxN,eAqBJ3yC,EArBInR,EAAA1K,OAsBUlQ,GACZlD,EAAKuD,aAAL3E,OAAAsgL,EAAA,EAAAtgL,CAAA,CACE09K,OAAM,GACL2C,EAAWhwJ,IAzBZnR,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,SAgCHmQ,GAhCG,yBAAAnR,EAAAtM,SAAAoM,EAAArgB,oFA3DNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKoF,oBAAqB,yPAI1BpF,KAAKI,kQAILJ,KAAKuxB,2LAIY9rB,wFAASC,iCAAS,KAC9B1F,KAAKoF,4DACDpF,KAAK2F,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,oGAClCvF,KAAKI,YAEC07K,EAAex2K,EAAU6N,QAAUnT,KAAKE,MAAMiT,MAC9Cse,EAAiBnsB,EAAU2J,UAAYjP,KAAKE,MAAM+O,QAClD2yK,EAAiBt8K,EAAU06B,UAAYhgC,KAAKE,MAAM8/B,QAClDluB,EAAgBxM,EAAU1B,WAAa5D,KAAKE,MAAM0D,SAClDi+K,EAAkBv8K,EAAUs6B,WAAa5/B,KAAKE,MAAM0/B,SACpD7tB,EAAmBzM,EAAUuL,YAAc7Q,KAAKE,MAAM2Q,UACtDixK,EAAex8K,EAAUqoB,UAAUlmB,OAASzH,KAAKE,MAAMytB,UAAUlmB,KACjE08G,GAAwB7+G,EAAU6+G,sBAAwBnkH,KAAKE,MAAMikH,qBACrEuwD,GAA2BpvK,EAAU4rB,SAAWlxB,KAAKE,MAAMgxB,SAAa5rB,EAAU4rB,SAAWlxB,KAAKE,MAAMgxB,SAAWxf,KAAKC,UAAUrM,EAAU4rB,QAAQsI,YAAc9nB,KAAKC,UAAU3R,KAAKE,MAAMgxB,QAAQsI,UACpMomF,EAAsBt6G,EAAUmK,cAAgBzP,KAAKE,MAAMuP,cAAgBpO,OAAO2R,OAAO1N,EAAUmK,cAAcwD,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGxD,SAAqBnO,SAAWF,OAAO2R,OAAOhT,KAAKE,MAAMuP,cAAcwD,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGxD,SAAqBnO,OAEjPugL,GAAgBhG,GAAgB+F,GAAmBD,GAAkBnwJ,GAAkBmuF,GAAuBuE,GAAwBuwD,EAExI10K,KAAKgG,aAAa,CAChB+4K,OAAM,GACN,WACA1+K,EAAKkxB,eAEEzf,GAAiBC,KAEpBsyG,EAAWhjH,OAAOgF,OAAO,GAAGrG,KAAKmF,OACvCnF,KAAKgG,aAAa,CAChB+4K,OAAM,GACN,WACA1+K,EAAKsF,SAAS0+G,6IAwCZ,IAAA36G,EAAA1J,KACA2tB,EAAY3tB,KAAKE,MAAMytB,UACzB+D,EAAS,KAGPzrB,OADsCqpB,IAAzB3B,EAAUngB,YAA4BmgB,EAAUngB,WACtC0C,EAAApO,EAAAC,cAACsjB,EAAA,EAAD,CAAQjf,KAAK,SAAa,KAEjDyrB,EAAa,CACjBruB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACNzC,UAAU,CACRI,eAAe,eAKfusB,EAAUztB,OAASmB,OAAOC,KAAKqsB,EAAUztB,OAAOqB,QAClDF,OAAOC,KAAKqsB,EAAUztB,OAAOsB,QAAQ,SAAAC,GACnCowB,EAAWpwB,GAAKksB,EAAUztB,MAAMuB,KAKhCksB,EAAU5c,WAAa1P,OAAOC,KAAKqsB,EAAU5c,WAAWxP,QAC1DF,OAAOC,KAAKqsB,EAAU5c,WAAWvP,QAAQ,SAAAC,GACH,oBAAzBksB,EAAU5c,UAAUtP,KAC7BowB,EAAWpwB,GAAKksB,EAAU5c,UAAUtP,GAAGiI,EAAKxJ,UAQlD,IAAMY,EAAe+wB,GAAcre,SAASqe,EAAW/wB,eAAe,EAAI+wB,EAAW/wB,aAAe,EAC9FD,EAAWgxB,GAAcre,SAASqe,EAAWhxB,WAAW,EAAIgxB,EAAWhxB,SAAab,KAAKE,MAAM0D,SAAW,EAAI,EAC9G7C,EAAe8wB,GAAcre,SAASqe,EAAW9wB,eAAe,EAAI8wB,EAAW9wB,aAAiBf,KAAKE,MAAM0D,SAAW,EAAI,EAG1H5C,EAAY6wB,EAAW7wB,UAG7B,cAFO6wB,EAAW7wB,UAEV2sB,EAAUlmB,MAChB,IAAK,eACH,IAAMo4B,EAAiB7/B,KAAKD,cAAcmX,gBAAgB,CAAC,QAAS,YAAalX,KAAKE,MAAM0/B,WACtF7yB,EAAe8yB,GAAkBA,EAAe7yB,KAAO6yB,EAAe7yB,KAAvD,GAAArI,OAAiE3E,KAAKE,MAAM0/B,SAA5E,QACrBlO,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,CAAO+G,IAAG,oBAAAzI,OAAsBoI,IAAoB8kB,IAExD,MACA,IAAK,oBAEH,GADAH,EAAS,KACL1xB,KAAKE,MAAM8I,YAAYsiB,aAAa,CACtC,IAAMy2J,EAAW/hL,KAAKD,cAAca,iBAAiBZ,KAAKE,MAAM8I,YAAY0kD,MAAO,EAAG5sD,EAAc,GAAnF,IAAA6D,OAA4F3E,KAAKE,MAAMiT,OACxHue,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAAD,CACE4mF,UAAW,MACXjmD,QAAO,oDAAArhD,OAAsDo9K,IAE7D7xK,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,CAAO+G,IAAG,2BAAiCykB,KAInD,MACA,IAAK,cACHH,EAAS,KACT,IAAIswJ,EAAY,KACZC,EAAa,KACbjiL,KAAKE,MAAM8I,YAAYsiB,cACzB02J,EAAY,eACZC,EAAa,iBAEbD,EAAY,aACZC,EAAa,cAEfvwJ,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAAD,CACEtd,GAAI,EACJD,GAAI,EACJZ,aAAc,EACdhG,WAAY,SACZE,eAAgB,SAChB0M,gBAAiBm0K,GAEjB/xK,EAAApO,EAAAC,cAACsjB,EAAA,EAAD,CACE9hB,SAAU,EACVC,WAAY,EACZC,MAAO,SAENu+K,IAIT,MACA,IAAK,kBACH,IAAMlpE,EAAiB94G,KAAKD,cAAcmX,gBAAgB,CAAC,WAAWlX,KAAKE,MAAM8/B,UACjFtO,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,CACE5E,EAAG,MACHyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB0M,gBAAe,QAAAnJ,OAAUm0G,EAAer1G,MAAMqpI,IAAIlgI,KAAK,KAAxC,UACX5L,GAEJkP,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,GACMwrB,EADN,CAEE7S,MAAO,SACPvX,KAAMqxG,EAAe9rG,KACrBvJ,MAAOq1G,EAAer1G,MAAM+1G,QAIpC,MACA,IAAK,YACH,IAAMxwG,EAAchJ,KAAKD,cAAcmX,gBAAgB,CAAC,QAAQ,SAASlX,KAAKE,MAAMiT,MAAMgE,gBACpF8iG,EAAYjxG,GAAeA,EAAYgE,KAAOhE,EAAYgE,KAA9C,iBAAArI,OAAsE3E,KAAKE,MAAMiT,MAAMgE,cAAvF,QAClBua,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,CAAO+G,IAAK6sG,GAAepoF,IAE/B,MACA,IAAK,SACH,IAAMqwJ,EAAyC,oBAApBv0J,EAAU9gB,MAAuB8gB,EAAU9gB,MAAM7M,KAAKE,OAASytB,EAAU9gB,MACpG6kB,EACExhB,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,GAAYwrB,EAAZ,CAAwBluB,QAAS,kBAAMkuB,EAAW/uB,YAAY4G,EAAKxJ,UAAUgiL,GAEjF,MACA,IAAK,SACHxwJ,EACExhB,EAAApO,EAAAC,cAACogL,EAAA,EAAD,CACE3xK,IAAKxQ,KAAKE,MACVytB,UAAWA,IAGjB,MACA,IAAK,cACH+D,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMi9K,YAAY57G,WAAaxmE,KAAKmF,MAAMi9K,YAAY37G,QACtFv2D,EAAApO,EAAAC,cAACsgL,EAAAvgL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMi9K,YAAY37G,SACvC3rC,MAAOzuB,WAAWrM,KAAKmF,MAAMi9K,YAAY57G,WACzCk+C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAAwU,GAAA,IAAGovG,EAAHpvG,EAAGovG,WAAHpvG,EAAeulB,MAAf,OACC5qB,EAAApO,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,kBACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMohE,iBAAmBvmE,KAAKmF,MAAMohE,gBAAgBP,eAAiBhmE,KAAKmF,MAAMohE,gBAAgBJ,YAChIj2D,EAAApO,EAAAC,cAACsgL,EAAAvgL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMohE,gBAAgBJ,aAC3CrrC,MAAOzuB,WAAWrM,KAAKmF,MAAMohE,gBAAgBP,eAC7C0+C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAA6f,GAAA,IAAG+jG,EAAH/jG,EAAG+jG,WAAH/jG,EAAeka,MAAf,OACC5qB,EAAApO,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACHyrB,EAAS1xB,KAAKmF,MAAMwoB,EAAUlmB,OAASpG,OAAOC,KAAKtB,KAAKmF,MAAMwoB,EAAUlmB,OAAOlG,OAAO,EACpF2O,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,CACEpF,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZusB,EAAU7c,aAGZzP,OAAOC,KAAKtB,KAAKmF,MAAMwoB,EAAUlmB,OAAO3D,IAAK,SAAC4kE,EAASizB,GACrD,IAAMrzD,EAAiB5+B,EAAKvE,MAAMwoB,EAAUlmB,MAAMihE,GAClD,OACEx4D,EAAApO,EAAAC,cAACugL,EAAA,EAAD,CACEnvK,MAAOu1D,EACP1/D,YAAas/B,EACbvjC,IAAG,SAAAJ,OAAWg3F,GACdhuE,UAAW,CACTlmB,KAAK,cACL86K,aAAa,CACXv8H,QAAQ,GAAArhD,OAAG+jE,IAAYh/D,EAAKvE,MAAMizF,+BAAiC1uF,EAAKvE,MAAMizF,8BAA8B1vB,GAArF,KAAA/jE,OAAsG+E,EAAKvE,MAAMizF,8BAA8B1vB,GAAUn8D,QAAQ1L,GAAjK,KAAA8D,OAA8K2jC,EAAe7R,sBAA7L,yBAA4O,KAErQv2B,MAAM,CACJgH,aAAa,MACbgG,SAAS,WACThK,OAAO,CAAC,QAAQ,OAChBI,GAAGq4F,EAAgB,QAAU,EAC7BxuF,OAAO9L,OAAO2R,OAAOtJ,EAAKvE,MAAMwoB,EAAUlmB,OAAOlG,OAAOo6F,EACxDntF,UAAU,CAAC,kCAAkC,0CAQzDxO,KAAKmF,MAAMwoB,EAAUlmB,MACvByI,EAAApO,EAAAC,cAACsjB,EAAA,EAASwM,EAAV,KACE5rB,EACN,MACA,QACE,IAAIu8K,EAAiBxiL,KAAKmF,MAAMwoB,EAAUlmB,MACtCzH,KAAKmF,MAAMwoB,EAAUlmB,OAASzH,KAAKmF,MAAMwoB,EAAUlmB,MAAMg7K,eAC3DD,EAAiBxiL,KAAKmF,MAAMwoB,EAAUlmB,MAAM8E,QAAQ1L,IAEtD6wB,EAAS1xB,KAAKmF,MAAMwoB,EAAUlmB,MAC5ByI,EAAApO,EAAAC,cAACsjB,EAAA,EAADhkB,OAAAgF,OAAA,GAAUwrB,EAAV,CAAsB7jB,wBAAyB,CAACC,OAAOu0K,MACrDv8K,EAGR,OAAOyrB,SA3UgBxvB,aA+UZw3G,iKC3RAgpE,6MArDb3iL,cAAgB,OAqBhB4iL,MAAQ,WAENlgL,EAAK1C,cAAcwwB,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,UACbF,WAAYztB,EAAKvC,MAAM0iL,SAGzB,IAAMtH,EAAIhoK,KAAKC,IAAIgR,OAAO41J,WAAW,KAE/BniK,GAAKuM,OAAO41J,WAAWmB,GAAG,EAEhC/2J,OAAO6tD,KAAP,yCAAAztE,OAAqDlC,EAAKvC,MAAM45G,OAAQ,SAAxE,8CAAAn1G,OADU,IACV,UAAAA,OAAyIqT,EAAzI,WAAArT,OAAoJ22K,EAApJ,YAAA32K,OAHU,kFA5BN3E,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACP,OACIwG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CACES,aAAc,EACdC,UAAW,UACXoyG,cAAe,QACf51G,QAAU,SAAAqB,GAAO3E,EAAKsiL,UAEtBn8K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMtF,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEoF,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAKC,UAAWC,IAAOwnB,cACvB3nB,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAO,QAASD,WAAY,EAAGF,GAAI,GAAKtD,KAAKE,MAAMmD,KAAOrD,KAAKE,MAAMmD,KAAO,kBAjD7DnB,gCCE3B03G,6MAGJ75G,cAAgB,OAqBhB8tG,iDAAa,SAAAxtF,EAAOhN,GAAP,OAAAwf,EAAA/wB,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,WACWtQ,EAAK1C,cAAcknD,mBAEvB8B,UAAUC,OAAOzF,OAAOrvB,QAH/B,CAAA3T,EAAAxN,KAAA,eAAAwN,EAAAxN,KAAA,EAIHtQ,EAAK1C,cAAcwwB,yBAAyB,CAChDN,cAAe,QACfG,YAAa/c,EACb6c,WAAY,eAPL,OASTztB,EAAKvC,MAAM2tG,aATFttF,EAAAxN,KAAA,eAWTtQ,EAAKvC,MAAM2tG,aAXF,wBAAAttF,EAAAtM,SAAAoM,EAAArgB,0IAnBPA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACD85G,EAAQv1F,OAAOs+J,OAAO7iL,KAAKE,MAAM45G,OACjCgpE,EAAa,CAAC70K,OAAQjO,KAAKE,MAAMmD,MACvC,OACEmD,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAOyqG,OAAQlxG,KAAKE,MAAMgxG,QACxB1qG,EAAA1E,EAAAC,cAAC41G,EAAA,EAAD,CAAWvG,UAAWpxG,KAAKE,MAAM2tG,YAE7B7tG,KAAKE,MAAM25G,iBACXrzG,EAAA1E,EAAAC,cAACghL,EAAAjhL,EAAD,CACEuC,MAAO,CAAE6I,SAAU,QAAQC,OAAS,MACpC8zI,KAAK,EACL+hC,SAAS,EACT/hL,MAAOsjB,OAAO41J,WACdj3K,OAAQqhB,OAAO61J,cAGnB5zK,EAAA1E,EAAAC,cAAC41G,EAAA,EAAUtG,OAAX,CAAkBlhG,MAAOnQ,KAAKE,MAAMiQ,MAAOnD,KAAMhN,KAAKE,MAAM8M,OAC5DxG,EAAA1E,EAAAC,cAAC41G,EAAA,EAAUrG,KAAX,KACE9qG,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM6H,GAAI,EAAGrN,MAAO,EAAGE,cAAe,SAAUyF,GAAI,QAClDJ,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMhD,MAAO,YAAa4E,UAAW,SAAU9E,SAAU,EAAG6E,GAAI,EAAG4F,wBAAyB80K,KAE9Ft8K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAM2B,GAAI,EAAGjH,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EoF,EAAA1E,EAAAC,cAACkhL,EAAD,CAAoBnpE,MAAOA,EAAOz2G,KAAM,YAAau/K,OAAQ,eAC7Dp8K,EAAA1E,EAAAC,cAAC0E,EAAA,EAAD,CAAMyW,GAAI,EAAGvZ,QAAU,SAAAqB,GAAC,OAAI3E,EAAKwtG,WAAW,6BAA8BnqG,WAAY,QAAtF,uCA9DW8tG,IAAMtvG,WAuEhB03G,+IC9ETtG,6MAEJnuG,MAAQ,KAGRpF,cAAgB,OAChBqF,oBAAqB,6EAGfpF,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKoF,oBAAqB,yPAI1BpF,KAAKI,gbAOkBkF,EAAWC,mEAClCvF,KAAKI,kJAGC,IAAAC,EAAAL,KACA2tB,EAAY3tB,KAAKE,MAAMytB,UAEvBkE,EAAa,CACjBruB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YAIJkqB,EAAUztB,OAASmB,OAAOC,KAAKqsB,EAAUztB,OAAOqB,QAClDF,OAAOC,KAAKqsB,EAAUztB,OAAOsB,QAAQ,SAAAC,GACnCowB,EAAWpwB,GAAKksB,EAAUztB,MAAMuB,KAKhCksB,EAAU5c,WAAa1P,OAAOC,KAAKqsB,EAAU5c,WAAWxP,QAC1DF,OAAOC,KAAKqsB,EAAU5c,WAAWvP,QAAQ,SAAAC,GACH,oBAAzBksB,EAAU5c,UAAUtP,KAC7BowB,EAAWpwB,GAAKksB,EAAU5c,UAAUtP,GAAGpB,EAAKH,UAKlD,IAAIiyB,EAAkB,KAClB+wJ,GAAuB,EACrB/9C,EAAYx3G,EAAUltB,KACtB0iL,EAAYx1J,EAAU9pB,KACxBuuB,EAAc+wJ,EAAYnjL,KAAKD,cAAcsyB,aAAa8wJ,EAAUnjL,KAAKE,MAAMsQ,KAAO,KAE1F,OAAQ20H,GACN,IAAK,QACHhzG,EAAkBG,IAClBT,EAAWzkB,IAAMglB,EACnB,MACA,IAAK,SACHA,EAAcpyB,KAAKD,cAAcqT,MAAMgf,GAAahP,WACpD+O,EAAkBryB,IAClB+xB,EAAWtxB,OAAS6xB,EACtB,MACA,IAAK,OACHD,EAAkBjuB,IACpB,MACA,IAAK,OACHiuB,EAAkBI,IAClBV,EAAWpqB,KAAO2qB,EACpB,MACA,IAAK,SACHD,EAAkB,SAACjyB,GAAD,OAChBgG,EAAApE,EAAAC,cAACqhL,EAAA,EAAD,CACE3hL,EAAG,MACHyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB0M,gBAAiB5N,EAAM0xB,SAEvB1rB,EAAApE,EAAAC,cAACqhL,EAAA,EAAD,CACEpkK,MAAO,SACPvX,KAAM2qB,EACN3uB,MAAOvD,EAAMuD,MACb2C,KAAM/F,EAAKH,MAAM0D,SAAW,MAAQ,YAI1CiuB,EAAWpqB,KAAO2qB,EACpB,MACA,IAAK,SACHD,EAAkBiuF,IAClB8iE,GAAuB,EACvB9wJ,EAAczE,EAAU9gB,OAASglB,EAAWhlB,MAC5CglB,EAAWluB,QAAQ,kBAAMkuB,EAAW/uB,YAAYzC,EAAKH,QACvD,MACA,QACEiyB,EAAkBhuB,IAClB++K,GAAuB,EAI3B,IAAK9wJ,EACH,OAAO,KAIT,GAAI+wJ,EAAU,CACZ,IAAME,EAAkBhiL,OAAO2R,OAAOmwK,GAAW/sK,MACjD,GAAIpW,KAAKE,MAAMsQ,IAAX,GAAA7L,OAAkB0+K,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBtjL,KAAKE,MAAMsQ,IAAX,GAAA7L,OAAkB0+K,EAAlB,UAErBC,GAAoBjiL,OAAOC,KAAKgiL,GAAkB/hL,QACpDF,OAAOC,KAAKgiL,GAAkB9hL,QAAQ,SAAAC,GACpCowB,EAAWpwB,GAAK6hL,EAAiB7hL,MAMzC,OAAO0wB,EAAmB+wJ,EAAwBh9K,EAAApE,EAAAC,cAACowB,EAAoBN,EAAaO,GAAmClsB,EAAApE,EAAAC,cAACowB,EAAoBN,GAAoB,YAjI1I3vB,aAqIXoxG,4rfCvITiK,mLAIF,IAAM35G,EAA0C,qBAAxB5D,KAAKE,MAAM0D,UAA2B5D,KAAKE,MAAM0D,SACnEqb,EAAQjf,KAAKE,MAAMwwG,SAAY/tG,EAAAb,EAAAC,cAACa,EAAA,EAADvB,OAAAgF,OAAA,CAAOpF,MAAO,OAAQmM,IAAKpN,KAAKE,MAAMwwG,UAAc1wG,KAAKE,MAAMgf,aAAoBlf,KAAKE,MAAMkD,SAAYT,EAAAb,EAAAC,cAACa,EAAA,EAADvB,OAAAgF,OAAA,CAAMoB,KAAMzH,KAAKE,MAAMkD,UAAcpD,KAAKE,MAAMmf,YAAiB,KAC1MgxF,EAAW1tG,EAAAb,EAAAC,cAACa,EAAA,EAAD,CAAMyF,UAAYzE,EAAW,OAAS,SAAUL,SAAU,EAAGC,WAAY,EAAGC,MAAO,aAAczD,KAAKE,MAAMmwG,SAE7H,OACI1tG,EAAAb,EAAAC,cAACa,EAAA,EAADvB,OAAAgF,OAAA,CACE5C,MAAO,QACPyD,aAAc,EACda,GAAKnE,EAAW,CAAC,EAAE,GAAK,EACxBkE,GAAKlE,EAAW,EAAI,CAAC,EAAE,GACvB0K,GAAK1K,EAAW,EAAI,CAAC,EAAE,GACvBgD,GAAKhD,EAAW,EAAI,CAAC,EAAE,GACvBD,QAAU3D,KAAKE,MAAM4C,YACrBI,OAASU,EAAW,OAAS,CAAC,QAAQ,SACtCuD,UAAWnH,KAAKE,MAAM4e,SAAW,cAAgB,SACjDy6F,cAAev5G,KAAKE,MAAM4e,SAAW,cAAgB,SACrD7d,MAAOjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAS2C,EAAW,OAAS,CAAC,QAAQ,SAC3ES,MAAOrE,KAAKE,MAAMupK,YAAczpK,KAAKE,MAAMupK,YAAe7lK,EAAW,CAACxC,eAAe,cAAgB,MACjGpB,KAAKE,MAAM8C,aAEfL,EAAAb,EAAAC,cAAAY,EAAAb,EAAAopG,SAAA,KAEIlrG,KAAKE,MAAM48I,OACTn6I,EAAAb,EAAAC,cAACa,EAAA,EAAD,CACEsK,SAAU,WACVhG,aAAc,OACd4G,gBAAkB9N,KAAKE,MAAM48I,MAAMlrH,QAAU5xB,KAAKE,MAAM48I,MAAMlrH,QAAU,OACxEvtB,MAAQT,EAAW,CAAC+H,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpE3D,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEXnF,EAAAb,EAAAC,cAACa,EAAA,EAAD,CACEY,WAAY,EACZD,SAAU,OACVE,MAAQzD,KAAKE,MAAM48I,MAAMr5I,MAAQzD,KAAKE,MAAM48I,MAAMr5I,MAAQ,QAE3DzD,KAAKE,MAAM48I,MAAMz5I,OAKxBV,EAAAb,EAAAC,cAACa,EAAA,EAAD,CAAMzB,cAAgByC,EAAW,MAAQ,SAAUxC,eAAiBwC,EAAW,aAAe,SAAU1C,WAAY,UAClHyB,EAAAb,EAAAC,cAACa,EAAA,EAAD,CAAM3B,MAAQ2C,EAAW,OAAS,EAAIiK,GAAKjK,EAAW,EAAI,EAAIxC,eAAiBwC,EAAW,aAAe,UACrG5D,KAAKE,MAAMi8I,YAAwC,QAA1Bn8I,KAAKE,MAAMi8I,WAAuB9rC,EAAUpxF,GAEzEtc,EAAAb,EAAAC,cAACa,EAAA,EAAD,CAAM3B,MAAQ2C,EAAW,OAAS,EAAIzC,cAAe,SAAUC,eAAiBwC,EAAW,aAAe,UACtG5D,KAAKE,MAAMi8I,YAAwC,QAA1Bn8I,KAAKE,MAAMi8I,WAAuBl9H,EAAQoxF,EAEnErwG,KAAKE,MAAM4hI,YAAc9hI,KAAKE,MAAM4hI,WAAW96E,MAAM,MAAMljD,IAAI,SAAC+F,EAAEkC,GAKhE,OAHIA,IACFlC,EAAKlH,EAAAb,EAAAC,cAAA,aAAQ8H,IAGblH,EAAAb,EAAAC,cAACa,EAAA,EAAD,CAAMmC,IAAG,cAAAJ,OAAgBoH,GAAKggG,WAAY,MAAO1jG,UAAYzE,EAAW,OAAS,SAAUH,MAAO,WAAYD,WAAY,EAAGD,SAAU,GAAIsG,gBA1DvI3H,aAqEXq7G,sGCrET1F,mLAEF,IAAM70G,EAAc3B,OAAOgF,OAAO,CAChCpF,MAAM,EACNuC,WAAW,EACXN,OAAO,OACPK,SAAS,CAAC,EAAE,GACZiL,UAAU,KACVtH,aAAa,EACbC,UAAU,QACVnH,KAAKE,MAAM8C,aAEb,OACGsE,EAAAxF,EAAAC,cAACyF,EAAA,EAADnG,OAAAgF,OAAA,GACKrD,EADL,CAECW,QAAS3D,KAAKE,MAAM4C,cAEnB9C,KAAKE,MAAMoI,iBAjBMpG,aAuBX21G,sGCvBTyE,mLAGF,OACEh1G,EAAAxF,EAAAC,cAACyF,EAAA,EAADnG,OAAAgF,OAAA,CACE5C,MAAO,OACPsiB,OAAQ,SACRC,IAAK,gCACDhmB,KAAKE,OAERF,KAAKE,MAAMoI,iBAVEpG,aAgBPo6G,yPCNT3F,6MAEJxxG,MAAQ,CACN45K,OAAM,KAIRh/K,cAAgB,OAChBqF,oBAAqB,IAyDrBmsB,+BAAY,SAAAlR,IAAA,IAAAqhK,EAAArsK,EAAA1P,EAAAgoB,EAAAkE,EAAAyxC,EAAAziE,EAAA0iL,EAAA7xJ,EAAAm2C,EAAAuwB,EAAArkF,EAAAwB,EAAA0sB,EAAArhB,EAAA4pD,EAAAD,EAAAzqC,EAAAusC,EAAAD,EAAArsC,EAAAxM,EAAAgzC,EAAAy3B,EAAAx3B,EAAAC,EAAA9yC,EAAA/P,EAAAymD,EAAAm5G,EAAAl5G,EAAAm5G,EAAA5/J,EAAAoR,EAAAyuJ,EAAA19G,EAAAmG,EAAAhG,EAAA8iC,EAAArnC,EAAAi+B,EAAAt9D,EAAA42D,EAAAwqF,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAvwJ,GAAA5F,GAAAw/B,GAAAp1C,GAAAlM,GAAAmhH,GAAAl1G,GAAAJ,GAAAqsK,GAAA9rK,GAAA+rK,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAxhL,GAAA62K,GAAAtmK,UAAA,OAAA7B,EAAAzQ,EAAA8Q,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,UAAM2uK,EAANhH,GAAAn5K,OAAA,QAAA+tB,IAAAorJ,GAAA,GAAAA,GAAA,GAAgB,MAItBj4K,EAAK2C,oBAAuB3C,EAAKvC,MAAMiT,OAAU1Q,EAAKvC,MAAM8I,aAAgBvG,EAAKvC,MAAMikH,qBAJjF,CAAA5jG,EAAAxN,KAAA,eAAAwN,EAAAgB,OAAA,SAKD,MALC,UAQJlM,EAAyC,SAAhC5S,EAAKvC,MAAMoV,iBAEpB3P,EAAyB,OAAd+7K,EACX/zJ,EAAYlrB,EAAKvC,MAAMytB,UACxB+zJ,IACHA,EAAY/zJ,EAAUlmB,MAGlBoqB,EAAalE,EAAUztB,MACvBojE,EAAkD,qBAA5B7gE,EAAKvC,MAAMojE,cAA+B7gE,EAAKvC,MAAMojE,aAE3EziE,EAAWgxB,GAAcA,EAAWhxB,SAAWgxB,EAAWhxB,SAAa4B,EAAKvC,MAAM0D,SAAW,EAAI,EACjG2/K,EAAmB9gL,EAAK1C,cAAcmX,gBAAgB,CAAC,QAAQ,SAASzU,EAAKvC,MAAMiT,MAAMgE,gBAE3Fua,EAAS,MACTjvB,EAAKvC,MAAMiT,MAvBL,CAAAoN,EAAAxN,KAAA,UAAAwN,EAAAgU,GAwBAmtJ,EAxBAnhK,EAAAxN,KAyBD,iBAzBCwN,EAAAgU,GAAA,GAiCD,cAjCChU,EAAAgU,GAAA,GAyCD,eAzCChU,EAAAgU,GAAA,GAqDD,QArDChU,EAAAgU,GAAA,GA6DD,oBA7DChU,EAAAgU,GAAA,GAyED,eAzEChU,EAAAgU,GAAA,GAiFD,qBAjFChU,EAAAgU,GAAA,GAyFD,kCAzFChU,EAAAgU,GAAA,GA8GD,6BA9GChU,EAAAgU,GAAA,GAmID,aAnIChU,EAAAgU,GAAA,GA2ID,gBA3IChU,EAAAgU,GAAA,GAoKD,yBApKChU,EAAAgU,GAAA,GA4LD,oBA5LChU,EAAAgU,GAAA,GAqND,sBArNChU,EAAAgU,GAAA,GA6ND,UA7NChU,EAAAgU,GAAA,IAsOD,SAtOChU,EAAAgU,GAAA,IA8OD,sBA9OChU,EAAAgU,GAAA,IAuPD,iBAvPChU,EAAAgU,GAAA,IAgQD,QAhQChU,EAAAgU,GAAA,IA4QD,WA5QChU,EAAAgU,GAAA,IAkTD,aAlTChU,EAAAgU,GAAA,IAiUD,aAjUChU,EAAAgU,GAAA,IAgVD,qBAhVChU,EAAAgU,GAAA,IAgWD,QAhWChU,EAAAgU,GAAA,IAoXD,oBApXChU,EAAAgU,GAAA,IA2ZD,aA3ZChU,EAAAgU,GAAA,IAskBD,qBAtkBChU,EAAAgU,GAAA,IAsrBD,WAtrBChU,EAAAgU,GAAA,6BAAAhU,EAAAxN,KAAA,GA0BWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GA1BlH,eA0BJ5xC,EA1BInR,EAAA1K,OA2BUlQ,GACZlD,EAAKuD,aAAa,CAChBu6B,aAAa7O,EAAOtO,aA7BpB7C,EAAAgB,OAAA,4BAkCEsmD,EAAYplE,EAAK1C,cAAck3F,kBAAkBx0F,EAAKvC,MAAM8I,aAlC9DuX,EAAAxN,KAAA,GAmCwCtQ,EAAK1C,cAAcq4F,8BAA8B31F,EAAKvC,MAAM8I,aAnCpG,eAmCEovF,EAnCF73E,EAAA1K,KAoCJpT,EAAKuD,aAAa,CAChB6hE,YACAuwB,kCAtCE73E,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GA0CWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GA1ClH,eA0CJ5xC,EA1CInR,EAAA1K,OA2CUlQ,IACRoO,EAAa,KAC+B,qBAArCtR,EAAKvC,MAAM8I,YAAYsiI,WAA6B7oI,EAAKvC,MAAM8I,YAAYsiI,aACpFv3H,EAAa2d,EAAOtO,YAEtB3gB,EAAKuD,aAAa,CAChB+N,gBAjDAwM,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAsDWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAtDlH,eAsDJ5xC,EAtDInR,EAAA1K,OAuDUlQ,GACZlD,EAAKuD,aAAa,CAChB+pE,IAAIr+C,EAAOtO,aAzDX7C,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAgEMtQ,EAAK1C,cAAcoiC,eAAe1/B,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAhElF,eAAA/tD,EAAAgL,EAAA1K,KA+DFosB,EA/DE1sB,EA+DF0sB,4BAGEt8B,GAAYs8B,IACdx/B,EAAKuD,aAAa,CAChBs/K,gBAAgBrjJ,EAA4B7e,aAE9CsO,EAASuQ,GAtEP1hB,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GA0EWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GA1ElH,eA0EJ5xC,EA1EInR,EAAA1K,OA2EUlQ,GACZlD,EAAKuD,aAAa,CAChB2M,WAAW+e,EAAOtO,aA7ElB7C,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAkFWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAlFlH,eAkFJ5xC,EAlFInR,EAAA1K,OAmFUlQ,GACZlD,EAAKuD,aAAa,CAChB+P,iBAAiB2b,EAAOtO,aArFxB7C,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GA6FMtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GA7F7G,eAAA1iD,EAAAL,EAAA1K,KA2FF20D,EA3FE5pD,EA2FF4pD,2BACAD,EA5FE3pD,EA4FF2pD,8BAGiCC,IAC7B7kE,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACNv0G,4BACAD,gCAIJ74C,EAAS,CACP84C,4BACAD,gCA1GAhqD,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAkHMtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAlH7G,eAAAxjC,EAAAvf,EAAA1K,KAgHFw2D,EAhHEvsC,EAgHFusC,sBACAD,EAjHEtsC,EAiHFssC,yBAG4BC,IACxB1mE,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACN1yG,uBACAD,2BAIJ16C,EAAS,CACP26C,uBACAD,2BA/HA7rD,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAoIWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GApIlH,eAoIJ5xC,EApIInR,EAAA1K,OAqIUlQ,GACZlD,EAAKuD,aAAa,CAChB0xH,SAAShmG,EAAOtO,aAvIhB7C,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GA4I0C4N,QAAQuD,IAAI,CACxDzhB,EAAK8uB,UAAU,mBACf9uB,EAAK1C,cAAc09F,aAAah7F,EAAKvC,MAAM8I,eA9IzC,eAAA+2B,EAAAxf,EAAA1K,KAAA0d,EAAAlyB,OAAAkkL,EAAA,EAAAlkL,CAAA0+B,EAAA,GA4IGwmC,EA5IHhzC,EAAA,GA4ImByqE,EA5InBzqE,EAAA,GAiJAgzC,GAAmBA,EAAgBP,eAAiBO,EAAgBJ,aAAe63B,IAE/Ex3B,EAAYD,EAAgBP,cAAc15D,MAAM0xF,GAChDv3B,EAAUF,EAAgBJ,YAAY75D,MAAM0xF,GAE9Cr4F,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACNt4G,UACAD,cAIJ90C,EAAS,CACP+0C,UACAD,cAhKAjmD,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GAqKwD4N,QAAQuD,IAAI,CACtEzhB,EAAK1C,cAAc0tE,cACnBhrE,EAAK1C,cAAcmpE,eAAe,gBAAgBzmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAC7G7gE,EAAK1C,cAAcmpE,eAAe,kBAAkBzmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,KAxK7G,eAAA3vC,EAAApT,EAAA1K,KAAA+N,EAAAviB,OAAAkkL,EAAA,EAAAlkL,CAAAsyB,EAAA,GAqKG02C,EArKHzmD,EAAA,GAqKY4/J,EArKZ5/J,EAAA,IAqK+B0mD,EArK/B1mD,EAAA,KA2KmB4/J,GAAsBn5G,IACrCo5G,EAAmBn5G,EAAgBvzD,GAAG,GAAKuzD,EAAgBh+D,MAAM+9D,EAASlnD,IAAI,MAAMxP,KAAK6vK,GAAsB,EAEjH79K,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACN0E,mBACAD,uBAIJ9xJ,EAAS,CACP+xJ,mBACAD,uBAxLAjjK,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,GA6L8C4N,QAAQuD,IAAI,CAC5DzhB,EAAK1C,cAAcmpE,eAAe,MAAMzmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GACnG7gE,EAAK1C,cAAcmpE,eAAe,WAAWzmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GACxG7gE,EAAK1C,cAAcmpE,eAAe,aAAazmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,KAhMxG,eAAAz/C,EAAAtD,EAAA1K,KAAAof,EAAA5zB,OAAAkkL,EAAA,EAAAlkL,CAAAwiB,EAAA,GA6LC6/J,EA7LDzuJ,EAAA,GA6LW+wC,EA7LX/wC,EAAA,IA6LyBk3C,EA7LzBl3C,EAAA,KAoMe+wC,GAAiB09G,IAC5Bv9G,EAAcgG,EAAYp1D,GAAG,GAAKo1D,EAAY7/D,MAAMo3K,EAAUvgK,IAAI,MAAMxP,KAAKqyD,GAAiB,EAEhGrgE,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACN54G,cACAH,kBAIJt0C,EAAS,CACPy0C,cACAH,kBAjNAzlD,EAAAgB,OAAA,4BAAAhB,EAAAxN,KAAA,IAsNWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAtNlH,gBAsNJ5xC,EAtNInR,EAAA1K,OAuNUlQ,GACZlD,EAAKuD,aAAa,CAChB8mE,kBAAkBp7C,EAAOtO,aAzNzB7C,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IA8NqBtQ,EAAK1C,cAAc6oG,cAAcnmG,EAAKvC,MAAM8I,YAAYqM,GA9N7E,gBA8NE4zF,EA9NF1oF,EAAA1K,KA+NAlQ,GACFlD,EAAKuD,aAAa,CAChB0vF,MAAMuT,IAA0B,IAGpCv3E,EAASu3E,EApOL1oF,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAuOWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAvOlH,gBAuOJ5xC,EAvOInR,EAAA1K,OAwOUlQ,GACZlD,EAAKuD,aAAa,CAChB4iC,SAASlX,EAAOtO,aA1OhB7C,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IA+OWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GA/OlH,gBA+OJ5xC,EA/OInR,EAAA1K,OAgPUlQ,GACZlD,EAAKuD,aAAa,CAChBw/K,2BAA2Bn5K,WAAWqlB,GAAQ,EAAI,KAAO,OACzD+zJ,kBAAkBp5K,WAAWqlB,GAAQnlB,QAAQ1L,KAnP7C0f,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAwPWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAxPlH,gBAwPJ5xC,EAxPInR,EAAA1K,OAyPUlQ,GACZlD,EAAKuD,aAAa,CAChBuhE,aAAal7D,WAAWqlB,GAAQnlB,QAAQ1L,GACxC6kL,sBAAsBr5K,WAAWqlB,GAAQ,EAAI,KAAO,SA5PpDnR,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAiQWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAjQlH,gBAiQJ5xC,EAjQInR,EAAA1K,OAkQUlQ,IACRi8D,EAAW,KAC+B,qBAAnCn/D,EAAKvC,MAAM8I,YAAYqiI,SAA2B5oI,EAAKvC,MAAM8I,YAAYqiI,WAClFzpE,EAAWv1D,WAAWqlB,GAAQnlB,QAAQ1L,IAExC4B,EAAKuD,aAAa,CAChB47D,cAxQArhD,EAAAgB,OAAA,0BA6QA9e,EAAKvC,MAAM8I,YAAYizB,YAAax5B,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,YA7QrE,CAAA/iC,EAAAxN,KAAA,iBA8QI8sF,EAAiBx+F,OAAOgF,OAAO,GAAG5D,EAAKvC,MAAM8I,cACpCmrB,KAAO9yB,OAAOgF,OAAO,GAAG5D,EAAKvC,MAAM8I,YAAYizB,UAAUqnB,aACxEu8C,EAAeh0F,UAAYxK,OAAO2R,OAAOvQ,EAAKvC,MAAM8I,YAAY6C,WAGhEg0F,EAAe1rE,KAAKhhB,MAAQ0sF,EAAe1rE,KAAK1sB,KAG5Co4F,EAAe5jE,UAAU2kE,cAC3Bf,EAAe5jE,UAAU2kE,aAAap/F,QAAS,SAAAq/F,GAC7C,IAAMvL,EAAgBuK,EAAeh0F,UAAU4hB,KAAM,SAAAhsB,GAAC,OAAKA,EAAEgG,OAASo5F,EAAYp5F,OAClF,GAAI6tF,EAAc,CAChB,IAAMwL,EAAcjB,EAAeh0F,UAAUmS,QAAQs3E,GACrDuK,EAAeh0F,UAAUi1F,GAAeD,KA3R5CtgF,EAAAxN,KAAA,IAgSatQ,EAAK1C,cAAcmpE,eAAe,MAAMzmE,EAAKvC,MAAMiT,MAAM0sF,EAAep9F,EAAKvC,MAAM+O,SAAQ,GAhSxG,SAgSFyiB,EAhSEnR,EAAA1K,KAAA0K,EAAAxN,KAAA,0BAAAwN,EAAAxN,KAAA,IAmSatQ,EAAK8uB,UAAU,YAnS5B,SAmSFG,EAnSEnR,EAAA1K,KAAA,gBAsSA6b,GAAU/rB,IACP+rB,EAAOlxB,QAKViC,EAAKuD,aAAa,CAChB2/K,QAAO,IALTljL,EAAKuD,aAAa,CAChB2/K,OAAOt5K,WAAWqlB,GAAQnlB,QAAQ1L,MAzSpC0f,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAmTWtQ,EAAK1C,cAAcmpE,eAAe,MAAMzmE,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,SAAQ,GAnT9G,gBAmTJyiB,EAnTInR,EAAA1K,OAqTUlQ,IACP+rB,EAAOlxB,QAKViC,EAAKuD,aAAa,CAChB4/K,eAAc,IALhBnjL,EAAKuD,aAAa,CAChB4/K,cAAcv5K,WAAWqlB,GAAQnlB,QAAQ1L,MAxT3C0f,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAkUWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAlUlH,gBAkUJ5xC,EAlUInR,EAAA1K,OAoUUlQ,IACP+rB,EAAOlxB,QAKViC,EAAKuD,aAAa,CAChBqkE,UAAS,IALX5nE,EAAKuD,aAAa,CAChBqkE,SAASh+D,WAAWqlB,GAAQnlB,QAAQ1L,MAvUtC0f,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAiVWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAjVlH,gBAiVJ5xC,EAjVInR,EAAA1K,OAmVUlQ,IACP+rB,EAAOlxB,QAKViC,EAAKuD,aAAa,CAChB4jE,kBAAiB,IALnBnnE,EAAKuD,aAAa,CAChB4jE,kBAAqC,IAAnBv9D,WAAWqlB,IAAanlB,QAAQ1L,MAtVpD0f,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAiWWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAjWlH,cAiWJ5xC,EAjWInR,EAAA1K,QAoWUlQ,EApWV,CAAA4a,EAAAxN,KAAA,aAqWG2e,EAAOlxB,QArWV,CAAA+f,EAAAxN,KAAA,aAsWMwvB,EAAWl2B,WAAWqlB,GAAQnlB,QAAQ1L,MACvB4B,EAAKvC,MAAM0D,eAAuC0rB,IAA1B3B,EAAU8zF,aAA6B9zF,EAAU8zF,aAvW9F,CAAAlhG,EAAAxN,KAAA,iBAAAwN,EAAAxN,KAAA,IAwW0CtQ,EAAK1C,cAAci5F,iBAAiBv2F,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,aAxW1G,SAAAuX,EAAAo2B,GAAAp2B,EAAA1K,KAAA0K,EAAAxN,KAAA,mBAAAwN,EAAAo2B,GAwWyH,KAxWzH,SAwWMwiD,EAxWN54E,EAAAo2B,GAyWAl0C,EAAKuD,aAAa,CAChBu8B,WACA42D,kBA3WF54E,EAAAxN,KAAA,mBA8WAtQ,EAAKuD,aAAa,CAChBu8B,UAAS,IA/WX,gBAAAhiB,EAAAgB,OAAA,6BAqXAoiK,GAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMgC,EAA4B/2J,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM6xG,OACnK,GAAI8zE,EAA0B,CAC5B,IAAMC,EAA6BvhK,OAAO42J,OAAO0K,GACjDlC,GAAuBmC,EAA2B3L,aAAa9tK,WAAWy5K,EAA2BC,IAAI,kBAAkB15K,WAAWy5K,EAA2BC,IAAI,iBACrKnC,GAAwBkC,EAA2B1L,cAGnDuJ,GAAuBnwK,SAASmwK,IAAsB,EAAIrwK,KAAKC,IAAIowK,GAAqBC,IAAyBA,GACjHA,GAAwBD,GAGpBA,KAAyBlhL,EAAK0C,MAAMw+K,sBAClCh+K,GACFlD,EAAKuD,aAAa,CAChB29K,wBACAC,gCASVr/J,OAAOqK,oBAAoB,SAAUi1J,GAAsBl1J,KAAtBttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MACrC8hB,OAAOkK,iBAAiB,SAAUo1J,GAAsBl1J,KAAtBttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MAE9BkD,GACFlD,EAAKuD,aAAa,CAChB29K,wBACAC,2BAvZArjK,EAAAgB,OAAA,yBA6ZEuiK,GAAuBzuK,EAAS5S,EAAK1C,cAAcmX,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/G6sK,GAAyB1uK,EAASyuK,GAAsB,OAAcxwK,KAAKqE,IAAIlV,EAAK1C,cAAcmX,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS/Q,EAAK1C,cAAcuU,YAAY7R,EAAK1C,cAAcuU,YAAY,IAAIC,MAAQmD,OAAO,uBAAuB,uBAAuBjD,SAAS,EAAE,QAAQwkC,GAAG9jC,UAAU,MAGxU6uK,GAAe,KACbvwJ,GAlaF,YAAA9uB,OAka8BlC,EAAKvC,MAAM8I,YAAYkD,QAlarD,KAAAvH,OAkagE0Q,GAC9DwY,GAAaprB,EAAK1C,cAAc4wC,cAAcld,IAEpDuwJ,GAAe,CAAC,CACdnhL,GAAGJ,EAAKvC,MAAMiT,MACd1P,MAAOhB,EAAKvC,MAAMuD,MAAQhB,EAAKvC,MAAMuD,MAAQ,OAAO8/K,EAAiB9/K,MAAMkJ,IAAIC,KAAK,KAAK,IACzF3E,KAAM,OAGW,OAAf4lB,IAAuBA,GAAW,IAAMA,GAAW,GAAG5lB,MAAQ4lB,GAAW,GAAG5lB,KAAK1G,OAAO,GA3axF,CAAAgf,EAAAxN,KAAA,UA4aFixK,GAAen2J,GA5abtN,EAAAxN,KAAA,sBAgbuB,SAArBtQ,EAAKvC,MAAMiT,MAhbb,CAAAoN,EAAAxN,KAAA,UAobA,IAHAixK,GAAa,GAAG/7K,KAAO,GACjBolD,IAAiB,IAAI94C,MAAOY,UAC9B8C,GAAI,GACClM,GAAE,EAAGA,IAAG,GAAIA,KACbmhH,GAAQzqH,EAAK1C,cAAcuU,YAAY+4C,IAAgB4/D,IAAIlhH,GAAE,OAC7DiM,GAAIk1G,GAAMx1G,OAAO,oBAElB3L,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzBkM,IAAiB,EAAd3E,KAAK2yK,SAAW,EAInBhuK,IAAiB,EAAd3E,KAAK2yK,SAAW,EAGrBjC,GAAa,GAAG/7K,KAAKuE,KAAK,CAACwL,KAAEC,OAhc/BsI,EAAAxN,KAAA,0BAmcM6E,GAAmBnV,EAAK1C,cAAcovD,oBAAoB,OAAO,IAncvE5uC,EAAAxN,KAAA,IAuciCtQ,EAAK1C,cAAc6V,gBAAgBnT,EAAKvC,MAAM8I,YAAYkD,QAAQmJ,EAAO0uK,GAAuBD,IAAqB,EAAMlsK,IAvc5J,SAucMqsK,GAvcN1jK,EAAA1K,KAycIsC,GAAY,EACV+rK,GAAaD,GAAmB1iL,OAEtC0iL,GAAmBziL,QAAQ,SAACgI,EAAEuC,GAC5B,IAAMiM,EAAIvV,EAAK1C,cAAcuU,YAAwB,IAAZ9K,EAAE8M,WAAgBoB,OAAO,oBAC5DO,EAAI5L,WAAW5J,EAAK1C,cAAc4W,iBAAiBnN,EAAEisF,SAAS,KAC9DvtF,EAAUoL,KAAK+E,MAAMF,KAAY+rK,GAAW,KAClDF,GAAa,GAAG/7K,KAAKuE,KAAK,CAAEwL,IAAGC,IAAG/P,cAhdpC,SAodE87K,GAAa,GAAG/7K,KAAK1G,OAAO,GAC9BkB,EAAK1C,cAAc+tB,cAAc2F,GAAcuwJ,IArd/C,gBA0dgC,IAAhCA,GAAa,GAAG/7K,KAAK1G,UACjB4iL,GAAW9iL,OAAOgF,OAAO,GAAG29K,GAAa,GAAG/7K,KAAK,KAC9C+P,EAAIvV,EAAK1C,cAAcuU,YAAY6vK,GAAS,oBAAoBl3D,IAAI,EAAE,SAASv1G,OAAO,oBAC/FssK,GAAa,GAAG/7K,KAAKuE,KAAK23K,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAM4B,EAAqBp3J,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM6xG,OAC5J,GAAIm0E,EAAmB,CACrB,IAAMC,EAAsB5hK,OAAO42J,OAAO+K,GAC1C9B,GAAgB+B,EAAoBhM,aAAa9tK,WAAW85K,EAAoBJ,IAAI,kBAAkB15K,WAAW85K,EAAoBJ,IAAI,iBACzI1B,GAAiB8B,EAAoB/L,cACjCgK,KAAkB3hL,EAAK0C,MAAMi/K,eAAkB3hL,EAAK0C,MAAMk/K,gBAC5D5hL,EAAKuD,aAAa,CAChBo+K,iBACAC,eAAgB5hL,EAAK0C,MAAMk/K,eAAiB5hL,EAAK0C,MAAMk/K,eAAiBA,UAQhF9/J,OAAOqK,oBAAoB,SAAU01J,GAAe31J,KAAfttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MACrC8hB,OAAOkK,iBAAiB,SAAU61J,GAAe31J,KAAfttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MAG5B8hL,GAAe3oK,IAEf4oK,GAAgB,CACpB7qK,UAAU,EACVysK,UAAU,EACVxsK,SAAQ,EACRC,SAAS,KACT3Q,SAAQ,EACRiQ,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjByC,eAAc,EACdjY,OAAO,SAAA2E,GAAC,OAAIA,EAAE/F,OACd4iL,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG9iL,MAAO,WACpB,CAAE8iL,OAAQ,GAAI9iL,MAAO,cAG3BwW,cAAaxX,EAAKvC,MAAM0D,UAAmB,IAC3CsV,QAAQ,SAAAnP,GAAK,OAAIsC,WAAWtC,GAAOwC,QAAQ,GAAG,KAC9CqO,KAAK,CACH,CAAE03B,MAAO,CAAEzvC,GAAIJ,EAAKvC,MAAMiT,OAAUtQ,GAAI,iBAE1C4I,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAG5D,KAAM,GAC9CkT,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACFxT,EAAQwT,EAAMC,OAAO,GAC3B,OACEmrK,EAAA1kL,EAAAC,cAAC0kL,EAAA,EAAD,CACE7+K,MAAOA,GAGiB,kBAAjBwT,EAAMC,QAAuBD,EAAMC,OAAO9Z,QAC/C6Z,EAAMC,OAAOvX,IAAI,SAAA8D,GACf,IAAMoE,EAAepE,EAAM4T,QACrBkrK,EAAkB9+K,EAAMK,KAAKwT,WAEnC,OACE+qK,EAAA1kL,EAAAC,cAAC4kL,EAAA,EAAD,CACE5hL,IAAK6C,EAAM/E,GACXY,MAAOmE,EAAMnE,MACboJ,MAAOb,EACPjC,MAAO28K,SAUnBjkL,EAAKvC,MAAMuI,YAEThG,EAAKvC,MAAMuI,YAAcpH,OAAOC,KAAKmB,EAAKvC,MAAMuI,YAAYlH,QAC9DF,OAAOC,KAAKmB,EAAKvC,MAAMuI,YAAYjH,QAAQ,SAAAC,GACzC+iL,GAAc/iL,GAAKgB,EAAKvC,MAAMuI,WAAWhH,KAK3CkE,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACNwF,gBACAP,gBACAQ,iBACAJ,iBACAC,oBAGJ3yJ,EAASsyJ,GApkBLzjK,EAAAgB,OAAA,6BAukBAkjK,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAM+B,EAA6B93J,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM2b,UAAYiT,SAASC,eAAetsB,EAAKvC,MAAM6xG,OACpK,GAAI60E,EAA2B,CAC7B,IAAMC,EAA8BtiK,OAAO42J,OAAOyL,GAClDjC,GAAwBkC,EAA4B1M,aAAa9tK,WAAWw6K,EAA4Bd,IAAI,kBAAkB15K,WAAWw6K,EAA4Bd,IAAI,iBACzKnB,GAAyBiC,EAA4BzM,cACjDuK,KAA0BliL,EAAK0C,MAAMw/K,uBAA0BliL,EAAK0C,MAAMy/K,wBAC5EniL,EAAKuD,aAAa,CAChB2+K,yBACAC,uBAAwBniL,EAAK0C,MAAMy/K,uBAAyBniL,EAAK0C,MAAMy/K,uBAAyBA,UAQxGrgK,OAAOqK,oBAAoB,SAAUi2J,GAAuBl2J,KAAvBttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MACrC8hB,OAAOkK,iBAAiB,SAAUo2J,GAAuBl2J,KAAvBttB,OAAA2kL,EAAA,EAAA3kL,QAAA2kL,EAAA,EAAA3kL,CAAAoB,MAE5BqiL,GAAeriL,EAAK1C,cAAcuU,YAAY7R,EAAK1C,cAAcuU,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOiD,OAAO,oBAAoB,oBACtIqtK,GAAiBD,GAAatwK,QAAQC,SAAS,EAAE,QAGjDuwK,GAAuB1xK,KAAKqE,IAAIlV,EAAK1C,cAAcmX,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAASuxK,GAAe9rI,GAAG9jC,UAAU,MA/mBtJoL,EAAAxN,KAAA,IAknBmCtQ,EAAK1C,cAAc6V,gBAAgBnT,EAAKvC,MAAM8I,YAAYkD,QAAQmJ,EAAO2vK,GAAoB,MAAK,EAAM,OAlnB3I,gBAknBAC,GAlnBA1kK,EAAA1K,KAonBEqvK,GAAuBD,GAA2BnhL,IAAI,SAAC0F,EAAEuC,GAC7D,IAAIkM,EAAI,EACFD,EAAIvV,EAAK1C,cAAcuU,YAAwB,IAAZ9K,EAAE8M,WAAgBoB,OAAO,oBAC5D3D,EAAatR,EAAK1C,cAAc4W,iBAAiBnN,EAAEkN,UAAUjU,EAAKvC,MAAM8I,YAAYnI,UAY1F,OAVK4jL,GAGHxsK,EAAI5L,WAAW0H,EAAWoP,IAAIshK,IAAiB7wK,MAAM,GAAGtH,MAAM,MAF9Dm4K,GAAkB1wK,EAKG,OAAnB2wK,KACFA,GAAiBlxK,SAAShK,EAAEs9K,cAGvB,CAAE9uK,IAAGC,OAGRktK,GAAuB,CAAC,CAC5BtiL,GAAG,OACHY,MAAO,OAAO8/K,EAAiB9/K,MAAMkJ,IAAIC,KAAK,KAAK,IACnD3E,KAAMi9K,KAIFE,GAAuBxpK,IAEvBypK,GAAwB,CAC5B1rK,UAAU,EACVysK,UAAU,EACVxsK,SAAQ,EACR1Q,SAAQ,EACR2Q,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBxV,OAAO,SAAA2E,GAAC,OAAIA,EAAE/F,OACd6W,mBAAmB,GACnB7O,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAG5D,KAAM,IAG3CvF,EAAKvC,MAAMuI,YAEThG,EAAKvC,MAAMuI,YAAcpH,OAAOC,KAAKmB,EAAKvC,MAAMuI,YAAYlH,QAC9DF,OAAOC,KAAKmB,EAAKvC,MAAMuI,YAAYjH,QAAQ,SAAAC,GACzC4jL,GAAsB5jL,GAAKgB,EAAKvC,MAAMuI,WAAWhH,KAKnDkE,GACFlD,EAAKuD,aAAa,CAChB+4K,OAAM,EACNqG,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJlzJ,EAASyzJ,GAprBL5kK,EAAAgB,OAAA,6BAurBE1d,GAAO8pB,EAAU9pB,MACvB6tB,EAASjvB,EAAK1C,cAAcsyB,aAAaxuB,GAAKpB,EAAKvC,MAAM8I,eAEvDvG,EAAKuD,aAAL3E,OAAAsgL,EAAA,EAAAtgL,CAAA,GACGqgL,EAAWhwJ,IA3rBZnR,EAAAgB,OAAA,6BAAAhB,EAAAxN,KAAA,IAgsBWtQ,EAAK1C,cAAcmpE,eAAew4G,EAAUj/K,EAAKvC,MAAMiT,MAAM1Q,EAAKvC,MAAM8I,YAAYvG,EAAKvC,MAAM+O,QAAQq0D,GAhsBlH,gBAgsBJ5xC,EAhsBInR,EAAA1K,OAisBUlQ,GACZlD,EAAKuD,aAAL3E,OAAAsgL,EAAA,EAAAtgL,CAAA,CACE09K,OAAM,GACL2C,EAAWhwJ,IApsBZnR,EAAAgB,OAAA,6BAAAhB,EAAAgB,OAAA,SA2sBHmQ,GA3sBG,0BAAAnR,EAAAtM,SAAAoM,EAAArgB,oFAtDNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKoF,oBAAqB,yPAI1BpF,KAAKI,kQAILJ,KAAKuxB,2LAGY9rB,wFAASC,iCAAS,KAC9B1F,KAAKoF,4DACDpF,KAAK2F,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,gGAClCvF,KAAKI,YAEC07K,EAAex2K,EAAU6N,QAAUnT,KAAKE,MAAMiT,MAC9Cse,EAAiBnsB,EAAU2J,UAAYjP,KAAKE,MAAM+O,QAClD6C,EAAgBxM,EAAU1B,WAAa5D,KAAKE,MAAM0D,SAClDmO,EAAmBzM,EAAUuL,YAAc7Q,KAAKE,MAAM2Q,UACtDixK,EAAex8K,EAAUqoB,UAAUlmB,OAASzH,KAAKE,MAAMytB,UAAUlmB,KACjE08G,GAAwB7+G,EAAU6+G,sBAAwBnkH,KAAKE,MAAMikH,qBACrEuwD,GAA2BpvK,EAAU4rB,SAAWlxB,KAAKE,MAAMgxB,SAAa5rB,EAAU4rB,SAAWlxB,KAAKE,MAAMgxB,SAAWxf,KAAKC,UAAUrM,EAAU4rB,QAAQsI,YAAc9nB,KAAKC,UAAU3R,KAAKE,MAAMgxB,QAAQsI,UACpMomF,EAAsBt6G,EAAUmK,cAAgBzP,KAAKE,MAAMuP,cAAgBpO,OAAO2R,OAAO1N,EAAUmK,cAAcwD,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGxD,SAAqBnO,SAAWF,OAAO2R,OAAOhT,KAAKE,MAAMuP,cAAcwD,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGxD,SAAqBnO,OAEjPugL,GAAgBhG,GAAgBrqJ,GAAkBmuF,GAAuBuE,GAAwBuwD,EACnG10K,KAAKgG,aAAa,CAChB+4K,OAAM,GACN,WACA1+K,EAAKkxB,eAEEzf,GAAiBC,KACpBsyG,EAAWhjH,OAAOgF,OAAO,GAAGrG,KAAKmF,OACvCnF,KAAKgG,aAAa,CAChB+4K,OAAM,GACN,WACA1+K,EAAKsF,SAAS0+G,6IAmtBZ,IAAA36G,EAAA1J,KACA2tB,EAAY3tB,KAAKE,MAAMytB,UACzB+D,EAAS,KAGPzrB,OADsCqpB,IAAzB3B,EAAUngB,YAA4BmgB,EAAUngB,WACtCg5K,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD,CAAQ3gL,KAAK,SAAa,KAEjDyrB,EAAa,CACjBruB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACNzC,UAAU,CACRI,eAAe,eAKfusB,EAAUztB,OAASmB,OAAOC,KAAKqsB,EAAUztB,OAAOqB,QAClDF,OAAOC,KAAKqsB,EAAUztB,OAAOsB,QAAQ,SAAAC,GACnCowB,EAAWpwB,GAAKksB,EAAUztB,MAAMuB,KAKhCksB,EAAU5c,WAAa1P,OAAOC,KAAKqsB,EAAU5c,WAAWxP,QAC1DF,OAAOC,KAAKqsB,EAAU5c,WAAWvP,QAAQ,SAAAC,GACH,oBAAzBksB,EAAU5c,UAAUtP,KAC7BowB,EAAWpwB,GAAKksB,EAAU5c,UAAUtP,GAAGiI,EAAKxJ,UAKlD,IAAMqjL,EAAmBvjL,KAAKE,MAAMiT,MAAQnT,KAAKD,cAAcmX,gBAAgB,CAAC,QAAQ,SAASlX,KAAKE,MAAMiT,MAAMgE,gBAAkB,KAC9HnO,EAAchJ,KAAKE,MAAM8I,aAAeu6K,EAExCziL,EAAe+wB,GAAcA,EAAW/wB,aAAe+wB,EAAW/wB,aAAe,EACjFD,EAAWgxB,GAAcA,EAAWhxB,SAAWgxB,EAAWhxB,SAAab,KAAKE,MAAM0D,SAAW,EAAI,EACjG7C,EAAe8wB,GAAcA,EAAW9wB,aAAe8wB,EAAW9wB,aAAiBf,KAAKE,MAAM0D,SAAW,EAAI,EAEnH,OAAQ+pB,EAAUlmB,MAChB,IAAK,cACH,IAAMu/K,EAAQh+K,GAAeA,EAAYgE,KAAOhE,EAAYgE,KAA9C,iBAAArI,OAAsE3E,KAAKE,MAAMiT,MAAjF,QACdue,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,CACE4lG,UAAW,MACXjmD,QAAShmD,KAAKE,MAAMiT,OAChBwa,EAAU40J,cAEdiE,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,CAAO+G,IAAK45K,GAAWn1J,KAG7B,MACA,IAAK,OACH,IAAMo1J,EAAQj+K,GAAeA,EAAYgE,KAAOhE,EAAYgE,KAA9C,iBAAArI,OAAsE3E,KAAKE,MAAMiT,MAAjF,QACdue,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,CAAO+G,IAAK65K,GAAWp1J,IAE3B,MACA,IAAK,YACHH,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKE,MAAMiT,OAEtC,MACA,IAAK,eACH,IAAMkjH,EAAer2H,KAAKD,cAAcmX,gBAAgB,CAAC,aAAalX,KAAKE,MAAM8I,YAAYo5B,SAAS,SAClGi0F,IACF3kG,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,CAAO+G,IAAKipH,GAAkBxkG,KAGpC,MACA,IAAK,eACH,IAAMqoG,EAAel6H,KAAKD,cAAcmX,gBAAgB,CAAC,aAAalX,KAAKE,MAAM8I,YAAYo5B,SAAS,UACtG1Q,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAaqoG,GAE3B,MACA,IAAK,eACHxoG,EAAS1xB,KAAKmF,MAAMo7B,aAClBimJ,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6B9wB,aAAcA,EAAcR,OAAQP,KAAKmF,MAAMo7B,gBAC1Et6B,EACN,MACA,IAAK,MACHyrB,EAAS1xB,KAAKmF,MAAM4qE,IAClBy2G,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6B9wB,aAAcA,EAAcR,OAAQP,KAAKmF,MAAM4qE,OAC1E9pE,EACN,MACA,IAAK,aACHyrB,EAAS1xB,KAAKmF,MAAM4O,WAClByyK,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6B9wB,aAAcA,EAAcR,OAAQP,KAAKmF,MAAM4O,cAC1E9N,EACN,MACA,IAAK,kBACHyrB,EAAS1xB,KAAKmF,MAAMmgL,gBAClBkB,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6B9wB,aAAcA,EAAcR,OAAQP,KAAKmF,MAAMmgL,mBAC1Er/K,EACN,MACA,IAAK,mBACHyrB,EAAS1xB,KAAKmF,MAAM4Q,iBAClBywK,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6B9wB,aAAcA,EAAcR,OAAQP,KAAKmF,MAAM4Q,oBAC1E9P,EACN,MACA,IAAK,gCACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMolE,6BAA+BvqE,KAAKmF,MAAMqlE,0BAChFg8G,EAAA1kL,EAAAC,cAAColL,EAAArlL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMqlE,2BAC3B1vC,MAAOzuB,WAAWrM,KAAKmF,MAAMolE,6BAC7Bm6C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAAy/B,GAAA,IAAGmkF,EAAHnkF,EAAGmkF,WAAHnkF,EAAe1F,MAAf,OACC0rJ,EAAA1kL,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,2BACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMinE,wBAA0BpsE,KAAKmF,MAAMknE,qBAC3Em6G,EAAA1kL,EAAAC,cAAColL,EAAArlL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMknE,sBAC3BvxC,MAAOzuB,WAAWrM,KAAKmF,MAAMinE,wBAC7Bs4C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAA+0B,GAAA,IAAG6uF,EAAH7uF,EAAG6uF,WAAH7uF,EAAegF,MAAf,OACC0rJ,EAAA1kL,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,cACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMqhE,WAAaxmE,KAAKmF,MAAMshE,QAC9D+/G,EAAA1kL,EAAAC,cAAColL,EAAArlL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMshE,SAC3B3rC,MAAOzuB,WAAWrM,KAAKmF,MAAMqhE,WAC7Bk+C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAAi1B,GAAA,IAAG2uF,EAAH3uF,EAAG2uF,WAAH3uF,EAAe8E,MAAf,OACC0rJ,EAAA1kL,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,uBACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAMq+K,oBAAsBxjL,KAAKmF,MAAMs+K,iBACvE+C,EAAA1kL,EAAAC,cAAColL,EAAArlL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMs+K,kBAC3B3oJ,MAAOzuB,WAAWrM,KAAKmF,MAAMq+K,oBAC7B9+D,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAAk1B,GAAA,IAAG0uF,EAAH1uF,EAAG0uF,WAAH1uF,EAAe6E,MAAf,OACC0rJ,EAAA1kL,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,kBACHyrB,EAAS1xB,KAAKmF,MAAM45K,OAAS/+K,KAAKmF,MAAM6gE,eAAiBhmE,KAAKmF,MAAMghE,YAClEqgH,EAAA1kL,EAAAC,cAAColL,EAAArlL,EAAD,CACEyiH,MAAO,EACPz5D,QAAS,IACT05D,UAAW,GACXC,WAAW,EACX5pF,SAAU,QACVh6B,SAAUA,EACVsrD,IAAK9/C,WAAWrM,KAAKmF,MAAMghE,aAC3BrrC,MAAOzuB,WAAWrM,KAAKmF,MAAM6gE,eAC7B0+C,aAAe,SAAA/sF,GAAC,OAAIjuB,EAAK3J,cAAca,iBAAiB+2B,EAAE92B,EAASC,EAAaC,KAE/E,SAAA+gC,GAAA,IAAG6iF,EAAH7iF,EAAG6iF,WAAH7iF,EAAehH,MAAf,OACC0rJ,EAAA1kL,EAAAC,cAAA,QAAMsC,MAAOwtB,EAAWxtB,MAAOugH,IAAKD,MAGtC1+G,EACN,MACA,IAAK,oBACHyrB,EAAS1xB,KAAKmF,MAAM2nE,kBAClB05G,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6BhxB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKmF,MAAM2nE,qBAC1H7mE,EACN,MACA,IAAK,YACHyrB,EAAS1xB,KAAKmF,MAAM0iE,WAAaxmE,OAAOC,KAAKtB,KAAKmF,MAAM0iE,WAAWtmE,OAAO,EACxEilL,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD,CACE9lL,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdC,OAAO2R,OAAOhT,KAAKmF,MAAM0iE,WAAW/jE,IAAK,SAACwkC,EAAeqzD,GAAhB,OACvC6qF,EAAA1kL,EAAAC,cAAC40G,EAAD,CACExjG,MAAOm1B,EAAen1B,MACtBnK,YAAas/B,EACbvjC,IAAG,SAAAJ,OAAWg3F,GACdhuE,UAAW,CACTlmB,KAAK,cACL86K,aAAa,CACXv8H,QAAQ,GAAArhD,OAAG2jC,EAAen1B,QAASzJ,EAAKvE,MAAMizF,+BAAiC1uF,EAAKvE,MAAMizF,8BAA8B9vD,EAAen1B,OAApG,KAAAxO,OAAkH+E,EAAKvE,MAAMizF,8BAA8B9vD,EAAen1B,OAAO5G,QAAQ1L,GAAzL,KAAA8D,OAAsM2jC,EAAe7R,sBAArN,yBAAoQ,KAEzSv2B,MAAM,CACJgH,aAAa,MACbgG,SAAS,WACThK,OAAO,CAAC,QAAQ,OAChBI,GAAGq4F,EAAgB,QAAU,EAC7BxuF,OAAO9L,OAAO2R,OAAOtJ,EAAKvE,MAAM0iE,WAAWtmE,OAAOo6F,EAClDntF,UAAU,CAAC,kCAAkC,0CAOvDxO,KAAKmF,MAAM0iE,UACb2+G,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAV,KACE5rB,EACN,MACA,IAAK,kBACHyrB,EAAS1xB,KAAKmF,MAAMmlE,gBAClBk8G,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6BhxB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKmF,MAAMmlE,mBAC1HrkE,EACN,MACA,IAAK,aACHyrB,EAAS1xB,KAAKmF,MAAMwN,WAClB6zK,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6BhxB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKmF,MAAMwN,cAC1H1M,EACN,MACA,IAAK,OACHyrB,EAAS1xB,KAAKmF,MAAMyjC,SAClB49I,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6BhxB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKmF,MAAMyjC,YAC1H3iC,EACN,MACA,IAAK,QACHyrB,EAAU1xB,KAAKE,MAAM8I,aAAehJ,KAAKE,MAAM8I,YAAYktG,kBAAsBswE,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAV,YAA0DvC,IAArBtvB,KAAKmF,MAAMuwF,OAA4C,OAArB11F,KAAKmF,MAAMuwF,OAAkB11F,KAAKD,cAAcqT,MAAMpT,KAAKmF,MAAMuwF,OAAO3+E,GAAG,GACjOyvK,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GAAiBwrB,EAAjB,CAA6BhxB,SAAU,EAAGN,OAAQP,KAAKmF,MAAMuwF,SAC1D11F,KAAKD,cAAcqT,MAAMpT,KAAKmF,MAAMuwF,OAAOlhE,IAAI,GAAMgyJ,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAV,KAAkC5rB,EAC9F,MACA,IAAK,eACHyrB,EAAS1xB,KAAKmF,MAAMoiE,aACkB,qBAA5B55C,EAAUgtG,eAAiChtG,EAAUgtG,cAC3D6rD,EAAA1kL,EAAAC,cAACqlL,EAAA,EAAD,CACExjL,SAAU5D,KAAKE,MAAM0D,SACrBy/G,UAAWrjH,KAAKmF,MAAMugL,uBAEtBc,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMoiE,aAAlC,MAGFi/G,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMoiE,aAAlC,KAEFthE,EACJ,MACA,IAAK,oBACHyrB,EAAS1xB,KAAKmF,MAAMsgL,kBACkB,qBAA5B93J,EAAUgtG,eAAiChtG,EAAUgtG,cAC3D6rD,EAAA1kL,EAAAC,cAACqlL,EAAA,EAAD,CACExjL,SAAU5D,KAAKE,MAAM0D,SACrBy/G,UAAWrjH,KAAKmF,MAAMqgL,4BAEtBgB,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMsgL,kBAAlC,MAGFe,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMsgL,kBAAlC,KAEFx/K,EACJ,MACA,IAAK,gBACHyrB,EAAS1xB,KAAKmF,MAAMkiL,cAClBb,EAAA1kL,EAAAC,cAACqlL,EAAA,EAAD,CACE/jE,UAAW,KACXz/G,SAAU5D,KAAKE,MAAM0D,UAErB4iL,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GACMwrB,EADN,CAEEhxB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKmF,MAAMkiL,kBAGrBphL,EACN,MACA,IAAK,WACHyrB,EAAS1xB,KAAKmF,MAAMuyH,SAClB8uD,EAAA1kL,EAAAC,cAACqlL,EAAA,EAAD,CACE/jE,UAAW,KACXz/G,SAAU5D,KAAKE,MAAM0D,UAErB4iL,EAAA1kL,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAgF,OAAA,GACMwrB,EADN,CAEEhxB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKmF,MAAMuyH,aAGrBzxH,EACN,MACA,IAAK,mBACH,IAAMqhL,EAAsBtnL,KAAKD,cAAcmX,gBAAgB,CAAC,aAAa,QAAQ,cAC/Ew4C,EAAkB1vD,KAAKD,cAAcmX,gBAAgB,CAAC,YAAYowK,IACxE51J,EAAS1xB,KAAKmF,MAAMyuB,iBAClB4yJ,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAV,IAAwB7xB,KAAKmF,MAAMyuB,iBAAiBrnB,QAAQ1L,GAA5D,SAA6E6uD,EAAgBj5B,uBAC3FxwB,EACN,MACA,IAAK,wBACHyrB,EAAS1xB,KAAKmF,MAAMilH,sBAClBo8D,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMilH,sBAAsB79G,QAAQ1L,GAAhE,IAA4Eb,KAAKE,MAAM8I,YAAYytB,uBACjGxwB,EACN,MACA,IAAK,oBACHyrB,EAAS1xB,KAAKmF,MAAM0qF,kBAClB22F,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAM0qF,kBAAkBtjF,QAAQ1L,IAC1DoF,EACN,MACA,IAAK,MACHyrB,EAAS1xB,KAAKmF,MAAMy8D,SAClB4kH,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa7xB,KAAKmF,MAAMy8D,SAAWphE,MAAM6L,WAAWrM,KAAKmF,MAAMy8D,WAAmB,GAAN,KACpF37D,EACN,MACA,IAAK,SACHyrB,OAA+BpC,IAAtBtvB,KAAKmF,MAAMwgL,OAClBa,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,GAAmC,IAAtB7xB,KAAKmF,MAAMwgL,OAAmB3lL,KAAKmF,MAAMwgL,OAAS,IAAKa,EAAA1kL,EAAAC,cAAA,mBAC5EkE,EACN,MACA,IAAK,WACHyrB,OAAsCpC,IAA7BtvB,KAAKmF,MAAMygL,cAClBY,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,GAA0C,IAA7B7xB,KAAKmF,MAAMygL,cAA0B5lL,KAAKmF,MAAMygL,cAAgB,IAAKY,EAAA1kL,EAAAC,cAAA,mBAC1FkE,EACN,MACA,IAAK,WACHyrB,OAAiCpC,IAAxBtvB,KAAKmF,MAAMklE,SAClBm8G,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,GAAqC,IAAxB7xB,KAAKmF,MAAMklE,SAAqBrqE,KAAKmF,MAAMklE,SAAW,IAAKm8G,EAAA1kL,EAAAC,cAAA,mBAChFkE,EACN,MACA,IAAK,mBACHyrB,OAAyCpC,IAAhCtvB,KAAKmF,MAAMykE,iBAClB48G,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,GAA6C,IAAhC7xB,KAAKmF,MAAMykE,iBAA6B5pE,KAAKmF,MAAMykE,iBAAmB,IAAK48G,EAAA1kL,EAAAC,cAAA,mBAChGkE,EACN,MACA,IAAK,MACHyrB,OAAiCpC,IAAxBtvB,KAAKmF,MAAMo9B,SAClBikJ,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD,CACE7lL,WAAY,SACZC,cAAe,OAEfqlL,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,GAAqC,IAAxB7xB,KAAKmF,MAAMo9B,SAAqBviC,KAAKmF,MAAMo9B,SAAW,IAAKikJ,EAAA1kL,EAAAC,cAAA,mBAEhF/B,KAAKmF,MAAMg0F,eAAiB93F,OAAOC,KAAKtB,KAAKmF,MAAMg0F,eAAe53F,OAAO,GACvEilL,EAAA1kL,EAAAC,cAAC40G,EAAD,CACEhpF,UAAW,CACTlmB,KAAK,UACLvH,MAAM,CACJmf,UAAU,CACR/b,GAAG,GAEL2oG,UAAU,MACVjmD,QAAQ3kD,OAAOC,KAAKtB,KAAKmF,MAAMg0F,eAAer1F,IAAK,SAAA4kE,GACjD,IAAMjyC,EAAwB/sB,EAAK3J,cAAcmX,gBAAgB,CAAC,YAAYwxD,EAAS,0BACjF6+G,EAAc79K,EAAK3J,cAAcmX,gBAAgB,CAAC,YAAYwxD,EAAS,mBACzE3+D,EAAQL,EAAKvE,MAAMg0F,cAAczwB,GAAUn8D,QAAQ1L,GACvD,OAAQ0mL,GACN,QACA,IAAK,MACHx9K,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAApF,OAAMoF,EAAN,KAAApF,OAAe8xB,GAGxB,SAAA9xB,OAAU+jE,EAAV,MAAA/jE,OAAuBoF,KACtB6C,KAAK,WAMlB3G,EACN,MACA,IAAK,SACH,IAAMi8K,EAAyC,oBAApBv0J,EAAU9gB,MAAuB8gB,EAAU9gB,MAAM7M,KAAKE,OAASytB,EAAU9gB,MACpG6kB,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,GAAYwrB,EAAZ,CAAwBluB,QAAS,kBAAMkuB,EAAW/uB,YAAY4G,EAAKxJ,UAAUgiL,GAEjF,MACA,IAAK,mBACHxwJ,EAAS1xB,KAAKmF,MAAMggL,qBAClBqB,EAAA1kL,EAAAC,cAACylL,EAAA,EAADnmL,OAAAgF,OAAA,GACMrG,KAAKmF,MAAMkgL,sBADjB,CAEE5kL,KAAMT,KAAKmF,MAAMigL,qBACjBn9K,KAAMjI,KAAKmF,MAAMggL,qBACjBlkL,MAAOjB,KAAKmF,MAAMw/K,sBAClBzhL,OAAQlD,KAAKmF,MAAMy/K,0BAEnB3+K,EACN,MACA,IAAK,kBACHyrB,EAAS1xB,KAAKmF,MAAMw+K,sBAAwB3jL,KAAKmF,MAAMy+K,sBACrD4C,EAAA1kL,EAAAC,cAAC0lL,EAAA,EAADpmL,OAAAgF,OAAA,GACMrG,KAAKE,MADX,CAEEslB,YAAa,CACXpf,KAAK,QAEPmpB,WAAY,GACZzmB,cAAe9I,KAAKE,MAAMiT,MAC1BlS,MAAOjB,KAAKmF,MAAMw+K,qBAClBzgL,OAAQlD,KAAKmF,MAAMy+K,sBACnBz5K,OAAqC,qBAAtBnK,KAAKE,MAAMiK,QAAyBnK,KAAKE,MAAMiK,OAC9DqD,WAA6C,qBAA1BxN,KAAKE,MAAMsN,YAA6BxN,KAAKE,MAAMsN,cAEtEvH,EACN,MACA,IAAK,UACHyrB,EACE80J,EAAA1kL,EAAAC,cAACglL,EAAA,EACKl1J,EAEJ20J,EAAA1kL,EAAAC,cAACglL,EAAA,EAAD1lL,OAAAgF,OAAA,CACE/C,GAAI,EACJmE,KAAM,OACNrB,KAAM,MACN3C,MAAO,aACHouB,EAAWxS,aAIvB,MACA,IAAK,WACHqS,EAAS1xB,KAAKmF,MAAM6+K,aAClBwC,EAAA1kL,EAAAC,cAACylL,EAAA,EAADnmL,OAAAgF,OAAA,GACMrG,KAAKmF,MAAMq/K,cADjB,CAEE/jL,KAAMT,KAAKmF,MAAMo/K,aACjBt8K,KAAMjI,KAAKmF,MAAM6+K,aACjB/iL,MAAOjB,KAAKmF,MAAMi/K,cAClBlhL,OAAQlD,KAAKmF,MAAMk/K,kBAEnBp+K,EACN,MACA,IAAK,SACH,IAAIksB,EAAkB,KAClBC,EAAcpyB,KAAKmF,MAAMwoB,EAAUlmB,MACvC,OAAQkmB,EAAUltB,MAChB,IAAK,SACH2xB,EAAcpyB,KAAKD,cAAcqT,MAAMgf,GAAahP,WACpD+O,EAAkBryB,IAClB+xB,EAAWtxB,OAAS6xB,EACtB,MACA,IAAK,OACHD,EAAkBjuB,IACpB,MACA,IAAK,OACHiuB,EAAkBI,IAClBV,EAAWpqB,KAAO2qB,EACpB,MACA,QACED,EAAkBhuB,IAKtB,IAAMk/K,EAAkBhiL,OAAO2R,OAAO2a,EAAU9pB,MAAMuS,MACtD,GAAIpW,KAAKE,MAAM8I,YAAX,GAAArE,OAA0B0+K,EAA1B,UAAkD,CACpD,IAAMC,EAAmBtjL,KAAKE,MAAM8I,YAAX,GAAArE,OAA0B0+K,EAA1B,UAErBC,GAAoBjiL,OAAOC,KAAKgiL,GAAkB/hL,QACpDF,OAAOC,KAAKgiL,GAAkB9hL,QAAQ,SAAAC,GACpCowB,EAAWpwB,GAAK6hL,EAAiB7hL,KAKvCiwB,EAASU,EACPo0J,EAAA1kL,EAAAC,cAACowB,EAAoBN,EAAaO,GAChCnsB,EACN,MACA,QACE,IAAIu8K,EAAiBxiL,KAAKmF,MAAMwoB,EAAUlmB,MACtCzH,KAAKmF,MAAMwoB,EAAUlmB,OAASzH,KAAKmF,MAAMwoB,EAAUlmB,MAAMg7K,eAC3DD,EAAiBxiL,KAAKmF,MAAMwoB,EAAUlmB,MAAM8E,QAAQ1L,IAEtD6wB,EAAS1xB,KAAKmF,MAAMwoB,EAAUlmB,MAC5B++K,EAAA1kL,EAAAC,cAACglL,EAAA,EAASl1J,EAAa2wJ,GACrBv8K,EAGR,OAAOyrB,SAtwCcxvB,aA0wCVy0G","file":"static/js/main.3c1637d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length - 1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens', token]);\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo) {\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n          const totalAmount = transfers.reduce((total, t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            return total;\n          }, this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr: tokenApr,\n            apy: tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, 'usersStakes', [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, 'expectedUserReward', [account, tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            staked1,\n            lastPrice1\n          ] = await Promise.all([\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals),\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheLimit':\n        output = formatValue ? 'None' :  this.BNify(0);\n        if (this.BNify(tokenConfig.limit).gt(0)){\n          output = this.BNify(tokenConfig.limit);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = null;\n        let trancheApyDecimals = 2;\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          show_idle_apy ? this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          // Hot-fix for convex\n          if (protocol === 'convex'){\n            apr = apr.times(100);\n          }\n\n          let apy = this.apr2apy(apr.div(100)).times(100);\n\n          if (rewardsTokensInfo && rewardsTokensInfo.IDLE && !this.BNify(rewardsTokensInfo.IDLE.apy).isNaN()){\n            apy = apy.plus(this.BNify(rewardsTokensInfo.IDLE.apy).times(100));\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens);\n\n        if (govTokens) {\n          govTokens.forEach(govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.buyText ? this.props.buyText : (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Apr Ratio\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          this.setState({\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Apr Ratio\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let lastTxTimestamp = null;\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n\n          // Get updated tranches prices\n          await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n            if (tokensBalance[token].length){\n              const tokenBalanceConfig = tokensBalance[token][0];\n              const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n              const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n              const [\n                tokenConversionRate,\n                tranchePriceAA,\n                tranchePriceBB\n              ] = await Promise.all([\n                conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig, tx.blockNumber) : null,\n                this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.AA.address], {}, tx.blockNumber),\n                this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.BB.address], {}, tx.blockNumber)\n              ]);\n              if (!tokensData[token]){\n                tokensData[token] = [];\n              }\n\n              const tokenDataAA = {\n                timeStamp,\n                tranche:'AA',\n                tranchePrice:this.functionsUtil.BNify(tranchePriceAA)\n              };\n              const tokenDataBB = {\n                timeStamp,\n                tranche:'BB',\n                tranchePrice:this.functionsUtil.BNify(tranchePriceBB)\n              };\n              if (conversionRateField){\n                tokenDataAA[conversionRateField] = tokenConversionRate;\n                tokenDataBB[conversionRateField] = tokenConversionRate;\n              }\n\n              if (timeStamp>lastTxTimestamp){\n                lastTxTimestamp = timeStamp;\n              }\n              // console.log(token,tokenConfig.CDO.name,tokenBalanceConfig.protocol,tokenBalanceConfig.tranche,tx.blockNumber,tranchePrice,tokenDataAA);\n\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n\n              tokensData[token] = tokensData[token].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n            }\n          });\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    // Collect tranche prices and conversion rates for the current timestamp\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const [\n          tokenConversionRate,\n          tranchePriceAA,\n          tranchePriceBB\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig) : null,\n          this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.AA.address]),\n          this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.BB.address])\n        ]);\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        const tokenDataAA = {\n          tranche:'AA',\n          timeStamp:lastTimestamp,\n          tranchePrice:this.functionsUtil.BNify(tranchePriceAA)\n        };\n        const tokenDataBB = {\n          tranche:'BB',\n          timeStamp:lastTimestamp,\n          tranchePrice:this.functionsUtil.BNify(tranchePriceBB)\n        };\n        if (conversionRateField){\n          tokenDataAA[conversionRateField] = tokenConversionRate;\n          tokenDataBB[conversionRateField] = tokenConversionRate;\n        }\n\n        tokensData[token].push(tokenDataAA);\n        tokensData[token].push(tokenDataBB);\n\n        tokensData[token] = tokensData[token].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (!this.props.chartToken && conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.14]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.14 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.12 : 0.10],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.14 : 0.14],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#231b46',\n          rgb: [35, 27, 70],\n          hsl: ['251', '44%', '19%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      limit:0,\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      limit:0,\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      limit:0,\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      limit:1000000,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      experimental:true,\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      limit:1000000,\n      token:'MIM3CRV',\n      protocol:'convex',\n      experimental:true,\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.props.tokenConfig.experimental){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.props.tokenConfig.limit, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n        if (this.props.tokenConfig.experimental){\n          badgeText = 'Experimental';\n          badgeColor = 'experimental';\n        } else {\n          badgeText = 'Production';\n          badgeColor = 'production';\n        }\n        output = (\n          <Flex\n            px={2}\n            py={1}\n            borderRadius={2}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={badgeColor}\n          >\n            <Text\n              fontSize={1}\n              fontWeight={3}\n              color={'white'}\n            >\n              {badgeText}\n            </Text>\n          </Flex>\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}