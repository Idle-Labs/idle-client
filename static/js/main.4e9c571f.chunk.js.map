{"version":3,"sources":["AssetField/AssetField.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","FlexLoader/FlexLoader.js","ExtLink/ExtLink.js","RoundButton/RoundButton.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Migrate/Migrate.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","DashboardCard/DashboardCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","colors","defs","linearGradientDef","offset","fill","match","margin","top","right","bottom","left","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_19__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","key","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_17__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","value","buttonLabel","label","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_18__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","text","mt","textProps","children","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolName","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","xFormatted","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","target","rel","RoundButton","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","input","button","gradientButton","empty","select","selectDark","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","step","steps","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","textDecoration","activeColor","changeSelectedToken","required","placeholder","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getTokenBalance","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","iconColor","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","setAction","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","txSucceeded","eventData","getTransactionError","callbackReceiptExecute","transactionHash","contractMethodSendWrapper","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","checkTokenApproved","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","eventValue","callbackReceiptClaim","_this7","contractApproved","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","connectAndValidateAccount","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","callbackApprove","migrationText","utc","SendTxWithBalance","inputValue","buttonDisabled","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackReceiptApprove","checkContractApproved","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","infoBox","link","description","balanceSelectorInfo","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","transactionSucceeded","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","txReceipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","contract","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","rewards","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","getDepositTimestamp","firstDepositTxs","_args8","acc","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","config","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee40","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context40","allocationPromise","_ref44","_callee38","_context38","lastAmounts","call","_x38","_x39","availableTokenPromise","_ref45","_callee39","_context39","_x40","_x41","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x37","_ref46","_callee41","oldContractBalance","oldContractTokenDecimals","oldContractName","_context41","getContractBalance","_x42","_x43","_ref47","_callee42","signedParameters","callback_receipt","_contract$methods","_context42","getGasPrice","once","confirmationNumber","receipt","_x44","_x45","_x46","_x47","_x48","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref48","_callee43","biconomyInfo","res","_context43","headers","x-api-key","_x49","sendTxWithPermit","_ref49","_callee44","_contract$methods2","messageToSign","_this$getSignaturePar","_context44","encodeABI","_address","personal","sign","_x50","_x51","_x52","_x53","_x54","_x55","sendBiconomyTxWithPersonalSign","_ref50","_callee45","_this$getSignaturePar2","_context45","getNonce","_x56","_x57","_x58","_x59","signPermitEIP2612","_ref51","_callee46","erc20Name","owner","spender","deadline","domain","domainData","_context46","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x60","_x61","_x62","_x63","_x64","_x65","_x66","_x67","signPermit","_ref52","_callee47","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args47","_context47","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_x75","_x76","sendSignedTx","_ref53","_callee48","MetaTransaction","dataToSign","_context48","_x77","_x78","_x79","_x80","_x81","_ref54","_callee49","contractAddr","walletAddr","allowance","_context49","getAllowance","_x82","_x83","_x84","_ref55","_callee50","_context50","_x85","_x86","_x87","txData","disableERC20","toTwosComplement","_ref56","_callee51","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref57","_ref58","curveAvgBuyPrice","curveTokenBalance","_ref59","_ref60","amountLentCurve1","redeemableBalanceCurve","_ref61","_ref62","earningPerYear","_ref63","_ref64","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref65","_ref66","tokenPriceFirstDeposit","_ref67","_ref68","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref69","_ref70","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref71","_ref72","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref73","_ref74","amountLentCurve2","redeemableBalanceCurve1","_ref75","_ref76","redeemableBalance2","_args51","_context51","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x88","_x89","_x90","_x91","getIdleTokenSupply","_ref77","_callee52","idleTokenSupply","_args52","_context52","_x92","_ref78","_callee53","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args53","_context53","_x93","clearCachedData","useLocalStorage","_ref79","_callee54","_ref80","_ref81","idleTokensTotalSupply","userShare","_context54","_x94","_x95","_callee56","_args56","_context56","_ref83","_callee55","coverageTokens","protocolImage","_context55","_x96","_ref84","_callee57","etherscanEndpoint","_context57","_x97","_callee59","filter_by_status","_args59","_context59","_ref86","_callee58","_ref87","_ref88","_context58","_x98","_ref89","_callee60","fixDecimals","_ref90","_ref91","_args60","_context60","_x99","_x100","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref92","_callee61","_args61","_context61","_x101","_x102","getProtocolBalance","_ref93","_callee62","_context62","_x103","_x104","getAprs","_ref94","_callee63","_context63","_x105","genericIdleCall","_ref95","_callee64","callParams","_args64","_context64","_x106","estimateGas","_ref96","_callee65","_contract$methods3","_args65","_context65","_x107","_x108","getTxDecodedLogs","_ref97","_callee67","logAddr","decodeLogs","internalTransfers","_context67","_ref98","_callee66","_context66","_x113","_x114","_x109","_x110","_x111","_x112","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee68","_context68","getContractPastEvents","_ref100","_callee69","_args69","_context69","getPastEvents","_x115","_x116","_ref101","_callee70","_contract$methods4","_args70","_context70","_x117","_x118","_ref102","_callee71","_args71","_context71","_x119","_x120","apr2apy","getUnlentBalance","_ref103","_callee72","unlentBalance","_context72","_x121","_ref104","_callee73","_args73","_context73","_x122","_ref105","_callee75","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args75","_context75","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref106","_callee74","_ref107","_ref108","protocolBalance","_context74","_x124","_x125","getGovTokensBalances","total","getTokenConversionRate","_x123","getUniswapConversionRate_path","_ref109","_callee76","unires","_context76","_x126","_ref110","_callee77","tokenConfigFrom","tokenConfigDest","_context77","_x127","_x128","getCurveDepositedTokens","_ref111","_callee78","idleTokensBalances","remainingCurveTokens","_args78","_context78","_x129","getCurveUnevenTokenAmounts","_ref112","_callee79","amounts","max_burn_amount","unevenAmounts","_context79","getCurveDepositContract","_x130","_x131","_callee80","curveRatesInfo","_context80","strategyTokens","getCurveAPYContract","_callee81","blocksForPrevTokenPrice","_ref115","_ref116","prevTokenPrice","blocksMultiplier","curveAPR","_context81","getCurveTokenSupply","_callee82","_context82","getCurvePoolContract","_callee83","_args83","_context83","_callee84","_args84","_context84","_ref120","_callee85","_ref121","_ref122","_context85","_x132","_callee86","depositContractInfo","_context86","getCurveZapContract","_callee87","zapContractInfo","_context87","_callee88","poolContractInfo","_context88","getCurveSwapContract","_callee89","_context89","getCurveIdleTokensAmounts","_callee91","max_slippage","curveTokenSupply","curveTokenShare","_args91","_context91","_ref128","_callee90","curveIdleTokens","_context90","_x133","getCurveTokensAmounts","_callee93","useCoinIndex","_args93","_context93","_ref130","_callee92","_ref131","_ref132","totalTokenSupply","_context92","_x134","getCurveAmounts","_ref133","_callee95","_args95","_context95","_ref134","_callee94","_context94","_x137","_x135","_x136","getCurveTokenAmount","_ref135","_callee96","_args96","_context96","_x138","getCurveSlippage","_ref136","_callee97","uneven_amounts","_ref137","_ref138","virtualPrice","Sv","_args97","_context97","_x139","_x140","getCompAPR","_ref139","_callee98","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args98","_context98","_x141","_x142","getCompSpeed","_ref140","_callee99","cTokenAddress","compSpeed","_context99","_x143","_ref141","_callee100","annualize","cTokenInfo","compoundAllocationPerc","_ref142","_ref143","cTokenTotalSupply","compoundPoolShare","_args100","_context100","_x144","_callee102","_args102","_context102","_ref145","_callee101","_ref146","_ref147","_context101","_x145","_callee104","_args104","_context104","_ref149","_callee103","_ref150","_ref151","compApr","_context103","_x146","getTokensCsv","_callee107","csv","_context107","prototype","sum","pv","cv","avg","_ref153","_callee106","_context106","_ref154","_callee105","header","aprAvg","scoreAvg","lastRow","_context105","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x148","_x147","_callee109","_args109","_context109","_ref156","_callee108","compTokenBalance","_context108","_x149","speed","getGovTokensUserDistributionSpeed","_ref157","_callee111","govTokensUserDistribution","_args111","_context111","_ref158","_callee110","_context110","_x151","_x150","_ref159","_callee113","govTokensDistribution","_args113","_context113","_ref160","_callee112","govSpeed","_context112","_x153","_x152","_ref161","_callee115","_args115","_context115","_ref162","_callee114","_ref163","_ref164","compoundInfo","_context114","_x156","_x154","_x155","_callee117","_args117","_context117","_ref166","_callee116","tokenConversionRate","fromTokenConfig","_context116","_x157","getGovTokenConfigByAddress","_callee118","checkShowBalance","govTokensEarnings","_args118","_context118","govTokenAmount","_callee121","govTokenConfigForced","_args121","_context121","_ref169","_callee120","govTokensAmounts","_context120","_ref170","_callee119","govTokenAddress","_context119","_x159","_x160","_x158","_callee122","_args122","_context122","_callee123","_ref173","_ref174","gain","fees","_args123","_context123","_ref175","_callee124","_args124","_context124","_x161","getTotalTVL","_callee125","tokensTVL","_context125","getTokensTVL","totalTVL","tokenTVL","_callee129","_context129","_ref178","_callee128","_context128","_ref179","_callee127","oldTokenTVL","idleTokenName","_ref180","_ref181","totalSupply","_ref185","_ref186","oldTokenPrice","oldTotalSupply","_context127","_ref182","_callee126","_ref183","_ref184","govTokenConversionRate","govTokenBalanceConverted","_context126","_x164","_x163","_x162","getAggregatedStats","_callee130","endpointInfo","totalAUM","_args130","_context130","getAggregatedStats_chain","_callee134","avgAPR","_args134","_context134","_ref189","_callee133","_context133","_ref190","_callee132","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context132","_ref191","_callee131","_ref192","_ref193","tokenBalanceConverted","_context131","_x167","_x166","_x165","getTokenApy","_ref194","_callee135","_context135","_x168","_callee138","_args138","_context138","_ref196","_callee137","_context137","_ref197","_callee136","_ref198","_context136","_x170","_x169","getProtocolsTokensBalances","_callee140","tokenBalances","minTokenBalance","protocolsTokens","_args140","_context140","_ref200","_callee139","tokenContract","_context139","_x171","_ref201","_callee141","_args141","_context141","_x172","_x173","_x174","getAvgAPYStats","_ref202","_callee142","apiResults","_args142","_context142","_x175","_x176","_ref203","_callee143","_args143","_context143","_x177","_x178","_ref204","_callee144","_ref205","_ref206","_context144","protocolScore","getTokenScoreApi","_x179","_x180","_ref207","_callee145","_context145","_x181","_x182","_ref208","_callee147","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args147","_context147","_ref209","_callee146","addrIndex","protocolApr","protocolApy","_context146","_x184","_x185","_x183","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","active","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","mouseOver","isVisible","isRainbow","onMouseOut","setMouseOver","onMouseOver","titleParentProps","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","methodInfo","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.4e9c571f.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'cardBg'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Migrate_input__FS2vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.5',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    themeMode:'light',\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountLent,\n        tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountLent([token],this.props.account),\n        this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n      const amountLentToken = await this.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        acc[token] = firstDepositTxs[token].timeStamp;\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function' || !this.props.account){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(tokenName,blockNumber,p.address,this.BNify(tokenBalance).toFixed());\n                if (tokenBalance && this.BNify(tokenBalance).gt(0)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'white'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','themeMode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              className={styles.input}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n"],"sourceRoot":""}