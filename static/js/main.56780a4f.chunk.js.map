{"version":3,"sources":["SmartNumber/SmartNumber.js","TranchesList/TranchesList.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","ExecuteTransaction/ExecuteTransaction.js","IconBox/IconBox.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","TableRow/TableRow.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","TrancheField/TrancheField.js","ExtLink/ExtLink.js","Title/Title.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","TranchesList","state","prevProps","prevState","enabledProtocols","availableTranches","depositedTokens","id","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","assign","cols","isMobile","colsProps","isDeposit","map","token","tokenConfig","protocol","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","addTokenName","tranche","rowId","concat","trancheConfig","AA","BB","cardId","key","fieldComponent","TrancheField","protocolConfig","trancheType","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","path","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","componentUnmounted","loadData","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","children","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","IconBox","isVisible","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheLastHarvest","_ref31","_callee19","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref32","_ref33","blockInfo","totalAmount","_context19","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","returnValues","_x14","getTrancheRewardTokensInfo","_ref34","_callee21","tokensDistribution","_context21","_ref35","_callee20","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref36","_ref37","_firstHarvest","_latestHarvest","firstBlock","_ref38","_ref39","poolSize","elapsedBlocks","elapsedSeconds","_context20","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","total","_x17","_x15","_x16","_ref40","_callee23","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref41","_ref42","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context23","sort","_ref43","_callee22","trancheTokenTransferEvent","tokenTransferEvent","_ref44","_ref45","tokenConversionRate","_context22","_x21","trancheTokenAmount","hashKey","trancheTokens","_x18","_x19","_x20","getTrancheUserTransactions","_ref46","_callee24","_context24","_x22","_x23","_x24","getTrancheFirstDepositTx","_ref47","_callee25","_context25","_x25","_x26","_x27","getAmountDepositedTranche","_ref48","_callee26","_context26","_x28","_x29","_x30","_ref49","_callee27","_ref50","_ref51","userAvgPrice","_context27","_x31","_x32","getAmountLent","_callee28","amountLents","_args28","_context28","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee34","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref54","_ref55","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args34","_context34","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref56","_callee29","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context29","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x33","_ref57","_callee30","_context30","_x34","match","_ref58","_callee31","_context31","_x35","_ref59","_callee32","_context32","_x36","items","to_address","_ref60","_callee33","polygonTx","erc20RootToken","_context33","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x37","getPolygonBaseTxs","_callee35","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args35","_context35","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee36","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args36","_context36","filterEthereumTxs","_callee37","_args37","_context37","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee38","resultData","_resultData","allAvailableTokens","_args38","_context38","processStoredTxs","t1","_callee39","contractInstance","_context39","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref66","_callee40","_ref67","_ref68","_context40","getTransactionReceipt","_x38","_ref69","_callee41","_args41","_context41","_x39","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref70","_callee42","processTransactions","idleTokensAddresses","_args42","_context42","mappedTx","_x40","_x41","filterEtherscanTxs","_ref71","_callee43","processTxs","_args43","_context43","_x42","_ref72","_callee44","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args44","_context44","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x43","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref73","_callee49","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args49","_context49","baseTokenConfig","baseTokenAddress","_ref74","_callee48","minedTxs","_context48","_ref75","_callee47","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context47","getCurveTokenPrice","_ref76","_callee45","_context45","_x48","_x49","baseTokensConfig","t2","_ref77","_callee46","_context46","_x50","_x51","_x46","_x47","_x45","_x44","_ref78","_callee55","txsToProcess","_args55","_context55","_ref79","_callee54","_context54","_ref80","_callee53","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context53","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref81","_callee50","_context50","_x56","_x57","_ref82","_callee51","_context51","_x58","_x59","oldContract","events","raw","_ref83","_callee52","_context52","_x60","_x61","decodeLog","_token","_x54","_x55","_x53","_x52","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref84","_callee56","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args56","_context56","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x62","getBestTranche","_callee57","maxApy","trancheTypes","trancheStrategyConfig","_args57","_context57","timetamp","splice","availableTrancheInfo","tInfo","_ref86","_callee58","error_callback","config","_args58","_context58","post","catch","_x63","_ref87","_callee59","_args59","_context59","_x64","_ref88","_callee60","apiKeyIndex","apiKey","_args60","_context60","_x65","_ref89","_callee61","return_data","_args61","_context61","_x66","makeCachedPostRequest","_ref90","_callee62","_args62","_context62","_x67","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee63","page","googlePageviewInfo","isOrigin","_args63","_context63","ga","_ref92","_callee65","googleEventsInfo","debugEnabled","originOk","_args65","_context65","analytics","google","addPostfixForTestnet","availableNetworks","_ref93","_callee64","_context64","hitCallback","hitCallbackFail","_x69","_x70","_x68","createContract","_ref94","_callee66","_context66","_x71","_x72","_x73","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee69","activeOnly","whitelist","proposals","validProposals","_args69","_context69","addr","_ref96","_callee68","checkedStrategies","_context68","end","author","snapshot","strategies","_ref97","_callee67","tokenContract","_context67","_x75","_x74","getAprsFromApi","_callee70","endpointInfo","aprs","_args70","_context70","_ref99","_callee71","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args71","_context71","_x76","getTokenExchangeRate","_ref100","_callee72","exchangeRateParams","exchangeRate","_context72","_x77","_x78","getTokenDecimals","_ref101","_callee73","_context73","_x79","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee74","idleTokenConfig","feeDistributorConfig","_context74","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee75","contractPaused","_args75","_context75","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref104","_callee77","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context77","lastAllocationsPromise","_ref105","_callee76","lastAllocations","_context76","_x81","_x82","alloc","_x80","_ref106","_callee78","oldContractBalance","oldContractTokenDecimals","oldContractName","_context78","_x83","_x84","_ref107","_callee79","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","toBlock","all_past_events","_args79","_context79","getBlockNumber","getContractPastEvents","fromBlock","_x85","_x86","estimateMethodGasUsage","_ref108","_callee80","methodParams","_contract$methods","functionCall","gasLimit","_ref109","_ref110","_args80","_context80","getGasPrice","estimateGas","_x87","_x88","_ref111","_callee81","userAddress","signedParameters","callback_receipt","_contract$methods2","_context81","on","once","confirmationNumber","receipt","_x89","_x90","_x91","_x92","_x93","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref112","_callee82","biconomyInfo","res","_context82","limits","apiId","headers","x-api-key","_x94","sendTxWithPermit","_ref113","_callee83","_contract$methods3","messageToSign","_this$getSignaturePar","_context83","encodeABI","personal","sign","_x95","_x96","_x97","_x98","_x99","_x100","buildBiconomyErc20ForwarderTx","_ref114","_callee84","permitType","callData","buildParams","_context84","txGas","erc20ForwarderClient","buildTx","_x101","_x102","_x103","_x104","_x105","_ref115","_callee86","_context86","_ref116","_callee85","_context85","_x107","_x108","_x106","sendBiconomyTxWithErc20Forwarder","_ref117","_callee87","req","metaInfo","txResponse","fetchReceiptIntervalId","_context87","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x109","_x110","_x111","_x112","sendBiconomyTxWithPersonalSign","_ref118","_callee88","_this$getSignaturePar2","_context88","getNonce","_x113","_x114","_x115","_x116","signPermitEIP2612","_ref119","_callee89","erc20Name","owner","spender","deadline","domain","permit","domainData","_context89","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x117","_x118","_x119","_x120","_x121","_x122","_x123","_x124","signPermit","_ref120","_callee90","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args90","_context90","net","getId","round","nonceMethod","pow","allowed","response","_x125","_x126","_x127","_ref121","_callee91","permitParams","methodAbi","useNonce","_args91","_context91","_jsonInterface","f","unshift","_x128","_x129","_x130","_x131","_x132","_x133","_x134","sendSignedTx","_ref122","_callee92","MetaTransaction","dataToSign","_context92","_x135","_x136","_x137","_x138","_x139","checkTokenApproved","_ref123","_callee93","contractAddr","walletAddr","_ref124","_ref125","allowance","_context93","getAllowance","gte","_x140","_x141","_x142","_ref126","_callee94","_context94","_x143","_x144","_x145","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee96","highestValue","_args96","_context96","lendRates","aprInfo","tokenAPR","_ref128","_callee95","_context95","_x146","_ref129","_callee97","_args97","_context97","_x147","_x148","_ref130","_callee99","_args99","_context99","_ref131","_callee98","tokenGlobalConfig","stakingRewardsContract","_context98","_x151","_x149","_x150","_ref132","_callee100","field","addGovTokens","_args100","_context100","loadTrancheField","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_x159","_ref133","_callee101","formatValue","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref134","_ref135","totalSupply","virtualPrice","_ref136","_ref137","lastPrice1","staked1","_ref138","_ref139","deposited1","lastPrice","_ref140","_ref141","redeemable1","staked2","_ref142","_ref143","earningsStart","trancheApy2","deposited3","earningsEnd","_ref144","_ref145","trancheFee","earningsCounter","feesEnd","feesStart","_ref146","_ref147","deposited4","redeemable3","_ref148","_ref149","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref150","_ref151","_ref152","_ref153","earningsPerc","secondsFromFirstTx","_ref154","_ref155","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args101","_context101","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x160","_x161","_x162","_x163","_x164","_x165","_x166","loadAssetField","_ref156","_callee102","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref157","_ref158","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref159","_ref160","amountLentCurve1","redeemableBalanceCurve","_ref161","_ref162","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref163","_ref164","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref165","_ref166","tokenPriceFirstDeposit","_ref167","_ref168","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref169","_ref170","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref171","_ref172","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref173","_ref174","amountLentCurve2","redeemableBalanceCurve1","_ref175","_ref176","redeemableBalance2","_args102","_context102","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x167","_x168","_x169","_x170","getIdleTokenSupply","_ref177","_callee103","idleTokenSupply","_args103","_context103","_x171","getIdleTokenPriceWithFee","_ref178","_callee104","_ref179","_ref180","fee","priceWFee","_args104","_context104","eq","_x172","_x173","_ref181","_callee105","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args105","_context105","_x174","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref182","_callee106","_ref183","_ref184","idleTokensTotalSupply","userShare","_context106","_x175","_x176","openWindow","open","getActiveCoverages","_callee108","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args108","_context108","coverages","_ref186","_callee107","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context107","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x177","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref187","_callee110","incidentsInfo","_ref188","_ref189","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context110","directProps","contractInfo","buyer","_ref190","_callee109","cover","coverId","claimSubmittedEvent","_ref191","_ref192","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref193","_ref194","_context109","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x179","_x178","getBatchedDepositExecutions","_ref195","_callee111","_context111","_x180","getBatchedDeposits","_callee113","filter_by_status","batchDepositConfig","batchedDeposits","_args113","_context113","_ref197","_callee112","currBatchIndex","batchIndex","_ref198","_ref199","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context112","_x181","getETHBalance","_ref200","_callee114","fixDecimals","_args114","_context114","_x182","_ref201","_callee115","_ref202","_ref203","_args115","_context115","ERC20","_x183","_x184","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref204","_callee116","_args116","_context116","_x185","_ref205","_callee117","_args117","_context117","_x186","_ref206","_callee118","_args118","_context118","_x187","_x188","getProtocolBalance","_ref207","_callee119","_context119","_x189","_x190","getAprs","_ref208","_callee120","_context120","addresses","_x191","genericIdleCall","_ref209","_callee121","callParams","_args121","_context121","_x192","_ref210","_callee122","_contract$methods4","_args122","_context122","_x193","_x194","_ref211","_callee124","_args124","_context124","_ref212","_callee123","_context123","_x196","_x197","_x195","getTxDecodedLogs","_ref213","_callee126","logAddr","decodeLogs","internalTransfers","_context126","_ref214","_callee125","_context125","_x202","_x203","_x198","_x199","_x200","_x201","blocksToSeconds","blocks","blocksPerSeconds","_callee127","_context127","_callee128","blockInfoToSave","_args128","_context128","getBlock","_ref217","_callee129","_args129","_context129","getPastEvents","_x204","_x205","_ref218","_callee130","_args130","_context130","_x206","_x207","_ref219","_callee131","_args131","_context131","_x208","_x209","cachedContractCall","_ref220","_callee132","_args132","_context132","_x210","_x211","_ref221","_callee133","_contract$methods5","_args133","_context133","_x212","_x213","_ref222","_callee134","async","_args134","_context134","_x214","_x215","getUnlentBalance","_ref223","_callee135","unlentBalance","_context135","_x216","_ref224","_callee136","_args136","_context136","_x217","getLastAllocations","_ref225","_callee138","tokenAllocations","_context138","_ref226","_callee137","_context137","_x219","_x220","_x218","_ref227","_callee139","protocolsAprs","_ref228","_ref229","govTokensBalances","_args139","_context139","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x221","getSushiswapPoolTokenPrice","_ref230","_callee140","_ref231","_ref232","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref233","_ref234","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context140","getSushiswapConversionRate","_x222","_ref235","_callee141","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context141","_x223","_x224","_ref236","_callee142","useWETH","unires","_args142","_context142","addressForPrice","_x225","_x226","getCurveDepositedTokens","_ref237","_callee143","idleTokensBalances","remainingCurveTokens","_args143","_context143","_x227","getCurveUnevenTokenAmounts","_ref238","_callee144","amounts","max_burn_amount","unevenAmounts","_context144","getCurveDepositContract","_x228","_x229","_callee145","curveRatesInfo","_args145","_context145","_callee146","_context146","strategyTokens","getCurveAPYContract","_callee147","blocksForPrevTokenPrice","_ref242","_ref243","prevTokenPrice","blocksMultiplier","curveAPR","_context147","getCurveTokenSupply","_callee148","_context148","getCurvePoolContract","_callee149","_args149","_context149","_callee150","_args150","_context150","_ref247","_callee151","_ref248","_ref249","_context151","_x230","_callee152","depositContractInfo","_context152","getCurveZapContract","_callee153","zapContractInfo","_context153","_callee154","poolContractInfo","_context154","getCurveSwapContract","_callee155","migrationContractInfo","_context155","getCurveIdleTokensAmounts","_callee157","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args157","_context157","_ref255","_callee156","coinIndex","curveIdleTokens","_context156","migrationParams","_x231","getCurveTokensAmounts","_callee159","useCoinIndex","_args159","_context159","_ref257","_callee158","_ref258","_ref259","idleTokenPrice","totalTokenSupply","_context158","_x232","getCurveAmounts","_ref260","_callee161","_args161","_context161","_ref261","_callee160","_context160","_x235","_x233","_x234","getCurveTokenAmount","_ref262","_callee162","_args162","_context162","_x236","getCurveSlippage","_ref263","_callee163","uneven_amounts","depositContract","_ref264","_ref265","Sv","_args163","_context163","_x237","_x238","_ref266","_callee164","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref267","_ref268","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args164","_context164","IAaveIncentivesController","emissionPerSecond","_x239","_callee166","_args166","_context166","_ref270","_callee165","_ref271","_ref272","_context165","_x240","getWMaticApr","_ref273","_callee167","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args167","_context167","_x241","_x242","getStkAaveApr","_ref274","_callee168","aaveConversionRate","stkAaveAPR","stkAaveValue","_args168","_context168","_x243","_x244","getCompAPR","_ref275","_callee169","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args169","_context169","_x245","_x246","getCompSpeed","_ref276","_callee170","cTokenAddress","compSpeed","_context170","_x247","_ref277","_callee171","cTokenInfo","compoundAllocationPerc","_ref278","_ref279","cTokenTotalSupply","compoundPoolShare","_args171","_context171","_x248","_callee173","_args173","_context173","_ref281","_callee172","_ref282","_ref283","_context172","_x249","_callee175","_args175","_context175","_ref285","_callee174","_ref286","_ref287","compApr","_context174","_x250","getTokensCsv","_callee178","csv","_context178","prototype","sum","pv","cv","avg","_ref289","_callee177","_context177","_ref290","_callee176","rates","header","rows","aprAvg","scoreAvg","lastRow","_context176","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x252","_x251","_callee180","convertToken","_args180","_context180","_ref292","_callee179","compTokenBalance","_context179","_x253","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref293","_callee182","govTokensUserDistribution","_args182","_context182","_ref294","_callee181","_context181","_x255","_x254","getGovTokensDistributionSpeed","_ref295","_callee184","govTokensDistribution","_args184","_context184","_ref296","_callee183","govSpeed","_context183","_x257","_x256","getGovTokensAprs","_ref297","_callee186","govTokensAprs","_args186","_context186","_ref298","_callee185","_ref299","_ref300","_ref301","_ref302","cTokenConfig","_context185","aprTooltipMode","_x260","_x258","_x259","_callee188","_args188","_context188","_ref304","_callee187","govTokenBalance","fromTokenConfig","_context187","_x261","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee189","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args189","_context189","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref306","_callee191","govTokensAmounts","_context191","getGovTokensUserAmounts","_ref307","_callee190","govTokenIndex","govTokenAddress","_context190","getGovTokenAddessByIndex","_x264","_x265","_x262","_x263","_ref308","_callee192","_context192","_x266","_x267","_ref309","_callee193","_context193","_x268","_x269","_callee196","govTokenConfigForced","_args196","_context196","_ref311","_callee195","_context195","_ref312","_callee194","_context194","_x271","_x272","_x270","getTokenFees","_callee197","_args197","_context197","_callee198","_ref315","_ref316","feePercentage","gain","fees","_args198","_context198","_ref317","_callee199","_args199","_context199","_x273","getTotalTVL","_callee200","tokensTVL","_context200","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee204","_context204","_ref320","_callee203","_context203","_ref321","_callee202","oldTokenTVL","idleTokenName","_ref322","_ref323","oldTokenConfig","_ref327","_ref328","oldTokenPrice","oldTotalSupply","_context202","showAUM","_ref324","_callee201","_ref325","_ref326","govTokenConversionRate","govTokenBalanceConverted","_context201","_x276","oldProtocols","oldProtocol","protocolPos","_x275","_x274","getSubstackLatestFeed","_callee205","idleSubstackFeed","latestFeed","_context205","getTrancheAggregatedStats","_callee209","totalAUM","_args209","_context209","_ref331","_callee208","_context208","_ref332","_callee207","_context207","_ref333","_callee206","_ref334","_ref335","_context206","_x279","_x278","_x277","getAggregatedStats","_callee211","allNetworks","networkIds","tvls","_args211","_context211","_ref337","_callee210","_context210","_x280","getAggregatedStats_chain","_callee216","avgAPR","_args216","_context216","availableStrategiesNetworks","_ref339","_callee215","_context215","_ref340","_callee214","_context214","_ref341","_callee213","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context213","_ref342","_callee212","_ref343","_ref344","_context212","_x284","_x283","_x282","_x281","getTokenApy","_ref345","_callee217","_context217","_x285","getTokensToMigrate","_callee220","_args220","_context220","_ref347","_callee219","_context219","_ref348","_callee218","_ref349","_context218","_x287","_x286","getProtocolsTokensBalances","_callee222","tokenBalances","minTokenBalance","protocolsTokens","_args222","_context222","_ref351","_callee221","_context221","_x288","getTokenConversionRateField","_ref352","_callee223","_args223","_context223","_x289","_x290","_ref353","_callee224","_args224","_context224","_x291","_x292","_x293","getAvgAPYStats","_ref354","_callee225","apiResults","_args225","_context225","_x294","_x295","_ref355","_callee226","statsTokenConfig","ToTokenConfig","_args226","_context226","addressForPriceFrom","_x296","_ref356","_callee227","count","_conversionRate","_args227","_context227","_x297","_x298","getTokenScore","_ref357","_callee228","_ref358","_ref359","tokenScore","_context228","protocolScore","getTokenScoreApi","_x299","_x300","_ref360","_callee229","scores","_context229","_x301","_x302","_ref361","_callee230","idleGovTokenShowAPR","idleAPR","_args230","_context230","_x303","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","textTransform","ConnectBox","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","transactionSucceeded","isStake","isWithdraw","option","selectTranche","borderTop","ImageButton","setSelectedAction","setStakeAction","Button","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","timeout","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"4tcAIMA,6MAGJC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,+IAGE,IAAAC,EAAAL,KACHM,EAAkB,IAChBC,EAAsC,qBAAtBP,KAAKE,MAAMK,QAA2BC,MAAMR,KAAKE,MAAMK,UAAiC,IAAtBP,KAAKE,MAAMK,QAA0C,OAAtBP,KAAKE,MAAMK,OAAsC,KAApBP,KAAKE,MAAMK,OAE/J,GAAIA,EACF,OAAQP,KAAKE,MAAMO,MACjB,IAAK,QACHH,EAAkBN,KAAKD,cAAcW,YAAYH,EAAOP,KAAKE,MAAMS,WACrE,MACA,QACEL,EAAkBN,KAAKD,cAAca,iBAAiBL,EAAOP,KAAKE,MAAMW,SAASb,KAAKE,MAAMY,aAAad,KAAKE,MAAMa,mBAIxHT,EAAkB,IAGpB,IAAMU,EAAY,CAChBC,MAAM,EACNC,WAAW,SACXC,cAAc,MACdC,eAAe,UAIbpB,KAAKE,MAAMc,WAAaK,OAAOC,KAAKtB,KAAKE,MAAMc,WAAWO,QAC5DF,OAAOC,KAAKtB,KAAKE,MAAMc,WAAWQ,QAAQ,SAAAC,GACxCT,EAAUS,GAAKpB,EAAKH,MAAMc,UAAUS,KAIxC,IAAMC,EAAW1B,KAAKE,MAAMyB,MAA4B,MAApBrB,EAC9BsB,EAAU5B,KAAKE,MAAM0B,QAAU5B,KAAKE,MAAM0B,QAAU,QAE1D,OACEC,EAAAC,EAAAC,cAACC,EAAA,EACKhB,EAGU,SAAZY,GAAsBF,GACpBG,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAM+B,UAAYjC,KAAKE,MAAMyB,MAEhDE,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAQI,GAET,UAAZsB,GAAuBF,GACrBG,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAM+B,UAAYjC,KAAKE,MAAMyB,cA9D9BO,aAqEXpC,k+EClETqC,6MAEJC,MAAQ,KAGRrC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,iMAGkBiC,EAAWC,mEAClCtC,KAAKI,kJAGE,IAAAC,EAAAL,KAEHuC,EAAmBvC,KAAKE,MAAMqC,iBAC7BA,GAAqBA,EAAiBhB,SACzCgB,EAAmBlB,OAAOC,KAAKtB,KAAKE,MAAMsC,oBAE5C,IAAMC,EAAgBzC,KAAKE,MAAMuC,gBACjC,OACEZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,GAAG,0BAA0BzB,MAAO,EAAGE,cAAe,UAC1DU,EAAAC,EAAAC,cAACY,EAAA,EAADtB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2C,KAAM7C,KAAKE,MAAM2C,KACjBC,SAAU9C,KAAKE,MAAM4C,SACrBC,UAAW/C,KAAKE,MAAM6C,aAGvB/C,KAAKE,MAAM8C,UAEXP,GACDZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,GAAG,gBAAgBvB,cAAe,UAGjCsB,EAAgBQ,IAAK,SAAAC,GACpB,IAAMC,EAAY9C,EAAKH,MAAMsC,kBAAkBU,EAAME,UAAUF,EAAMA,OACrE,OACErB,EAAAC,EAAAC,cAACsB,EAAA,EAADhC,OAAAuB,OAAA,GACMvC,EAAKH,MADX,CAEEgD,MAAOA,EAAMA,MACbI,cAAc,EACdC,QAASL,EAAMK,QACfH,SAAUF,EAAME,SAChBI,MAAK,eAAAC,OAAiBP,EAAME,UAC5BD,YAAaA,EACbO,cAA+B,OAAhBR,EAAMK,QAAeJ,EAAYQ,GAAGR,EAAYS,GAC/DC,OAAM,gBAAAJ,OAAkBP,EAAME,UAC9BU,IAAG,WAAAL,OAAaP,EAAME,SAAnB,KAAAK,OAA+BP,EAAMA,MAAMA,EAAMK,SACpDQ,eAAgB1D,EAAKH,MAAM6D,gBAAkBC,UASxDnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,GAAG,gBAAgBvB,cAAe,UAErCoB,EAAiBU,IAAI,SAAAG,GACnB,IAAMa,EAAiB5D,EAAKH,MAAMsC,kBAAkBY,GACpD,IAAKa,EACH,OAAO,KAEP,IAAMV,EAAUlD,EAAKH,MAAMgE,aAAe,KAC5C,OAAO7C,OAAOC,KAAK2C,GAAgBhB,IAAK,SAAAC,GACtC,OACErB,EAAAC,EAAAC,cAACsB,EAAA,EAADhC,OAAAuB,OAAA,GACMvC,EAAKH,MADX,CAEEgD,MAAOA,EACPK,QAASA,EACTH,SAAUA,EACVI,MAAK,eAAAC,OAAiBL,GACtBD,YAAac,EAAef,GAC5BW,OAAM,gBAAAJ,OAAkBL,GACxBU,IAAG,WAAAL,OAAaL,EAAb,KAAAK,OAAyBP,GAC5Ba,eAAgB1D,EAAKH,MAAM6D,gBAAkBC,oBAvFtC9B,aAqGZC,4BC3GfgC,EAAAC,QAAA,CAAkBC,aAAA,qCAAAC,OAAA,s3olJCAlBH,EAAAC,QAAA,CAAkBG,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,iJCGZC,mLACK,IAAAC,EAAA7E,KAED8E,IAAmB9E,KAAKE,MAAM4E,eAEpC,OACEC,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACE/D,MAAO,EACPyB,GAAI,aACJxB,WAAY,UAGVlB,KAAKE,MAAM+E,aACVF,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACEC,YAAa,CACXC,OAAO,EACPnE,MAAM,OACNoE,OAAO,QAETC,SAAU,QACVC,SAAU,YACVN,YAAajF,KAAKE,MAAM+E,cAI3BjF,KAAKE,MAAMsF,MAAQxF,KAAKE,MAAMsF,KAAKjE,OAAO,GACzCwD,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACES,GAAI,CAAC,EAAE,GACPC,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,WACPC,WAAY,YACZC,QAAS9F,KAAKE,MAAM+E,aAEpBjF,KAAKE,MAAMsF,QAIZxF,KAAKE,MAAM4C,UAAYgC,IAAmB9E,KAAKE,MAAM6F,MAAQ/F,KAAKE,MAAM6F,KAAKxE,OAAO,GACpFvB,KAAKE,MAAM6F,KAAK9C,IAAI,SAAC8C,EAAKC,GACxB,IAAMC,EAAOpB,EAAK3E,MAAMgG,UAAYrB,EAAK3E,MAAMgG,SAASF,IAAkB,KACpE9D,EAAY+D,EAAOE,IAAOC,IAChC,OACErB,EAAAjD,EAAAC,cAACG,EAAD,CACEmE,GAAI,CAAC,EAAE,GACPZ,GAAI,CAAC,EAAE,GACPE,WAAY,EACZD,SAAU,CAAC,EAAE,GACbG,WAAY,YACZS,MAASzB,EAAK3E,MAAM4C,SAMhB,KAN2B,CAC7ByD,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAAlD,OAAeoB,EAAK3E,MAAM0G,MAAMC,OAAOC,UAEnDhD,IAAG,mBAAAL,OAAqBuC,GACxBJ,MAAOK,EAAO,WAAa,YAC3BH,QAASG,EAAO,SAAAc,GAAC,OAAIlC,EAAK3E,MAAM8G,YAAYf,IAAQ,MAEnDF,aA5DM7D,aAsEV0C,gHCtETqC,mLAEF,IAAM9B,EAAc9D,OAAOuB,OAAO,CAChCnB,EAAE,EACF2D,OAAO,EACPnE,MAAM,OACNoE,OAAO,OACP6B,aAAa,MACbC,UAAU,eACVC,SAASpH,KAAKE,MAAMkH,UACpBpH,KAAKE,MAAMiF,aAIb,OAFAA,EAAYkC,SAAWlC,EAAYlE,MAGhCqG,EAAAxF,EAAAC,cAACwF,EAAA,EAAD,CACEpC,YAAaA,EACbF,YAAajF,KAAKE,MAAM+E,aAExBqC,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACE5B,MAAO,YACP6B,KAAMzH,KAAKE,MAAMqF,SACjBmC,KAAO1H,KAAKE,MAAMoF,SAAWtF,KAAKE,MAAMoF,SAAW,kBAtBhCpD,aA6Bf+E,uIC7BTU,6MAEJvF,MAAQ,CACNoD,KAAK,QAIPzF,cAAgB,OAChB6H,oBAAqB,6EAGf5H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,oQAIL7H,KAAK4H,oBAAqB,uLAGHvF,EAAUC,mEACjCtC,KAAKI,YACeiC,EAAUyF,OAAS9H,KAAKE,MAAM4H,MAEhD9H,KAAK6H,6LAIUE,wFAASC,iCAAS,KAC9BhI,KAAK4H,4DACD5H,KAAKiI,SAASF,EAASC,oCAEzB,iQAIDE,GAA+C,IAA9BlI,KAAKE,MAAMgI,eAC9B1C,EAAOxF,KAAKD,cAAcoI,YAAYnI,KAAKE,MAAM4H,OACrCI,kCAAuBlI,KAAKD,cAAcqI,WAAWpI,KAAKE,MAAM4H,oDAAQ,aAAlFO,UAEJ7C,EAAO6C,GAETrI,KAAKsI,aAAa,CAChB9C,6IAKF,IAAM+C,EAAUC,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CAAQf,KAAK,SAC7B,OAAO1H,KAAKoC,MAAMoD,KAAOgD,EAAA1G,EAAAC,cAAC0G,EAAA,EAADpH,OAAAuB,OAAA,CAAM8F,QAAS,UAAc1I,KAAKE,OAAQF,KAAKoC,MAAMoD,MAAe+C,SAxDzErG,aA4DTyF,0HCzCAgB,mLAfX,OACEC,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,kBACtBH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,cAVnC9G,aCFvB+G,mLAEF,OACEL,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CAAQkD,QAAS9F,KAAKE,MAAM+E,aAAiBjF,KAAKE,MAAMiF,aACtDyD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfD,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,EAAGyH,QAAS1I,KAAKE,MAAMgJ,UAAY,OAAS,QACvDN,EAAA9G,EAAAC,cAACoH,EAAD,OAEFP,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,EAAGyH,QAAS1I,KAAKE,MAAMgJ,UAAY,OAAS,QACtDlJ,KAAKE,MAAMkJ,qBAbGlH,aAqBZ+G,0KCjBTI,6MACJjH,MAAQ,CACNkH,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3B5J,cAAgB,OAChB6H,oBAAqB,6EAGf5H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,6JAILJ,KAAK4H,oBAAqB,sJAI1B5H,KAAK6H,gMAGkBxF,EAAUC,8EACjCtC,KAAKI,YAEgBiC,EAAUuH,gBAAkB5J,KAAKE,MAAM0J,cAE1D5J,KAAKsI,aAAa,CAChBgB,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACAtJ,EAAKwH,aAEExF,EAAUS,WAAa9C,KAAKE,MAAM4C,UAC3C9C,KAAK6H,6LAIUE,wFAASC,iCAAS,KAC9BhI,KAAK4H,4DACD5H,KAAKiI,SAASF,EAASC,oCAEzB,2RAQGhI,KAAKD,cAAc8J,mBAAmB7J,KAAKE,MAAMiD,6BAHzDsG,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBO,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBvD,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACd0E,aAAa,SAACC,EAAMxD,GAClByD,EAAKlC,aAAa,CAChBkB,cAAce,KAGlBE,aAAa,SAACF,EAAMxD,GAClByD,EAAKlC,aAAa,CAChBkB,cAAc,QAGlBkB,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBC,YAAa,SAAAT,GACX,OAAO,MAETzD,MAAM,CACJmE,QAAS,CACPC,UAAWhL,KAAKE,MAAM+K,OAAS,CAC7BC,WAAYlL,KAAKE,MAAM0G,MAAMC,OAAOsE,QAClC,CACFzC,QAAS,SAGb0C,OAAO,CACL5F,KAAK,CACHG,WAAW,IACXD,SAAS1F,KAAKE,MAAM4C,SAAW,GAAK,GACpCuI,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAMC,YAGvCC,QAAQ,CACNhG,KAAK,CACHE,SAAS,GACTC,WAAW,IACX0F,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBlM,KAAKE,MAAM+K,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQvM,KAAKE,MAAM+K,OAAS,CAACuB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAEC,KAAK,GAAM3M,KAAKE,MAAM4C,SAAW,CAAE0J,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KAGvKrD,EAAY,GAElBtJ,KAAKE,MAAMiD,YAAYyJ,UAAUpL,QAAQ,SAACqL,EAAaC,GACrD,IAAMC,EAAeF,EAAapF,KAC5BuF,EAAeH,EAAaI,QAAQC,cAC1C,GAAIvD,EAAyBqD,GAAc,CACzC,IAAMG,EAA+BC,WAAWzD,EAAyBqD,GAAcK,MAAM,KAAKC,QAAQ,IAC1GhE,EAAUiE,KAAK,CACb7K,GAAGsK,EACHvF,KAAKsF,EACLlC,MAAMsC,EACNvH,MAAM,OAAO4H,IAAcC,MAAMb,UAAUG,GAAcnH,MAAM8H,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQpD,EAAKzK,cAAc8N,WAAWd,QAKnJ/M,KAAKsI,aAAa,CAChBgB,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7BxJ,KAAKoC,MAAMoH,gBAA0BxJ,KAAKoC,MAAMsH,qBAAqB1J,KAAKoC,MAAMoH,cAAc9G,MAAM1C,KAAKoC,MAAMsH,qBAAqB1J,KAAKoC,MAAMoH,cAAc9G,IAC7KoL,EAA4C,OAA7B9N,KAAKoC,MAAMoH,cAA0BgE,IAAcC,MAAMb,UAAU5M,KAAKoC,MAAMoH,cAAc/B,OAAS+F,IAAcC,MAAMb,UAAU5M,KAAKoC,MAAMoH,cAAc/B,MAAMsG,KAAOP,IAAcC,MAAMb,UAAU5M,KAAKoC,MAAMoH,cAAc/B,MAAMsG,KAAjM,GAAAtK,OAA2MzD,KAAKoC,MAAMoH,cAAc/B,KAApO,QAAkP,KAE5S,OACE5F,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPgN,SAAU,YAGRjO,KAAKoC,MAAMqH,kBAAoBzJ,KAAKE,MAAM+K,QACxCpJ,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEE,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACXjN,WAAY,SACZ+M,SAAU,WACVhN,MAAO,CAAC,MAAM,OACdoE,OAAQ,CAAC,MAAM,OACflE,cAAe,SACfC,eAAgB,UAGdoI,EACE3H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBS,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEI,GAAI,EACJnN,MAAO,CAAC,QAAQ,OAChBoE,OAAQ,CAAC,QAAQ,OACjBgJ,IAAG,qBAAA5K,OAAuBqK,KAE5BjM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACE5I,SAAU,CAAC,EAAE,GACb7E,SAAU,EACV8E,WAAY,EACZ7E,aAAc,EACdP,OAAQiJ,IAEV3H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEtI,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,aAHT,YAKY5F,KAAKoC,MAAMoH,cAAcoE,QAIvC/L,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBS,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEI,GAAI,EACJnN,MAAO,CAAC,QAAQ,OAChBoE,OAAQ,CAAC,QAAQ,OACjBgJ,IAAG,0BAELxM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACErM,UAAW,CACTwD,GAAG,EACHE,WAAW,EACXD,SAAS,CAAC,EAAE,IAEd7E,SAAU,EACV8E,WAAY,EACZD,SAAU,CAAC,EAAE,GACb5E,aAAc,EACdP,OAAQP,KAAKoC,MAAMqH,kBAErB5H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACErI,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAHT,iBAYZ/D,EAAAC,EAAAC,cAACwM,EAAA,EAADlN,OAAAuB,OAAA,CACEnC,KAAM+N,IACNC,YAAY,GACRzO,KAAKE,MACLF,KAAKoC,MAAMmH,WAJjB,CAKEgB,KAAMvK,KAAKoC,MAAMkH,qBA3PGpH,aAkQfmH,gHCtQTqF,6MACJtM,MAAQ,CACNuM,iBAAiB,+EAEN5H,GACXA,EAAE6H,iBACF5O,KAAKiI,SAAS,SAAA7F,GAAK,OAAAf,OAAAwN,EAAA,EAAAxN,CAAA,GAASe,EAAT,CAAgBuM,iBAAkBvM,EAAMuM,qDAG3D,OACErH,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CACE8M,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACP7N,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChB6N,gBAAiB,SACjB/H,aAAelH,KAAKE,MAAMgP,SAAW,OAAS,OAC9CC,UAAW,GAEX7H,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CAAMb,cAAe,MAAOD,WAAY,SAAUD,MAAO,EAAG6E,QAAS9F,KAAKE,MAAM+E,YAAaqB,MAAO,CAAC8I,OAAQ,YAC3G9H,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CAAKf,MAAO,IACVqG,EAAAxF,EAAAC,cAACC,EAAA,EAAQqN,GAAT,CACEP,GAAI,EACJnJ,WAAY,EACZD,SAAU,CAAC,EAAE,GACb2F,WAAY,YACZzF,MAAO5F,KAAKE,MAAMgP,SAAW,OAAS,aAErClP,KAAKE,MAAMoP,WAGhBhI,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,GACPG,eAAgB,YAEhBkG,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CACE0F,KAAM,QACN9B,MAAO5F,KAAKE,MAAMgP,SAAW,OAAS,YACtCzH,KAAMzH,KAAKE,MAAMgP,SAAW,kBAAoB,wBAItD5H,EAAAxF,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,GAENjB,KAAKE,MAAMgP,UACV5H,EAAAxF,EAAAC,cAACC,EAAA,EAAKP,EAAN,CACE0M,UAAW,UACXzI,SAAU,CAAC,EAAE,GACb6J,wBAAyB,CAAEC,OAAQxP,KAAKE,MAAMuP,mBAnDnCvN,aA6DVwM,oKCzDTgB,6MACJtN,MAAQ,CACNuN,UAAU,KACVrG,UAAU,KACVC,WAAW,KACXqG,WAAW,KACXC,YAAY,QAId9P,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAK8P,qMAGkBzN,EAAWC,oFAClCtC,KAAKI,YAEC2P,EAA4B1N,EAAU2N,qBAAuBhQ,KAAKE,MAAM8P,oBACzDC,KAAKC,UAAU7N,EAAU8N,iBAAmBF,KAAKC,UAAUlQ,KAAKE,MAAMiQ,gBACvEJ,IAClB/P,KAAKiI,SAAS,CACZqB,UAAU,MACV,WACAjJ,EAAK+P,sBAIHC,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDwN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,WACxDF,GAAiBC,IACnBtQ,KAAK8P,yVAMHK,EAAgBnQ,KAAKE,MAAMiQ,gBACRA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKtB,KAAKE,MAAMsQ,2BAGdxQ,KAAKD,cAAc0Q,gBAAgBzQ,KAAKE,MAAMwQ,QAAQ,EAAE,SAASP,iBAAtFQ,SAIArH,EAAY,GACdsH,EAAgB,GAChBC,EAAmB,eAEjB7Q,KAAKD,cAAc+Q,aAAaX,EAAhC,eAAAY,EAAA1P,OAAA2P,EAAA,EAAA3P,CAAA4P,EAAAnP,EAAAoP,KAA8C,SAAAC,EAAOvH,GAAP,IAAAwH,EAAAC,EAAA,OAAAJ,EAAAnP,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAchH,GAAiB,IAEzBwH,EAAc/P,OAAOqQ,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,MACxDwH,EAAY7P,SAEzB8P,EAAa7G,EAAKzK,cAAc8R,MAAM,GAE1CT,EAAY5P,QAAQ,SAACoQ,EAAG5L,GAGtB,IAAK4L,EAAG9J,OAAS8J,EAAGE,QAAWF,EAAGG,QAAwB,YAAdH,EAAGG,OAC7C,OAAO,EAGTlB,EAAmBA,EAAmBmB,KAAKC,IAAIpB,EAAiBqB,SAASN,EAAGO,YAAcD,SAASN,EAAGO,WAEtG,IAAMC,EAAc5H,EAAKzK,cAAc8R,MAAMD,EAAGQ,aAEhD,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHT,EAAaA,EAAWgB,KAAKD,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHf,EAAaA,EAAWiB,MAAMF,GAO9Bf,EAAWkB,GAAG,KAChBlB,EAAa7G,EAAKzK,cAAc8R,MAAM,IAGxC,IAAMW,EAAUnB,EACVS,EAASF,EAAGE,OACZK,EAAYD,SAASN,EAAGO,WACxBM,EAAajI,EAAKzK,cAAc8R,MAAMD,EAAGa,YACzCC,EAAalI,EAAKzK,cAAc8R,MAAMD,EAAGc,YAI1CD,EAAWjS,SAAYiS,EAAWjS,SACrCoQ,EAAchH,GAAe2D,KAAK,CAChCuE,SACAU,UACAL,YACAM,aACAC,aACAN,mBA3D0C,wBAAAb,EAAAoB,SAAAxB,EAAAnR,SAA9C,gBAAA4S,GAAA,OAAA7B,EAAA8B,MAAA7S,KAAA8S,YAAA,YAqEFnD,EAAY,KACVoD,EAAc/S,KAAKD,cAAciT,YAAY,IAAIC,WAE/CjT,KAAKE,MAAM8P,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAY,yCAIVyD,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,UAAS,IAAIe,MAAOY,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhC/T,KAAKE,MAAM8T,2BAEpBhU,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKsP,GAA5C,eAAAqD,EAAA5S,OAAA2P,EAAA,EAAA3P,CAAA4P,EAAAnP,EAAAoP,KAA2D,SAAAgD,EAAOhR,GAAP,IAAAiR,EAAA,OAAAlD,EAAAnP,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cACzD0C,EAAe3J,EAAKzK,cAAcsU,yBAAyBnR,EAAMsH,EAAKtK,MAAM8T,kBADnBI,EAAA3C,KAAA,EAErCjH,EAAKzK,cAAcuU,gBAAgBH,EAAaJ,EAAOlD,EAAiB,MAAK,EAAM,MAF9C,OAE/DiD,EAAW5Q,GAFoDkR,EAAAG,KAAA,wBAAAH,EAAAzB,SAAAuB,EAAAlU,SAA3D,gBAAAwU,GAAA,OAAAP,EAAApB,MAAA7S,KAAA8S,YAAA,YAON,IAFM2B,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI2B,EAAczB,GACnCsB,EAAoBjJ,EAAKzK,cAAc8R,MAAM,GAI7CxQ,OAAOC,KAAKsP,GAAepP,QAAQ,SAAA0B,GAEjC,IAAI0R,EAAgB,KACdC,EAA0BxT,OAAOqQ,OAAOoC,EAAW5Q,IAAQ4R,MAC3DC,EAAoBjB,EAAW5Q,GAAOyO,OAAO,SAAAC,GAAE,OAAKA,EAAGoD,WAAW1B,GAAiB1B,EAAGoD,WAAW7C,IACnG4C,GAAqBA,EAAkBxT,SACzCqT,EAAgBG,EAAkBD,OAG/BL,EAAiBvR,KACpBuR,EAAiBvR,GAASsH,EAAKzK,cAAc8R,MAAM,IAGrD,IACMoD,EADczK,EAAKtK,MAAMsQ,gBAAgBtN,GACbrC,SAC9BqU,EAAmBtE,EAAc1N,GAAOyO,OAAO,SAAAC,GAAE,OAAKA,EAAGO,WAAWA,KAAemB,GAAiB1B,EAAGO,UAAUmB,KAErH,GAAK4B,EAAiB3T,OA+BpB2T,EAAiB1T,QAAQ,SAAAoQ,GACvB,OAAQA,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH2C,EAAiBvR,GAASuR,EAAiBvR,GAAOmP,KAAKT,EAAGc,YAC5D,MACA,QACE+B,EAAiBvR,GAASuR,EAAiBvR,GAAOoP,MAAMV,EAAGc,YACvD+B,EAAiBvR,GAAOqP,GAAG,KAC7BkC,EAAiBvR,GAASsH,EAAKzK,cAAc8R,MAAM,YA1C3D,GAAIwB,GAAgBA,EAAanQ,GAAO,CACtCgS,EAAmB7B,EAAanQ,GAChC,IAAMiS,EAAiB9T,OAAOuB,OAAO,GAAGsS,GAAkBJ,MAI1D,GAHuB1H,WAAW+H,EAAe3C,SAG9B,GACjB,GAAIL,EAAUtB,GAAoB+D,EAAc,CAC9C,IAAMlC,EAAa+B,EAAiBvR,GAC9BkS,EAAY5K,EAAKzK,cAAcsV,iBAAiBT,EAAcQ,UAAUH,GAC1EK,EAAa5C,EAAWrF,MAAM+H,GAGlCD,EAAe3C,QAAU8C,EACzBH,EAAe1C,WAAa2C,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQhI,EAAKzK,cAAc8R,MAAM,GACjCY,WAAWjI,EAAKzK,cAAc8R,MAAM,UAIxCqD,EAAmB,CAAC,CAClB1C,QAAQhI,EAAKzK,cAAc8R,MAAM,GACjCY,WAAWjI,EAAKzK,cAAc8R,MAAM,KAuB1C,IAAM0D,EAASlU,OAAOuB,OAAO,GAAGsS,GAAkBJ,MAE9CU,EAAgBf,EAAiBvR,GAAOmK,MAAMkI,EAAO9C,YAEzD,GAAI+C,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsBnL,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,wBACrG,IAAKrL,EAAKtK,MAAM4V,YAAcH,EAAoB,CAChD,IAAMI,EAAiBnB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOI,IACFL,EAAyBlL,EAAKzK,cAAcsV,iBAAiBU,EAAe,KACjDN,GAAG,KAC5BD,EAAgBA,EAAcnI,MAAMqI,IAK1Cf,EAAezR,GAASsS,EACxB/B,EAAoBA,EAAkBpB,KAAKmD,QAE3Cb,EAAezR,GAASsH,EAAKzK,cAAc8R,MAAM,GAGnD6C,EAAcxR,GAASgS,IAGzB,IAAIc,EAAaxL,EAAKzK,cAAciT,YAAsB,IAAVb,GAEhD,GAAkB,OAAdxC,GAAuBqG,EAAWC,cAActG,IAAcqG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoBrG,WAAWA,WAAWqG,EAAkBnG,QAAQ,KAEpEqG,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OAjIRvC,EAAUtB,EAAiBsB,GAAWyB,EAAczB,GAAWnS,KAAKE,MAAMoW,iBAAiBC,EAA3FpE,GA6LT,IAzDMqE,EAAqBnV,OAAOC,KAAKoS,GAAwBzQ,IAAI,SAAAwT,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmBhV,QAAS,SAACsV,EAAK9Q,GAChC,IAAM+Q,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmBjV,OAAO,KAC/DiV,EAAmBxQ,GAAO+Q,QAAUA,EACpCF,MA0BIf,EAAa9V,KAAKE,MAAM4V,WAAa9V,KAAKE,MAAM4V,WAAWD,cAAgB,MAGjFvM,EAAUiE,KAAK,CACb7K,GAAGoT,EACHlQ,MAAO,OAAQ5F,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQlI,KAAK,KAAK,IACvHpD,KAAKiM,IAGHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACXrK,EAAE,EAAEA,GAHQ,EAGQA,IACrBsK,EAAahK,WAAWA,WAAWmG,EAAezG,EAAEoK,GAAY5J,QAAQ,IAC9E6J,EAAY5J,KAAK6J,GAGfC,EAAkB,EACM,GACtBC,EAAYjW,OAAOqQ,OAAO0B,GAAM7R,OAChCgW,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItB/N,EAAa,CACjBkO,OAAO,CACLhX,KAAM,OACN2V,OAAQ,kBAEVsB,OAAO,CACLjX,KAAM,SACNkX,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAhN,GAAK,OAAIL,EAAKzK,cAAcW,YAAYmK,EAAMoM,IACtDa,WAAY9X,KAAKE,MAAM4C,SAAW,KAAO,CACvCiV,OAAQ,GACRC,SAAS,EACTC,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,WAAW,YACXC,eAAgB,SAChBjC,OAAQ,SAACvL,GACP,GAAIwM,IAAoBE,IAAkB,EACxC,OAAO/M,EAAKzK,cAAciT,YAAYnI,EAAM,oBAAoBuL,OAAO,YAI7Ee,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUxY,KAAKE,MAAM4C,SAAW,KAAO,CACrCiV,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAzL,GAAC,OAAIH,EAAKzK,cAAca,iBAAiB+J,EAAE,KAErDZ,SAAQ,EACR2O,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBnS,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACdqT,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAE/M,KAAM,QAASE,UAAW,IACvC8M,YAAqC,UAAzBpZ,KAAKE,MAAMqQ,UAAwB,GAAM,GACrD3J,MAAM,CACJyS,KAAM,CACJC,MAAO,CACL9T,KAAM,CACJE,SAAS,GACTC,WAAW,IACX4T,KAAKvZ,KAAKE,MAAM0G,MAAMC,OAAOkR,OAC7B1M,WAAWrL,KAAKE,MAAM0G,MAAM0E,MAAMC,aAIxCiO,KAAM,CACJC,KAAM,CACJC,OAAQ1Z,KAAKE,MAAM0G,MAAMC,OAAO8S,gBAAiBC,gBAAiB,SAaxErN,OAAQvM,KAAKE,MAAM4C,SAAW,CAAE0J,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHkN,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEpY,EAAAC,EAAAC,cAACmY,EAAA,EAAD,CACEH,MAAOA,GAEPlY,EAAAC,EAAAC,cAACoY,EAAA,EAAD,CACEvU,MAAOmU,EAAMnU,MACbgI,MAAOmM,EAAMK,QACbvP,MAAK,KAAApH,OAAOsW,EAAMxP,KAAK8P,cAGO,kBAAxBN,EAAMxP,KAAKqM,UAAyBvV,OAAOC,KAAKyY,EAAMxP,KAAKqM,UAAUrV,OAAO,GAClFF,OAAOC,KAAKyY,EAAMxP,KAAKqM,UAAU3T,IAAI,SAAAC,GACnC,GAAIA,IAAU6W,EAAMK,QAClB,OAAO,KAET,IAAMxU,EAAQ4E,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,QAAQ,QACzFrD,EAAUuH,EAAMxP,KAAKqM,SAAS1T,GAChCoX,EAAmB9P,EAAKzK,cAAcW,YAAY8R,EAAQ,GAC9D,OAAIpF,WAAWoF,IAAU,IAErB3Q,EAAAC,EAAAC,cAACoY,EAAA,EAAD,CACEvM,MAAO1K,EACP0C,MAAOA,EACP9B,IAAG,OAAAL,OAASP,GACZ2H,MAAK,KAAApH,OAAO6W,KAIX,UAQnBta,KAAKiI,SAAS,CACZqB,YACAC,mJAKF,OACE1H,EAAAC,EAAAC,cAACwY,EAAA,EAADlZ,OAAAuB,OAAA,CACEnC,KAAM+Z,IACN/L,YAAY,GACRzO,KAAKoC,MAAMmH,WAHjB,CAIEgB,KAAMvK,KAAKoC,MAAMkH,UACjBmR,SAAUza,KAAKE,MAAMua,SACrBpV,OAAQrF,KAAKE,MAAM2P,YACnB6K,eAAgB1a,KAAKE,MAAMwa,yBAxfLxY,aA8ffwN,26LC/fTiL,6MAEJvY,MAAQ,KAGRrC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAK4a,sMAGYvY,EAAWC,+EAClCtC,KAAKI,YAECya,EAAuBxY,EAAUuH,gBAAkB5J,KAAKE,MAAM0J,cAC9DkR,EAAiB7K,KAAKC,UAAU7N,EAAU0Y,WAAa9K,KAAKC,UAAUlQ,KAAKE,MAAM6a,SACjFC,EAAsB/K,KAAKC,UAAU7N,EAAU4Y,gBAAkBhL,KAAKC,UAAUlQ,KAAKE,MAAM+a,cAC3FC,EAAoB7Y,EAAU8Y,oBAAsBnb,KAAKE,MAAMib,mBAAqB9Y,EAAU+Y,uBAAyBpb,KAAKE,MAAMkb,sBAEpIN,GAAkBD,GAAwBG,GAAuBE,IACnElb,KAAK4a,uSAMDS,EAAmB,SAAAnb,GACvB,IAAMob,EAAYja,OAAOuB,OACvB1C,EAAMqb,WACN,CACE9Z,EAAG,EACHR,MAAO,EACPqF,MAAO,CAAE8I,OAAQ,YAElB/O,EAAKH,MAAMqb,WAAalb,EAAKH,MAAMqb,WAAa,IAMnD,OAHIrb,EAAMsb,aACRF,EAAUnM,UAAY9O,EAAKH,MAAMub,SAAW,EAAI,GAGhD5Z,EAAAC,EAAAC,cAAC2Z,EAAA,EAAD,CACEJ,UAAWA,EACXK,eAAetb,EAAKH,MAAM0b,gBAE1B/Z,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPoE,OAAQ,OACRnE,WAAY,SACZC,cAAe,OAEdjB,EAAM2b,YAMTC,EAA2B,SAAA5b,GAAK,OAAI,MAEpC6b,EAAa,SAAA7b,GACjB,IAAMob,EAAYja,OAAOuB,OAAO1C,EAAMqb,WAAY,CAChDS,GAAI,EACJ9N,OAAQ,EACRiB,UAAW,KACXlB,SAAU,WACVgB,gBAAiB5O,EAAKH,MAAM+b,WAAa5b,EAAKH,MAAM+b,WAAa,WAEnE,OACEpa,EAAAC,EAAAC,cAAC2Z,EAAA,EAAD,CACEJ,UAAWA,GAEVpb,EAAM2b,WAKPT,EAAuBpb,KAAKE,MAAMkb,qBAAuBpb,KAAKE,MAAMkb,qBAAuB,SAAAlb,GAC/F,OACE2B,EAAAC,EAAAC,cAACiM,EAAA,EACK9N,EAAMqb,WAEV1Z,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfU,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACErI,WAAY,GAEXzF,EAAMgc,YAAYrR,MAAM+C,UAO7BuN,EAAoBnb,KAAKE,MAAMib,kBAAoBnb,KAAKE,MAAMib,kBAAoB,SAACjb,GACvF,OACE2B,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfU,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACG9N,EAAM0N,SAMTuO,EAAuBnc,KAAKE,MAAMic,qBAAuBnc,KAAKE,MAAMic,qBAAuB,SAACjc,GAEhG,OAAKA,EAAMgc,YAAYE,aAKrBva,EAAAC,EAAAC,cAACiM,EAAA,EAAD3M,OAAAuB,OAAA,GACM1C,EADN,CAEEwF,SAAUrF,EAAKH,MAAM0G,MAAMyV,UAAU,GACrCzW,MAAOvF,EAAKH,MAAM0G,MAAMC,OAAOyV,UAC/B3W,WAAYtF,EAAKH,MAAM0G,MAAM2V,YAAY,GACzClR,WAAYhL,EAAKH,MAAM0G,MAAM0E,MAAMC,UACnC0D,gBAAiB5O,EAAKH,MAAM0G,MAAMC,OAAOsE,OACzCrC,UAAW,CAACC,IAAOyT,YAAsC,SAAzBnc,EAAKH,MAAMqQ,UAAuBxH,IAAO0T,KAAO,KAAOvc,EAAMgc,YAAYV,WAAwC,KAA3BzS,IAAO2T,sBAXxH,MAgBLC,EAAe,SAACzc,GAEpB,IAAM6a,EAAU7a,EAAMgc,YAAYnB,QAC9B6B,EAAgB1c,EAAMgc,aAAehc,EAAMgc,YAAYrR,OAAS3K,EAAMgc,YAAYrR,MAAMA,MAQ5F,OALI+R,IAAuE,IAAtD7B,EAAQ9X,IAAI,SAAA4Z,GAAC,OAAIA,EAAEhS,QAAOiS,QAAQF,IAAyBvc,EAAKH,MAAM+a,eACzF2B,EAAgBvc,EAAKH,MAAM+a,aAAapQ,OAItC+R,GAAiBA,IAAkB1c,EAAM2K,MACpC,KAMPhJ,EAAAC,EAAAC,cAACiM,EAAA,EAAD3M,OAAAuB,OAAA,CACEoM,GAAI,EACJD,GAAI,EACJ9N,MAAO,GACHf,EAAMqb,WAJZ,CAKEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAE8I,OAAQ,WACjBhO,eAAgB,aAChB0H,UAAWC,IAAOgU,gBAClB9N,gBAAiB5O,EAAKH,MAAM8c,YAAc,SAAY9c,EAAM+c,UAAY,kBAAoB,aAE5Fpb,EAAAC,EAAAC,cAACoZ,EACKjb,cAMNF,KAAKiI,SAAS,CAClB8T,aACAY,eACAtB,mBACAD,uBACAe,uBACAL,gKAIK,IAAAtR,EAAAxK,KACDoc,EAAkD,qBAA5Bpc,KAAKE,MAAMkc,cAA+Bpc,KAAKE,MAAMkc,aACjF,OACEva,EAAAC,EAAAC,cAACmb,EAAA,EAAD,CACEzV,KAAMzH,KAAKE,MAAMuH,KACjB2U,aAAcA,EACdrB,QAAS/a,KAAKE,MAAM6a,QACpBE,aAAcjb,KAAKE,MAAM+a,aACzBkC,SAAU,SAAAxS,GAAC,OAAIH,EAAKtK,MAAMid,SAASxS,EAAEE,QACrCuS,WAAY,CACVC,KAAMrd,KAAKoC,MAAM2Z,WACjBuB,OAAQtd,KAAKoC,MAAMua,aACnBY,QAASvd,KAAKoC,MAAMiZ,iBACpBmC,MAAOxd,KAAKoC,MAAM+Z,qBAClBsB,YAAazd,KAAKoC,MAAMgZ,qBACxBsC,mBAAoB1d,KAAKoC,MAAM0Z,mCAxMX5Z,aA+MfyY,+GClNTgD,mLAEF,IAAMrC,EAAYja,OAAOuB,OACvB,CACEmM,GAAI,EACJ9N,MAAO,OACP+N,GAAI,CAAC,OAAQ,IAEfhP,KAAKE,MAAMob,WAGb,OACEvW,EAAAjD,EAAAC,cAAC6b,EAAA,EAAD,CACEtC,UAAWA,EACXK,eAAe,EACfkC,SAAU7d,KAAKE,MAAM2d,SACrBC,WAAY9d,KAAKE,MAAM4d,WACvB7Y,YAAajF,KAAKE,MAAM+E,YACxBgK,gBAAiB,QAEjBlK,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEgE,GAAIhJ,KAAKE,MAAMqM,OAASvM,KAAKE,MAAMqM,OAAS,EAC5CuC,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAM6d,MAAQ/d,KAAKE,MAAM6d,MAAQ,UAErD/d,KAAKE,MAAM8d,MACVjZ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEmb,MAAO,SACP1P,IAAKrO,KAAKE,MAAM8d,MAChB3Y,OAAQrF,KAAKE,MAAM4C,SAAW,QAAU,QACxC7B,MAAOjB,KAAKE,MAAM4C,SAAW,QAAU,SACnC9C,KAAKE,MAAM+d,aAEfje,KAAKE,MAAMge,YACbnZ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEmb,MAAO,SACPtW,KAAMzH,KAAKE,MAAM6N,KACjBrG,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC8C,MAAO5F,KAAKE,MAAMie,UAAYne,KAAKE,MAAMie,UAAY,UACjDne,KAAKE,MAAMke,YAGjBrZ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEqZ,GAAIre,KAAKE,MAAMoe,UAAY,EAAI,EAC/B7c,EAAGzB,KAAKE,MAAMoe,UAAY,EAAI,CAAC,MAAO,OACtCpX,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBACEjP,KAAKE,MAAMqe,YACPve,KAAKE,MAAMqe,YACXve,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAaC,SAASC,QAGpD3Z,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEmb,MAAO,SACPtW,KAAMzH,KAAKE,MAAM6N,KACjBrG,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC8C,MAAO5F,KAAKE,MAAMie,UAAYne,KAAKE,MAAMie,UAAY,UACjDne,KAAKE,MAAMke,aAIrBrZ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CAAM+C,WAAY,EAAGD,SAAU,CAAC,EAAG,IAAQ1F,KAAKE,MAAMye,WACnD3e,KAAKE,MAAMsF,eAlEKtD,aA0Edyb,0rLCzETiB,6MAEJxc,MAAQ,CACNyc,SAAS,KACTC,WAAW,CACTC,OAAO,KACPC,SAAQ,MAKZjf,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAUC,mEACjCtC,KAAKI,qQAILJ,KAAKiI,SAAS,CACZ6W,WAAY,CACVC,OAAO,KACPC,SAAQ,qQAONhX,EAAW,SAAC4J,EAAGqN,GAKnB,IAAMC,EAAY,CAChBC,cAAe,cACfC,WAAY/e,EAAKH,MAAMmf,WACvBC,YAAajf,EAAKH,MAAMqf,cAGtBN,IACFC,EAAUE,WAAa/e,EAAKN,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrB1R,EAAKN,cAAc0f,yBAAyBP,GAG1BtN,GAAoB,YAAdA,EAAGG,QAEQ,oBAAxB1R,EAAKH,MAAM8H,UACpB3H,EAAKH,MAAM8H,SAAS4J,GAIxBvR,EAAK4H,SAAS,CACZ6W,WAAY,CACVC,OAAO,KACPC,SAAQ,GAEVH,SAASjN,EAAKA,EAAGG,OAAS,QAIxB2N,EAAkB,SAAC9N,GACvB,IAAMmN,EAASnN,EAAG+N,gBAClBtf,EAAK4H,SAAS,SAAC3F,GAAD,MAAgB,CAC5Buc,SAAS,aACTC,WAAWzd,OAAAwN,EAAA,EAAAxN,CAAA,GACNiB,EAAUwc,WADL,CAERC,eAKN/e,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5Buc,SAAS,UACTC,WAAWzd,OAAAwN,EAAA,EAAAxN,CAAA,GACNiB,EAAUwc,WADL,CAERE,SAAQ,OAIRY,EAAS5f,KAAKE,MAAM0f,OACuB,oBAApC5f,KAAKE,MAAM2f,qCACpBD,EAAS5f,KAAKE,MAAM2f,iDACqC,oBAAzC7f,KAAKE,MAAM4f,4DACZ9f,KAAKE,MAAM4f,oCAA1BF,iCACiD,kBAAjC5f,KAAKE,MAAM6f,oBAC3BH,EAAS5f,KAAKE,MAAM6f,8BAKjBH,GAAW5f,KAAKE,MAAMqf,qCACzBvf,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5Buc,SAAS,KACTC,WAAWzd,OAAAwN,EAAA,EAAAxN,CAAA,GACNiB,EAAUwc,WADL,CAERE,SAAQ,0BAGL,WAKLhf,KAAKE,MAAM8f,mBACbhgB,KAAKD,cAAckgB,0BAA0BjgB,KAAKE,MAAMqf,aAAavf,KAAKE,MAAMmf,WAAWO,EAAO5X,EAAS0X,EAAgB,MAAK,EAAKE,GAErI5f,KAAKD,cAAckgB,0BAA0BjgB,KAAKE,MAAMqf,aAAavf,KAAKE,MAAMmf,WAAWO,EAAO5X,EAAS0X,uIAK7G,IAAMQ,EAAmBlgB,KAAKE,MAAMgC,UACpC,OACEie,EAAAre,EAAAC,cAAC0G,EAAA,EACKzI,KAAKE,MAAMkgB,YAGW,YAAxBpgB,KAAKoC,MAAMyc,UAA0B7e,KAAKE,MAAM2b,SAC9C7b,KAAKE,MAAM2b,SACX7b,KAAKoC,MAAM0c,YAAc9e,KAAKoC,MAAM0c,WAAWE,QAC/CmB,EAAAre,EAAAC,cAACse,EAAA,EAADhf,OAAAuB,OAAA,CACE0d,KAAMtgB,KAAKE,MAAMogB,KACjBC,QAASvgB,KAAKE,MAAMqgB,SAChBvgB,KAAKE,MAAMsgB,iBAHjB,CAIE1Y,KAAM9H,KAAKoC,MAAM0c,WAAWC,OAC5B0B,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,MAC/C2gB,WAAU,cAAAld,OAAgBzD,KAAKE,MAAM4R,OAA3B,eACV8O,SAAQ,GAAAnd,OAAKzD,KAAKD,cAAc8N,WAAW7N,KAAKE,MAAM4R,QAA9C,oBAGVqO,EAAAre,EAAAC,cAACme,EAAD7e,OAAAuB,OAAA,CACEkD,QAAS9F,KAAK6gB,QAAQH,KAAK1gB,OACvBA,KAAKE,MAAM4gB,gBAEd9gB,KAAKE,MAAM4gB,eAAejW,eAtJR3I,aA+JlB0c,+GChKTmC,mLAGF,IAAMzF,EAAYja,OAAOuB,OAAO,CAC9BnB,EAAE,GACFzB,KAAKE,MAAMob,WACb,OACEvW,EAAAjD,EAAAC,cAAC6b,EAAA,EAAD,CACEtC,UAAWA,EACXuC,SAAU7d,KAAKE,MAAM2d,SACrBmD,UAAWhhB,KAAKE,MAAM8gB,UACtBrF,cAAe3b,KAAKE,MAAMyb,eAE1B5W,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACE9D,WAAY,SACZC,cAAe,UAEf4D,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACE8E,KAAM,QACN9B,MAAO,WACP6B,KAAMzH,KAAKE,MAAM6N,KAAO/N,KAAKE,MAAM6N,KAAO,eACtC/N,KAAKE,MAAMke,YAGfpe,KAAKE,MAAMsF,MACTT,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEoZ,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,SACXoB,wBAAyB,CACvBC,OAAOxP,KAAKE,MAAMsF,OAEhBxF,KAAKE,MAAMye,YAInB3e,KAAKE,MAAM2b,kBArCD3Z,aA6CP6e,grLC3CTE,6MACJ7e,MAAQ,CACN8e,QAAQ,EACRjC,MAAM,KACNkC,OAAM,EACNC,WAAW,EACXtC,YAAW,EACXuC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB5Z,oBAAqB,IAGrB7H,cAAgB,OAmChBqQ,uCAAoB,SAAAqR,IAAA,OAAAC,EAAA5f,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAClB5M,EAAK+c,kBADa,wBAAAD,EAAAhP,SAAA8O,EAAAzhB,WAIpB6hB,oCAAiB,SAAA1Q,IAAA,IAAA2Q,EAAA/Z,EAAA,OAAA2Z,EAAA5f,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAIsQ,QAAJ,eAAAC,EAAA3gB,OAAA4gB,EAAA,EAAA5gB,CAAAqgB,EAAA5f,EAAAoP,KAAa,SAAAgR,EAAOC,EAASC,GAAhB,OAAAV,EAAA5f,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OAEtC5M,EAAK3E,MAAMogB,KAAKgC,IAAIT,eAAehd,EAAK3E,MAAM4H,KAAK,SAACya,EAAIT,GACtDK,EAAQL,KAH4B,wBAAAO,EAAA1P,SAAAuP,EAAAliB,SAAb,gBAAAwiB,EAAAC,GAAA,OAAAT,EAAAnP,MAAA7S,KAAA8S,YAAA,IADZ,cACTgP,EADSvQ,EAAAgD,KAUTxM,EAAW,GACb+Z,EACF/Z,EAAS+Z,YAAcA,GAEvB/Z,EAAS+W,YAAa,EACtB/W,EAASkX,MAAQ,kCAGnBpa,EAAKoD,SAASF,GAlBCwJ,EAAAmR,OAAA,SAmBRZ,GAnBQ,wBAAAvQ,EAAAoB,SAAAxB,EAAAnR,WAqEjB2iB,kCAAe,SAAAzO,IAAA,IAAA0O,EAAAC,EAAA,OAAAnB,EAAA5f,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACIqR,IAAMC,IAAI,kDADd,YACPH,EADOxO,EAAAG,MAAA,CAAAH,EAAA3C,KAAA,eAGLoR,EAAYD,EAAGrY,KACrB1F,EAAKoD,SAAS,CACZ4a,cALSzO,EAAAsO,OAAA,SAOJG,GAPI,cAAAzO,EAAAsO,OAAA,SASN,MATM,wBAAAtO,EAAAzB,SAAAuB,EAAAlU,WAYfgjB,wCAAqB,SAAAC,IAAA,IAAAL,EAAAM,EAAA,OAAAxB,EAAA5f,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,cAAA0R,EAAA1R,KAAA,EACFqR,IAAMC,IAAI,qDADR,YACbH,EADaO,EAAA5O,MAAA,CAAA4O,EAAA1R,KAAA,eAGXyR,EAAeN,EAAGrY,KACxB1F,EAAKoD,SAAS,CACZib,iBALeC,EAAAT,OAAA,SAOVQ,GAPU,cAAAC,EAAAT,OAAA,SASZ,MATY,wBAAAS,EAAAxQ,SAAAsQ,EAAAjjB,WAYrBojB,mBAAqB,SAACC,GAEpB,GAAgC,YADTxe,EAAK9E,cAAcujB,qBACvBC,SACjB,OAAO,GAEP,IAAIC,EAAa,KAUjB,GATI3e,EAAKzC,MAAM8gB,cACbre,EAAKzC,MAAM8gB,aAAa1hB,QAAQ,SAACC,EAAEqL,GACjC,IAAK0W,GAAcpW,WAAW3L,EAAEgiB,WAAWrW,WAAWiW,GAEpD,OADAG,EAAa/hB,GACN,IAKToD,EAAKzC,MAAMygB,WAAaW,EAAW,CACrC,IAAME,EAAW7e,EAAK8e,cAAcH,EAAW3e,EAAKzC,MAAM0f,YAAY8B,KAGlEC,EAFeH,EAAS,GACN7e,EAAKzC,MAAMygB,UAAUiB,WAI3C,OAFAD,EAAa3R,SAAS2R,EAAWvW,QAAQ,IACzCzI,EAAK9E,cAAcgkB,UAAU,qBAAqBP,EAAW3e,EAAKzC,MAAM0f,YAAY8B,IAAIF,EAASG,GAC1FA,EAIX,OAAO,QAGTG,4CAAyB,SAAAC,IAAA,IAAAzC,EAAAD,EAAA8B,EAAAzP,EAAAsQ,EAAAC,EAAA/C,EAAA,OAAAM,EAAA5f,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UACnB+P,EAAgB,EAChBD,EAAgB,EAEf1c,EAAKzC,MAAM0f,cAAejd,EAAK+C,mBAJb,CAAAwc,EAAA3S,KAAA,eAAA2S,EAAA1B,OAAA,UAKd,GALc,OAQlB7d,EAAKzC,MAAM0f,YAAYuC,cACpBhB,EAAWjW,WAAWvI,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAM0f,YAAYuB,UAAUiB,IAAI,KAAKC,YAC/F/C,EAAgB3c,EAAKue,mBAAmBC,IAG1C9B,EAAgBC,GAAgC,EAE5C3c,EAAKzC,MAAMif,cACPzN,GAAgB,IAAIX,MAAOY,UAC3BqQ,EAAgBhS,UAAU0B,EAAc1B,SAASrN,EAAKzC,MAAMif,cAAc,KAGhFG,GAAiB0C,EACjB1C,EAAgBxP,KAAKqE,IAAImL,EAAc,GAEvC3c,EAAK9E,cAAcgkB,UAAU,iBAAiBxC,EAAc,gBAAgB2C,EAAc,qBAAqB1C,IAG3G2C,EAAa5C,EAAcC,EAC3BJ,EAAaG,EAAc,EAAInU,WAAW+W,EAAW5C,GAAiB,EAE5E1c,EAAKoD,SAAS,CACZsZ,gBACAC,gBACAJ,eAGFoD,WAAW,WAAK3f,EAAK4f,qBAAqB,KAnCnB,yBAAAL,EAAAzR,SAAAsR,EAAAjkB,WAsCzBykB,kBAAoB,WAElB,GAAI5f,EAAK+C,mBACP,OAAO,EAGT,IAAI4Z,EAAgB3c,EAAKzC,MAAMof,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM2C,EAAatf,EAAKzC,MAAMmf,cAAcC,EACtCJ,EAAahU,WAAW+W,EAAWtf,EAAKzC,MAAMmf,eACpD1c,EAAKoD,SAAS,CACZmZ,aACAI,kBAEFgD,WAAW,WAAK3f,EAAK4f,qBAAqB,UAX1C5f,EAAKoD,SAAS,CACZmZ,WAAW,EACXD,OAAM,SAYVtc,EAAKoD,SAAS,CACZmZ,WAAW,EACXD,OAAM,OAKZuD,+BAAY,SAAAC,IAAA,IAAAC,EAAA7F,EAAA8F,EAAAxD,EAAAtZ,EAAA+c,EAAAC,EAAA7B,EAAAL,EAAA,OAAAnB,EAAA5f,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UAGJmT,EAHI,oBAIJ7F,EAASla,EAAK3E,MAAM4H,KAAKoF,cAE3B2X,EAAoB,KACpBxD,EAAc,KACdtZ,EAAW,GAEXkd,eACFJ,EAAoBI,aAAaC,QAAQN,MAEvCC,EAAoB5U,KAAKkV,MAAMN,IAI9BA,GAAsBA,EAAkB9F,GAjBnC,CAAAiG,EAAAvT,KAAA,gBAkBR4P,GAAc,IAAIpO,MAAOY,UAlBjBmR,EAAAvT,KAAA,GAoB+BsQ,QAAQqD,IAAI,CACjDvgB,EAAKme,qBACLne,EAAK8d,iBAtBC,QAAAmC,EAAAE,EAAAzQ,KAAAwQ,EAAA1jB,OAAAgkB,EAAA,EAAAhkB,CAAAyjB,EAAA,GAoBD5B,EApBC6B,EAAA,GAoBYlC,EApBZkC,EAAA,IAyBRF,EAAoB,IACF9F,GAAU,CAC1BsC,cACAwB,YACAK,gBAIFre,EAAK9E,cAAculB,gBAAgBV,EAAiB3U,KAAKC,UAAU2U,IAEnE9c,EAAW8c,EAAkB9F,GAExBmE,GAAiBL,IACpB9a,EAASkX,MAAQ,0BAtCX,QA0CVpa,EAAKoD,SAASF,GA1CJ,yBAAAid,EAAArS,SAAAgS,EAAA3kB,WA6CZ4hB,qCAAkB,SAAA2D,IAAA,IAAAxd,EAAAmZ,EAAA,OAAAQ,EAAA5f,EAAAwP,KAAA,SAAAkU,GAAA,cAAAA,EAAAhU,KAAAgU,EAAA/T,MAAA,UAEX5M,EAAK3E,MAAM4H,MAASjD,EAAK3E,MAAMogB,KAFpB,CAAAkF,EAAA/T,KAAA,eAAA+T,EAAA9C,OAAA,UAGP,GAHO,cAMV3a,EAAW,CACfuZ,aAAY,GAEdzc,EAAKoD,SAASF,GATEyd,EAAA/T,KAAA,EAaU5M,EAAKgd,iBAbf,WAAA2D,EAAAjR,KAAA,CAAAiR,EAAA/T,KAAA,gBAAA+T,EAAA/T,KAAA,GAgBR5M,EAAK6f,YAhBG,QAiBd,IACE7f,EAAKmf,yBACL,MAAOzB,GACPxa,EAASkX,MAAQ,yBAInBpa,EAAKoD,SAASF,GAxBAyd,EAAA/T,KAAA,kBA0BRyP,EAAUrc,EAAKzC,MAAM8e,WACf,GACVrc,EAAKoD,SAAS,CACZiZ,WACA,WACAuE,OAAOjB,WAAW,WAChB3f,EAAK+c,mBACL,OAjCQ,yBAAA4D,EAAA7S,SAAA4S,EAAAvlB,oFAhRZA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oKAU9C,IAJAF,KAAK4H,oBAAqB,EAEtBlF,EAAK+iB,OAAOjB,WAAW,aAAe,GAEnC9hB,KACH+iB,OAAOC,aAAahjB,GAGxB+iB,OAAO7D,gBAAkB5hB,KAAK4hB,+JAI9B5hB,KAAKI,+FAGkBiC,mEACvBrC,KAAKI,aAEAJ,KAAKoC,MAAMkf,aAAethB,KAAKE,MAAMogB,MACxCtgB,KAAK4hB,2JAiCM4B,EAAYmC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYtC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFuC,EAPe,QACF,MAMQvC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBsC,EAbc,OACN,MAYYtC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EuC,EAVe,OAEG,KAQGvC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMwC,EAAO,GAAK,EADLhU,KAAKiU,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAe7T,KAAKiU,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAAcrC,EAAU,oBAAyBA,EAAU,WAAgBoC,iDAmNnF,GAAI5lB,KAAKoC,MAAMof,cAAc,GAAG,CAC9B,IAAM0E,EAAUlU,KAAKgF,MAAMhX,KAAKoC,MAAMof,cAAc,IAC9C2E,EAAUnmB,KAAKoC,MAAMof,cAAuB,GAAR0E,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAOpmB,KAAKoC,MAAMof,cAAc,qCAI3B,IAAAnhB,EAAAL,KACDqmB,EAAiBrmB,KAAKD,cAAcujB,qBAC1C,OACEgD,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CAAMplB,cAAe,SAAUD,WAAY,UAEV,OAA7BlB,KAAKoC,MAAMof,cACTxhB,KAAKoC,MAAM+e,MACTmF,EAAAxkB,EAAAC,cAACykB,EAAA,EAAD,CACE7H,UAAW,CACTlZ,GAAG,EACHG,MAAM5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,aAEtDC,YAAWrlB,OAAAwN,EAAA,EAAAxN,CAAA,CACTqG,KAAK,QACF1H,KAAKE,MAAMwmB,aAEhB1lB,UAAW,CACTmN,UAAU,SACVjN,WAAW,SACXE,eAAe,UAEjBoE,KAAMxF,KAAKE,MAAMygB,WAAa3gB,KAAKE,MAAMygB,WAAa,8BAGxD2F,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACEnY,GAAI,EACJlN,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBklB,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CAAMnY,GAAI,EAAGxI,MAAQ5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,aAAezmB,KAAKE,MAAM0gB,SAAW5gB,KAAKE,MAAM0gB,SAAW,kBAA9H,IAAkJ0F,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAKI,KAAN,CAAW/gB,MAAQ5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,YAAa9gB,WAAY,GAAK3F,KAAK4mB,wBACtPN,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CAAU1b,MAAQ7K,KAAKoC,MAAMgf,cAIZ,OAArBphB,KAAKoC,MAAM6c,OAAmBjf,KAAKoC,MAAM0c,WAoBvCwH,EAAAxkB,EAAAC,cAACykB,EAAA,EAAD,CACE7H,UAAW,CACTlZ,GAAG,EACHG,MAAM5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,aAEtDC,YAAWrlB,OAAAwN,EAAA,EAAAxN,CAAA,CACTqG,KAAK,QACF1H,KAAKE,MAAMwmB,aAEhB1lB,UAAW,CACTmN,UAAU,SACVjN,WAAW,SACXE,eAAe,UAEjBoE,KAAOxF,KAAKoC,MAAM6c,MAAQjf,KAAKoC,MAAM6c,MAASjf,KAAKE,MAAM4H,KAAQ9H,KAAKE,MAAM2mB,eAAiB7mB,KAAKE,MAAM2mB,eAAiB,gCAAoC7mB,KAAKE,MAAM4mB,eAAiB9mB,KAAKE,MAAM4mB,eAAiB,2BAjCvNR,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACErlB,WAAY,SACZC,cAAe,UAEfmlB,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACE7e,KAAM,MACND,KAAM,UACN7B,MAAO,aAET0gB,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACEvK,GAAI,EACJtW,SAAU,EACVyI,UAAW,SACXvI,MAAO5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,YAEpDzmB,KAAKoC,MAAM6c,QAwBpBjf,KAAKE,MAAM4H,KACTwe,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACEvK,GAAI,EACJ+K,OAAQ,SACRlhB,WAAY,YACZmhB,IAAK,+BACLphB,MAAO5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,WACrDQ,KAAMjnB,KAAKD,cAAcmnB,2BAA2BlnB,KAAKE,MAAM4H,OAE/Dwe,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACErlB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBklB,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACE7gB,SAAU,EACVyI,UAAW,SACXvI,MAAO5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,YAHvD,WAKWzmB,KAAKD,cAAc8N,WAAWwY,EAAec,WAExDb,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACE9gB,GAAI,EACJiC,KAAM,SACND,KAAM,YACN7B,MAAO5F,KAAKE,MAAMumB,UAAYzmB,KAAKE,MAAMumB,UAAY,eAIjB,oBAAjCzmB,KAAKE,MAAMugB,kBAClB6F,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACEvK,GAAI,EACJiL,KAAI,qBACJnhB,QAAU,SAAAiB,GAAC,OAAI1G,EAAKH,MAAMugB,qBAC1B7a,MAAO5F,KAAKE,MAAMknB,gBAAkBpnB,KAAKE,MAAMknB,gBAAkB,WACjEvhB,WAAY7F,KAAKE,MAAMmnB,qBAAuBrnB,KAAKE,MAAMmnB,qBAAuB,aAEhFf,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACErlB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBklB,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACE7gB,SAAU,EACVyI,UAAW,SACXvI,MAAO5F,KAAKE,MAAMknB,gBAAkBpnB,KAAKE,MAAMknB,gBAAkB,YAHnE,sBAOAd,EAAAxkB,EAAAC,cAACwkB,EAAA,EAAD,CACE9gB,GAAI,EACJiC,KAAM,SACND,KAAM,SACN7B,MAAO5F,KAAKE,MAAMknB,gBAAkBpnB,KAAKE,MAAMknB,gBAAkB,eAIvE,aAzdcllB,aAgeb+e,wCCtef,IAAAqG,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtBrL,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCoL,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERzc,MAAO,CACL0c,MAAO,2CACPzc,UAAW,qCACX0c,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAClCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAkB,qBAC/BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPzhB,SAAU,IAEZP,OAAQ,CACNiiB,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKtM,KAAK,GAC1B4M,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXnN,UAAW,UACXoN,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIPjlB,KAAM,UACNJ,OAAQ,UACRslB,QAAS,UACTC,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACdtR,gBAAiB,UACjBuR,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVzkB,QAAS,UACT0kB,SAAU,UACVvD,QAAS,UACTvJ,OAAQ,UACRzY,KAAM,UACNwlB,QAAS,UACTC,QAAS,UACT3T,OAAQ,UACR4T,OAAQ,OACRC,UAAW,UACXzgB,OAAQ,OACR0gB,WAAY,UACZC,gBAAiB,OACjBC,eAAgB,UAChBC,eAAgB,UAChBC,gBAAiB,wCACjBC,YAAa,UACbC,WAAY,OACZC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,WAAY,UACZ/N,aAAc,CACZ1M,OAAQ,CACN0a,KAAM,UACNC,KAAM,UACNC,MAAO,UACPhO,OAAQ,UACRiO,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBzO,SAAU,CACR+N,KAAM,UACNC,KAAM,UACNC,MAAO,UACPhO,OAAQ,UACRiO,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBnb,OAAQ,CACNob,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJpjB,MAAO8nB,YAAM,GAAK,QAClBze,gBAAiB0e,YAAK,GAAK,QAC3BthB,YAAa,QAEfuhB,QAAS,CACPhoB,MAAO8nB,YAAM,GAAKjD,IAAMzB,MACxB/Z,gBAAiB0e,YAAK,GAAKlD,IAAMzB,MACjC3c,YAAaoe,IAAMzB,MAErB6E,QAAS,CACPjoB,MAAO8nB,YAAM,GAAKI,IAAO9E,MACzB/Z,gBAAiB0e,YAAK,GAAKG,IAAO9E,MAClC3c,YAAayhB,IAAO9E,MAEtB+E,OAAQ,CACNnoB,MAAO8nB,YAAM,GAAKM,IAAIhF,MACtB/Z,gBAAiB0e,YAAK,GAAKK,IAAIhF,MAC/B3c,YAAa2hB,IAAIhF,MAEnBiF,KAAM,CACJroB,MAAO8nB,YAAM,GAAK3E,IAAKC,MACvB/Z,gBAAiB,UACjB5C,YAAa,YAGjB6hB,QAAS,CACPpF,QAAS,CACPljB,MAAOmjB,IAAKvjB,KACZyJ,gBAAiB8Z,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKvjB,MAE3B6oB,OAAQ,CACNzoB,MAAOgkB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAMjlB,MAE5BuoB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAIxoB,OAG5B8oB,YAAa,CACXC,MAAO,CACL7oB,SAAU,UACVL,OAAQ,OACRgC,SAAU,OACVmnB,QAAS,UAEXC,OAAQ,CACN/oB,SAAU,OACVL,OAAQ,OACRgC,SAAU,QAEZqnB,MAAO,CACLhpB,SAAU,SACVL,OAAQ,OACRgC,SAAU,OACVH,aAAc,oHC5OdynB,6MACJvsB,MAAQ,CACNnB,MAAM,KACNoE,OAAO,QAGTuC,oBAAqB,sFAGnB6d,OAAOmJ,iBAAiB,SAAU5uB,KAAK6uB,uBAAuBnO,KAAK1gB,sDAInEA,KAAK4H,oBAAqB,EAC1B6d,OAAOqJ,oBAAoB,SAAU9uB,KAAK6uB,oEAI1C7uB,KAAK6uB,oEAGYxsB,GACbA,EAAUS,WAAa9C,KAAKE,MAAM4C,UACpC9C,KAAK6uB,0EAKP,GAAI7uB,KAAK4H,mBACP,OAAO,EAGT,IAAMG,EAAQ1G,OAAAwN,EAAA,EAAAxN,CAAA,GAAOrB,KAAKoC,OAE1B,GAAIpC,KAAKE,MAAMua,SAAS,CACtB,IAAMsU,EAAiBC,SAASC,eAAejvB,KAAKE,MAAMua,UAC1D,GAAIsU,EAAe,CACjB,IAAMG,EAAa9hB,WAAW2hB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAennB,EAAS9G,QACxC8G,EAAS9G,MAAQiuB,IASvB,IAJKnnB,EAAS9G,OAASjB,KAAKE,MAAMe,OAASjB,KAAKE,MAAMe,QAAU8G,EAAS9G,QACvE8G,EAAS9G,MAAQjB,KAAKE,MAAMe,OAG1BjB,KAAKE,MAAMwa,eAAe,CAC5B,IAAM0U,EAAkBJ,SAASC,eAAejvB,KAAKE,MAAMwa,gBAC3D,GAAI0U,EAAgB,CAClB,IAAMvf,EAAczC,WAAWgiB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1Ftf,GAAeA,IAAgB9H,EAAS1C,SAC1C0C,EAAS1C,OAASwK,EACb9H,EAAS9G,QACZ8G,EAAS9G,MAAQ4O,MAMpB9H,EAAS1C,QAAUrF,KAAKE,MAAMmF,QAAUrF,KAAKE,MAAMmF,SAAW0C,EAAS1C,SAC1E0C,EAAS1C,OAASrF,KAAKE,MAAMmF,QAG/B0C,EAAS1C,OAAS0C,EAAS1C,QAAU0C,EAAS9G,MAE1CI,OAAOC,KAAKyG,GAAUxG,OAAO,GAC/BvB,KAAKiI,SAASF,oCAKhB,IAAMsnB,EAAYrvB,KAAKE,MAAMO,KAEvB4E,EAASrF,KAAKoC,MAAMiD,SAAW7E,MAAMR,KAAKoC,MAAMiD,QAAU6M,SAASlS,KAAKoC,MAAMiD,QAAU,IACxFpE,EAAQjB,KAAKoC,MAAMnB,QAAUT,MAAMR,KAAKoC,MAAMnB,OAASiR,SAASlS,KAAKoC,MAAMnB,OAAS,EAEtFsI,EAAalI,OAAOuB,OAAO,GAAG5C,KAAKE,OAOvC,QANAqJ,EAAUlI,OAAAwN,EAAA,EAAAxN,CAAA,GACLkI,EADK,CAERlE,SACApE,WAGgBwN,YAAgBlF,EAAWgB,MAAStJ,GAAUoE,EAc5DrF,KAAKE,MAAMqK,MACbjD,EAAAxF,EAAAC,cAACstB,EACK9lB,GAfNjC,EAAAxF,EAAAC,cAACutB,EAAA,EAAD,CACEtuB,UAAW,CACTG,cAAc,MACdouB,UAAUlqB,GAEZqhB,YAAc1mB,KAAKE,MAAMwmB,YAAc1mB,KAAKE,MAAMwmB,YAAc,CAC9Dhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,UAAiCgqB,IAA1BxvB,KAAKE,MAAMuvB,WAA2BzvB,KAAKE,MAAMuvB,WAAa,iCAlGlDvtB,aA4GZysB,uJC5GTe,6MAEJttB,MAAQ,CACN2Y,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvBrb,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,gDAIhC,IAAAG,EAAAL,KACR+a,EAAU1Z,OAAOC,KAAKtB,KAAKE,MAAMsQ,iBAAiBvN,IAAI,SAAAC,GAE1D,MAAO,CACL2H,MAAM3H,EACN0K,MAAM1K,EACNC,YAJkB9C,EAAKH,MAAMsQ,gBAAgBtN,MAQ3C+X,EAAejb,KAAKE,MAAM0J,cAAgBmR,EAAQ4U,KAAK,SAAAhlB,GAAC,OAAKA,EAAEE,MAAMgL,gBAAkBxV,EAAKH,MAAM0J,cAAciM,gBAAkB,KAyKxI7V,KAAKiI,SAAS,CACZ8S,UACAE,eACAE,kBA1KwB,SAAAjb,GACxB,IAAMgD,EAAQhD,EAAM2K,MACd1H,EAAcjD,EAAMqK,KAAKpH,YAE/B,OACEtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,UAEZW,EAAAC,EAAAC,cAAC6tB,EAAA,EAAD,CACE1sB,MAAOA,EACPC,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHpd,MAAM,MACNoE,OAAO,UAIbxD,EAAAC,EAAAC,cAAC6tB,EAAA,EAAD,CACE1sB,MAAOA,EACP2sB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,iBAMZvF,EAAK+B,MAAMlC,MAAM4vB,gBACfjuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC6tB,EAAA,EAADvuB,OAAAuB,OAAA,CACEM,MAAOA,GACH7C,EAAK+B,MAAMlC,MAFjB,CAGE2vB,UAAW,CACTpoB,KAAKpH,EAAK+B,MAAMlC,MAAM4vB,gBACtB5vB,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGVzC,YAAaA,EACbuN,QAASrQ,EAAK+B,MAAMlC,MAAMwQ,QAC1Bqf,WAAY1vB,EAAKH,MAAM6vB,WACvBC,cAAe3vB,EAAKH,MAAM8vB,kBAG5B3vB,EAAKH,MAAM+vB,aACbpuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC6tB,EAAA,EAADvuB,OAAAuB,OAAA,CACEM,MAAOA,GACH7C,EAAK+B,MAAMlC,MAFjB,CAGE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGVzC,YAAaA,EACbuN,QAASrQ,EAAK+B,MAAMlC,MAAMwQ,QAC1Bqf,WAAY1vB,EAAKH,MAAM6vB,WACvBC,cAAe3vB,EAAKH,MAAM8vB,oBA2FtC5U,qBAnF2B,SAAAlb,GAC3B,IACMgc,GAA4D,IADlDhc,EAAMgc,YAAYnB,QACN+B,QAAQ5c,EAAMgc,YAAYrR,OAAgB3K,EAAMgc,YAAYrR,MAAQoQ,EAEhG,IAAKiB,EACH,OAAO,KAGT,IAAMhZ,EAAQgZ,EAAYrR,MACpB1H,EAAc+Y,EAAY/Y,YAChC,OACEtB,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACE0D,MAAO,CACL4pB,KAAK,KAEP9uB,eAAgB,iBACZlB,EAAMqb,YAEV1Z,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACEnB,EAAG,EACHR,MAAO,GACHf,EAAMqb,WAHZ,CAIEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAC8I,OAAO,WACfhO,eAAgB,eAEhBS,EAAAC,EAAAC,cAAC6tB,EAAA,EAAD,CACE1sB,MAAOA,EACPC,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,UAIbxD,EAAAC,EAAAC,cAAC6tB,EAAA,EAAD,CACE1sB,MAAOA,EACP2sB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,iBAOZvF,EAAKH,MAAM+vB,aACTpuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC6tB,EAAA,EAADvuB,OAAAuB,OAAA,CACEM,MAAOA,GACH7C,EAAK+B,MAAMlC,MAFjB,CAGE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGVzC,YAAaA,EACbuN,QAASrQ,EAAK+B,MAAMlC,MAAMwQ,QAC1Bqf,WAAY1vB,EAAKH,MAAM6vB,WACvBC,cAAe3vB,EAAKH,MAAM8vB,2KAiBxChwB,KAAKI,YACLJ,KAAK4a,iBAEL5a,KAAKiI,SAAS,CACZ/H,MAAMF,KAAKE,6LAIUmC,EAAUC,yEACjCtC,KAAKI,YAECya,EAAuBxY,EAAUuH,gBAAkB5J,KAAKE,MAAM0J,eACrCqG,KAAKC,UAAU7O,OAAOC,KAAKe,EAAUmO,oBAAsBP,KAAKC,UAAU7O,OAAOC,KAAKtB,KAAKE,MAAMsQ,mBAClGqK,IAC5B7a,KAAK4a,uJAKP,OAAK5a,KAAKoC,MAAM2Y,SAAY/a,KAAKoC,MAAM6Y,cAAiBjb,KAAKoC,MAAM+Y,mBAAsBnb,KAAKoC,MAAMgZ,sBAAyBpb,KAAKE,MAAMsQ,iBAAoBnP,OAAOC,KAAKtB,KAAKE,MAAMsQ,iBAAiBjP,OAKlMM,EAAAC,EAAAC,cAACouB,EAAA,EAAD9uB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEuH,KAAM,SACNsT,QAAS/a,KAAKoC,MAAM2Y,QACpBQ,WAAYvb,KAAKE,MAAMqb,WACvBa,aAAcpc,KAAKE,MAAMkc,aACzBnB,aAAcjb,KAAKoC,MAAM6Y,aACzBrR,cAAe5J,KAAKE,MAAM0J,cAC1BuR,kBAAmBnb,KAAKoC,MAAM+Y,kBAC9BC,qBAAsBpb,KAAKoC,MAAMgZ,qBACjC+B,SAAWnd,KAAKE,MAAMid,SAAWnd,KAAKE,MAAMid,SAAWnd,KAAKE,MAAMkwB,eAd7D,YApOeluB,aAwPbwtB,4BC7PfvrB,EAAAC,QAAA,CAAkBisB,GAAA,6CCAlBlsB,EAAAC,QAAA,CAAkBksB,YAAA,+DCAlBnsB,EAAAC,QAAA,CAAkB2G,QAAA,wDCAlB5G,EAAAC,QAAA,CAAkBmsB,SAAA,0o7LCAlBpsB,EAAAC,QAAA,CAAkBosB,OAAA,27NCAlBrsB,EAAAC,QAAA,CAAkBqsB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,uLCEZC,mLAEF,OACE/rB,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACE3B,MAAO,EACPC,WAAY,SACZC,cAAe,OACXnB,KAAKE,MAAMc,WAEf+D,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACE+C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACH5F,KAAKE,MAAMye,WAEd3e,KAAKE,MAAMsF,MAEdT,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEmuB,UAAW,MACXC,QAAShxB,KAAKE,MAAM8wB,SAChBhxB,KAAKE,MAAM+wB,cAEflsB,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACE6C,GAAI,EACJa,MAAO,CACL8I,OAAO,WAET3H,KAAM,OACN7B,MAAO,YACP8B,KAAO1H,KAAKE,MAAM4C,SAAW,QAAU,OACnC9C,KAAKE,MAAMke,qBA9BDlc,aAsCX4uB,2BCxCf3sB,EAAAC,QAAA,CAAkBG,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,6MCMZusB,6MAEJ9uB,MAAQ,KAGRrC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kQAILJ,KAAKmxB,iMAGkB9uB,EAAWC,2EAClCtC,KAAKI,YAECgxB,EAAc/uB,EAAUyF,OAAS9H,KAAKE,MAAM4H,KAC5CupB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,SACnCrO,EAAUwtB,UAAUpoB,OAASzH,KAAKE,MAAM2vB,UAAUpoB,MACnD2pB,GAAeC,IACjCrxB,KAAKmxB,sQAKDtB,EAAY7vB,KAAKE,MAAM2vB,WACzB7vB,KAAKE,MAAM4H,OAAQ9H,KAAKE,MAAMwQ,8BACxBmf,EAAUpoB,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,kBAEA,+PAST,IAAIsG,EAAO,KACPnI,EAAQ,KACR0rB,EAAS,KACTC,EAAc,KACdpuB,EAAc,KACZ0sB,EAAY7vB,KAAKE,MAAM2vB,UACvB/N,EAAc9hB,KAAKE,MAAM4hB,YAC3B0P,EAAU5qB,IAAMC,OAAO2X,aAAaC,SAASqO,QAE3C2E,EAAa,CACjB9rB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACNU,MAAM,CACJC,SAAS,OACTC,SAAU,SACVE,aAAc,YAEhB1F,UAAU,CACRI,eAAe,eAWnB,OANIyuB,EAAU3vB,OAASmB,OAAOC,KAAKuuB,EAAU3vB,OAAOqB,QAClDF,OAAOC,KAAKuuB,EAAU3vB,OAAOsB,QAAQ,SAAAC,GACnCgwB,EAAWhwB,GAAKouB,EAAU3vB,MAAMuB,KAI5BouB,EAAUpoB,MAChB,IAAK,OAKH,OAJIqa,EAAYhQ,SACdlM,EAAQgB,IAAMC,OAAO2X,aAAa1M,OAAOgQ,EAAYhQ,OAAO5E,eAAiBtG,IAAMC,OAAO2X,aAAa1M,OAAOgQ,EAAYhQ,OAAO5E,eAAiBtH,EAClJ4rB,EAAU5qB,IAAMC,OAAO2X,aAAaC,SAASqD,EAAYhQ,OAAO5E,eAAiBtG,IAAMC,OAAO2X,aAAaC,SAASqD,EAAYhQ,OAAO5E,eAAiBskB,GAElJ1P,EAAYhQ,OAAO5E,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHa,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXujB,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAADrwB,OAAAuB,OAAA,CACEnB,EAAG,MACHyF,aAAc,OACVuqB,EAHN,CAIEvwB,WAAY,SACZ+N,gBAAiBuiB,EACjBpwB,eAAgB,WAEhBS,EAAAC,EAAAC,cAAC2vB,EAAA,EAAD,CACEjqB,KAAMsG,EACNnI,MAAOA,EACPmY,MAAO,SACPrW,KAAM1H,KAAKE,MAAM4C,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCgf,EAAYha,OACdwpB,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAAD,CACE3K,OAAQ,SACRC,IAAK,+BACLC,KAAMjnB,KAAKD,cAAcmnB,2BAA2BpF,EAAYha,OAEhEjG,EAAAC,EAAAC,cAAC4vB,EAAA,EAADtwB,OAAAuB,OAAA,CACE8C,SAAU,EACVE,MAAO,SACH6rB,EAHN,CAIEvpB,gBAAgB,EAChBJ,KAAMga,EAAYha,UAK5B,MACA,IAAK,SACH,IAAIgK,EAASgQ,EAAYhQ,OACzB,OAAQgQ,EAAYhQ,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKbwf,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAASD,EAAa3f,EAAO+D,eAElC,MACA,IAAK,OACH,IAAMM,EAAgB2L,EAAY9L,WAAWI,OAAO,gBACpDkb,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAASD,EAAatb,GAE3B,MACA,IAAK,aAEH,OADAvQ,EAAQgB,IAAMC,OAAO2X,aAAazM,OAAO+P,EAAY/P,OAAO7E,eACpD4U,EAAY/P,QAClB,IAAK,YACHhE,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXujB,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAADrwB,OAAAuB,OAAA,CACEnB,EAAG,CAAC,EAAE,OACNyF,aAAc,OACVuqB,EAHN,CAIEvwB,WAAY,SACZD,MAAO,CAAC,OAAO,QACfoE,OAAQ,CAAC,OAAO,QAChBjE,eAAgB,SAChBgE,OAASpF,KAAKE,MAAM4C,SAAX,aAAAW,OAAmCmC,GAAnC,aAAAnC,OAA0DmC,KAEnE/D,EAAAC,EAAAC,cAAC2vB,EAAA,EAAD,CACEjqB,KAAMsG,EACNnI,MAAOA,EACPmY,MAAO,SACPrW,KAAO1H,KAAKE,MAAM4C,SAAW,MAAQ,WAI7C,MACA,IAAK,SACHwuB,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAASD,EAAa3P,EAAY/P,QAEvC,MACA,IAAK,SACHuf,EACEzvB,EAAAC,EAAAC,cAAC6vB,EAAA,EAADvwB,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6BlxB,OAAQuhB,EAAY+P,UAErD,MACA,IAAK,YACLN,EAAczP,EAAYyP,YAAY1b,cAEpC,IAAMic,GADR3uB,EAAcnD,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS2b,MAClCpuB,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAsE8tB,EAAtE,QAChBD,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAADrwB,OAAAuB,OAAA,CAAOyL,IAAKyjB,GAAaL,IAE7B,MACA,IAAK,YACHF,EAAczP,EAAYyP,YAAY1b,cACtC1S,EAAcnD,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS2b,IACnED,EACEzvB,EAAAC,EAAAC,cAAC2vB,EAAA,EAASD,EAAatuB,GAAeA,EAAYyK,MAAQzK,EAAYyK,MAAQ2jB,GAElF,MACA,IAAK,SACH,IAAIQ,EAAkB,KAClBC,EAAchyB,KAAKD,cAAckyB,aAAapC,EAAU9pB,KAAK/F,KAAKE,MAAM4hB,aAC5E,OAAQ+N,EAAUpvB,MAChB,IAAK,SACHuxB,EAAchyB,KAAKD,cAAc8R,MAAMmgB,GAAazN,WACpDwN,EAAkBjyB,IAClB2xB,EAAWlxB,OAASyxB,EACpBA,EAAc,KAChB,MACA,IAAK,QACHD,EAAkBG,IAClBT,EAAWpjB,IAAM2jB,EACjBA,EAAc,KAChB,MACA,IAAK,OACHD,EAAkBI,IAClBV,EAAWhqB,KAAOuqB,EAClBA,EAAc,KAChB,MACA,QACED,EAAkB3rB,IAGtBkrB,EAASU,EACPnwB,EAAAC,EAAAC,cAACgwB,EAAoBN,EAAaO,GAChCnwB,EAAAC,EAAAC,cAACgwB,EAAoBN,GAK7B,OAAOH,SAhSoBpvB,aAoShBgvB,2/MC7DAkB,EApOb,SAAAA,EAAYlyB,GAAM,IAAA2E,EAAA7E,KAAAqB,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAAoyB,GAAApyB,KANlBE,MAAQ,GAMUF,KALlBsyB,UAAY,KAKMtyB,KAJlBmD,YAAc,KAIInD,KAHlBD,cAAgB,KAGEC,KAKlBC,SAAW,SAAAC,GACT2E,EAAK3E,MAAQA,EAET2E,EAAK9E,cACP8E,EAAK9E,cAAcE,SAAS4E,EAAK3E,OAEjC2E,EAAK9E,cAAgB,IAAII,EAAc0E,EAAK3E,OAG9C2E,EAAKytB,UAAYztB,EAAK9E,cAAc6V,gBAAgB,CAAC,aAAa,QAAQ,cAC1E/Q,EAAK1B,YAAc0B,EAAK9E,cAAc6V,gBAAgB,CAAC,YAAY/Q,EAAKytB,aAfxDtyB,KAkBlBuyB,WAlBkBlxB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAkBL,SAAAuQ,IAAA,IAAAjP,EAAA,OAAAigB,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EACS5M,EAAK9E,cAAc2yB,gBAAgB7tB,EAAKytB,UAAUztB,EAAK3E,MAAMwQ,SADtE,cACP8B,EADOmP,EAAApN,QAEK1P,EAAK9E,cAAc8R,MAAMW,GAAShS,UAChDgS,EAAU3N,EAAK9E,cAAc8R,MAAM,IAH1B8P,EAAAe,OAAA,SAKJlQ,GALI,wBAAAmP,EAAAhP,SAAA8O,EAAAzhB,SAlBKA,KA0BlB2yB,aA1BkB,eAAA1e,EAAA5S,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0BH,SAAAgR,EAAOla,EAAS0X,GAAhB,OAAA+S,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAAK,OAAA,SACN7d,EAAK9E,cAAckgB,0BAA0B,eAAgB,QAAS,GAAIjY,EAAU0X,IAD9E,wBAAA2C,EAAA1P,SAAAuP,EAAAliB,SA1BG,gBAAAwiB,EAAAC,GAAA,OAAAxO,EAAApB,MAAA7S,KAAA8S,YAAA,GAAA9S,KA8BlB4yB,cA9BkBvxB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA8BF,SAAAC,IAAA,IAAAT,EAAAmiB,EAAAC,EAAAhgB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdf,GADqBA,EAAPoiB,EAAAvxB,OAAA,QAAAiuB,IAAAsD,EAAA,GAAAA,EAAA,GAAe,OACCjuB,EAAK3E,MAAMwQ,QAD3Ba,EAAAE,KAAA,EAES5M,EAAK9E,cAAcgzB,oBAAoBluB,EAAKytB,UAAU,gBAAgB,CAAC5hB,IAFhF,YAEVmiB,EAFUthB,EAAAgD,MAAA,CAAAhD,EAAAE,KAAA,eAAAF,EAAAmR,OAAA,SAIL7d,EAAK9E,cAAc8R,MAAMghB,IAJpB,cAAAthB,EAAAmR,OAAA,SAMP,MANO,wBAAAnR,EAAAoB,SAAAxB,EAAAnR,SA9BEA,KAuClBgzB,iBAvCkB3xB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAuCC,SAAAgD,IAAA,OAAAue,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAAsO,OAAA,SACV7d,EAAK9E,cAAcgzB,oBAAoB,iBAAiB,sBAD9C,wBAAA3e,EAAAzB,SAAAuB,EAAAlU,SAvCDA,KA2ClBizB,mBA3CkB5xB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2CG,SAAA+R,IAAA,OAAAwP,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,cAAA0R,EAAAT,OAAA,SAOZ7d,EAAK9E,cAAc8R,MAAM,IAPb,wBAAAsR,EAAAxQ,SAAAsQ,EAAAjjB,SA3CHA,KAqDlBkzB,OArDkB,eAAAC,EAAA9xB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqDT,SAAA+S,EAAO/gB,EAAMC,GAAb,IAAA4S,EAAAqd,EAAAC,EAAAC,EAAAC,EAAAzO,EAAA0O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/gB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAAyBsE,EAAzB8d,EAAAtyB,OAAA,QAAAiuB,IAAAqE,EAAA,GAAAA,EAAA,GAAwC,MACzCT,EAAkBvuB,EAAK9E,cAAc6V,gBAAgB,CAAC,YAAY/Q,EAAKytB,aACxDwB,QAFd,CAAA1P,EAAA3S,KAAA,eAAA2S,EAAA1B,OAAA,UAGE,GAHF,cAMD2Q,EANC,cAAA5vB,OAM6BN,EAAY4wB,KAAK7wB,MAN9C,KAAAO,OAMuDsS,GAQ1Dud,EAAMzuB,EAAK9E,cAAc8R,MAAM,GAd5BuS,EAAA3S,KAAA,EAmBGsQ,QAAQqD,IAAI,CACpBvgB,EAAKmvB,gBAAgB7wB,GACrB0B,EAAK9E,cAAc8J,mBAAmB1G,GAAY,GAAM,KArBnD,UAAAowB,EAAAnP,EAAA7P,KAAAuQ,EAAAzjB,OAAA4yB,EAAA,EAAA5yB,CAAAkyB,EAAA,GAiBLC,EAjBK1O,EAAA,GAkBL2O,EAlBK3O,EAAA,IAwBH0O,IAAoBC,EAxBjB,CAAArP,EAAA3S,KAAA,YA0BCiiB,EAAiB7uB,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS,QAGvEG,EA7BA,CAAAqO,EAAA3S,KAAA,gBAAA2S,EAAA5S,KAAA,GAAA4S,EAAA3S,KAAA,GA+BsB5M,EAAK9E,cAAcm0B,yBAAyBR,EAAeN,GA/BjF,QA+BDrd,EA/BCqO,EAAA7P,KAAA6P,EAAA3S,KAAA,iBAAA2S,EAAA5S,KAAA,GAAA4S,EAAA+P,GAAA/P,EAAA,kBAmCErO,IAAkBA,EAAevV,UACpCuV,EAAiBlR,EAAK9E,cAAc8R,MAAM,IApCzC,WAwCAkE,IAAkBlR,EAAK9E,cAAc8R,MAAMkE,GAAgBqe,IAAI,GAxC/D,CAAAhQ,EAAA3S,KAAA,gBAAA2S,EAAA1B,OAAA,SAyCI7d,EAAK9E,cAAc8R,MAAM,IAzC7B,eAAAuS,EAAA3S,KAAA,GA4CmB5M,EAAK9E,cAAcs0B,oBAAoBZ,EAAgBa,0BAA0BpxB,EAAMC,GA5C1G,eA4CCwwB,EA5CDvP,EAAA7P,KA8CCqf,EAA4B/uB,EAAK9E,cAAc8R,MAAMkE,GAAgB1I,MAAMmmB,GACjFF,EAAMM,EAA0BtP,IAAIqP,GAAWtmB,MAAM,KA/ChD+W,EAAA1B,OAAA,SAmDE7d,EAAK9E,cAAciwB,cAAcqD,EAAcC,IAnDjD,eAAAlP,EAAA1B,OAAA,SAsDA4Q,GAtDA,yBAAAlP,EAAAzR,SAAAsR,EAAAjkB,KAAA,cArDS,gBAAA4S,EAAA4B,GAAA,OAAA2e,EAAAtgB,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+GlBu0B,SA/GkB,eAAAxP,EAAA1jB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+GP,SAAAyT,EAAO6P,GAAP,IAAAnB,EAAAtD,EAAA0E,EAAA,OAAAhC,EAAA3wB,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UAEH4hB,EAFG,gBAAA5vB,OAE6B+wB,GAGnB,QAFbzE,EAAalrB,EAAK9E,cAAc20B,8BAA8BrB,KAExCxuB,EAAK9E,cAAc8R,MAAMke,GAAYvvB,QALxD,CAAAwkB,EAAAvT,KAAA,eAAAuT,EAAAtC,OAAA,SAMA7d,EAAK9E,cAAc8R,MAAMke,IANzB,cAAA/K,EAAAvT,KAAA,EASc5M,EAAK9E,cAAcgzB,oBAAoB,iBAAiB,aAAa,CAACyB,IATpF,YASLC,EATKzP,EAAAzQ,OAWU1P,EAAK9E,cAAc8R,MAAM4iB,GAAYj0B,QAX/C,CAAAwkB,EAAAvT,KAAA,gBAYPgjB,EAAa5vB,EAAK9E,cAAc8R,MAAM4iB,GAZ/BzP,EAAAtC,OAAA,SAaA7d,EAAK9E,cAAc40B,8BAA8BtB,EAAcoB,EAAW,OAb1E,eAAAzP,EAAAtC,OAAA,SAeF,MAfE,yBAAAsC,EAAArS,SAAAgS,EAAA3kB,SA/GO,gBAAA40B,GAAA,OAAA7P,EAAAlS,MAAA7S,KAAA8S,YAAA,GAAA9S,KAiIlBg0B,gBAjIkB,eAAAa,EAAAxzB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAiIA,SAAAqU,EAAOpiB,GAAP,IAAAkwB,EAAAtD,EAAA0E,EAAAK,EAAAC,EAAA,OAAAtC,EAAA3wB,EAAAwP,KAAA,SAAAkU,GAAA,cAAAA,EAAAhU,KAAAgU,EAAA/T,MAAA,UAEV4hB,EAFU,uBAAA5vB,OAE6BN,EAAY4wB,KAAK7wB,OAE3C,QADb6sB,EAAalrB,EAAK9E,cAAc20B,8BAA8BrB,KACxCxuB,EAAK9E,cAAc8R,MAAMke,GAAYvvB,QAJjD,CAAAglB,EAAA/T,KAAA,eAAA+T,EAAA9C,OAAA,SAKP7d,EAAK9E,cAAc8R,MAAMke,IALlB,cAAAvK,EAAA/T,KAAA,EASS5M,EAAK0vB,SAASpxB,EAAY4wB,KAAK9mB,SATxC,YASVwnB,EATUjP,EAAAjR,MAAA,CAAAiR,EAAA/T,KAAA,YAcRqjB,EAAgBjwB,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,kBAG9Dmf,EAAelwB,EAAK9E,cAAc8R,MAAM4iB,GAAYpnB,MAAMxI,EAAK9E,cAAc8R,MAAMijB,IAAgBxQ,IAAI,MAExGzf,EAAK9E,cAAc8R,MAAMkjB,GAAcv0B,QAnB9B,CAAAglB,EAAA/T,KAAA,gBAAA+T,EAAA9C,OAAA,SAoBL7d,EAAK9E,cAAc40B,8BAA8BtB,EAAc0B,IApB1D,eAAAvP,EAAA9C,OAAA,SAwBT,MAxBS,yBAAA8C,EAAA7S,SAAA4S,EAAAvlB,SAjIA,gBAAAg1B,GAAA,OAAAH,EAAAhiB,MAAA7S,KAAA8S,YAAA,GAAA9S,KA4JlBi1B,oBA5JkB5zB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4JI,SAAAgkB,IAAA,IAAAxkB,EAAAF,EAAA2kB,EAAAC,EAAAC,EAAAC,EAAAxiB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOf,EAAP4kB,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,GAAAA,EAAA,GAAe,KAAK9kB,EAApB8kB,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,GAAAA,EAAA,GAAoC,KAAKH,EAAzCG,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,IAAAA,EAAA,GACf5kB,IACHA,EAAU7L,EAAK3E,MAAMwQ,UAElBF,GAAmB3L,EAAK3E,MAAM8T,mBACjCxD,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAGzDtD,GAAYF,EARG,CAAA+kB,EAAA9jB,KAAA,eAAA8jB,EAAA7S,OAAA,UASX,GATW,cAYd0S,EAAmBvwB,EAAK9E,cAAc01B,uBAExCJ,EAAaxwB,EAAK9E,cAAc8R,MAAM,GAdtB0jB,EAAA9jB,KAAA,GAed5M,EAAK9E,cAAc+Q,aAAazP,OAAOC,KAAKkP,GAA5C,eAAAklB,EAAAr0B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6D,SAAAykB,EAAOzyB,GAAP,IAAAC,EAAAyyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvD,EAAA3wB,EAAAwP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAC3DtO,EAAcqN,EAAgBtN,IAEb2B,EAAK9E,cAAckyB,aAAa,CAAC,iBAAiBmD,GAAkBvwB,EAAK1B,aAE7E+yB,SAAS/yB,EAAY4wB,KAAK7wB,OALoB,CAAA+yB,EAAAxkB,KAAA,eAAAwkB,EAAAvT,OAAA,wBAAAuT,EAAAxkB,KAAA,EAYvDsQ,QAAQqD,IAAI,CACpBvgB,EAAK0vB,SAASpxB,EAAY4wB,KAAK9mB,SAC/BpI,EAAK9E,cAAco2B,iBAAiBzlB,EAAQvN,KAdmB,OAAAyyB,EAAAK,EAAA1hB,KAAAshB,EAAAx0B,OAAA4yB,EAAA,EAAA5yB,CAAAu0B,EAAA,GAU/DE,EAV+DD,EAAA,GAW/DE,EAX+DF,EAAA,GAiB7DC,GAAaC,IACTC,EAAaF,EAAUzoB,MAAM0oB,GACnCV,EAAaA,EAAWhjB,KAAK2jB,IAnBkC,yBAAAC,EAAAtjB,SAAAgjB,EAAA31B,SAA7D,gBAAAo2B,GAAA,OAAAV,EAAA7iB,MAAA7S,KAAA8S,YAAA,IAfc,eAsChBqiB,IACFE,EAAaxwB,EAAK9E,cAAcsV,iBAAiBggB,EAAWxwB,EAAK1B,YAAYtC,UAC7Ew0B,EAAaxwB,EAAK9E,cAAcs2B,qBAAqBhB,EAAWxwB,EAAK1B,YAAYmzB,wBAxC/Df,EAAA7S,OAAA,SA2Cb2S,GA3Ca,yBAAAE,EAAA5iB,SAAAuiB,EAAAl1B,SA5JJA,KA0MlBu2B,UA1MkBl1B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0MN,SAAAslB,IAAA,IAAAhmB,EAAA8gB,EAAA7nB,EAAAgtB,EAAA3jB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,cAAOjB,EAAPimB,EAAAl1B,OAAA,QAAAiuB,IAAAiH,EAAA,GAAAA,EAAA,GAAuB,QAE/BjmB,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAE1Dsd,EAASzsB,EAAK9E,cAAc8R,MAAM,GAClCpI,EAAkB5E,EAAK9E,cAAc8R,MAAM,GALrC6kB,EAAAjlB,KAAA,EAMJ5M,EAAK9E,cAAc+Q,aAAazP,OAAOC,KAAKkP,GAA5C,eAAAmmB,EAAAt1B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6D,SAAA0lB,EAAO1zB,GAAP,IAAAC,EAAA0zB,EAAAC,EAAAC,EAAAtD,EAAA,OAAAhB,EAAA3wB,EAAAwP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,cAC3DtO,EAAcqN,EAAgBtN,GAD6B8zB,EAAAvlB,KAAA,EAEzBsQ,QAAQqD,IAAI,CAClDvgB,EAAKquB,OAAOhwB,EAAMC,GAClB0B,EAAK9E,cAAc8J,mBAAmB1G,GAAY,GAAM,KAJO,OAAA0zB,EAAAG,EAAAziB,KAAAuiB,EAAAz1B,OAAA4yB,EAAA,EAAA5yB,CAAAw1B,EAAA,GAE1DE,EAF0DD,EAAA,GAElDrD,EAFkDqD,EAAA,GAO7DC,GAAWtD,IACbnC,EAASA,EAAOjf,KAAK0kB,EAAQ1pB,MAAMomB,EAAgBhqB,kBACnDA,EAAkBA,EAAgB4I,KAAKohB,EAAgBhqB,kBATQ,wBAAAutB,EAAArkB,SAAAikB,EAAA52B,SAA7D,gBAAAi3B,GAAA,OAAAN,EAAA9jB,MAAA7S,KAAA8S,YAAA,IANI,cAmBVwe,EAASA,EAAOhN,IAAI7a,GAnBVitB,EAAAhU,OAAA,SAqBH4O,GArBG,wBAAAoF,EAAA/jB,SAAA6jB,EAAAx2B,SAzMVA,KAAKC,SAASC,oECGZg3B,EAAgBC,EAAQ,KAE9B1R,OAAO2R,SAAW,OAEZj3B,aAOJ,SAAAA,EAAYD,GAAO,IAAA2E,EAAA7E,KAAAqB,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAAG,GAAAH,KAJnBE,MAAQ,GAIWF,KAHnBq3B,aAAe,KAGIr3B,KAKnBC,SAAW,SAAAC,GACT2E,EAAK3E,MAAQA,GANIF,KAQnBs3B,QAAU,SAAAhV,GACR,OAAOzd,EAAKgN,MAAMyQ,GAAKhV,QAAQ,IATdtN,KAWnBu3B,KAAO,SAAAC,GAAC,OAAI,IAAI3yB,EAAK3E,MAAMogB,KAAKmX,MAAMC,GAAGF,IAXtBx3B,KAYnB23B,MAAQ,SAAAC,GACN,OAAK/yB,EAAK3E,MAAMogB,KAGTzb,EAAK3E,MAAMogB,KAAKmX,MAAMI,SAC1BD,GAAO,GAAGrT,WACX,SAJO,MAdQvkB,KAqBnB83B,MAAQ,SAAAxV,GACN,OAAKzd,EAAK3E,MAAMogB,KAGTzb,EAAK3E,MAAMogB,KAAKmX,MAAMK,OAC1BxV,GAAO,GAAGiC,WACX,SAJO,MAvBQvkB,KA8BnB+3B,WAAa,SAAAlH,GACX,IAAI9pB,EAAIioB,SAASjtB,cAAc,YAE/B,OADAgF,EAAEixB,UAAYnH,EACiB,IAAxB9pB,EAAEkxB,WAAW12B,OAAe,GAAKwF,EAAEkxB,WAAW,GAAGC,WAjCvCl4B,KAmCnBm4B,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IAnCZp4B,KAoCnB6R,MAAQ,SAAAumB,GAAC,OAAI,IAAIC,IAAuB,kBAAND,EAAiBA,EAAIE,OAAOF,KApC3Cp4B,KAqCnB+jB,UAAY,WAAc,QAAAwU,EAAAzlB,UAAAvR,OAAVrB,EAAU,IAAAs4B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVv4B,EAAUu4B,GAAA3lB,UAAA2lB,GAAMjrB,IAAckrB,KAAKC,iBAAiB9zB,EAAKkf,UAALlR,MAAAhO,EAAI,CAAW+zB,MAASxiB,OAAO,aAA3B3S,OAA2CvD,KArChGF,KAsCnB64B,eAAiB,WAAc,QAAAC,EAAAC,EAAAjmB,UAAAvR,OAAVrB,EAAU,IAAAs4B,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAV94B,EAAU84B,GAAAlmB,UAAAkmB,GAAMxrB,IAAckrB,KAAKO,gBAAeH,EAAAI,SAAQja,MAARpM,MAAAimB,EAAA,CAAcF,MAASxiB,OAAO,aAA9B3S,OAA8CvD,KAtClGF,KAuCnBm5B,kBAAoB,SAAC5Z,GAAmC,IAArB6Z,EAAqBtmB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAC7CsmB,EAAYA,GAAav0B,EAAK3E,MAAMqgB,QAAQ8Y,SAAS32B,GACrD,IAAI42B,EAAWz0B,EAAK3E,MAAMq5B,UAAU5J,KAAK,SAAA6J,GAAC,OAAIA,GAAKA,EAAE/xB,MAAQ+xB,EAAE/xB,OAAS8X,IAMxE,SAJE+Z,EADEz0B,EAAK3E,MAAMqgB,SAAW1b,EAAK3E,MAAMqgB,QAAQ8Y,UAAYx0B,EAAK3E,MAAMqgB,QAAQkZ,WAAa50B,EAAK3E,MAAMqgB,QAAQmZ,kBAAoBN,IAAcv0B,EAAK3E,MAAMqgB,QAAQkZ,QAAQ/2B,KAAOmC,EAAK3E,MAAMy5B,mBAAqB90B,EAAK3E,MAAMy5B,kBAAkBP,GAChOv0B,EAAK3E,MAAMy5B,kBAAkBP,GAAWzJ,KAAK,SAAA6J,GAAC,OAAIA,GAAKA,EAAE/xB,MAAQ+xB,EAAE/xB,OAAS8X,IAE5E1a,EAAK3E,MAAMq5B,UAAU5J,KAAK,SAAA6J,GAAC,OAAIA,GAAKA,EAAE/xB,MAAQ+xB,EAAE/xB,OAAS8X,MAK/D+Z,EAASA,UAlDCt5B,KAoDnB45B,8BAAgC,SAACpC,GAC/B,OAAOA,EAAEqC,QAAQ,YAAa,MAC3BA,QAAQ,OAAQ,IAChBA,QAAQ,QAAS,IACjBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAzDJ75B,KA2DnB6N,WAAa,SAACisB,GACZ,OAAOA,EAAMA,EAAI1T,OAAO,EAAG,GAAGvQ,cAAgBikB,EAAI1T,OAAO,GAAK,IA5D7CpmB,KA8DnBgT,YAAc,SAACyD,GAAwB,IAAlBL,EAAkBtD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAC5B,OAAO8lB,IAAOniB,EAAML,IA/DHpW,KAiEnB+5B,kBAAoB,SAACC,EAAMC,GAOzB,OANIA,GAAQ54B,OAAOC,KAAK24B,GAAM14B,QAC5BF,OAAOC,KAAK24B,GAAMz4B,QAAQ,SAAAC,GACxBu4B,EAAKv4B,GAAKw4B,EAAKx4B,KAIZu4B,GAxEUh6B,KA0EnBk6B,2BAA6B,SAACF,EAAMC,GAAuB,IAAjB/5B,EAAiB4S,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAYhD,OAXImnB,GAAQ54B,OAAOC,KAAK24B,GAAM14B,QAC5BF,OAAOC,KAAK24B,GAAMz4B,QAAQ,SAAAC,GACD,oBAAZw4B,EAAKx4B,GACdu4B,EAAKv4B,GAAKw4B,EAAKx4B,GAAGvB,GACU,kBAAZ+5B,EAAKx4B,GACrBu4B,EAAKv4B,GAALJ,OAAA84B,EAAA,EAAA94B,CAAA,GAAe24B,EAAKv4B,GAAOoD,EAAKq1B,2BAA2BF,EAAMC,EAAKx4B,GAAIvB,IAE1E85B,EAAKv4B,GAAKw4B,EAAKx4B,KAIdu4B,GAtFUh6B,KAwFnBo6B,UAAY,SAACC,GACX,IAAIC,EAAMtL,SAASjtB,cAAc,OAEjC,OADAu4B,EAAItC,UAAYqC,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IA3F1Bx6B,KA8FnBy6B,SAAW,SAACC,EAAIC,GACd,IAAMC,EAAQnV,OAAOoV,QACfC,EAASJ,EAAKE,EAEhBG,EAAc,EAElB/oB,KAAKgpB,cAAgB,SAAUC,EAAGC,EAAG1B,EAAGnvB,GAEtC,OADA4wB,GAAK5wB,EAAI,GACD,EAAUmvB,EAAI,EAAIyB,EAAIA,EAAIC,GAE1B1B,EAAI,KADZyB,GACsBA,EAAI,GAAK,GAAKC,IAGhB,SAAhBC,IACJJ,GAXgB,GAYhB,IAAIK,EAAMppB,KAAKgpB,cAAcD,EAAaH,EAAOE,EAAQH,GACzDlV,OAAOgV,SAAS,EAAGW,GACfL,EAAcJ,GAChBlV,OAAOjB,WAAW2W,EAfJ,IAmBlBA,IApHiBn7B,KAsHnBq7B,8BAAgC,SAAC5zB,GAAqC,IAA/B6zB,EAA+BxoB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAzB2S,OAAO8V,SAAStU,KAE3Dxf,EAAOA,EAAKoyB,QAAQ,UAAW,QAC/B,IACE2B,EADU,IAAIC,OAAO,OAASh0B,EAAO,qBACrBi0B,KAAKJ,GACvB,OAAKE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAG3B,QAAQ,MAAO,MAD5B,GADH,MA3HJ75B,KA+HnB47B,YAAc,SAAChqB,EAAIzO,GAEjB,IAAKA,EAAY4wB,KACf,OAAO,KAGT,IAAMS,EAAmBrxB,EAAY4wB,KAAK9mB,QACpC4uB,EAA2Bh3B,EAAK+Q,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnFkmB,EAAwB34B,EAAY44B,WAAa54B,EAAY44B,UAAUC,kBAAoB74B,EAAY44B,UAAUC,kBAAkB/uB,QAAU,KAC7IgvB,EAA4B94B,EAAY44B,WAAa54B,EAAY44B,UAAUC,mBAAqB74B,EAAY44B,UAAUC,kBAAkBE,aAAe/4B,EAAY44B,UAAUC,kBAAkBE,aAAe,GAC9MC,EAAiBt3B,EAAK+Q,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBzS,EAAY4wB,KAAK7wB,QAC/Gk5B,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkB/uB,QAAU,KAG7HovB,EADqBD,GAA8BxqB,EAAGxF,KAAKc,gBAAkBkvB,EAA2BlvB,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAC5M4uB,IAA0BlqB,EAAGxF,KAAKc,gBAAkB4uB,EAAsB5uB,gBAAuH,IAAtG+uB,EAA0Bh5B,IAAI,SAAC0H,GAAQ,OAAOA,EAAEuC,gBAAkB4P,QAAQlL,EAAGxF,KAAKc,iBAA0B0E,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,cACpSqvB,GAAoBF,GAAiBzqB,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,cACzJsvB,GAAuBH,GAAiBzqB,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,cAC1JuvB,GAAeJ,IAAkBE,IAAqBC,IAAwB5qB,EAAG8oB,GAAGxtB,gBAAkBsnB,EAAiBtnB,eAAkB2uB,GAA4BjqB,EAAG8oB,GAAGxtB,gBAAkB2uB,EAAyB5uB,QAAQC,eAC9NwvB,GAAcL,IAAkBE,IAAqBC,GAAuB5qB,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,cACvHyvB,GAAYN,IAAkBE,IAAqBC,IAAwBC,GAAe7qB,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,cAE9M4E,EAAS,KAkBb,OAhBI2qB,EACF3qB,EAAS,UACA4qB,EACT5qB,EAAS,SACAuqB,EACTvqB,EAAS,UACAyqB,EACTzqB,EAAS,OACA0qB,EACT1qB,EAAS,UACA6qB,EACT7qB,EAAS,OACA6qB,IACT7qB,EAAS,WAGJA,GAtKU9R,KAwKnBmI,YAAc,SAACL,GAAmC,IAA7B80B,EAA6B9pB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAlB,EAAG+pB,EAAe/pB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAN,EACtCgqB,EAAYh1B,EACVi1B,EAAUD,EAAU1W,OAAO,EAAGwW,GAC9BI,EAAQF,EAAU1W,OAAO0W,EAAUv7B,OAASs7B,GAElD,OADAC,EAAYC,EAAU,MAAQC,GA5Kbh9B,KAgLnBi9B,oBAAsB,SAACC,GACrB,IAAM5c,EAAOzb,EAAKs4B,kBAIlB,IAAK7c,IAASA,EAAKmX,QAAUnX,EAAK8c,iBAA2D,oBAAjC9c,EAAK8c,gBAAgBC,QAC/E,OAAO,EAMT,GAHAH,EAAUhrB,SAASgrB,IACGr4B,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBsnB,IAG1E,OAAO,EAGT,IAAMtd,EAAS,CAAC,CACdsd,QAAS5c,EAAKmX,MAAM6F,MAAMJ,KAG5B,OAAO5c,EAAK8c,gBAAgBC,QAAQ,CAClCzd,SACA2d,OAAQ,gCAtMOv9B,KA0MnBw9B,iBAAmB,SAACN,GAClB,IAAM5c,EAAOzb,EAAKs4B,kBAIlB,IAAK7c,IAASA,EAAKmX,QAAUnX,EAAK8c,iBAA2D,oBAAjC9c,EAAK8c,gBAAgBC,QAC/E,OAAO,EAGTH,EAAUhrB,SAASgrB,GACnB,IAAMO,EAAgB54B,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBsnB,IAE5E,IAAKO,EACH,OAAO,EAGT,GAAgB,IAAZP,EACF,OAAOr4B,EAAKo4B,oBAAoBC,GAGlC,IAAMQ,EAAYD,EAAcC,WAAaD,EAAch2B,KACrDk2B,EAAiB94B,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa6nB,EAAcla,WAC7Eqa,EAAmB/4B,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa6nB,EAActW,SAAU,UAAW+V,IAEpGtd,EAAS,CAAC,CACd8d,YACAG,QAAS,CAHKF,EAAeG,WAAaH,EAAeG,UAAUZ,IAAcS,EAAeI,IAAIb,GAAWS,EAAe75B,KAI9Ho5B,QAAS5c,EAAKmX,MAAM6F,MAAMJ,GAC1Bc,eAAgB,CACdn9B,SAAU,GACV4G,KAAMg2B,EAAcQ,UACpBC,OAAQT,EAAcQ,WAExBE,kBAAmB,CAACP,KAKtB,OAAOtd,EAAK8c,gBAAgBC,QAAQ,CAClCzd,SACA2d,OAAQ,6BAlPOv9B,KAqPnBoI,WArPmB,eAAA2I,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqPN,SAAAuQ,EAAOxU,GAAP,IAAAmsB,EAAAgF,EAAA/K,EAAAtD,EAAAsO,EAAA9a,EAAA+a,EAAAj2B,EAAAk2B,EAAA,OAAA9L,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAEL2nB,EAAYv0B,EAAK4wB,wBACjB2I,EAAYv5B,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,SAEjDke,SAAYsK,EAAUI,kBAAkBtI,SAASkD,GALrD,CAAAzX,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,SAMF,MANE,UASN7d,EAAK45B,aAAaxxB,IAAapI,EAAK3E,MAAMogB,KATpC,CAAAqB,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,SAUF,MAVE,UAaL2Q,EAbK,cAAA5vB,OAayBwJ,KAC9B8iB,EAAalrB,EAAK6vB,8BAA8BrB,IAd3C,CAAA1R,EAAAlQ,KAAA,gBAAAkQ,EAAAe,OAAA,SAgBFqN,GAhBE,WAmBLsO,EAAM,KACN9a,EAAW1e,EAAK3E,MAAMogB,KAAK8c,gBACf,IAAdhE,EArBO,CAAAzX,EAAAlQ,KAAA,gBAsBH6sB,EAAM,IAAII,IAAI,CAAEnb,WAAUob,WAAYC,wBAAcxF,EAAU7U,cAtB3D5C,EAAAlQ,KAAA,GAuBa6sB,EAAIO,QAAQ5xB,GAvBzB,aAuBH5E,EAvBGsZ,EAAApN,QAwBMlM,EAAQZ,KAxBd,CAAAka,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,GAyBoB6sB,EAAI72B,KAAKY,EAAQZ,MAAMq3B,aAzB3C,aAyBDP,EAzBC5c,EAAApN,OA0BatH,EAAQC,gBAAkBqxB,EAAarxB,cA1BpD,CAAAyU,EAAAlQ,KAAA,gBAAAkQ,EAAAe,OAAA,SA2BE7d,EAAK8vB,8BAA8BtB,EAAehrB,EAAQZ,KAAM42B,IA3BlE,eAAA1c,EAAAe,OAAA,SAgCJ,MAhCI,yBAAAf,EAAAhP,SAAA8O,EAAAzhB,SArPM,gBAAAwiB,GAAA,OAAAzR,EAAA8B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAuRnB++B,4BAvRmB19B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAuRW,SAAA+S,IAAA,IAAAzhB,EAAAkO,EAAAsuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzL,EAAA/gB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAAOjP,EAAPqxB,EAAAtyB,OAAA,QAAAiuB,IAAAqE,EAAA,GAAAA,EAAA,GAA2B,KAAMnjB,EAAjCmjB,EAAAtyB,OAAA,QAAAiuB,IAAAqE,EAAA,GAAAA,EAAA,GAA2C,KACjEmL,EAAY,CAChBxgB,aAAc,GACd+gB,eAAgB,GAChBC,gBAAiB,GACjBN,OAAQr6B,EAAKgN,MAAM,GACnBstB,aAAct6B,EAAKgN,MAAM,GACzButB,cAAev6B,EAAKgN,MAAM,GAC1BwtB,gBAAiBx6B,EAAKgN,MAAM,GAC5BytB,kBAAmBz6B,EAAKgN,MAAM,IAGhCrP,EAAoBA,GAAwCqC,EAAK3E,MAAMsC,mBACvEkO,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,UAExBlO,EAfW,CAAA4hB,EAAA3S,KAAA,eAAA2S,EAAA1B,OAAA,SAgBnBsc,GAhBmB,cAmBtBC,EAAWp6B,EAAK+Q,gBAAgB,CAAC,aAnBXwO,EAAA3S,KAAA,GAqBtB5M,EAAKiM,aAAazP,OAAOC,KAAKkB,GAA9B,eAAAwf,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAkD,SAAAgD,EAAO9Q,GAAP,IAAAa,EAAA,OAAAwuB,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAChDxN,EAAiBzB,EAAkBY,GADagR,EAAA3C,KAAA,EAEhD5M,EAAKiM,aAAazP,OAAOC,KAAK2C,GAA9B,eAAAw7B,EAAAp+B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+C,SAAAC,EAAOjO,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7CtO,EAAcc,EAAef,GADgBqO,EAAAE,KAAA,EAE7C5M,EAAKiM,aAAazP,OAAOC,KAAK29B,GAA9B,eAAAS,EAAAr+B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAyC,SAAAgR,EAAO3e,GAAP,IAAAG,EAAAyvB,EAAAI,EAAAoM,EAAAC,EAAAL,EAAAM,EAAA/a,EAAAC,EAAA+a,EAAAC,EAAAC,EAAAnL,EAAAoL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7N,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cACvC/N,EAAgBP,EAAYI,GADW8e,EAAA5Q,KAAA,EAQnCsQ,QAAQqD,IAAI,CACpBvgB,EAAK07B,mBAAmB78B,EAAc+D,KAAKiJ,GAC3C7L,EAAK27B,mBAAmBr9B,EAAaO,EAAegN,GACpD7L,EAAK47B,yBAAyB/vB,EAAQhN,EAAcA,EAAcg9B,UAAUC,SAC5E97B,EAAK+7B,wBAAwBl9B,EAAcm9B,WAAWp5B,KAAKiJ,EAAQ,KAAKhN,EAAcg9B,UAAUI,iBAZrD,UAAA3N,EAAA9Q,EAAA9N,KAAAgf,EAAAlyB,OAAA4yB,EAAA,EAAA5yB,CAAA8xB,EAAA,GAI3CwM,EAJ2CpM,EAAA,GAK3CqM,EAL2CrM,EAAA,GAM3CgM,EAN2ChM,EAAA,GAO3CsM,EAP2CtM,EAAA,GAezCqM,GAAmBA,EAAgBphB,eACrCwgB,EAAUxgB,aAAVnd,OAAA0/B,EAAA,EAAA1/B,CAA6B29B,EAAUxgB,cAAvC/a,OAAApC,OAAA0/B,EAAA,EAAA1/B,CAAwDu+B,EAAgBphB,gBAI1End,OAAOC,KAAKi+B,GAAgB/9B,QAAS,SAAAw/B,GAC9BhC,EAAUO,eAAeyB,KAC5BhC,EAAUO,eAAeyB,GAAe,CACtC5uB,YAAYvN,EAAKgN,MAAM,GACvBkE,eAAelR,EAAKgN,MAAM,GAC1BovB,qBAAqBp8B,EAAKgN,MAAM,KAGpC,IAAMO,EAAevN,EAAKgN,MAAM0tB,EAAeyB,IAAcxgC,QAAoDqE,EAAKgN,MAAM,GAArDhN,EAAKgN,MAAM0tB,EAAeyB,IACjGhC,EAAUO,eAAeyB,GAAa5uB,YAAc4sB,EAAUO,eAAeyB,GAAa5uB,YAAYC,KAAKD,OAGxGutB,GAAuB96B,EAAKgN,MAAM8tB,GAAqBlqB,GAAG,IAAQoqB,GAAwBh7B,EAAKgN,MAAMguB,GAAsBpqB,GAAG,IAhCtF,CAAA4M,EAAA5Q,KAAA,YAiC3CkuB,EAAsB96B,EAAKwQ,iBAAiBsqB,EAAoBj8B,EAAc7C,UAC9Eg/B,EAAuBh7B,EAAKwQ,iBAAiBwqB,EAAqBn8B,EAAc7C,UAChF8+B,EAAsBA,EAAoBttB,KAAKwtB,IAI3Ch7B,EAAKgN,MAAM8tB,GAAqBlqB,GAAG,GAvCI,CAAA4M,EAAA5Q,KAAA,gBAAA4Q,EAAA5Q,KAAA,GA2C/BsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAoB,eAAgB,GAAI99B,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,GACnG7L,EAAKq8B,oBAAoB,uBAAwB,GAAI99B,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,KA7CpE,WAAAoU,EAAAzC,EAAA9N,KAAAwQ,EAAA1jB,OAAA4yB,EAAA,EAAA5yB,CAAAyjB,EAAA,GAyCvCgb,EAzCuC/a,EAAA,GA0CvCgb,EA1CuChb,EAAA,GAgDpClgB,EAAKgN,MAAMiuB,GAAct/B,SAAYqE,EAAKgN,MAAMkuB,GAAav/B,QAhDzB,CAAA6hB,EAAA5Q,KAAA,gBAiDjCuuB,EAAeL,EAAoBtyB,MAAMyyB,GAjDRzd,EAAA5Q,KAAA,GAsD7BsQ,QAAQqD,IAAI,CACpBvgB,EAAKs8B,2BAA2BnB,EAAa78B,GAC7C0B,EAAKs8B,2BAA2BnB,EAAa1tB,MAAMstB,EAAgBU,iBAAiBn9B,GACpF0B,EAAKq8B,oBAAoB,aAAc,GAAI99B,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,KAzD5D,QAAAmkB,EAAAxS,EAAA9N,KAAA0rB,EAAA5+B,OAAA4yB,EAAA,EAAA5yB,CAAAwzB,EAAA,GAmDrCqL,EAnDqCD,EAAA,GAoDrCE,EApDqCF,EAAA,GAqDrCG,EArDqCH,EAAA,GA4DjCI,EAAYH,EAAsB5b,IAAIyb,GACtCO,EAAkBV,EAAgBwB,yBAIxCpC,EAAUQ,gBAAgBjyB,KAAK,CAC7BrK,QACAK,UACAH,WACAi9B,YACAD,aACAN,eACAK,kBACAG,kBACAX,sBACAE,uBACAG,aAAaE,IAMflB,EAAUG,aAAeH,EAAUG,aAAa9sB,KAAK6tB,GAlFd,yBAAA7d,EAAA1P,SAAAuP,EAAAliB,SAAzC,gBAAAwU,GAAA,OAAAkrB,EAAA7sB,MAAA7S,KAAA8S,YAAA,IAF6C,wBAAAvB,EAAAoB,SAAAxB,EAAAnR,SAA/C,gBAAA4S,GAAA,OAAA6sB,EAAA5sB,MAAA7S,KAAA8S,YAAA,IAFgD,wBAAAsB,EAAAzB,SAAAuB,EAAAlU,SAAlD,gBAAAyiB,GAAA,OAAAT,EAAAnP,MAAA7S,KAAA8S,YAAA,IArBsB,eAmHxBosB,EAASr6B,EAAKgN,MAAM,GACpBstB,EAAet6B,EAAKgN,MAAM,GAC1ButB,EAAgBv6B,EAAKgN,MAAM,GAC3BwtB,EAAkBx6B,EAAKgN,MAAM,GAC7BytB,EAAoBz6B,EAAKgN,MAAM,GAGnCmtB,EAAUQ,gBAAgBh+B,QAAQ,SAAA6/B,GAChC,IAAMjB,EAAav7B,EAAKgN,MAAMwvB,EAAYjB,YACpCkB,EAAgBD,EAAYrB,aAAa1b,IAAI0a,EAAUG,cAG7DkC,EAAYC,cAAgBA,EAExBD,EAAYlB,kBACdf,EAAgBA,EAAc/sB,KAAKgvB,EAAYlB,kBAG7CC,IACFlB,EAASA,EAAO7sB,KAAK+tB,EAAW/yB,MAAMi0B,KAGpCD,EAAYf,kBACdjB,EAAkBA,EAAgBhtB,KAAKgvB,EAAYf,kBAIjDe,EAAYrB,eACdb,EAAeA,EAAa9sB,KAAKgvB,EAAYrB,iBAI7CX,EAAgB5pB,GAAG,KACrB6pB,EAAoBF,EAAc9a,IAAI+a,GAAiBhyB,MAAM,MApJnC+W,EAAA3S,KAAA,GAwJtB5M,EAAKiM,aAAazP,OAAOC,KAAK09B,EAAUO,gBAAxC,eAAA7J,EAAAr0B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAyD,SAAA+R,EAAO+d,GAAP,IAAAO,EAAAC,EAAA,OAAA/O,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,YACvD8vB,EAAoB18B,EAAK+Q,gBAAgB,CAAC,YAAYorB,KACtC/Q,cAAe+O,EAAUO,eAAeyB,GAAa5uB,YAAYqD,GAAG,GAF7B,CAAA0N,EAAA1R,KAAA,eAAA0R,EAAA1R,KAAA,EAGnB5M,EAAK48B,8BAA8BF,GAHhB,OAGrDC,EAHqDre,EAAA5O,KAI3DyqB,EAAUO,eAAeyB,GAAajrB,eAAiByrB,EACvDxC,EAAUO,eAAeyB,GAAaC,qBAAuBjC,EAAUO,eAAeyB,GAAa5uB,YAAY/E,MAAMm0B,GAIrHrC,EAAeA,EAAa9sB,KAAK2sB,EAAUO,eAAeyB,GAAaC,sBATZ,wBAAA9d,EAAAxQ,SAAAsQ,EAAAjjB,SAAzD,gBAAA40B,GAAA,OAAAc,EAAA7iB,MAAA7S,KAAA8S,YAAA,IAxJsB,eAqK5BksB,EAAUE,OAASA,EACnBF,EAAUG,aAAeA,EACzBH,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAzKFlb,EAAA1B,OAAA,SA6KrBsc,GA7KqB,yBAAA5a,EAAAzR,SAAAsR,EAAAjkB,SAvRXA,KAscnB0hC,oBAtcmBrgC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAscG,SAAAykB,IAAA,IAAAnlB,EAAAE,EAAAsuB,EAAAjrB,EAAA4tB,EAAAl/B,EAAAy8B,EAAAE,EAAAC,EAAAC,EAAAsC,EAAA9uB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAAOjB,EAAPoxB,EAAArgC,OAAA,QAAAiuB,IAAAoS,EAAA,GAAAA,EAAA,GAAyB,KAAMlxB,EAA/BkxB,EAAArgC,OAAA,QAAAiuB,IAAAoS,EAAA,GAAAA,EAAA,GAAyC,KACvD5C,EAAY,CAChBpuB,cAAe,GACfixB,gBAAiB,GACjB3C,OAAQr6B,EAAKgN,MAAM,GACnBstB,aAAct6B,EAAKgN,MAAM,GACzButB,cAAev6B,EAAKgN,MAAM,GAC1BwtB,gBAAiBx6B,EAAKgN,MAAM,GAC5BytB,kBAAmBz6B,EAAKgN,MAAM,GAC9BiwB,sBAAuBj9B,EAAKgN,MAAM,IAGpCrB,EAAkBA,GAAoC3L,EAAK3E,MAAMsQ,iBACjEE,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,UAExBF,EAfG,CAAAylB,EAAAxkB,KAAA,eAAAwkB,EAAAvT,OAAA,SAgBXsc,GAhBW,cAmBdjrB,EAAyC,SAAhClP,EAAK3E,MAAM8T,iBAnBNiiB,EAAAxkB,KAAA,GAqBd5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAqlB,EAAAx0B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAyT,EAAOzhB,GAAP,IAAAC,EAAA4+B,EAAApL,EAAAqL,EAAAC,EAAAC,EAAAztB,EAAA0tB,EAAA1vB,EAAAutB,EAAAE,EAAA,OAAAzN,EAAA3wB,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgB8hB,EAAAvT,KAAA,EAQ1CsQ,QAAQqD,IAAI,CACpBvgB,EAAKu9B,eAAej/B,EAAa0B,EAAK3E,MAAMwQ,SAC5C7L,EAAK6tB,gBAAgBvvB,EAAY4wB,KAAK7wB,MAAOwN,KAVK,UAAAqxB,EAAA/c,EAAAzQ,KAAAoiB,EAAAt1B,OAAA4yB,EAAA,EAAA5yB,CAAA0gC,EAAA,GAAAC,EAAArL,EAAA,GAIhDsL,EAJgDD,EAIhDC,iBACAC,EALgDF,EAKhDE,4BAEFztB,EAPkDkiB,EAAA,GAahDsL,IACIE,EAAWt9B,EAAK3E,MAAM8T,iBAAmB9Q,EAAQC,EAAY4wB,KAAK7wB,MACxE87B,EAAU6C,gBAAgBM,GAAY,CACpCj/B,QACAC,cACA++B,8BACAG,SAAUx9B,EAAK3E,MAAM8T,oBAIrBS,EAvBgD,CAAAuQ,EAAAvT,KAAA,gBAAAuT,EAAAvT,KAAA,GAwBzB5M,EAAKy9B,kBAAkBn/B,GAxBE,eAwB5CsP,EAxB4CuS,EAAAzQ,KAyB5CyrB,EAAevrB,EAAiBpH,MAAMoF,GAzBMuS,EAAAvT,KAAA,GA0Bd5M,EAAKwvB,oBAAoB2L,EAAc98B,EAAOC,EAAa4Q,GA1B7C,QA0B5CmsB,EA1B4Clb,EAAAzQ,KA4B7C9B,EAAWjS,SAAYw/B,EAAax/B,UACvCw+B,EAAUpuB,cAAc1N,GAAS,CAC/BuP,aACAutB,eACAvrB,mBACAyrB,yBAIFlB,EAAUG,aAAeH,EAAUG,aAAa9sB,KAAK2tB,GACrDhB,EAAU8C,sBAAwB9C,EAAU8C,sBAAsBzvB,KAAK6tB,IAtCvB,yBAAAlb,EAAArS,SAAAgS,EAAA3kB,SAAhD,gBAAAg1B,GAAA,OAAAa,EAAAhjB,MAAA7S,KAAA8S,YAAA,IArBc,eAgEd6uB,EAAuB,GAC7BtgC,OAAOC,KAAKkP,GAAiBhP,QAAQ,SAAA0B,GAC/B87B,EAAUpuB,cAAc1N,KAC1By+B,EAAqBz+B,GAAS87B,EAAUpuB,cAAc1N,MAI1D87B,EAAUpuB,cAAgB+wB,EAEpBl/B,EAAkBpB,OAAOC,KAAK09B,EAAUpuB,eAAee,OAAO,SAAAzO,GAAK,OAAK2B,EAAKgN,MAAMmtB,EAAUpuB,cAAc1N,GAAOuR,kBAAkBgB,GAAG,KAEzIypB,EAASr6B,EAAKgN,MAAM,GACpButB,EAAgBv6B,EAAKgN,MAAM,GAC3BwtB,EAAkBx6B,EAAKgN,MAAM,GAC7BytB,EAAoBz6B,EAAKgN,MAAM,GA9EfokB,EAAAxkB,KAAA,GAiFd5M,EAAKiM,aAAarO,EAAlB,eAAAo0B,EAAAx1B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAmC,SAAAqU,EAAOriB,GAAP,IAAAC,EAAA2zB,EAAAyL,EAAAC,EAAAlC,EAAAJ,EAAAuC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnQ,EAAA3wB,EAAAwP,KAAA,SAAAkU,GAAA,cAAAA,EAAAhU,KAAAgU,EAAA/T,MAAA,cACjCtO,EAAcqN,EAAgBtN,GADGsiB,EAAA/T,KAAA,EAK7BsQ,QAAQqD,IAAI,CACpBvgB,EAAKg+B,aAAa1/B,GAClB0B,EAAKi+B,mBAAmB3/B,EAAauN,KAPA,cAAAomB,EAAAtR,EAAAjR,KAAAguB,EAAAlhC,OAAA4yB,EAAA,EAAA5yB,CAAAy1B,EAAA,GAGrC0L,EAHqCD,EAAA,GAIrCjC,EAJqCiC,EAAA,GAUjCrC,EAAwBlB,EAAUpuB,cAAc1N,GAAOg9B,sBAEvDuC,EAAW59B,EAAKgN,MAAM2wB,EAAUO,QAChCL,EAAcxC,EAAsB5b,IAAI0a,EAAU8C,uBAbjBtc,EAAA/T,KAAA,GAcT5M,EAAKwvB,oBAAoBiM,EAAiBp9B,EAAOC,EAAa4Q,GAdrD,QAcjC4uB,EAdiCnd,EAAAjR,MAejCquB,EAAgB1C,EAAsB5tB,MAAMqwB,MAGhDvD,EAAgBA,EAAc/sB,KAAKuwB,IAGjCH,IACFvD,EAASA,EAAO7sB,KAAKowB,EAASp1B,MAAMq1B,KAGlCC,IACFtD,EAAkBA,EAAgBhtB,KAAKswB,IA1BF,yBAAAnd,EAAA7S,SAAA4S,EAAAvlB,SAAnC,gBAAAo2B,GAAA,OAAAS,EAAAhkB,MAAA7S,KAAA8S,YAAA,IAjFc,eAiHhBusB,EAAgB5pB,GAAG,KACrB6pB,EAAoBF,EAAc9a,IAAI+a,GAAiBhyB,MAAM,MAG/D2xB,EAAUE,OAASA,EACnBF,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAC9BN,EAAUG,aAAeE,EAAgBhtB,KAAK+sB,GAzH1BnJ,EAAAvT,OAAA,SA6Hbsc,GA7Ha,yBAAA/I,EAAAtjB,SAAAgjB,EAAA31B,SAtcHA,KAqkBnBm9B,gBAAkB,WAChB,IAAI6F,EAAc,KAOlB,OANIvd,OAAOwd,SACTD,EAAc,IAAIE,IAAKzd,OAAOwd,UACrBxd,OAAOnF,OAChB0iB,EAAc,IAAIE,IAAKzd,OAAOnF,OAGzB0iB,GA7kBUhjC,KA+kBnBmjC,eAAiB,WACf,IAAMC,EAAkBv+B,EAAKye,qBACvBma,EAAgB54B,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBwtB,EAAgB1gC,KACtF6gB,EAAWka,EAAgBA,EAAcla,SAAW,SACpD8f,EAAax+B,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa2N,EAAU,QACrE+f,EAAUz+B,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa2N,EAAU,MAAO6f,EAAgB1gC,KAAO2gC,EAElGL,EAAcn+B,EAAK3E,MAAMogB,KAY7B,OAVK0iB,IAEDA,EADEvd,OAAOwd,SACK,IAAIC,IAAKzd,OAAOwd,UACrBxd,OAAOnF,KACF,IAAI4iB,IAAKzd,OAAOnF,MAEhB,IAAI4iB,IAAK,IAAIA,IAAKK,UAAUC,aAAaF,KAIpDN,GAlmBUhjC,KAomBnByjC,oBApmBmBpiC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAomBG,SAAAgkB,IAAA,IAAA/kB,EAAAO,EAAAF,EAAAkzB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzO,EAAAxiB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOtB,EAAPmlB,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,GAAAA,EAAA,GAAuB,GAAI5kB,EAA3B4kB,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,GAAAA,EAAA,GAAqC,OAArCA,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,KAAAA,EAAA,GACpB5kB,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,QADrB,CAAA6kB,EAAA9jB,KAAA,eAAA8jB,EAAA7S,OAAA,SAIX,IAJW,cAOdlS,EAAkB3L,EAAKm/B,0BAExB7zB,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKkP,IAG1BkzB,EAAe,GACbC,EAAkB,GACpBC,EAAqB/+B,EAAKgN,MAAM,GAfhB0jB,EAAA9jB,KAAA,GAgBG5M,EAAKo/B,YAAYvzB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd0zB,EAhBctO,EAAAhhB,OAkBJsvB,EAAStiC,QAEvBsiC,EAASriC,QAAQ,SAACoQ,EAAI5L,GAGpB,IAAK4L,EAAG9J,OAAS8J,EAAGsyB,cAAgBtyB,EAAGuyB,gBACrC,OAAO,EAGT,IAAM/xB,EAAcvN,EAAKgN,MAAMD,EAAGQ,aAC9B8xB,EAAcr/B,EAAKgN,MAAMD,EAAGsyB,aAC1BC,EAAkBt/B,EAAKgN,MAAMD,EAAGuyB,iBAEtC,OAAQvyB,EAAGE,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdF,EAAGE,QACD9L,EAAQ,GAAK49B,EAAmBnuB,GAAG,GACrC,OAICiuB,EAAa9xB,EAAG9J,QACnB47B,EAAa9xB,EAAG9J,MAAQ,CACtBs8B,MAAO,KACPC,SAAU,KACVC,SAAU,KACVC,UAAW1/B,EAAKgN,MAAM,KAI1B6xB,EAAa9xB,EAAG9J,MAAMy8B,UAAYb,EAAa9xB,EAAG9J,MAAMy8B,UAAUlyB,KAAKD,GAChC,OAAnCsxB,EAAa9xB,EAAG9J,MAAMu8B,WACxBX,EAAa9xB,EAAG9J,MAAMs8B,MAAQD,EAC9BT,EAAa9xB,EAAG9J,MAAMu8B,SAAWH,EAAY72B,MAAM82B,IAIrD,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAY72B,MAAMxI,EAAKgN,OAAO,IAO3C8xB,EAAgB/xB,EAAG9J,SACtB87B,EAAqBA,EAAmBvxB,KAAK6xB,IACtB9P,IAAI,KACzBwP,EAAqB/+B,EAAKgN,MAAM,IAKlC8xB,EAAgB/xB,EAAG9J,OAAQ,KAO7Bg8B,EAAcj/B,EAAKgN,MAAM,GACzBkyB,EAAiBl/B,EAAKgN,MAAM,GAChCxQ,OAAOqQ,OAAOgyB,GAAcliC,QAAQ,SAAAoQ,GAClC,IAAM0yB,EAAW1yB,EAAGyyB,SAAS/f,IAAI1S,EAAG2yB,WAAWjyB,MAAM,GACrDwxB,EAAcA,EAAYzxB,KAAKiyB,EAASj3B,MAAMuE,EAAG2yB,YACjDR,EAAiBA,EAAe1xB,KAAKT,EAAG2yB,aAG1CT,EAAcA,EAAYxf,IAAIyf,GAAgB12B,OAAO,GA5FjCkoB,EAAA7S,OAAA,SAiGbohB,GAjGa,yBAAAvO,EAAA5iB,SAAAuiB,EAAAl1B,SApmBHA,KAusBnBwkC,oBAvsBmBnjC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAusBG,SAAA0lB,IAAA,IAAAzmB,EAAAO,EAAAF,EAAAkzB,EAAAe,EAAAb,EAAAC,EAAAa,EAAA5xB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,UAAOtB,EAAPu0B,EAAAnjC,OAAA,QAAAiuB,IAAAkV,EAAA,GAAAA,EAAA,GAAuB,GAC3Ch0B,GAD+CA,EAA3Bg0B,EAAAnjC,OAAA,QAAAiuB,IAAAkV,EAAA,GAAAA,EAAA,GAAqC,OAC3B7/B,EAAK3E,MAAMwQ,QADrB,CAAAsmB,EAAAvlB,KAAA,eAAAulB,EAAAtU,OAAA,SAIX,IAJW,cAOdlS,EAAkB3L,EAAKm/B,0BAExB7zB,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKkP,IAGxBkzB,EAAe,GACjBe,EAAc5/B,EAAKgN,MAAM,GACzB+xB,EAAqB/+B,EAAKgN,MAAM,GAfhBmlB,EAAAvlB,KAAA,GAgBG5M,EAAKo/B,YAAYvzB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd0zB,EAhBc7M,EAAAziB,OAoBJsvB,EAAStiC,QAEvBsiC,EAASriC,QAAQ,SAACoQ,EAAI5L,GAMpB,GAJK09B,EAAa9xB,EAAG9J,QACnB47B,EAAa9xB,EAAG9J,MAAQ,KAGtB47B,EAAa9xB,EAAG9J,MAAMouB,SAAStkB,EAAGE,QAAtC,CAKA,IAAKF,EAAG9J,OAAS8J,EAAGsyB,cAAgBtyB,EAAGuyB,gBACrC,OAAO,EAGT,IAAMQ,EAAkBF,EACpBP,EAAcr/B,EAAKgN,MAAMD,EAAGsyB,aAC1BC,EAAkBt/B,EAAKgN,MAAMD,EAAGuyB,iBAGtC,OAAQvyB,EAAGE,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdF,EAAGE,QACD9L,EAAQ,GAAK49B,EAAmBnuB,GAAG,GACrC,OAGJgvB,EAAcP,EAAY72B,MAAM82B,GAAiB9xB,KAAKsyB,EAAgBt3B,MAAMu2B,IAAqBtf,IAAIsf,EAAmBvxB,KAAK6xB,IAC7H,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAY72B,MAAMxI,EAAKgN,OAAO,KAOhD+xB,EAAqBA,EAAmBvxB,KAAK6xB,IACtB9P,IAAI,KACzBqQ,EAAc5/B,EAAKgN,MAAM,GACzB+xB,EAAqB/+B,EAAKgN,MAAM,IAGlC6xB,EAAa9xB,EAAG9J,MAAMyF,KAAKqE,EAAGE,WAvEdklB,EAAAtU,OAAA,SA+Eb+hB,GA/Ea,yBAAAzN,EAAArkB,SAAAikB,EAAA52B,SAvsBHA,KAwxBnB4kC,eAxxBmBvjC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwxBF,SAAAslB,IAAA,IAAArmB,EAAAO,EAAA4gB,EAAA3gB,EAAA8lB,EAAA3jB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,UAAOtB,EAAPsmB,EAAAl1B,OAAA,QAAAiuB,IAAAiH,EAAA,GAAAA,EAAA,GAAuB,IACtC/lB,GAD0CA,EAA3B+lB,EAAAl1B,OAAA,EAAAk1B,EAAA,QAAAjH,IACe3qB,EAAK3E,MAAMwQ,UAExBP,GAAkBA,EAAc5O,QAAWsD,EAAK3E,MAAMsQ,gBAHxD,CAAAkmB,EAAAjlB,KAAA,eAAAilB,EAAAhU,OAAA,SAIN,IAJM,cAOT4O,EAAS,GAPAoF,EAAAjlB,KAAA,EAQY5M,EAAK4L,gBAAgBC,EAAS,EAAG,SAAUP,GARvD,cAQTQ,EARS+lB,EAAAniB,KAUfpE,EAAc3O,QAAQ,SAAAoI,GAEpB0nB,EAAO1nB,GAAiB,GACxB,IAAI66B,EAAc5/B,EAAKgN,MAAM,GAEzBgzB,EAAoBhgC,EAAKgN,MAAM,GAC7BT,EAAc/P,OAAOqQ,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,IAEvEwH,GAAeA,EAAY7P,QAE7B6P,EAAY5P,QAAQ,SAACoQ,EAAI5L,GAGvB,IAAK4L,EAAG9J,MAAS8J,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGc,aAAed,EAAGa,WAC9E,OAAO,EAGT,IAAMkyB,EAAkBF,EACpB/xB,EAAa7N,EAAKgN,MAAMD,EAAGc,YACzBD,EAAa5N,EAAKgN,MAAMD,EAAGa,YAGjC,OAAQb,EAAGE,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACH2yB,EAAc/xB,EAAWrF,MAAMoF,GAAYJ,KAAKsyB,EAAgBt3B,MAAMw3B,IAAoBvgB,IAAIugB,EAAkBxyB,KAAKK,IACrH,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAWrF,MAAMxI,EAAKgN,OAAO,KAO9CgzB,EAAoBA,EAAkBxyB,KAAKK,IACrB0hB,IAAI,KACxBqQ,EAAc5/B,EAAKgN,MAAM,GACzBgzB,EAAoBhgC,EAAKgN,MAAM,MAOrCyf,EAAO1nB,GAAiB66B,IA9DX/N,EAAAhU,OAAA,SAiER4O,GAjEQ,yBAAAoF,EAAA/jB,SAAA6jB,EAAAx2B,SAxxBEA,KA21BnB8kC,kBA31BmBzjC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA21BC,SAAA6zB,IAAA,IAAA50B,EAAAO,EAAAC,EAAAq0B,EAAAC,EAAAnyB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,UAAOtB,EAAP80B,EAAA1jC,OAAA,QAAAiuB,IAAAyV,EAAA,GAAAA,EAAA,GAAuB,IACzCv0B,GAD6CA,EAA3Bu0B,EAAA1jC,OAAA,EAAA0jC,EAAA,QAAAzV,IACY3qB,EAAK3E,MAAMwQ,UAExBP,GAAkBA,EAAc5O,QAAWsD,EAAK3E,MAAMsQ,gBAHrD,CAAA00B,EAAAzzB,KAAA,eAAAyzB,EAAAxiB,OAAA,SAIT,IAJS,cAAAwiB,EAAAzzB,KAAA,EAOS5M,EAAK4L,gBAAgBC,EAAS,EAAG,SAAUP,GAPpD,cAOZQ,EAPYu0B,EAAA3wB,KASZywB,EAAW,GAEjB70B,EAAc3O,QAAQ,SAACoI,GACrB,IAAIyH,EAAaxM,EAAKgN,MAAM,GACxBszB,EAAiB,KACrBH,EAASp7B,GAAiBu7B,EAE1B,IAAM/zB,EAAc/P,OAAOqQ,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,IACvEwH,GAAeA,EAAY7P,QAE7B6P,EAAY5P,QAAQ,SAACoQ,EAAI5L,GAEvB,IAAK4L,EAAG9J,MAAS8J,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGQ,YAC5D,OAAO,EAGT,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHT,EAAaA,EAAWgB,KAAKT,EAAGQ,aAC3B+yB,IACHA,EAAiBvzB,GAEnB,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHP,EAAaA,EAAWiB,MAAMV,EAAGQ,aAOjCf,EAAWkB,GAAG,KAChBlB,EAAaxM,EAAKgN,MAAM,GACxBszB,EAAiB,QAMvBH,EAASp7B,GAAiBu7B,IAtDVD,EAAAxiB,OAAA,SAyDXsiB,GAzDW,yBAAAE,EAAAvyB,SAAAoyB,EAAA/kC,SA31BDA,KAs5BnBolC,uBAAyB,SAACC,GAAwB,IAAfC,EAAexyB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACjCyyB,EAAS1gC,EAAK+Q,gBAAgB,CAAC,eAAgB0vB,EAAK,QACpDE,EAAUF,GAAOC,EAASA,EAAS9f,OAAO8V,SAASkK,OACzD,SAAAhiC,OAAU+hC,EAAV,MAAA/hC,OAAsBoB,EAAK+Q,gBAAgB,CAAC,YAAa,cAAzD,KAAAnS,OAA0E4hC,IAz5BzDrlC,KA25BnB0lC,aAAe,SAACC,GACd,OAAO,IAAI5jB,QAAQ,SAAAI,GAAO,OAAIqC,WAAWrC,EAASwjB,MA55BjC3lC,KA85BnB4lC,oBA95BmBvkC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA85BG,SAAA20B,IAAA,IAAA11B,EAAAO,EAAAo1B,EAAAC,EAAAjzB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA00B,GAAA,cAAAA,EAAAx0B,KAAAw0B,EAAAv0B,MAAA,cAAOtB,EAAP41B,EAAAxkC,OAAA,QAAAiuB,IAAAuW,EAAA,GAAAA,EAAA,GAAuB,GAAIr1B,EAA3Bq1B,EAAAxkC,OAAA,EAAAwkC,EAAA,QAAAvW,EAAAwW,EAAAv0B,KAAA,EACU5M,EAAKigC,kBAAkB30B,EAAeO,GADhD,YACdo1B,EADcE,EAAAzxB,MAAA,CAAAyxB,EAAAv0B,KAAA,eAAAu0B,EAAAtjB,OAAA,SAGXrhB,OAAOC,KAAKwkC,GAAiBG,OAAO,SAACC,EAAKhjC,GAI/C,OAHI4iC,EAAgB5iC,KAClBgjC,EAAIhjC,GAAS4iC,EAAgB5iC,GAAOiP,WAE/B+zB,GACN,KARe,cAAAF,EAAAtjB,OAAA,SAUb,MAVa,wBAAAsjB,EAAArzB,SAAAkzB,EAAA7lC,SA95BHA,KA26BnBmmC,sCA36BmB,eAAAC,EAAA/kC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA26BqB,SAAAm1B,EAAOljC,EAAYO,GAAnB,IAAA4iC,EAAA/G,EAAA,OAAA9M,EAAA3wB,EAAAwP,KAAA,SAAAi1B,GAAA,cAAAA,EAAA/0B,KAAA+0B,EAAA90B,MAAA,cAChC60B,EAAuB,GADSC,EAAA90B,KAAA,EAET5M,EAAKq8B,oBAAoB,iBAAiB,GAAG/9B,EAAYC,SAASD,EAAYD,MAAMQ,EAAcH,QAAQJ,EAAYO,GAF7G,cAEhC67B,EAFgCgH,EAAAhyB,KAAAgyB,EAAA90B,KAAA,EAGhC5M,EAAKiM,aAAazP,OAAOC,KAAKi+B,GAA9B,eAAAiH,EAAAnlC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8C,SAAAu1B,EAAOvjC,GAAP,IAAAwjC,EAAAC,EAAA,OAAAlU,EAAA3wB,EAAAwP,KAAA,SAAAs1B,GAAA,cAAAA,EAAAp1B,KAAAo1B,EAAAn1B,MAAA,cAC5Ci1B,EAAe,CACnBt6B,KAAMjJ,EAAY0jC,IAAI55B,QACtBytB,GAAIh3B,EAAcm9B,WAAW5zB,SAHmB25B,EAAAn1B,KAAA,EAK1B5M,EAAKiiC,kBAAkB5jC,EAAO,WAAWC,EAAYkhB,YAAY,SAAU,CAAC1S,OAAQ+0B,IAL1D,QAK5CC,EAL4CC,EAAAryB,OAOjCoyB,EAAUplC,OAAO,IAChC+kC,EAAqBpjC,GAASyjC,GARkB,wBAAAC,EAAAj0B,SAAA8zB,EAAAzmC,SAA9C,gBAAA+mC,GAAA,OAAAP,EAAA3zB,MAAA7S,KAAA8S,YAAA,IAHgC,cAAAyzB,EAAA7jB,OAAA,SAe/B4jB,GAf+B,wBAAAC,EAAA5zB,SAAA0zB,EAAArmC,SA36BrB,gBAAAi3B,EAAA+P,GAAA,OAAAZ,EAAAvzB,MAAA7S,KAAA8S,YAAA,GAAA9S,KA47BnBinC,mBA57BmB,eAAAC,EAAA7lC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA47BE,SAAAi2B,EAAOhkC,EAAYO,GAAnB,IAAA0jC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/U,EAAA3wB,EAAAwP,KAAA,SAAAm2B,GAAA,cAAAA,EAAAj2B,KAAAi2B,EAAAh2B,MAAA,cAAAg2B,EAAAh2B,KAAA,EAITsQ,QAAQqD,IAAI,CACpBvgB,EAAKshC,sCAAsChjC,EAAYO,GACvDmB,EAAKq8B,oBAAoB,cAAc,GAAG/9B,EAAYC,SAASD,EAAYD,MAAMQ,EAAcH,QAAQJ,EAAYO,KANlG,cAAA0jC,EAAAK,EAAAlzB,KAAA8yB,EAAAhmC,OAAA4yB,EAAA,EAAA5yB,CAAA+lC,EAAA,GAEjBE,EAFiBD,EAAA,GAGjBE,EAHiBF,EAAA,GASbG,EAAeF,GAA+B,GATjCG,EAAAh2B,KAAA,EAWb5M,EAAKiM,aAAazP,OAAOC,KAAKimC,GAA9B,eAAAG,EAAArmC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2C,SAAAy2B,EAAOzkC,GAAP,IAAAwjC,EAAAC,EAAA,OAAAlU,EAAA3wB,EAAAwP,KAAA,SAAAs2B,GAAA,cAAAA,EAAAp2B,KAAAo2B,EAAAn2B,MAAA,cACzCi1B,EAAe,CACnBhM,GAAIv3B,EAAY0jC,IAAI55B,SAFyB26B,EAAAn2B,KAAA,EAIvB5M,EAAKiiC,kBAAkB5jC,EAAO,WAAWC,EAAYkhB,YAAY,SAAU,CAAC1S,OAAQ+0B,IAJ7D,QAIzCC,EAJyCiB,EAAArzB,OAM9BoyB,EAAUplC,OAAS,IAClCimC,EAAatkC,GAASyjC,GAPuB,wBAAAiB,EAAAj1B,SAAAg1B,EAAA3nC,SAA3C,gBAAA6nC,GAAA,OAAAH,EAAA70B,MAAA7S,KAAA8S,YAAA,IAXa,cAAA20B,EAAA/kB,OAAA,SAsBZ8kB,GAtBY,yBAAAC,EAAA90B,SAAAw0B,EAAAnnC,SA57BF,gBAAA8nC,EAAAC,GAAA,OAAAb,EAAAr0B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo9BnBgoC,sBAp9BmB,eAAAC,EAAA5mC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo9BK,SAAAg3B,EAAO/kC,GAAP,IAAAglC,EAAAC,EAAAC,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAA7B,EAAA8B,EAAA,OAAAhW,EAAA3wB,EAAAwP,KAAA,SAAAo3B,GAAA,cAAAA,EAAAl3B,KAAAk3B,EAAAj3B,MAAA,cAChB02B,EAAiBhlC,EAAYwlC,SADbD,EAAAj3B,KAAA,EAIY5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAM,WAAY,MAJhF,YAIhB2gC,EAJgBM,EAAAn0B,MAAA,CAAAm0B,EAAAj3B,KAAA,gBAAAi3B,EAAAj3B,KAAA,EAMd5M,EAAK3E,MAAM2oC,aAAaV,EAAe1gC,KAAM2gC,EAAqBD,EAAeW,KANnE,cAAAJ,EAAAj3B,KAAA,EAOa5M,EAAKkuB,oBAAoBoV,EAAe1gC,KAAK,sBAP1D,YAOd4gC,EAPcK,EAAAn0B,MAAA,CAAAm0B,EAAAj3B,KAAA,gBASZi1B,EAAe,CACnBhM,GAAI0N,GAVYM,EAAAj3B,KAAA,GAeRsQ,QAAQqD,IAAI,CACpBvgB,EAAKkkC,aAAaV,GAClBxjC,EAAKiiC,kBAAkB3jC,EAAYD,MAAO,WAAYmlC,EAAoBn2B,SAASm2B,GAAoB,EAAG,CAAC12B,OAAQ+0B,MAjBnG,WAAA4B,EAAAI,EAAAn0B,KAAAg0B,EAAAlnC,OAAA4yB,EAAA,EAAA5yB,CAAAinC,EAAA,GAahBE,EAbgBD,EAAA,KAchB5B,EAdgB4B,EAAA,MAoBD5B,EAAUplC,OApBT,CAAAmnC,EAAAj3B,KAAA,gBAqBVg3B,EAAc9B,EAAUV,OAAQ,SAACpU,EAAOoJ,GAE5C,OADApJ,EAASA,EAAOxf,KAAKxN,EAAKgN,MAAMopB,EAAE+N,aAAan+B,SAE/ChG,EAAKgN,MAAM,IAxBG62B,EAAAhmB,OAAA,SA0BT,CACLmP,OAAO4W,EACPzzB,UAAUwzB,EAAUxzB,UACpBqP,YAAYgkB,EACZ1oB,gBAAgBgnB,EAAU,GAAGhnB,kBA9Bf,eAAA+oB,EAAAhmB,OAAA,SAoCf,MApCe,yBAAAgmB,EAAA/1B,SAAAu1B,EAAAloC,SAp9BL,gBAAAipC,GAAA,OAAAhB,EAAAp1B,MAAA7S,KAAA8S,YAAA,GAAA9S,KA0/BnBkpC,2BA1/BmB,eAAAC,EAAA9nC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0/BU,SAAAk4B,EAAOjmC,EAAaO,GAApB,IAAA67B,EAAA8J,EAAA,OAAA5W,EAAA3wB,EAAAwP,KAAA,SAAAg4B,GAAA,cAAAA,EAAA93B,KAAA83B,EAAA73B,MAAA,cAAA63B,EAAA73B,KAAA,EACE5M,EAAKq8B,oBAAoB,iBAAkB,GAAI/9B,EAAYC,SAAUD,EAAYD,MAAOQ,EAAcH,QAASJ,EAAaO,GAD9H,cACrB67B,EADqB+J,EAAA/0B,KAErB80B,EAAqB,GAFAC,EAAA73B,KAAA,EAGrB5M,EAAKiM,aAAazP,OAAOC,KAAKi+B,GAA9B,eAAAgK,EAAAloC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+C,SAAAs4B,EAAOtmC,GAAP,IAAAumC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvB,EAAAwB,EAAAC,EAAAC,EAAAp0B,EAAAq0B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhX,EAAAiX,EAAAC,EAAAC,EAAAC,EAAAC,EAAArE,EAAAC,EAAAqE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9Y,EAAA3wB,EAAAwP,KAAA,SAAAk6B,GAAA,cAAAA,EAAAh6B,KAAAg6B,EAAA/5B,MAAA,UAE/Cg4B,EAAe,KACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAWhlC,EAAKgN,MAAM,GACtBi4B,EAAWjlC,EAAKgN,MAAM,GACtBk4B,EAAoB,KACpBC,EAAanlC,EAAKgN,MAAM,GACxB42B,EAAc5jC,EAAKgN,MAAM,GACzBo4B,EAAeplC,EAAKgN,MAAM,GAC1Bq4B,EAAwB,KACxBC,EAAgBtlC,EAAKgN,MAAM,GAC3BkE,EAAiBlR,EAAKgN,MAAM,GAC5Bu4B,EAAiBvlC,EAAKgN,MAAM,GAC5Bw4B,EAAkBxlC,EAAKgN,MAAM,GAC7By4B,EAAkBzlC,EAAKgN,MAAM,GAC7B04B,EAAoB1lC,EAAKgN,MAAM,GAC/B24B,EAAoB3lC,EAAKgN,MAAM,GAC/B44B,EAAyB5lC,EAAKgN,MAAM,GAElC64B,EAAiB7lC,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU1S,IAC1DwwB,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAGnCd,EAAoBjnC,EAAcg9B,UAAUgL,cAC5Cd,EAAqBlnC,EAAcg9B,UAAUmK,cA5BA,CAAAW,EAAA/5B,KAAA,gBAAA+5B,EAAA/5B,KAAA,GA+BtB5M,EAAKkuB,oBAAoBrvB,EAAcm9B,WAAWp5B,KAAKmjC,GA/BjC,SA+B3CC,EA/B2CW,EAAAj3B,QAiC/Cw1B,EAAoB73B,SAAS24B,IAAe34B,SAASe,KAAK04B,MAAM,MAjCjB,YAqC/ChB,EArC+C,CAAAa,EAAA/5B,KAAA,YAuC5Cs4B,EAvC4C,CAAAyB,EAAA/5B,KAAA,gBAAA+5B,EAAA/5B,KAAA,GA6CrCsQ,QAAQqD,IAAI,CACpBvgB,EAAKqvB,yBAAyBR,EAAgBgX,GAC9C7lC,EAAK+mC,0BAA0BloC,EAAcm9B,WAAWp5B,KAAKkjC,GAC7D9lC,EAAK+mC,0BAA0B1oC,EAAM,YAAY,CAACQ,EAAcm9B,WAAW5zB,UAC3EpI,EAAKq8B,oBAAoB,cAAe,GAAI/9B,EAAYC,SAAUD,EAAYD,MAAOQ,EAAcH,QAASJ,EAAaO,KAjD5E,eAAAonC,EAAAU,EAAAj3B,KAAAw2B,EAAA1pC,OAAA4yB,EAAA,EAAA5yB,CAAAypC,EAAA,GAyC7C/0B,EAzC6Cg1B,EAAA,GA0C7CT,EA1C6CS,EAAA,GA2C7CtC,EA3C6CsC,EAAA,GA4C7CV,EA5C6CU,EAAA,GAAAS,EAAA/5B,KAAA,GAoDvB5M,EAAKs8B,2BAA2BkJ,EAAgBlnC,GApDzB,QAoD/CknC,EApD+CmB,EAAAj3B,KAqD/C+1B,EAAkBzlC,EAAKwQ,iBAAiBi1B,EAAgB5mC,EAAcm9B,WAAWhgC,UACjFopC,EAAeplC,EAAKgN,MAAMy4B,GAAiBj9B,MAAM,OACjD88B,EAAgBtlC,EAAKgN,MAAMy4B,GAAiBj9B,MAAMxI,EAAK+Q,gBAAgB,CAAC,UAAW,oBACnFw0B,EAAiBD,EAAc7lB,IAAIzf,EAAK+Q,gBAAgB,CAAC,UAAW,mBACpE60B,EAAyBN,EAAc98B,MAAM0I,GAC7C8zB,EAAWY,EAAuBnmB,IAAI+lB,GACtCP,EAAWjlC,EAAKgnC,QAAQhC,GAAUx8B,MAAM,KACxCm9B,EAAoBP,EA5D2B,QA+DjDC,EAAwB,OAExBb,EAAmBnmC,GAAS,CAC1B8mC,aACAvB,cACAwB,eACAR,eACAqC,IAAKjC,EACLkC,IAAKjC,EACLK,gBACAP,gBACAQ,iBACAE,kBACAE,oBACAN,wBACAO,0BA9E+Ce,EAAA/5B,KAAA,wBAkF3Ci1B,EAAe,CACnBt6B,KAAMjJ,EAAY0jC,IAAI55B,QACtBytB,GAAIh3B,EAAcm9B,WAAW5zB,SApFkBu+B,EAAA/5B,KAAA,GAuFzB5M,EAAKiiC,kBAAkB5jC,EAAO,WAAYC,EAAYkhB,YAAa,SAAU,CAAE1S,OAAQ+0B,IAvF9D,cAuF3CC,EAvF2C6E,EAAAj3B,OAyFhCoyB,EAAUplC,OAAS,GAzFa,CAAAiqC,EAAA/5B,KAAA,gBA0FzCg4B,EAAe9C,EAAUplC,OAASolC,EAAU,GAAK,KACjDiD,EAAgBjD,EAAUA,EAAUplC,OAAS,GAC7C2pC,EAAazB,EAAeA,EAAaplB,YAAclhB,EAAYkhB,YA5F1BmnB,EAAA/5B,KAAA,GAkGrCsQ,QAAQqD,IAAI,CACpBvgB,EAAKkkC,aAAamC,GAClBrmC,EAAKkkC,aAAaa,EAAcvlB,aAChCxf,EAAKqvB,yBAAyBR,EAAgBgX,GAC9C7lC,EAAK+mC,0BAA0BzoC,EAAY0jC,IAAIp/B,KAAM,mBAAoB,GAAI,GAAImiC,EAAcvlB,eAtGlD,WAAA8mB,EAAAK,EAAAj3B,KAAA62B,EAAA/pC,OAAA4yB,EAAA,EAAA5yB,CAAA8pC,EAAA,GA8F7CzB,EA9F6C0B,EAAA,GA+F7CzB,EA/F6CyB,EAAA,GAgG7Cr1B,EAhG6Cq1B,EAAA,GAiG7Cb,EAjG6Ca,EAAA,IAyG3C1B,IAAiBC,EAzG0B,CAAA6B,EAAA/5B,KAAA,gBA0GzC45B,EAAWxmC,EAAKwQ,iBAAiBk1B,EAAmBpnC,EAAY0jC,IAAIhmC,UAClEyqC,EAAgB1B,EAAcvlB,YAAc6mB,EAC5CK,EAAiB5B,EAAc30B,UAAY00B,EAAc10B,UAE/Dg1B,EAAanlC,EAAKwQ,iBAAiBu0B,EAAcZ,aAAan+B,MAAO6/B,EAAe7pC,UACpF4nC,EAAc9B,EAAUV,OAAO,SAAC+F,EAAO/Q,GAErC,OADA+Q,EAAQA,EAAM35B,KAAKxN,EAAKwQ,iBAAiB4lB,EAAE+N,aAAan+B,MAAO6/B,EAAe7pC,YAE7EgE,EAAKgN,MAAM,IAlH+B25B,EAAA/5B,KAAA,GAoH5B5M,EAAKs8B,2BAA2BkK,EAASloC,GApHb,QAoH7CkoC,EApH6CG,EAAAj3B,KAsH7C61B,EAAiB3B,EAAYnkB,IAAIgnB,GACjChB,EAAkB7B,EAAYnkB,IAAIinB,GAClCtB,EAAeK,EAAgBj9B,MAAM,OACrC88B,EAAgBG,EAAgBj9B,MAAMxI,EAAK+Q,gBAAgB,CAAC,UAAW,oBACvE60B,EAAyBN,EAAc98B,MAAM0I,GAC7C8zB,EAAWY,EAAuBnmB,IAAI+mB,GACtCvB,EAAWjlC,EAAKgnC,QAAQhC,GAAUx8B,MAAM,KAExCm9B,EAAoBR,EACpBE,EAAwB,kBAExBb,EAAmBnmC,GAAS,CAC1B8mC,aACAvB,cACAwB,eACAR,eACAqC,IAAKjC,EACLkC,IAAKjC,EACLK,gBACAP,gBACAQ,iBACAE,kBACAE,oBACAN,wBACAO,0BA9I2C,yBAAAe,EAAA74B,SAAA62B,EAAAxpC,SAA/C,gBAAAisC,GAAA,OAAA1C,EAAA12B,MAAA7S,KAAA8S,YAAA,IAHqB,cAAAw2B,EAAA5mB,OAAA,SA0JpB2mB,GA1JoB,wBAAAC,EAAA32B,SAAAy2B,EAAAppC,SA1/BV,gBAAAksC,EAAAC,GAAA,OAAAhD,EAAAt2B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAspCnBwgC,mBAtpCmB,eAAA4L,EAAA/qC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAspCE,SAAAm7B,EAAOlpC,EAAaO,EAAegN,GAAnC,IAAA47B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvuB,EAAA2mB,EAAAV,EAAAnE,EAAA0M,EAAA5L,EAAA6L,EAAAC,EAAAC,EAAA,OAAA1a,EAAA3wB,EAAAwP,KAAA,SAAA87B,GAAA,cAAAA,EAAA57B,KAAA47B,EAAA37B,MAAA,cACnBf,EAAUA,GAAW7L,EAAK3E,MAAMwQ,QAO1B47B,EAAsB,CAAE5R,GAAI,KAAMtuB,KAAM,OAAQvB,MAAO,SACvD0hC,EAAyB1nC,EAAK+Q,gBAAgB,CAAC,SAAUzS,EAAYD,MAAO,YAAcopC,GAE1FE,EAAmC,IACRD,EAAuB7R,IAAM,CAACv3B,EAAY0jC,IAAI55B,SAC/Eu/B,EAAiCD,EAAuBngC,MAAQ,CAACvH,EAAK3E,MAAMwQ,UAEtE+7B,EAAkC,IACRF,EAAuB7R,IAAM,CAAC71B,EAAK3E,MAAMwQ,SACzE+7B,EAAgCF,EAAuBngC,MAAQ,CAACjJ,EAAY0jC,IAAI55B,SAjB7DmgC,EAAA37B,KAAA,GA0BTsQ,QAAQqD,IAAI,CACpBvgB,EAAKiiC,kBAAkB3jC,EAAYD,MAAO,WAAYQ,EAAc2gB,YAAa,SAAU,CAAE1S,OAAQ86B,IACrG5nC,EAAKiiC,kBAAkB3jC,EAAYD,MAAO,WAAYQ,EAAc2gB,YAAa,SAAU,CAAE1S,OAAQ66B,IACrG3nC,EAAKiiC,kBAAkBpjC,EAAc+D,KAAM,WAAY/D,EAAc2gB,YAAa,SAAU,CAAE1S,OAAQ,CAAEvF,KAAM,CAACvH,EAAK3E,MAAMwQ,SAAUgqB,GAAI,CAAC,iDACzI71B,EAAKiiC,kBAAkBpjC,EAAc+D,KAAM,WAAY/D,EAAc2gB,YAAa,SAAU,CAAE1S,OAAQ,CAAEvF,KAAM,CAAC,8CAA+CsuB,GAAI,CAAC71B,EAAK3E,MAAMwQ,cA9B7J,eAAAg8B,EAAAU,EAAA74B,KAAAo4B,EAAAtrC,OAAA4yB,EAAA,EAAA5yB,CAAAqrC,EAAA,GAsBjBE,EAtBiBD,EAAA,GAuBjBE,EAvBiBF,EAAA,GAwBjBG,EAxBiBH,EAAA,GAyBjBI,EAzBiBJ,EAAA,GAmCbnuB,EAAe,GACjB2mB,EAAiB,KACjBV,EAAc5/B,EAAKgN,MAAM,GACzByuB,EAAkBz7B,EAAKgN,MAAM,GAC7Bm7B,EAAuBnoC,EAAKgN,MAAM,GAClCuvB,EAA2Bv8B,EAAKgN,MAAM,GAGpCo7B,EAAuBJ,EAAoBppC,OAAOmpC,GAAoBS,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWhpB,SAASpQ,EAAEuiB,aAAenS,SAASgpB,EAAE7W,aAAe,GAAK,IAC/I6oB,EAAyBH,EAAsBtpC,OAAOqpC,GAAsBO,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWhpB,SAASpQ,EAAEuiB,aAAenS,SAASgpB,EAAE7W,aAAe,GAAK,IAErJ8oB,EAAa,GA9CAC,EAAA37B,KAAA,GAgDb5M,EAAKiM,aAAao8B,EAAlB,eAAAI,EAAAjsC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA0C,SAAAq8B,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAnF,EAAAoF,EAAA,OAAAnb,EAAA3wB,EAAAwP,KAAA,SAAAu8B,GAAA,cAAAA,EAAAr8B,KAAAq8B,EAAAp8B,MAAA,UACxCg8B,EAAqBR,EAAqBtd,KAAK,SAAAsL,GAAC,OAAIA,EAAEtb,gBAAgBzS,gBAAkBsgC,EAA0B7tB,gBAAgBzS,gBAD1F,CAAA2gC,EAAAp8B,KAAA,eAAAo8B,EAAAnrB,OAAA,wBAAAmrB,EAAAp8B,KAAA,EAQpCsQ,QAAQqD,IAAI,CACpBvgB,EAAKkkC,aAAa0E,EAAmBppB,aACrCxf,EAAKs8B,2BAA2B,EAAEh+B,EAAYsqC,EAAmBppB,eAVrB,OAAAqpB,EAAAG,EAAAt5B,KAAAo5B,EAAAtsC,OAAA4yB,EAAA,EAAA5yB,CAAAqsC,EAAA,GAM5ClF,EAN4CmF,EAAA,GAO5CC,EAP4CD,EAAA,GAa9CR,EAAWM,EAAmBppB,aAAe,CAC3CmkB,YACAoF,uBAf4C,yBAAAC,EAAAl7B,SAAA46B,EAAAvtC,SAA1C,gBAAA8tC,GAAA,OAAAR,EAAAz6B,MAAA7S,KAAA8S,YAAA,IAhDa,eAoEnBo6B,EAAuB1rC,QAAS,SAAAgsC,GAC9B,IAAMC,EAAqBR,EAAqBtd,KAAK,SAAAsL,GAAC,OAAIA,EAAEtb,gBAAgBzS,gBAAkBsgC,EAA0B7tB,gBAAgBzS,gBAGxI,GAAKugC,EAAL,CAIA,IAAMr7B,EAAcvN,EAAKwQ,iBAAiBo4B,EAAmBzE,aAAauD,EAAuB1hC,OAAQ1H,EAAYtC,UAC/GktC,EAAqBlpC,EAAKwQ,iBAAiBm4B,EAA0BxE,aAAan+B,MAAOnH,EAAc7C,UAGvGi/B,EAAe1tB,EAAYkS,IAAIypB,GAC/BvF,EAAY2E,EAAWM,EAAmBppB,aAAamkB,UACvDwF,EAAO,GAAAvqC,OAAMC,EAAcR,MAApB,KAAAO,OAA6BgqC,EAAmB9tB,iBACvD1b,EAAiBY,EAAK+Q,gBAAgB,CAAC,QAAS,YAAazS,EAAYC,WAGzEwO,EAAK,CACTo8B,UACAl8B,OAAQ,KACRM,cACA0tB,eACAhyB,aAPmB7J,GAAkBA,EAAe8J,KAAjC,oBAAAtK,OAA4DQ,EAAe8J,MAA3E,oBAAAtK,OAAwGN,EAAYC,SAApH,QAQnByH,MAAOuH,EACPL,OAAQ,YACR7O,MAAOC,EAAYD,MACnBK,QAASG,EAAcH,QACvBH,SAAUa,EAAe2J,MACzB2jB,YAAapuB,EAAYD,MACzB+qC,cAAeF,EACfjmC,KAAM2lC,EAAmB9tB,gBACzB0E,YAAaopB,EAAmBppB,YAChClS,UAAWq2B,EAAYA,EAAUxzB,UAAY,MAGzCisB,EAAuBp8B,EAAKgN,MAAMO,GAAa/E,MAAM8/B,EAAWM,EAAmBppB,aAAaupB,qBAMpC,+CAA9DJ,EAA0BxE,aAAa58B,KAAKc,eAEzCi4B,IACHA,EAAiBvzB,GAGnBA,EAAGE,OAAS,UACZwuB,EAAkBA,EAAgBjuB,KAAKD,GACvC46B,EAAuBA,EAAqB36B,KAAKD,GACjDqyB,EAAcA,EAAYpyB,KAAKytB,EAAazyB,MAAM+E,IAClDgvB,EAA2BA,EAAyB/uB,KAAK4uB,IAIY,+CAA5DuM,EAA0BxE,aAAatO,GAAGxtB,gBACnD0E,EAAGE,OAAS,WACZwuB,EAAkBA,EAAgBhuB,MAAMF,GACxCgvB,EAA2BA,EAAyB9uB,MAAM2uB,GACtDX,EAAgB/tB,GAAG,KACrB4yB,EAAiB,KACjBV,EAAc5/B,EAAKgN,MAAM,GACzByuB,EAAkBz7B,EAAKgN,MAAM,GAC7Bm7B,EAAuBnoC,EAAKgN,MAAM,GAClCuvB,EAA2Bv8B,EAAKgN,MAAM,KAK1C2M,EAAajR,KAAKqE,MAGpB6yB,EAAcA,EAAYngB,IAAI0oB,GA7IXI,EAAA1qB,OAAA,SAiJZ,CACL+hB,cACAjmB,eACA2mB,iBACA7E,kBACAc,6BAtJiB,yBAAAgM,EAAAz6B,SAAA05B,EAAArsC,SAtpCF,gBAAAkuC,EAAAC,EAAAC,GAAA,OAAAhC,EAAAv5B,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+yCnBquC,2BA/yCmB,eAAAC,EAAAjtC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+yCU,SAAAq9B,EAAOprC,EAAaO,EAAegN,GAAnC,IAAAkvB,EAAA,OAAAnN,EAAA3wB,EAAAwP,KAAA,SAAAk9B,GAAA,cAAAA,EAAAh9B,KAAAg9B,EAAA/8B,MAAA,cAAA+8B,EAAA/8B,KAAA,EACG5M,EAAK27B,mBAAmBr9B,EAAaO,EAAegN,GADvD,YACrBkvB,EADqB4O,EAAAj6B,MAAA,CAAAi6B,EAAA/8B,KAAA,eAAA+8B,EAAA9rB,OAAA,SAGlBkd,EAAgBphB,cAHE,cAAAgwB,EAAA9rB,OAAA,SAKpB,MALoB,wBAAA8rB,EAAA77B,SAAA47B,EAAAvuC,SA/yCV,gBAAAyuC,EAAAC,EAAAC,GAAA,OAAAL,EAAAz7B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAszCnB4uC,yBAtzCmB,eAAAC,EAAAxtC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAszCQ,SAAA49B,EAAO3rC,EAAaO,EAAegN,GAAnC,IAAAkvB,EAAA,OAAAnN,EAAA3wB,EAAAwP,KAAA,SAAAy9B,GAAA,cAAAA,EAAAv9B,KAAAu9B,EAAAt9B,MAAA,cAAAs9B,EAAAt9B,KAAA,EACK5M,EAAK27B,mBAAmBr9B,EAAaO,EAAegN,GADzD,YACnBkvB,EADmBmP,EAAAx6B,MAAA,CAAAw6B,EAAAt9B,KAAA,eAAAs9B,EAAArsB,OAAA,SAGhBkd,EAAgBuF,gBAHA,cAAA4J,EAAArsB,OAAA,SAKlB,MALkB,wBAAAqsB,EAAAp8B,SAAAm8B,EAAA9uC,SAtzCR,gBAAAgvC,EAAAC,EAAAC,GAAA,OAAAL,EAAAh8B,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6zCnBmvC,0BA7zCmB,eAAAC,EAAA/tC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6zCS,SAAAm+B,EAAOlsC,EAAaO,EAAegN,GAAnC,IAAAkvB,EAAA,OAAAnN,EAAA3wB,EAAAwP,KAAA,SAAAg+B,GAAA,cAAAA,EAAA99B,KAAA89B,EAAA79B,MAAA,cAAA69B,EAAA79B,KAAA,EACI5M,EAAK27B,mBAAmBr9B,EAAaO,EAAegN,GADxD,YACpBkvB,EADoB0P,EAAA/6B,MAAA,CAAA+6B,EAAA79B,KAAA,eAAA69B,EAAA5sB,OAAA,SAGjBkd,EAAgBU,iBAHC,cAAAgP,EAAA5sB,OAAA,SAKnB,MALmB,wBAAA4sB,EAAA38B,SAAA08B,EAAArvC,SA7zCT,gBAAAuvC,EAAAC,EAAAC,GAAA,OAAAL,EAAAv8B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo0CnB8iC,mBAp0CmB,eAAA4M,EAAAruC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo0CE,SAAAy+B,EAAOxsC,EAAauN,GAApB,IAAA2iB,EAAAtD,EAAA6f,EAAAC,EAAA7P,EAAA8P,EAAAxP,EAAA,OAAA7N,EAAA3wB,EAAAwP,KAAA,SAAAy+B,GAAA,cAAAA,EAAAv+B,KAAAu+B,EAAAt+B,MAAA,UACb4hB,EADa,mBAAA5vB,OACsBN,EAAY4wB,KAAK7wB,MADvC,KAAAO,OACgDiN,KAC7Dqf,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAHvB,CAAAuvC,EAAAt+B,KAAA,eAAAs+B,EAAArtB,OAAA,SAIV7d,EAAKgN,MAAMke,IAJD,cAAAggB,EAAAt+B,KAAA,EAOsBsQ,QAAQqD,IAAI,CACnDvgB,EAAK6tB,gBAAgBvvB,EAAY4wB,KAAK7wB,MAAOwN,GAC7C7L,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,gBAAiB,CAACwN,MATxD,UAAAk/B,EAAAG,EAAAx7B,KAAAs7B,EAAAxuC,OAAA4yB,EAAA,EAAA5yB,CAAAuuC,EAAA,GAOd5P,EAPc6P,EAAA,GAOAC,EAPAD,EAAA,IAYf7P,IAAgB8P,EAZD,CAAAC,EAAAt+B,KAAA,gBAajBq+B,EAAejrC,EAAKwQ,iBAAiBy6B,EAAc3sC,EAAYtC,UACzDy/B,EAAkBN,EAAa3yB,MAAMyiC,GAd1BC,EAAArtB,OAAA,SAeV7d,EAAK8vB,8BAA8BtB,EAAeiN,IAfxC,eAAAyP,EAAArtB,OAAA,SAkBZ,MAlBY,yBAAAqtB,EAAAp9B,SAAAg9B,EAAA3vC,SAp0CF,gBAAAgwC,EAAAC,GAAA,OAAAP,EAAA78B,MAAA7S,KAAA8S,YAAA,GAAA9S,KAw1CnBkwC,cAx1CmB7uC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAw1CH,SAAAi/B,IAAA,IAAAhgC,EAAAO,EAAAC,EAAAy/B,EAAAC,EAAAv9B,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAg/B,GAAA,cAAAA,EAAA9+B,KAAA8+B,EAAA7+B,MAAA,UAAOtB,EAAPkgC,EAAA9uC,OAAA,QAAAiuB,IAAA6gB,EAAA,GAAAA,EAAA,GAAuB,IAErC3/B,GAFyCA,EAA3B2/B,EAAA9uC,OAAA,EAAA8uC,EAAA,QAAA7gB,IAEO3qB,EAAK3E,MAAMwQ,UAEfP,GAAkBA,EAAc5O,QAAWsD,EAAK3E,MAAMsQ,gBAJzD,CAAA8/B,EAAA7+B,KAAA,eAAA6+B,EAAA5tB,OAAA,SAKL,IALK,cAAA4tB,EAAA7+B,KAAA,EAQa5M,EAAK4L,gBAAgBC,EAAS,EAAG,SAAUP,GAAe,GARvE,cAQRQ,EARQ2/B,EAAA/7B,KAUR67B,EAAc,GAEpBjgC,EAAc3O,QAAQ,SAACoI,GACrB,IAAIyH,EAAaxM,EAAKgN,MAAM,GAC5Bu+B,EAAYxmC,GAAiByH,EAE7B,IAAMD,EAAc/P,OAAOqQ,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,IACvEwH,GAAeA,EAAY7P,QAE7B6P,EAAY5P,QAAQ,SAACoQ,EAAI5L,GAEvB,IAAK4L,EAAG9J,MAAS8J,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGQ,YAC5D,OAAO,EAGT,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHT,EAAaA,EAAWgB,KAAKT,EAAGQ,aAChC,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHf,EAAaA,EAAWiB,MAAMV,EAAGQ,aAOjCf,EAAWkB,GAAG,KAChBlB,EAAaxM,EAAKgN,MAAM,MAM9Bu+B,EAAYxmC,GAAiByH,IApDjBi/B,EAAA5tB,OAAA,SAyDP0tB,GAzDO,yBAAAE,EAAA39B,SAAAw9B,EAAAnwC,SAx1CGA,KAm5CnBuwC,aAAe,WACb,IAAM9S,EAAgB54B,EAAK2rC,oBAC3B,OAAO/S,EAAgBA,EAAcQ,UAAYp5B,EAAK+Q,gBAAgB,CAAC,eAr5CtD5V,KAu5CnBwwC,kBAAoB,WAClB,IAAMpX,EAAYv0B,EAAK4rC,sBACjBlwB,EAAU1b,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBwjB,IAEtE,OADA7Y,EAAQ7d,GAAK02B,EACN7Y,GA35CUvgB,KA65CnBsjB,mBAAqB,WACnB,IAAM8V,EAAYv0B,EAAK4wB,uBACjBlV,EAAU1b,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBwjB,IAEtE,OADA7Y,EAAQ7d,GAAK02B,EACN7Y,GAj6CUvgB,KAm6CnBy1B,qBAAuB,WACrB,IAAMib,EAAiB7rC,EAAK+Q,gBAAgB,CAAC,UAAW,oBACxD,OAAO/Q,EAAK3E,MAAMqgB,SAAW1b,EAAK3E,MAAMqgB,QAAQ8Y,UAAWnnB,SAASrN,EAAK3E,MAAMqgB,QAAQ8Y,SAAS32B,KAAkCwP,SAASw+B,IAr6C1H1wC,KAu6CnBywC,oBAAsB,WACpB,IAAMC,EAAiB7rC,EAAK+Q,gBAAgB,CAAC,UAAW,oBACxD,OAAO/Q,EAAK3E,MAAMqgB,SAAW1b,EAAK3E,MAAMqgB,QAAQkZ,SAAUvnB,SAASrN,EAAK3E,MAAMqgB,QAAQkZ,QAAQ/2B,KAAkCwP,SAASw+B,IAz6CxH1wC,KA26CnB2wC,oBA36CmBtvC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA26CG,SAAA0/B,IAAA,IAAAlgC,EAAAP,EAAAkjB,EAAAtD,EAAA8gB,EAAAxqB,EAAA+O,EAAA0b,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAthC,EAAAuhC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvhC,EAAAwhC,EAAA9/B,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAuhC,GAAA,cAAAA,EAAArhC,KAAAqhC,EAAAphC,MAAA,UAAOf,EAAPkiC,EAAArxC,OAAA,QAAAiuB,IAAAojB,EAAA,IAAAA,EAAA,GAAwBziC,EAAxByiC,EAAArxC,OAAA,QAAAiuB,IAAAojB,EAAA,GAAAA,EAAA,GAAwC,IAE5DliC,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,UAExB7L,EAAK3E,MAAMogB,KAJR,CAAAuyB,EAAAphC,KAAA,eAAAohC,EAAAnwB,OAAA,SAKX,IALW,UAQd2Q,EARc,oBAAA5vB,OAQsBiN,EARtB,KAAAjN,OAQiCwM,KAAKC,UAAUC,IAEjD,QADb4f,EAAalrB,EAAKiuC,cAAczf,IATlB,CAAAwf,EAAAphC,KAAA,eAAAohC,EAAAnwB,OAAA,SAWXqN,GAXW,UAcpBrf,EAAUA,EAAQxD,cAEd2jC,EAAM,GACJxqB,EAAiBxhB,EAAKye,qBACtB8R,EAAmBvwB,EAAK4wB,uBACxBqb,EAAejsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,aAC7Dm7B,EAAgBlsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,cAC9Do7B,EAAoBnsC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,gBAC1Fq7B,EAAuBpsC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fs7B,EAAuBrsC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fu7B,EAAuBtsC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fw7B,EAAyBvsC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,qBAE/Fy7B,EAA+C,YAA5BhrB,EAAe9C,SAAyB6R,EAAmBvwB,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgBwf,KAEzJ0b,EAAahd,UAAWgd,EAAaiC,UAAU1B,GA7B/B,CAAAwB,EAAAphC,KAAA,gBA8BZ6/B,EAAiBR,EAAaiC,UAAU1B,GACxCE,EAAyB1sC,EAAK+Q,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,oBAClF47B,EAhCY,GAAA/tC,OAgCS6tC,EAhCT,YAAA7tC,OAgCkCiN,EAhClC,0DAAAjN,OAgCkGqtC,EAAahtC,KAE3H2tC,EAAoB5sC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgBy7B,IAC7FK,EAAkBX,EAAcgC,UAAUtB,GAC1CE,EApCY,GAAAluC,OAoCWiuC,EApCX,2CAAAjuC,OAoCoEoB,EAAK3E,MAAMwQ,QApC/E,cAqCZkhC,EArCY,GAAAnuC,OAqCiBiuC,EArCjB,0CAAAjuC,OAqCyEoB,EAAK3E,MAAMwQ,QArCpF,cAsCZmhC,EAtCY,GAAApuC,OAsCyBiuC,EAtCzB,kDAAAjuC,OAsCyFoB,EAAK3E,MAAMwQ,QAtCpG,cAAAmiC,EAAAphC,KAAA,GA8CRsQ,QAAQqD,IAAI,CACpBvgB,EAAKmuC,+BACLnuC,EAAKouC,kBAAkBzB,EAAiB,KACxC3sC,EAAKquC,wBAAwBvB,EAAmBZ,EAAczvC,KAAM,KACpEuD,EAAKquC,wBAAwBtB,EAAyBb,EAAczvC,KAAM,KAC1EuD,EAAKquC,wBAAwBrB,EAAiCd,EAAczvC,KAAM,OAnDlE,WAAAwwC,EAAAe,EAAAt+B,KAAAw9B,EAAA1wC,OAAA4yB,EAAA,EAAA5yB,CAAAywC,EAAA,GAyChBE,EAzCgBD,EAAA,GA0ChBE,EA1CgBF,EAAA,GA2ChBphC,EA3CgBohC,EAAA,GA4ChBG,EA5CgBH,EAAA,GA6ChBI,EA7CgBJ,EAAA,GA2DZK,EAAsB,GACtBC,EAAuB,GAC7BhxC,OAAOqQ,OAAO6/B,GAAwB/vC,QAAQ,SAAA2B,GACxCA,EAAYgwC,YACdd,EAAqB9kC,KAAKpK,EAAYgwC,WAAWlmC,QAAQC,eAEvD/J,EAAYiwC,WACdhB,EAAoB7kC,KAAKpK,EAAYiwC,UAAUnmC,QAAQC,iBAIvDolC,EAAa,KAEb3hC,GAAgBA,EAAapG,MAAQoG,EAAapG,KAAK8oC,QAAqD,oBAApC1iC,EAAapG,KAAK8oC,OAAO1hC,QAxEnF,CAAAkhC,EAAAphC,KAAA,gBAyEhB6gC,EAAa3hC,EAAapG,KAAK8oC,OAAO1hC,OAAO,SAAAC,GAAE,OAAIwgC,EAAoBlc,SAAStkB,EAAG0qB,gBAAgBpvB,gBAAkB,CAAC+jC,EAAqBhkC,QAAQC,cAAeikC,EAAqBlkC,QAAQC,eAAegpB,SAAStkB,EAAG8oB,GAAGxtB,gBAAkB0E,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAzE5Q2lC,EAAAphC,KAAA,GA0EV5M,EAAKiM,aAAawhC,EAAlB,eAAAgB,EAAAjyC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8B,SAAAqiC,EAAO3hC,GAAP,IAAAzO,EAAAqwC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlhB,EAAA3wB,EAAAwP,KAAA,SAAAsiC,GAAA,cAAAA,EAAApiC,KAAAoiC,EAAAniC,MAAA,cAC5BtO,EAAc9B,OAAOqQ,OAAO6/B,GAAwB5hB,KAAK,SAAAsL,GAAC,OAAIA,EAAExzB,OAASmK,EAAG2f,eAC5EiiB,EAF4BnyC,OAAA84B,EAAA,EAAA94B,CAAA,GAEVuQ,IACbE,OAAS,UACpB0hC,EAAWpa,UAAYqY,EACvB+B,EAAWK,WAAa1wC,EAAY0wC,WACpCL,EAAW3oC,MAAQhG,EAAKwQ,iBAAiBm+B,EAAW3oC,MAAO1H,EAAYtC,UANrC+yC,EAAAniC,KAAA,EAOV5M,EAAKivC,aAAaN,EAAW1rC,KAAMjD,EAAK3E,MAAM6zC,YAPpC,OAO5BN,EAP4BG,EAAAr/B,KAQ5Bm/B,EAAiBD,EAAYA,EAAU/a,KAAK/I,KAAK,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8jC,EAAkB/jC,QAAQC,gBAAiB,KACjIymC,EAAcD,GAAkB7uC,EAAK3E,MAAMogB,KAAKmX,MAAQvlB,SAASrN,EAAK3E,MAAMogB,KAAKmX,MAAMwc,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAItjC,KAAKimC,GAXyB,yBAAAI,EAAAjhC,SAAA4gC,EAAAvzC,SAA9B,gBAAAo0C,GAAA,OAAAd,EAAAzgC,MAAA7S,KAAA8S,YAAA,IA1EU,eAuFVy/B,EAAU5hC,EAAapG,KAAK8oC,OAAO1hC,OAAO,SAAAC,GAAE,OAAIwgC,EAAoBlc,SAAStkB,EAAG0qB,gBAAgBpvB,gBAAkB,CAAC+jC,EAAqBhkC,QAAQC,cAAeikC,EAAqBlkC,QAAQC,eAAegpB,SAAStkB,EAAGxF,KAAKc,gBAAkB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAvF/Q2lC,EAAAphC,KAAA,GAwFV5M,EAAKiM,aAAayhC,EAAlB,eAAA8B,EAAAhzC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2B,SAAAojC,EAAO1iC,GAAP,IAAAzO,EAAAqwC,EAAA,OAAA/gB,EAAA3wB,EAAAwP,KAAA,SAAAijC,GAAA,cAAAA,EAAA/iC,KAAA+iC,EAAA9iC,MAAA,OACzBtO,EAAc9B,OAAOqQ,OAAO6/B,GAAwB5hB,KAAK,SAAAsL,GAAC,OAAIA,EAAExzB,OAASmK,EAAG2f,eAC5EiiB,EAFyBnyC,OAAA84B,EAAA,EAAA94B,CAAA,GAEPuQ,IACbE,OAAS,OACpB0hC,EAAWW,UAAW,EACtBX,EAAWpa,UAAYqY,EACvB+B,EAAWK,WAAa1wC,EAAY0wC,WACpCL,EAAW3oC,MAAQhG,EAAKwQ,iBAAiBm+B,EAAW3oC,MAAO1H,EAAYtC,UACvEgwC,EAAItjC,KAAKimC,GARsB,wBAAAe,EAAA5hC,SAAA2hC,EAAAt0C,SAA3B,gBAAAw0C,GAAA,OAAAH,EAAAxhC,MAAA7S,KAAA8S,YAAA,IAxFU,WAoGZ0/B,EAAmBF,EAAWrvC,IAAI,SAAA2O,GAAE,OAAIA,EAAG9J,KAAKoF,gBAChDulC,EAAwB,IAAIhX,OAAO52B,EAAK3E,MAAMwQ,QAAQmpB,QAAQ,KAAM,IAAI3sB,cAAgB,OAC1FglC,GAAmBA,EAAgB3nC,MAAQ2nC,EAAgB3nC,KAAK8oC,QAAwD,oBAAvCnB,EAAgB3nC,KAAK8oC,OAAO1hC,QAtG/F,CAAAkhC,EAAAphC,KAAA,gBAuGVihC,EAAgBR,EAAgB3nC,KAAK8oC,OAAO1hC,OAAO,SAAAC,GAAE,OAAK4gC,EAAiBtc,SAAStkB,EAAG9J,KAAKoF,gBAAkB0E,EAAG8oB,GAAGxtB,gBAAkBkkC,EAAuBnkC,QAAQC,eAAiB0E,EAAGif,MAAM3jB,cAAcunC,MAAMhC,IAA0B7gC,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAvGhR2lC,EAAAphC,KAAA,GAwGV5M,EAAKiM,aAAa4hC,EAAlB,eAAAgC,EAAArzC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAiC,SAAAyjC,EAAO/iC,GAAP,IAAAzO,EAAAqwC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlhB,EAAA3wB,EAAAwP,KAAA,SAAAsjC,GAAA,cAAAA,EAAApjC,KAAAojC,EAAAnjC,MAAA,cAC/BtO,EAAc9B,OAAOqQ,OAAO6/B,GAAwB5hB,KAAK,SAAAsL,GAAC,MAAe,SAAXA,EAAExzB,QAChE+rC,EAF+BnyC,OAAA84B,EAAA,EAAA94B,CAAA,GAEbuQ,IACbE,OAAS,UACpB0hC,EAAWjiB,YAAc,OACzBiiB,EAAWpa,UAAYqY,EACvB+B,EAAWK,WAAa1wC,EAAY0wC,WACpCL,EAAW3oC,MAAQhG,EAAKwQ,iBAAiBm+B,EAAW3oC,MAAO1H,EAAYtC,UAPlC+zC,EAAAnjC,KAAA,EAQb5M,EAAKivC,aAAaN,EAAW1rC,KAAMjD,EAAK3E,MAAM6zC,YARjC,OAQ/BN,EAR+BmB,EAAArgC,KAS/Bm/B,EAAiBD,EAAYA,EAAU/a,KAAK/I,KAAK,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8jC,EAAkB/jC,QAAQC,gBAAiB,KACjIymC,EAAcD,GAAkB7uC,EAAK3E,MAAMogB,KAAKmX,MAAQvlB,SAASrN,EAAK3E,MAAMogB,KAAKmX,MAAMwc,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAItjC,KAAKimC,GAZ4B,yBAAAoB,EAAAjiC,SAAAgiC,EAAA30C,SAAjC,gBAAA60C,GAAA,OAAAH,EAAA7hC,MAAA7S,KAAA8S,YAAA,IAxGU,aAwHdq/B,GAA2BA,EAAwB5nC,MAAQ4nC,EAAwB5nC,KAAK8oC,QAAgE,oBAA/ClB,EAAwB5nC,KAAK8oC,OAAO1hC,QAxH/H,CAAAkhC,EAAAphC,KAAA,gBAyHVkhC,EAAaR,EAAwB5nC,KAAK8oC,OAAO1hC,OAAO,SAAAC,GAAE,OAAK4gC,EAAiBtc,SAAStkB,EAAG9J,KAAKoF,gBAAkB0E,EAAGxF,KAAKc,gBAAkBgkC,EAAqBjkC,QAAQC,gBAAkB0E,EAAGif,MAAM3jB,cAAcunC,MAAMhC,IAA0B7gC,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAzHpR2lC,EAAAphC,KAAA,GA0HV5M,EAAKiM,aAAa6hC,EAAlB,eAAAmC,EAAAzzC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8B,SAAA6jC,EAAOnjC,GAAP,IAAAzO,EAAAqwC,EAAA,OAAA/gB,EAAA3wB,EAAAwP,KAAA,SAAA0jC,GAAA,cAAAA,EAAAxjC,KAAAwjC,EAAAvjC,MAAA,OAC5BtO,EAAc9B,OAAOqQ,OAAO6/B,GAAwB5hB,KAAK,SAAAsL,GAAC,MAAe,SAAXA,EAAExzB,QAChE+rC,EAF4BnyC,OAAA84B,EAAA,EAAA94B,CAAA,GAEVuQ,IACbE,OAAS,OACpB0hC,EAAWW,UAAW,EACtBX,EAAWjiB,YAAc,OACzBiiB,EAAWpa,UAAYqY,EACvB+B,EAAWrhC,UAAYD,SAASN,EAAGO,WACnCqhC,EAAWK,WAAa1wC,EAAY0wC,WACpCL,EAAW3oC,MAAQhG,EAAKwQ,iBAAiBm+B,EAAW3oC,MAAO1H,EAAYtC,UACvEgwC,EAAItjC,KAAKimC,GAVyB,yBAAAwB,EAAAriC,SAAAoiC,EAAA/0C,SAA9B,gBAAAi1C,GAAA,OAAAH,EAAAjiC,MAAA7S,KAAA8S,YAAA,IA1HU,aAwIdm/B,GAAcA,EAAW1nC,MAAQ0nC,EAAW1nC,KAAKA,MAAQ0nC,EAAW1nC,KAAKA,KAAK2qC,OAAS7zC,OAAOqQ,OAAOugC,EAAW1nC,KAAKA,KAAK2qC,OAAO3zC,QAxInH,CAAAsxC,EAAAphC,KAAA,gBAyIVL,EAAc6gC,EAAW1nC,KAAKA,KAAK2qC,MAAMvjC,OAAO,SAAAC,GAAE,OAAIA,EAAGujC,YAAc9C,EAAqBnc,SAAStkB,EAAGujC,WAAWjoC,iBAzIzG2lC,EAAAphC,KAAA,GA2IV5M,EAAKiM,aAAaM,EAAlB,eAAAgkC,EAAA/zC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+B,SAAAmkC,EAAOzjC,GAAP,IAAAzO,EAAAmyC,EAAAC,EAAA,OAAA9iB,EAAA3wB,EAAAwP,KAAA,SAAAkkC,GAAA,cAAAA,EAAAhkC,KAAAgkC,EAAA/jC,MAAA,WAC7BtO,EAAc9B,OAAOqQ,OAAO6/B,GAAwB5hB,KAAK,SAAAxsB,GAAW,OAAKA,EAAYgwC,YAAcvhC,EAAGujC,YAAchyC,EAAYgwC,WAAWlmC,QAAQC,gBAAkB0E,EAAGujC,WAAWjoC,kBACpK/J,EAAYgwC,WAFE,CAAAqC,EAAA/jC,KAAA,eAAA+jC,EAAA9yB,OAAA,oBAKnCvf,EAAY8J,QAAU9J,EAAYgwC,WAAWlmC,QACxCkD,GAAkBA,EAAc5O,SAAU4O,EAAc+lB,SAAS/yB,EAAYD,OAN/C,CAAAsyC,EAAA/jC,KAAA,YAQR,cADnB6jC,EAAYzwC,EAAK4wC,mBAAmB7jC,EAAIzO,IAChC2O,OARmB,CAAA0jC,EAAA/jC,KAAA,gBAS/B6jC,EAAUI,QAAS,EACnBJ,EAAUlc,UAAYiY,EACtBiE,EAAUzB,WAAa1wC,EAAY0wC,WAXJ2B,EAAA/jC,KAAA,GAYJ5M,EAAK3E,MAAMy1C,eAAeC,eAAeN,EAAUxtC,MAZ/C,WAY/BwtC,EAAUnB,SAZqBqB,EAAAjhC,KAa/B+gC,EAAUI,QAAS,GAEfvyC,EAAYiwC,YAAakC,EAAUnB,SAfR,CAAAqB,EAAA/jC,KAAA,gBAgBvB8jC,EAAiB1wC,EAAK3E,MAAMy1C,eAAeE,MAAM1yC,EAAYiwC,UAAUnmC,SAAQ,GAhBxDuoC,EAAA/jC,KAAA,GAiBJ8jC,EAAeO,iBAAiBR,EAAUxtC,MAjBtC,QAiB7BwtC,EAAUI,OAjBmBF,EAAAjhC,KAAA,QAoB/Bs8B,EAAItjC,KAAK+nC,GApBsB,yBAAAE,EAAA7iC,SAAA0iC,EAAAr1C,SAA/B,gBAAA+1C,GAAA,OAAAX,EAAAviC,MAAA7S,KAAA8S,YAAA,IA3IU,eAuKpB+9B,EAAMA,EAAIxD,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWhpB,SAASpQ,EAAEqQ,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,IAvK3D0gC,EAAAnwB,OAAA,SA2Kb7d,EAAKmrB,cAAcqD,EAAewd,EAAK,MA3K1B,yBAAAgC,EAAAlgC,SAAAi+B,EAAA5wC,SA36CHA,KAwlDnBg2C,kBAxlDmB30C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwlDC,SAAA+kC,IAAA,IAAAvlC,EAAAP,EAAA+lC,EAAA1a,EAAA2a,EAAAC,EAAAhT,EAAA0N,EAAAQ,EAAA+E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7F,EAAA8F,EAAAC,EAAA5hC,EAAA6hC,EAAAC,EAAAhkC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAylC,GAAA,cAAAA,EAAAvlC,KAAAulC,EAAAtlC,MAAA,UAAOf,EAAPomC,EAAAv1C,OAAA,QAAAiuB,IAAAsnB,EAAA,IAAAA,EAAA,GAAwB3mC,EAAxB2mC,EAAAv1C,OAAA,QAAAiuB,IAAAsnB,EAAA,GAAAA,EAAA,GAAwC,GAAIZ,EAA5CY,EAAAv1C,OAAA,QAAAiuB,IAAAsnB,EAAA,IAAAA,EAAA,IAClBpmC,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,UAExBP,GAAkBA,EAAc5O,OAH/B,CAAAw1C,EAAAtlC,KAAA,eAAAslC,EAAAr0B,OAAA,SAIT,IAJS,UAOlBhS,EAAUA,EAAQxD,cAEdsuB,EAAU,GACV2a,EAAU,KACVC,EAAe,KACbhT,EAAkBv+B,EAAK4wB,yBAEvBqb,EAAejsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,cAGlDke,UAAWgd,EAAaiC,UAAU3P,GAjBjC,CAAA2T,EAAAtlC,KAAA,YAkBV6/B,EAAiBR,EAAaiC,UAAU3P,GAG9CgT,EAAY,GAAA3yC,OAAM6tC,EAAN,YAAA7tC,OAA+BiN,EAA/B,mDAAAjN,OAAwFqtC,EAAahtC,QACjHqyC,EAAUtxC,EAAKmyC,iBAAiBZ,KAGjBD,EAAQ5rC,MAAQ4rC,EAAQ5rC,KAAKA,MAAQ4rC,EAAQ5rC,KAAKA,KAAK2qC,OAAS7zC,OAAOqQ,OAAOykC,EAAQ5rC,KAAKA,KAAK2qC,OAAO3zC,QAzBtG,CAAAw1C,EAAAtlC,KAAA,gBA2BR4kC,EAAah1C,OAAOqQ,OAAOykC,EAAQ5rC,KAAKA,KAAK2qC,OAAO3zC,OACpD+0C,EAAej1C,OAAOqQ,OAAOykC,EAAQ5rC,KAAKA,KAAK2qC,OAAOpgC,MACtDyhC,EAAwBD,GAAgBA,EAAaW,aAAe/kC,SAASokC,EAAaW,cAAgB,EAAI,EAE9GT,EA/BQ,GAAA/yC,OA+BuB6tC,EA/BvB,YAAA7tC,OA+BgDiN,EA/BhD,oDAAAjN,OA+B0G4yC,GA/B1GU,EAAAtlC,KAAA,GAgCQ5M,EAAKouC,kBAAkBuD,EAA2B,IAhC1D,cAgCVC,EAhCUM,EAAAxiC,OAkCGkiC,EAAUlsC,KAAKA,KAAK2qC,OAASuB,EAAUlsC,KAAKA,KAAK2qC,MAAM3zC,QAlC1D,CAAAw1C,EAAAtlC,KAAA,gBAAAslC,EAAAtlC,KAAA,GAmCM5M,EAAKqyC,iBAAiBT,EAAUlsC,KAAKA,KAAK2qC,MAAO/kC,GAnCvD,SAmCZsmC,EAnCYM,EAAAxiC,OAsCKlT,OAAOqQ,OAAO+kC,GAAWl1C,SAElCm1C,EAAqBr1C,OAAOqQ,OAAO+kC,GAAWxzC,IAAI,SAAAsS,GAAM,OAAKrD,SAASqD,EAAO0hC,gBACvDjlC,KAAKqE,IAALxD,MAAAb,KAAI3Q,OAAA0/B,EAAA,EAAA1/B,CAAQq1C,KAGbH,IAEzBl1C,OAAOqQ,OAAO+kC,GAAWj1C,QAAQ,SAACoQ,GAChBvQ,OAAOC,KAAK60C,EAAQ5rC,KAAKA,KAAK2qC,OAAOhf,SAAStkB,EAAGulC,WAE/DhB,EAAQ5rC,KAAKA,KAAK2qC,MAAMtjC,EAAGulC,SAAWvlC,KAK1C/M,EAAKuyC,wBAAwBhB,EAAcD,EAAQ5rC,KAAKA,KAAK2qC,SAtDrD,QAAA6B,EAAAtlC,KAAA,iBA2Dd0kC,EAAU,KA3DI,WA8DZtF,EAAMsF,EAEND,GACFhd,QAAQ8a,IAAI,cAAenD,GAGxBA,EApEW,CAAAkG,EAAAtlC,KAAA,gBAAAslC,EAAAtlC,KAAA,GAsEF5M,EAAKwyC,YAAYjB,GAtEf,YAsEdvF,EAtEckG,EAAAxiC,OA0EDs8B,EAAItmC,MAAsC,IAA9B2H,SAAS2+B,EAAItmC,KAAKwH,QA1E7B,CAAAglC,EAAAtlC,KAAA,SA2ERklC,EAAe,EACfC,GAAgB,EA5ER,eAAAG,EAAAtlC,KAAA,GA8EJ5M,EAAK6gC,aAAa,KA9Ed,eAAAqR,EAAAtlC,KAAA,GA+EE5M,EAAKwyC,YAAYjB,GA/EnB,QA+EVvF,EA/EUkG,EAAAxiC,KAgFVoiC,IACAC,KAAgB/F,IAAOA,EAAItmC,OAAO2H,SAAS2+B,EAAItmC,KAAKwH,QAjF1C,WAmFH4kC,EAAe,IAAMC,EAnFlB,CAAAG,EAAAtlC,KAAA,iBAuFVo/B,GAAOA,EAAItmC,MAAQ2H,SAAS2+B,EAAItmC,KAAKwH,QAAU,IAC3CiD,EAAY9C,SAASe,KAAK04B,MAAQ,KAElCkL,EAAc,CAClBtsC,KAAM,CACJA,KAAKsmC,EAAItmC,MAEXyK,aAEFnQ,EAAKyyC,mCAAmC,yBAA0BlB,EAAcS,IAhGpE,aAqGZhG,GAAOA,EAAItmC,MAAQsmC,EAAItmC,KAAKA,MAAQsmC,EAAItmC,KAAKA,KAAK2qC,OArGtC,CAAA6B,EAAAtlC,KAAA,SAsGd+pB,EAAUqV,EAAItmC,KAAKA,KAAK2qC,MAtGV6B,EAAAtlC,KAAA,wBAAAslC,EAAAr0B,OAAA,SAwGP,IAxGO,eAAAq0B,EAAAr0B,OAAA,SA4GX,CACL8Y,UACA2a,UACAC,iBA/GgB,yBAAAW,EAAApkC,SAAAsjC,EAAAj2C,SAxlDDA,KA0sDnBu3C,oBA1sDmBl2C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0sDG,SAAAsmC,IAAA,IAAA9mC,EAAA+mC,EAAAC,EAAAvnC,EAAA+lC,EAAAliC,EAAA2jC,EAAAvU,EAAA2N,EAAAvV,EAAA2a,EAAAC,EAAA1E,EAAAkG,EAAArB,EAAAsB,EAAApB,EAAAC,EAAA7F,EAAAiH,EAAAhlC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAymC,GAAA,cAAAA,EAAAvmC,KAAAumC,EAAAtmC,MAAA,UAAOf,EAAPonC,EAAAv2C,OAAA,QAAAiuB,IAAAsoB,EAAA,IAAAA,EAAA,GAAwBL,EAAxBK,EAAAv2C,OAAA,QAAAiuB,IAAAsoB,EAAA,GAAAA,EAAA,GAA2C,EAAGJ,EAA9CI,EAAAv2C,OAAA,QAAAiuB,IAAAsoB,EAAA,GAAAA,EAAA,GAA+D,SAAU3nC,EAAzE2nC,EAAAv2C,OAAA,QAAAiuB,IAAAsoB,EAAA,GAAAA,EAAA,GAAyF,GAAI5B,EAA7F4B,EAAAv2C,OAAA,QAAAiuB,IAAAsoB,EAAA,IAAAA,EAAA,IACpBpnC,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,UAExBP,GAAkBA,EAAc5O,OAH7B,CAAAw2C,EAAAtmC,KAAA,eAAAsmC,EAAAr1B,OAAA,SAIX,IAJW,UAOpBhS,EAAUA,EAAQxD,cAEZ8G,EAAmBnP,EAAK3E,MAAM8T,iBAG9B2jC,EAAuB9yC,EAAK+Q,gBAAgB,CAAC,UAAW,qBAC9D6hC,EAAmBzlC,KAAKqE,IAAIshC,EAAsBF,GAE5CrU,EAAkBv+B,EAAK4wB,uBACvBsb,EAAgBlsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,cAEhE4lB,EAAU,GACV2a,EAAU,KACVC,EAAe,MAGfrF,EAAcjd,UAAWid,EAAcgC,UAAU3P,GAvBjC,CAAA2U,EAAAtmC,KAAA,YAwBZigC,EAAkBX,EAAcgC,UAAU3P,GAGhDgT,EAAY,GAAA3yC,OAAMiuC,EAAN,cAAAjuC,OAAkCuQ,EAAlC,2CAAAvQ,OAA4FiN,EAA5F,gBAAAjN,OAAkHk0C,EAAlH,cAAAl0C,OAAmJi0C,EAAnJ,gBACZvB,EAAUtxC,EAAKmyC,iBAAiBZ,KAGjBD,EAAQ5rC,KAAK8oC,QAAUhyC,OAAOqQ,OAAOykC,EAAQ5rC,KAAK8oC,QAAQ9xC,QA/BvD,CAAAw2C,EAAAtmC,KAAA,gBAiCVmmC,EAAqBv2C,OAAOqQ,OAAOykC,EAAQ5rC,KAAK8oC,QAAQpwC,IAAI,SAAA2O,GAAE,OAAKM,SAASN,EAAGyS,eAC/EkyB,EAAwBvkC,KAAKqE,IAALxD,MAAAb,KAAI3Q,OAAA0/B,EAAA,EAAA1/B,CAAQu2C,IAEpCC,EApCU,GAAAp0C,OAoCsBiuC,EApCtB,cAAAjuC,OAoCkDuQ,EApClD,2CAAAvQ,OAoC4GiN,EApC5G,gBAAAjN,OAoCkI8yC,EApClI,cAAA9yC,OAoCoKi0C,EApCpK,aAAAK,EAAAtmC,KAAA,GAsCM5M,EAAKquC,wBAAwB2E,EAA4B9G,EAAczvC,KAAM,IAtCnF,cAsCZm1C,EAtCYsB,EAAAxjC,OAwCCkiC,EAAUlsC,KAAK8oC,QAAUoD,EAAUlsC,KAAK8oC,OAAO9xC,QAxChD,CAAAw2C,EAAAtmC,KAAA,gBAAAsmC,EAAAtmC,KAAA,GA0CI5M,EAAKmzC,kBAAkBvB,EAAUlsC,KAAK8oC,OAAQljC,GAAe,GAAM,GA1CvE,SA0CdsmC,EA1CcsB,EAAAxjC,OA4CGlT,OAAOqQ,OAAO+kC,GAAWl1C,SAElCm1C,EAAqBr1C,OAAOqQ,OAAO+kC,GAAWxzC,IAAI,SAAAsS,GAAM,OAAKrD,SAASqD,EAAO8O,eACvDrS,KAAKqE,IAALxD,MAAAb,KAAI3Q,OAAA0/B,EAAA,EAAA1/B,CAAQq1C,KAGbH,IAEzBl1C,OAAOqQ,OAAO+kC,GAAWj1C,QAAQ,SAACoQ,GAChBvQ,OAAOC,KAAK60C,EAAQ5rC,KAAK8oC,QAAQnd,SAAStkB,EAAGo8B,WAE3DmI,EAAQ5rC,KAAK8oC,OAAOzhC,EAAGo8B,SAAWp8B,KAKtC/M,EAAKuyC,wBAAwBhB,EAAcD,EAAQ5rC,KAAK8oC,UA5D9C,QAAA0E,EAAAtmC,KAAA,iBAiEhB0kC,EAAU,KAjEM,WAoEdtF,EAAMsF,EAEND,GACFhd,QAAQ8a,IAAI,cAAenD,GAGxBA,EA1Ea,CAAAkH,EAAAtmC,KAAA,gBAAAsmC,EAAAtmC,KAAA,GA4EJ5M,EAAKquC,wBAAwBkD,EAAcrF,EAAczvC,KAAM,GA5E3D,QA4EhBuvC,EA5EgBkH,EAAAxjC,KAAA,aA+Gds8B,GAAOA,EAAItmC,MAAQsmC,EAAItmC,KAAK8oC,QA/Gd,CAAA0E,EAAAtmC,KAAA,SAgHhB+pB,EAAUqV,EAAItmC,KAAK8oC,OAhHH0E,EAAAtmC,KAAA,wBAAAsmC,EAAAr1B,OAAA,SAkHT,IAlHS,eAAAq1B,EAAAr1B,OAAA,SAsHb,CACL8Y,UACA2a,UACAC,iBAzHkB,yBAAA2B,EAAAplC,SAAA6kC,EAAAx3C,SA1sDHA,KAs0DnBikC,YAt0DmB5iC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAs0DL,SAAA+mC,IAAA,IAAAvnC,EAAA+mC,EAAAC,EAAAvnC,EAAAqrB,EAAA0c,EAAAplC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA6mC,GAAA,cAAAA,EAAA3mC,KAAA2mC,EAAA1mC,MAAA,cAAOf,EAAPwnC,EAAA32C,OAAA,QAAAiuB,IAAA0oB,EAAA,IAAAA,EAAA,GAAwBT,EAAxBS,EAAA32C,OAAA,QAAAiuB,IAAA0oB,EAAA,GAAAA,EAAA,GAA2C,EAAGR,EAA9CQ,EAAA32C,OAAA,QAAAiuB,IAAA0oB,EAAA,GAAAA,EAAA,GAA+D,SAAU/nC,EAAzE+nC,EAAA32C,OAAA,QAAAiuB,IAAA0oB,EAAA,GAAAA,EAAA,GAAyF,GAAzFC,EAAA1mC,KAAA,EACU5M,EAAK4L,gBAAgBC,EAAS+mC,EAAkBC,EAAgBvnC,GAD1E,cACNqrB,EADM2c,EAAA5jC,KAAA4jC,EAAAz1B,OAAA,SAGL7d,EAAKuzC,eAAe5c,EAASrrB,IAHxB,wBAAAgoC,EAAAxlC,SAAAslC,EAAAj4C,SAt0DKA,KA20DnBo3C,wBAA0B,SAACiB,EAAUxH,GACnC,IAAMyH,EAAa,GACnBj3C,OAAOC,KAAKuvC,GAAKrvC,QAAQ,SAAAud,GACvB,IAAMnN,EAAKi/B,EAAI9xB,IACXnN,EAAGyS,aAAiBzS,EAAGG,QAAsC,YAA5BH,EAAGG,OAAO7E,gBAC7CorC,EAAWv5B,GAAUnN,KAKzB,IAAM2mC,EAAgB,CACpBhuC,KAAM,CACJ8oC,OAAQiF,IAIZzzC,EAAK2zC,kBAAkBH,GAAU,EAAOE,IA31DvBv4C,KA61DnByQ,gBA71DmBpP,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA61DD,SAAAunC,IAAA,IAAA/nC,EAAA+mC,EAAAC,EAAAvnC,EAAA+lC,EAAAwC,EAAAryB,EAAAwqB,EAAA8H,EAAAnd,EAAA2a,EAAAC,EAAAwC,EAAAC,EAAA/lC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAwnC,GAAA,cAAAA,EAAAtnC,KAAAsnC,EAAArnC,MAAA,OAAOf,EAAPmoC,EAAAt3C,OAAA,QAAAiuB,IAAAqpB,EAAA,IAAAA,EAAA,GAAwBpB,EAAxBoB,EAAAt3C,OAAA,QAAAiuB,IAAAqpB,EAAA,GAAAA,EAAA,GAA2C,EAAGnB,EAA9CmB,EAAAt3C,OAAA,QAAAiuB,IAAAqpB,EAAA,GAAAA,EAAA,GAA+D,SAAU1oC,EAAzE0oC,EAAAt3C,OAAA,QAAAiuB,IAAAqpB,EAAA,GAAAA,EAAA,GAAyF,GAAI3C,EAA7F2C,EAAAt3C,OAAA,QAAAiuB,IAAAqpB,EAAA,IAAAA,EAAA,GAEZH,EAAa,KACXryB,EAAiBxhB,EAAKye,qBAHZw1B,EAAA3kB,GAKR9N,EAAec,SALP2xB,EAAArnC,KAMT,YANSqnC,EAAA3kB,GAAA,IAAA2kB,EAAA3kB,GAAA,yBAAA2kB,EAAArnC,KAAA,GAOO5M,EAAKmxC,kBAAkBtlC,EAASP,EAAe+lC,GAPtD,eAOZwC,EAPYI,EAAAvkC,KAAAukC,EAAAp2B,OAAA,2BAAAo2B,EAAArnC,KAAA,GAWO5M,EAAK0yC,oBAAoB7mC,EAAS+mC,EAAkBC,EAAgBvnC,EAAe+lC,GAX1F,eAWZwC,EAXYI,EAAAvkC,KAAAukC,EAAAp2B,OAAA,uBAgBZmuB,EAAM,IAEN6H,EAlBY,CAAAI,EAAArnC,KAAA,YAoBZ+pB,GApBYmd,EAuBVD,GAHFld,QACA2a,EArBYwC,EAqBZxC,QACAC,EAtBYuC,EAsBZvC,cAGED,EAzBU,CAAA2C,EAAArnC,KAAA,gBAAAqnC,EAAArnC,KAAA,GA2BA5M,EAAKk0C,iBAAiBvd,EAASrrB,GA3B/B,QA2BZ0gC,EA3BYiI,EAAAvkC,KAAAukC,EAAArnC,KAAA,iBA6BNmnC,EAAqBv3C,OAAOC,KAAKuD,EAAK3E,MAAMsQ,iBA7BtCsoC,EAAAE,GA+BJ3yB,EAAec,SA/BX2xB,EAAArnC,KAgCL,YAhCKqnC,EAAAE,GAAA,IAAAF,EAAAE,GAAA,yBAAAF,EAAArnC,KAAA,GAiCI5M,EAAKqyC,iBAAiB1b,EAASod,GAjCnC,eAiCR/H,EAjCQiI,EAAAvkC,KAAAukC,EAAAp2B,OAAA,2BAAAo2B,EAAArnC,KAAA,GAsCI5M,EAAKmzC,kBAAkBxc,EAASod,GAtCpC,eAsCR/H,EAtCQiI,EAAAvkC,KAAAukC,EAAAp2B,OAAA,oBA2CRmuB,GAAOxvC,OAAOC,KAAKuvC,GAAKtvC,QAC1BsD,EAAKuyC,wBAAwBhB,EAAcvF,GA5CjC,eAAAiI,EAAAp2B,OAAA,SAmDTrhB,OACJqQ,OAAOm/B,GACPl/B,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,OAASiN,EAAc+lB,SAAStkB,EAAG1O,MAAM2S,iBAC1Dw3B,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWp5B,EAAEqQ,UAAY+oB,EAAE/oB,WAAa,EAAI,KAtDpC,yBAAA2mC,EAAAnmC,SAAA8lC,EAAAz4C,SA71DCA,KAq5DnBgzC,6BAr5DmB3xC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAq5DY,SAAA+nC,IAAA,IAAAC,EAAA,OAAAzmB,EAAA3wB,EAAAwP,KAAA,SAAA6nC,GAAA,cAAAA,EAAA3nC,KAAA2nC,EAAA1nC,MAAA,cACvBynC,EAAmB,IAAIr0C,EAAK3E,MAAMk5C,YAAY92B,IAAI+2B,SACtD,CACE,CACEC,UAAU,EACVC,OAAQ,GACR9xC,KAAM,cACN+xC,QAAS,CACP,CACEC,aAAc,UACdhyC,KAAM,GACNhH,KAAM,YAGVi5C,SAAS,EACTC,gBAAiB,OACjBl5C,KAAM,aAGV,8CAnB2B04C,EAAAhlB,GAsBtBjiB,SAtBsBinC,EAAA1nC,KAAA,EAsBPynC,EAAiBU,QAAQC,cAAcC,OAtBhC,cAAAX,EAAAH,GAAAG,EAAA5kC,KAAA4kC,EAAAz2B,OAAA,YAAAy2B,EAAAhlB,IAAAglB,EAAAH,KAAA,wBAAAG,EAAAxmC,SAAAsmC,EAAAj5C,SAr5DZA,KA66DnB+5C,gCA76DmB,eAAAC,EAAA34C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA66De,SAAA+oC,EAAOl7B,GAAP,IAAAm7B,EAAAC,EAAAnI,EAAApgC,EAAA+hC,EAAA,OAAAlhB,EAAA3wB,EAAAwP,KAAA,SAAA8oC,GAAA,cAAAA,EAAA5oC,KAAA4oC,EAAA3oC,MAAA,cAAA2oC,EAAA3oC,KAAA,EAItBsQ,QAAQqD,IAAI,CACpBvgB,EAAKmuC,+BACLnuC,EAAK3E,MAAMk5C,YAAY92B,IAAI+3B,sBAAsBt7B,KANnB,cAAAm7B,EAAAE,EAAA7lC,KAAA4lC,EAAA94C,OAAA4yB,EAAA,EAAA5yB,CAAA64C,EAAA,GAE9BlI,EAF8BmI,EAAA,GAG9BvoC,EAH8BuoC,EAAA,GAS1BxG,EAAc/hC,GAAMA,EAAG8mB,MAAQ9mB,EAAG8mB,KAAKn3B,QAAUsD,EAAK3E,MAAMogB,KAAKmX,MAAQ5yB,EAAK3E,MAAMogB,KAAKmX,MAAMwc,kBAAkBriC,EAAG8mB,KAAK9mB,EAAG8mB,KAAKn3B,OAAS,GAAG2yC,OAAO,IAAM,KAThIkG,EAAA13B,OAAA,SAWzBixB,EAAczhC,SAAS8/B,IAAkB9/B,SAASyhC,GAAe,MAXxC,wBAAAyG,EAAAznC,SAAAsnC,EAAAj6C,SA76Df,gBAAAs6C,GAAA,OAAAN,EAAAnnC,MAAA7S,KAAA8S,YAAA,GAAA9S,KA07DnBo4C,eA17DmB,eAAAmC,EAAAl5C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA07DF,SAAAspC,EAAOhf,GAAP,IAAArrB,EAAAK,EAAAqzB,EAAA4W,EAAA3nC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAopC,GAAA,cAAAA,EAAAlpC,KAAAkpC,EAAAjpC,MAAA,UAAgBtB,EAAhBsqC,EAAAl5C,OAAA,QAAAiuB,IAAAirB,EAAA,GAAAA,EAAA,GAAgC,GAE1Cjf,GAAYA,EAAQj6B,QAAqC,oBAApBi6B,EAAQh6B,QAFnC,CAAAk5C,EAAAjpC,KAAA,eAAAipC,EAAAh4B,OAAA,SAGN,IAHM,cAMTlS,EAAkB3L,EAAK3E,MAAMsQ,gBAAkB3L,EAAK3E,MAAMsQ,gBAAkB3L,EAAKm/B,0BAElF7zB,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKkP,KAGxBqzB,EAAWrI,EAAQ7pB,OAAO,SAAAC,GAAE,OAAKzB,EAAc+lB,SAAStkB,EAAG1O,QAAU,CAAC,UAAW,WAAY,aAAc,cAAe,kBAAmB,mBAAoB,iBAAkB,mBAAmBgzB,SAAStkB,EAAGE,WAE3MvQ,QACXsiC,EAASwJ,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWp5B,EAAEqQ,UAAY+oB,EAAE/oB,WAAa,EAAI,IAf7CuoC,EAAAh4B,OAAA,SAkBRmhB,GAlBQ,wBAAA6W,EAAA/nC,SAAA6nC,EAAAx6C,SA17DE,gBAAA26C,GAAA,OAAAJ,EAAA1nC,MAAA7S,KAAA8S,YAAA,GAAA9S,KA88DnBy1C,mBAAqB,SAAC7jC,GAA2B,IAAvBzO,EAAuB2P,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACtC3P,EAAcA,GAAe9B,OAAOqQ,OAAO7M,EAAK3E,MAAMsQ,iBAAiBmf,KAAK,SAAAxsB,GAAW,OAAIyO,EAAGujC,YAAchyC,EAAY4wB,KAAK9mB,QAAQC,gBAAkB0E,EAAGujC,WAAWjoC,gBAErK,IAAM0tC,EAAkBhpC,EAAGipC,YAAc13C,GAAeA,EAAY4wB,KAAOniB,EAAGipC,WAAWlrB,KAAK,SAAAqkB,GAAG,OAAIA,EAAI8G,eAAe5tC,gBAAkB/J,EAAY8J,QAAQC,eAAsC,aAArB8mC,EAAI+G,QAAQtzC,MAAuBusC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,SAAfA,EAAMvzC,OAAiBoD,MAAMqC,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB8mC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,OAAfA,EAAMvzC,OAAeoD,MAAMqC,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAiB,KACxb+tC,EAAiBrpC,EAAGipC,YAAc13C,GAAeA,EAAY4wB,KAAOniB,EAAGipC,WAAWlrB,KAAK,SAAAqkB,GAAG,OAAIA,EAAI8G,eAAe5tC,gBAAkB/J,EAAY8J,QAAQC,eAAsC,aAArB8mC,EAAI+G,QAAQtzC,MAAuBusC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,OAAfA,EAAMvzC,OAAeoD,MAAMqC,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB8mC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,SAAfA,EAAMvzC,OAAiBoD,MAAMqC,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAiB,KACvbguC,EAAmBtpC,EAAGipC,YAAc13C,GAAeA,EAAY8J,QAAU2E,EAAGipC,WAAWlrB,KAAK,SAAAqkB,GAAG,OAAIA,EAAI8G,eAAe5tC,gBAAkB/J,EAAY8J,QAAQC,eAAsC,aAArB8mC,EAAI+G,QAAQtzC,MAAuBusC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,SAAfA,EAAMvzC,OAAiBoD,MAAMqC,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAA+F,+CAA9E8mC,EAAI+G,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,OAAfA,EAAMvzC,OAAeoD,MAAMqC,gBAAkE,KAElciuC,EAAeh4C,EAAYtC,SAC3B0wB,EAAcpuB,EAAYsE,MAAQtE,EAAYD,MAC9C8qC,EAAO,GAAAvqC,OAAMmO,EAAGulC,QAAT,KAAA1zC,OAAoB8tB,GAC3B6pB,EAAYj4C,EAAY4wB,KAAO5wB,EAAY4wB,KAAK7wB,MAAQ,KACxD4O,EAAS8oC,EAAkB,UAAaK,EAAiB,SAAYC,EAAmB,WAAa,KACrG/oC,EAAYD,SAASrN,EAAKmO,YAAYpB,EAAGypC,iBAAiBC,GAAGznC,UAAY,KAE3E0nC,EAAW,KACf,OAAQzpC,GACN,IAAK,UACHypC,EAAWX,EACX,MACF,IAAK,SACHW,EAAWN,EACX,MACF,IAAK,WACHM,EAAWL,EAaf,MAAO,CACLxiB,KARW9mB,EAAGipC,WAAajpC,EAAGipC,WAAW53C,IAAI,SAAA+wC,GAAG,MAAK,CACrDE,OAAQF,EAAIwH,kBACR,GAOJ3wC,MANY0wC,EAAW12C,EAAKwQ,iBAAiBkmC,EAASR,QAAQn7B,OAAO+P,KAAK,SAAAqrB,GAAK,MAAmB,UAAfA,EAAMvzC,OAAkBoD,MAAOswC,GAAgBt2C,EAAKwQ,iBAAiBzD,EAAG/G,MAAOswC,GAOlKrpC,SACAk8B,UACA77B,YACAipC,YACA7pB,cACAlN,YAVkBzS,EAAGipC,YAAcjpC,EAAGipC,WAAWt5C,OAASqQ,EAAGipC,WAAW,GAAG5D,aAAe,KAW1FkE,eACArzC,KAAM8J,EAAGulC,QACTzc,GAAI9oB,EAAGujC,WACPpjC,OAAQ,YACR3F,KAAMwF,EAAG6pC,aACTC,QAAS9pC,EAAG+pC,UACZt4B,SAAUzR,EAAGgqC,UACb14C,MAAOC,EAAYD,MACnBo5B,gBAAiBn5B,EAAY8J,UAngEdjN,KAsgEnBk3C,iBAtgEmB,eAAA2E,EAAAx6C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsgEA,SAAA4qC,EAAOjL,EAAK1gC,GAAZ,IAAA4rC,EAAAC,EAAA/J,EAAAgK,EAAAnpC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA4qC,GAAA,cAAAA,EAAA1qC,KAAA0qC,EAAAzqC,MAAA,UAA2BsqC,IAA3BE,EAAA16C,OAAA,QAAAiuB,IAAAysB,EAAA,KAAAA,EAAA,GACXD,EAAsB36C,OAAOqQ,OAAO7M,EAAK3E,MAAMsQ,iBAAiBvN,IAAI,SAAAE,GAAW,OAAIA,EAAY4wB,KAAK9mB,QAAQC,gBAC5G+kC,EAAapB,EAAMA,EAAIl/B,OAAO,SAAAC,GAAE,OAAIA,EAAGujC,YAAc6G,EAAoB9lB,SAAStkB,EAAGujC,WAAWjoC,iBAAgB+4B,OAAO,SAAC3U,EAAQ1f,GACpI,IAAMuqC,EAAWt3C,EAAK4wC,mBAAmB7jC,GAEzC,OADA0f,EAAO6qB,EAASnO,SAAWmO,EACpB7qB,GACN,IAAM,IAEFyqB,EARU,CAAAG,EAAAzqC,KAAA,eAAAyqC,EAAAzqC,KAAA,EAQkB5M,EAAKk3C,oBAAoB9J,EAAY9hC,GARvD,OAAA+rC,EAAA/nB,GAAA+nB,EAAA3nC,KAAA2nC,EAAAzqC,KAAA,gBAAAyqC,EAAA/nB,GAQwE8d,EARxE,eAAAiK,EAAAx5B,OAAA,SAAAw5B,EAAA/nB,IAAA,yBAAA+nB,EAAAvpC,SAAAmpC,EAAA97C,SAtgEA,gBAAAo8C,EAAAC,GAAA,OAAAR,EAAAhpC,MAAA7S,KAAA8S,YAAA,GAAA9S,KAghEnBs8C,mBAhhEmB,eAAAC,EAAAl7C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAghEE,SAAAsrC,EAAOhhB,GAAP,IAAArrB,EAAAssC,EAAA1D,EAAA2D,EAAA5pC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqrC,GAAA,cAAAA,EAAAnrC,KAAAmrC,EAAAlrC,MAAA,cAAgBtB,EAAhBusC,EAAAn7C,OAAA,QAAAiuB,IAAAktB,EAAA,GAAAA,EAAA,GAAgC,GAAID,IAApCC,EAAAn7C,OAAA,QAAAiuB,IAAAktB,EAAA,KAAAA,EAAA,GAAuD3D,IAAvD2D,EAAAn7C,OAAA,QAAAiuB,IAAAktB,EAAA,KAAAA,EAAA,GAAAC,EAAAlrC,KAAA,EACN5M,EAAKmzC,kBAAkBxc,EAASrrB,EAAessC,EAAY1D,GADrD,cAAA4D,EAAAj6B,OAAA,SAAAi6B,EAAApoC,MAAA,wBAAAooC,EAAAhqC,SAAA6pC,EAAAx8C,SAhhEF,gBAAA48C,GAAA,OAAAL,EAAA1pC,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmhEnBg4C,kBAnhEmB,eAAA6E,EAAAx7C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmhEC,SAAA4rC,EAAOthB,GAAP,IAAArrB,EAAAssC,EAAA1D,EAAApoC,EAAAosC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvqC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAgsC,GAAA,cAAAA,EAAA9rC,KAAA8rC,EAAA7rC,MAAA,UAAgBtB,EAAhBktC,EAAA97C,OAAA,QAAAiuB,IAAA6tB,EAAA,GAAAA,EAAA,GAAgC,GAAIZ,IAApCY,EAAA97C,OAAA,QAAAiuB,IAAA6tB,EAAA,KAAAA,EAAA,GAAuDtE,IAAvDsE,EAAA97C,OAAA,QAAAiuB,IAAA6tB,EAAA,KAAAA,EAAA,GACbx4C,EAAK3E,MAAMwQ,SAAY8qB,GAAYA,EAAQj6B,QAAqC,oBAApBi6B,EAAQh6B,QADvD,CAAA87C,EAAA7rC,KAAA,eAAA6rC,EAAA56B,OAAA,SAET,IAFS,UAKbvS,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKuD,EAAK3E,MAAMsQ,kBAGrCG,EAAe,GACfosC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmBp4C,EAAK+Q,gBAAgB,CAAC,QAAS,gBAClDsnC,EAAoBr4C,EAAK+Q,gBAAgB,CAAC,QAAS,iBACnDunC,EAAoBt4C,EAAK+Q,gBAAgB,CAAC,QAAS,sBACnDwnC,EAAuBv4C,EAAK+Q,gBAAgB,CAAC,QAAS,oBAI5DzF,EAAc3O,QAAQ,SAAA0B,GACpB,IAAMC,EAAc0B,EAAK3E,MAAMsQ,gBAAgBtN,GACzC24B,EAA2Bh3B,EAAK+Q,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnFkmB,EAAwB34B,EAAY44B,WAAa54B,EAAY44B,UAAUC,kBAAoB74B,EAAY44B,UAAUC,kBAAkB/uB,QAAU,KAC7IgvB,EAA4B94B,EAAY44B,WAAa54B,EAAY44B,UAAUC,mBAAqB74B,EAAY44B,UAAUC,kBAAkBE,aAAe/4B,EAAY44B,UAAUC,kBAAkBE,aAAe,GAC9MqhB,EAA2B14C,EAAK+Q,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,sBAErFumB,EAAiBt3B,EAAK+Q,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBzS,EAAY4wB,KAAK7wB,QAC/Gk5B,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkB/uB,QAAU,KAG7HuwC,EAAmB34C,EAAK+Q,gBAAgB,CAAC,QAAS,kBAAmBzS,EAAY4wB,KAAK7wB,QAE5Fs4B,EAAQh6B,QAAQ,SAAAoQ,GACd,IAAIqD,EAAgB9R,EAAYtC,SAC1Bu6C,EAAYj4C,EAAY4wB,KAAK7wB,MAC7Bu6C,EAAcjiB,EAAQ7pB,OAAO,SAAA+rC,GAAC,OAAIA,EAAE51C,OAAS8J,EAAG9J,OAChD61C,EAAeF,EAAYl8C,OAAS,GAAKk8C,EAAY9rC,OAAO,SAAAisC,GAAG,OAAIA,EAAIthB,gBAAgBpvB,gBAAkB/J,EAAY8J,QAAQC,gBAAe3L,OAAS,EACrJg7B,EAA0C,IAAvBkhB,EAAYl8C,QAAgBqQ,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAC3KsvB,EAA6C,IAAvBihB,EAAYl8C,QAAgBqQ,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAC5K2wC,EAAqBzhB,GAA8BxqB,EAAGxF,KAAKc,gBAAkBkvB,EAA2BlvB,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,cAEnP4wC,EAAsBH,GAAgBF,EAAY9tB,KAAK,SAAAiuB,GAAG,OAAIA,EAAIxxC,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAAkB0wC,EAAIljB,GAAGxtB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,eAAkB2uB,GAA4B+hB,EAAIljB,GAAGxtB,gBAAkB2uB,EAAyB5uB,QAAQC,eAAiBuwC,EAAY9rC,OAAO,SAAAosC,GAAI,OAAIA,EAAKzhB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAe3L,OAAS,KAC5Zy8C,EAAqBL,GAAgBF,EAAY9tB,KAAK,SAAAiuB,GAAG,OAAIA,EAAIthB,gBAAgBpvB,gBAAkB/J,EAAY8J,QAAQC,eAAiBuwC,EAAY9rC,OAAO,SAAAosC,GAAI,OAAIA,EAAKzhB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAe3L,QAAUq8C,EAAIljB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAExSmvB,EAAgBwhB,GAAuB/hB,IAA0BlqB,EAAGxF,KAAKc,gBAAkB4uB,EAAsB5uB,eAAiB+uB,EAA0Bh5B,IAAI,SAAC0H,GAAQ,OAAOA,EAAEuC,gBAAkBgpB,SAAStkB,EAAGxF,KAAKc,iBAAmB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cACtS+wC,EAAiBV,IAA6B3rC,EAAGxF,KAAKc,gBAAkBqwC,EAAyBtwC,QAAQC,eAAiBqwC,EAAyBrhB,aAAaj5B,IAAI,SAAC0H,GAAQ,OAAOA,EAAEuC,gBAAkBgpB,SAAStkB,EAAGxF,KAAKc,iBAAmB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cACtWuvB,EAAckhB,IAAiBthB,GAAiBzqB,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,gBAAkB0E,EAAG8oB,GAAGxtB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,eAAkB2uB,GAA4BjqB,EAAG8oB,GAAGxtB,gBAAkB2uB,EAAyB5uB,QAAQC,eAAiBuwC,EAAY9rC,OAAO,SAAAisC,GAAG,OAAIA,EAAIthB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAe3L,OAAS,GACzYm7B,EAAaihB,IAAiBthB,IAAkByhB,GAAuBlsC,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY8J,QAAQC,eAAiBuwC,EAAY9rC,OAAO,SAAAisC,GAAG,OAAIA,EAAIthB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,gBAAe3L,QAAUqQ,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,cAC9SgxC,EAAeT,EAAYl8C,OAAS,GAAKk8C,EAAY9rC,OAAO,SAAAisC,GAAG,OAAIz6C,EAAYyJ,UAAU3J,IAAI,SAAAxB,GAAC,OAAIA,EAAEwL,QAAQC,gBAAegpB,SAAS0nB,EAAIthB,gBAAgBpvB,iBAAgB3L,OAAS,GAAKqQ,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAGpPsnB,EAAmBgpB,GAAoBA,EAAiBvwC,QAAUuwC,EAAiBvwC,QAAU9J,EAAY4wB,KAAK9mB,QAG9GkxC,EAAUV,EAAY9tB,KAAK,SAAA/d,GAAE,OAAKA,EAAG0qB,gBAAgBpvB,gBAAkBgwC,EAAkBjwC,QAAQC,gBAAkB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,iBAC5NkxC,OAAwB5uB,IAAZ2uB,EAEZE,EAAmBD,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBiwC,EAAkBlwC,QAAQC,eAAiB0E,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GAChQ6oC,EAAkBF,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkBsnB,EAAiBtnB,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAGxF,KAAKc,gBAAkBiwC,EAAkBlwC,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GAE/P8oC,EAAmBH,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY8J,QAAQC,eAAiB0E,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBkwC,EAAqBnwC,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GACtQ+oC,EAAoBJ,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY8J,QAAQC,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAGxF,KAAKc,gBAAkBkwC,EAAqBnwC,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GAEvQgpC,EAAeL,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkBgwC,EAAkBjwC,QAAQC,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAGxF,KAAKc,gBAAkB+vC,EAAiBhwC,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GACpQipC,EAAgBN,GAAaxsC,EAAG0qB,gBAAgBpvB,gBAAkBgwC,EAAkBjwC,QAAQC,eAAiB0E,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkB+vC,EAAiBhwC,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,GAErQkpC,EAAqB/sC,EAAG0qB,gBAAgBpvB,gBAAkBgwC,EAAkBjwC,QAAQC,gBAAkBwxC,IAAkBJ,GAAmE1sC,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,cACxO0xC,EAAoBhtC,EAAG0qB,gBAAgBpvB,gBAAkBgwC,EAAkBjwC,QAAQC,gBAAkBuxC,IAAiBJ,GAAoEzsC,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,cAErO2xC,GAAeT,IAAc7hB,IAAqB2hB,IAAiBF,IAAuBrtC,EAAaiB,EAAG9J,OAAS8J,EAAGxF,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAC/OyvB,GAAYyhB,IAAc5hB,IAAwByhB,IAAmBH,IAAwBntC,EAAaiB,EAAG9J,OAAS8J,EAAG8oB,GAAGxtB,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAAiB0E,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAMtP,GAAIqvB,GAAoBC,GAAuBH,GAAiBI,GAAeC,GAAcC,GAAYkiB,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAmB,CAElT,IAAI1sC,EAAS,KACTk8B,EAAUp8B,EAAG9J,KAEb20B,EACF3qB,EAAS,UACA4qB,EACT5qB,EAAS,SACAuqB,GAAiB4hB,EAC1BnsC,EAAS,UACAyqB,EACTzqB,EAAS,OACA0qB,EACT1qB,EAAS,UACA6qB,EACT7qB,EAAS,OACA+sC,EACT/sC,EAAS,UACAosC,EACTpsC,EAAS,WACAusC,EACTvsC,EAAS,UACAwsC,EACTxsC,EAAS,WACA2sC,EACT3sC,EAAS,aACA4sC,EACT5sC,EAAS,cACAysC,EACTzsC,EAAS,iBACA0sC,EACT1sC,EAAS,kBACA8sC,EACT9sC,EAAS,kBACA6sC,IACT7sC,EAAS,oBAGX,IAAIoyB,EAAc,KAoBlB,GAnBIka,IACFpQ,GAAW,IAAMp8B,EAAG2f,YACpB2S,EAAcr/B,EAAKwQ,iBAAiB8oC,EAAQtzC,MAAOqyC,EAAkBr8C,WAGhE+9C,GAAqBD,KACxB3Q,GAAW,IAAMl8B,IAMjBF,EAAG0qB,gBAAgBpvB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cAChE+H,EAAgB,GACPmpC,IACTnpC,EAAgB/C,SAASN,EAAGupC,eAI1BxqC,EAAaq9B,GAEf,OAAQr9B,EAAaq9B,GAASl8B,QAC5B,IAAK,UACCnB,EAAaq9B,GAASl8B,SAAWA,GAAU4qB,IAC7C/rB,EAAaq9B,GAAS8Q,WAAaj6C,EAAKwQ,iBAAiBzD,EAAG/G,MAAOoK,IAErE,MACF,QACE,IAAKkpC,EAAS,CACZ,IAAMY,EAAWpuC,EAAaq9B,GAASnjC,MAAMwH,KAAKxN,EAAKwQ,iBAAiBzD,EAAG/G,MAAOoK,IAClFtE,EAAaq9B,GAASnjC,MAAQk0C,QAMpC,GAAIH,GAAqBD,EAClB3B,EAA0B9mB,SAAStkB,EAAG9J,KAAKoF,iBAC9Cg3B,EAAcr/B,EAAKwQ,iBAAiBzD,EAAG/G,MAAOqyC,EAAkBr8C,UAChEk8C,EAAkBxvC,KAAlBlM,OAAA84B,EAAA,EAAA94B,CAAA,GAA4BuQ,EAA5B,CAAgCo8B,UAAS9qC,QAAOk4C,YAAWlX,cAAapyB,SAAQjH,MAAOhG,EAAKwQ,iBAAiBzD,EAAG/G,MAAOoK,YAWzH,OARAtE,EAAaq9B,GAAb3sC,OAAA84B,EAAA,EAAA94B,CAAA,GAA8BuQ,EAA9B,CAAkCo8B,UAAS9qC,QAAOk4C,YAAWlX,cAAapyB,SAAQjH,MAAOhG,EAAKwQ,iBAAiBzD,EAAG/G,MAAOoK,KAGpH+nC,EAA0B9mB,SAAStkB,EAAG9J,KAAKoF,gBAC9C8vC,EAA0BzvC,KAAKqE,EAAG9J,KAAKoF,eAIjC4E,GACN,IAAK,WACH,IAAMktC,EAAOvB,EAAY9rC,OAAO,SAAAisC,GAAG,OAAKA,IAAQhsC,IAChD,GAAIotC,EAAKz9C,OAAS,EAAG,CACnB,IAAMq8C,EAAMoB,EAAK,GACjBruC,EAAaq9B,GAASiR,eAAiBp6C,EAAKwQ,iBAAiBuoC,EAAI/yC,MAAO+yC,EAAIzC,cAC5ExqC,EAAaq9B,GAASzc,YAAcqsB,EAAIrsB,YAE1C,MACF,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACH5gB,EAAaq9B,GAASzc,YAAcruB,QAWlD65C,EAAkBv7C,QAAQ,SAAAoQ,GACnBorC,EAA0B9mB,SAAStkB,EAAG9J,KAAKoF,iBAC9CyD,EAAaiB,EAAGo8B,SAAWp8B,MAI3B6qC,EAxMc,CAAAa,EAAA7rC,KAAA,gBAAA6rC,EAAA7rC,KAAA,GAyMK5M,EAAKk3C,oBAAoBprC,EAAcR,EAAe4oC,GAzM3D,QAyMhBpoC,EAzMgB2sC,EAAA/oC,KAAA,eAAA+oC,EAAA56B,OAAA,SA8MX/R,GA9MW,yBAAA2sC,EAAA3qC,SAAAmqC,EAAA98C,SAnhED,gBAAAk/C,GAAA,OAAArC,EAAAhqC,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmuEnBm/C,qBAAuB,SAACC,EAAOt9B,GAE7B,IAAMpR,EAAU7L,EAAK3E,OAAS2E,EAAK3E,MAAMwQ,QAAU7L,EAAK3E,MAAMwQ,QAAU,KAClE9G,EAAgB/E,EAAK3E,OAAS2E,EAAK3E,MAAM0J,cAAgB/E,EAAK3E,MAAM0J,cAAgB,KAE1F,IAAK8G,IAAY9G,IAAkB/E,EAAK3E,MAAMsQ,kBAAoB3L,EAAK3E,MAAMsQ,gBAAgB5G,GAC3F,OAAO,EAGT,IACMu4B,EADct9B,EAAK3E,MAAMsQ,gBAAgB5G,GAClBmqB,KAAK7wB,MAE9Bm8C,EAAYx6C,EAAKy6C,wBAChBD,EAAU3uC,KACb2uC,EAAU3uC,GAAW,IAGlB2uC,EAAU3uC,GAASyxB,KACtBkd,EAAU3uC,GAASyxB,GAAY,IAGjCkd,EAAU3uC,GAASyxB,GAAUid,GAASt9B,EACtCjd,EAAK06C,yBAAyBF,IAzvEbr/C,KA2vEnBu/C,yBAA2B,SAAA/gC,GACzB3Z,EAAKygB,gBAAgB,eAAgBrV,KAAKC,UAAUsO,KA5vEnCxe,KAiwEnBs/C,sBAAwB,WAA2D,IAA1D5uC,EAA0DoC,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAhD,KAAMqvB,EAA0CrvB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAA/B,KAAMlJ,EAAyBkJ,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAClEusC,EAAYx6C,EAAK26C,cAAc,gBAAgB,EAAM,IACrDhhC,EAAe3Z,EAAK3E,MAAMse,aAAXnd,OAAA84B,EAAA,EAAA94B,CAAA,GAA+BwD,EAAK3E,MAAMse,cAAiB,GAC5E8S,EAAS+tB,EAsBb,OApBI3uC,IACE2uC,EAAU3uC,IACZ4gB,EAAS+tB,EAAU3uC,GACfyxB,IACF7Q,EAASA,EAAO6Q,GAAY7Q,EAAO6Q,GAAY,GAE3Cv4B,GACFvI,OAAOC,KAAKkd,GAAchd,QAAQ,SAAA49C,GAChC,IAAMxtC,EAAK4M,EAAa4gC,IACnB9tB,EAAO8tB,IAAUxtC,EAAG1O,OAAS0O,EAAG1O,MAAM2S,gBAAkBjM,EAAciM,gBACzEyb,EAAO8tB,GAAS5gC,EAAa4gC,QAMrC9tB,EAAS,IAINA,GA1xEUtxB,KA4xEnB+7C,oBA5xEmB,eAAA0D,EAAAp+C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4xEG,SAAAwuC,EAAO/uC,GAAP,IAAAR,EAAA4oC,EAAA4G,EAAAN,EAAAO,EAAAC,EAAAC,EAAA7C,EAAA8C,EAAAjtC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0uC,GAAA,cAAAA,EAAAxuC,KAAAwuC,EAAAvuC,MAAA,cAAqBtB,EAArB4vC,EAAAx+C,OAAA,QAAAiuB,IAAAuwB,EAAA,GAAAA,EAAA,GAAqC,GAAIhH,IAAzCgH,EAAAx+C,OAAA,QAAAiuB,IAAAuwB,EAAA,KAAAA,EAAA,GAEf5vC,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKuD,EAAK3E,MAAMsQ,kBAGrCmvC,EAAa,GAI4B,kBAHzCN,EAAYx6C,EAAKy6C,yBAGAz6C,EAAK3E,MAAMwQ,WAC9B2uC,EAAUx6C,EAAK3E,MAAMwQ,SAAW,IAI5BkvC,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBj7C,EAAK+Q,gBAAgB,CAAC,QAAS,oBAC5DvU,OAAOC,KAAKw+C,GAAsBt+C,QAAQ,SAAA0B,GACxC,IAAMs6C,EAAmBsC,EAAqB58C,GACxC+8C,EAAkBp7C,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU4nC,EAAiBvf,UAAUpoB,gBACtFqqC,EAAmBD,EAAgBhzC,QAAQC,cACjD0yC,EAAkBM,GAAoBD,EACtCL,EAAkBM,GAAkBh9C,MAAQs6C,EAAiBvf,UAC7D4hB,EAAoBtyC,KAAK2yC,KAGrBjD,EAAmBp4C,EAAK+Q,gBAAgB,CAAC,QAAS,gBA3BpCoqC,EAAAvuC,KAAA,GAgCd5M,EAAKiM,aAAaX,EAAlB,eAAAgwC,EAAA9+C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAiC,SAAAkvC,EAAOx2C,GAAP,IAAAzG,EAAAg/B,EAAAiZ,EAAAiF,EAAAjvC,EAAA,OAAAqhB,EAAA3wB,EAAAwP,KAAA,SAAAgvC,GAAA,cAAAA,EAAA9uC,KAAA8uC,EAAA7uC,MAAA,UAE/BtO,EAAc0B,EAAK3E,MAAMsQ,gBAAgB5G,GACzCu4B,EAAWh/B,EAAY4wB,KAAK7wB,MAC5Bk4C,EAAYj4C,EAAY4wB,KAAK7wB,MAGoB,kBAA5Cm8C,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,KACvCkd,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAY,IAGtCke,EAX+Bh/C,OAAA84B,EAAA,EAAA94B,CAAA,GAWfg+C,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,MAE9C/wB,EAAc/P,OAAOqQ,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,OACxDwH,EAAY7P,OAdM,CAAA++C,EAAA7uC,KAAA,eAAA6uC,EAAA7uC,KAAA,EAgB7B5M,EAAKiM,aAAaM,EAAlB,eAAAmvC,EAAAl/C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+B,SAAAsvC,EAAO5uC,EAAI5L,GAAX,IAAAo5C,EAAAqB,EAAAhuC,EAAAC,EAAAguC,EAAAvc,EAAAwc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAzsB,EAAA0sB,EAAA,OAAAzuB,EAAA3wB,EAAAwP,KAAA,SAAA6vC,GAAA,cAAAA,EAAA3vC,KAAA2vC,EAAA1vC,MAAA,UAC7B2tC,EAD6B,KAAA37C,OAChBmO,EAAGO,UADa,OAE7BsuC,EAAWpB,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASC,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,EAE/Ga,EAAa,MAEbguC,EAAShuC,YAAe5N,EAAKgN,MAAM4uC,EAAShuC,YAAYjS,QANzB,CAAA2gD,EAAA1vC,KAAA,QAOjCgB,EAAa5N,EAAKgN,MAAM4uC,EAAShuC,YAPA0uC,EAAA1vC,KAAA,uBAAA0vC,EAAA1vC,KAAA,EASd5M,EAAKy9B,kBAAkBn/B,EAAayO,EAAGyS,YAAazS,EAAGO,WATzC,OASjCM,EATiC0uC,EAAA5sC,KAUjCksC,EAAShuC,WAAaA,EAVW,QAa/BC,EAAa7N,EAAKgN,MAAMD,EAAG/G,OAC3B61C,EAAmBjuC,EAAWpF,MAAMqF,GAGnC+tC,EAAS9gC,kBACZ8gC,EAAS9gC,gBAAkB/N,EAAG9J,MAlBGq5C,EAAAhtB,GAsB3BviB,EAAGE,OAtBwBqvC,EAAA1vC,KAuB5B,SAvB4B0vC,EAAAhtB,GAAA,GAwB5B,YAxB4BgtB,EAAAhtB,GAAA,GAyB5B,SAzB4BgtB,EAAAhtB,GAAA,GA0B5B,YA1B4BgtB,EAAAhtB,GAAA,GA2B5B,YA3B4BgtB,EAAAhtB,GAAA,GAmC5B,YAnC4BgtB,EAAAhtB,GAAA,GAoC5B,WApC4BgtB,EAAAhtB,GAAA,GA2C5B,aA3C4BgtB,EAAAhtB,GAAA,GAkD5B,YAlD4BgtB,EAAAhtB,GAAA,GAmD5B,aAnD4BgtB,EAAAhtB,GAAA,GA2D5B,oBA3D4BgtB,EAAAhtB,GAAA,GA4D5B,qBA5D4BgtB,EAAAhtB,GAAA,GAqE5B,eArE4BgtB,EAAAhtB,GAAA,GAsE5B,gBAtE4BgtB,EAAAhtB,GAAA,GAkH5B,mBAlH4BgtB,EAAAhtB,GAAA,GAmH5B,oBAnH4BgtB,EAAAhtB,GAAA,2BA4B1BssB,EAASruC,cACZquC,EAAS/tC,WAAaA,EACtB+tC,EAAS51C,MAAQ61C,EACjBD,EAASruC,YAAcsuC,EACvBD,EAASlvB,YAAc3nB,GAhCMu3C,EAAAz+B,OAAA,2BAqC1B+9B,EAASruC,cACZquC,EAAS51C,MAAQ6H,EACjB+tC,EAASruC,YAAcM,EACvB+tC,EAAS/tC,WAAaA,EAAW4R,IAAI7R,IAxCR0uC,EAAAz+B,OAAA,2BA4C1B+9B,EAASruC,cACZquC,EAAS/tC,WAAaA,EACtB+tC,EAASruC,YAAcsuC,EACvBD,EAAS51C,MAAQ41C,EAASxB,gBA/CGkC,EAAAz+B,OAAA,uBAoD1B+9B,EAASruC,YApDiB,CAAA+uC,EAAA1vC,KAAA,gBAAA0vC,EAAA1vC,KAAA,GAqDC5M,EAAKu8C,mBAAmBxvC,EAAGyS,aArD5B,QAqDvB8f,EArDuBgd,EAAA5sC,KAsD7BksC,EAAS/tC,WAAaA,EACtB+tC,EAASruC,YAAcsuC,EACvBD,EAAStc,gBAAkBA,EAxDE,eAAAgd,EAAAz+B,OAAA,uBA6D1B+9B,EAAStc,gBA7DiB,CAAAgd,EAAA1vC,KAAA,gBAAA0vC,EAAA1vC,KAAA,GA8DC5M,EAAKu8C,mBAAmBxvC,EAAGyS,aA9D5B,QA8DvB8f,EA9DuBgd,EAAA5sC,KA+D7BksC,EAAStc,gBAAkBA,EAC3Bsc,EAASruC,YAAcvN,EAAKgN,MAAM4uC,EAASvc,aAAa72B,MAAMozC,EAAStc,iBAhE1C,eAmE/Bsc,EAAS/tC,WAAa7N,EAAKgN,MAAM,GAnEFsvC,EAAAz+B,OAAA,uBAuE1B+9B,EAAStc,gBAvEiB,CAAAgd,EAAA1vC,KAAA,gBAAA0vC,EAAA1vC,KAAA,GAwEC5M,EAAKu8C,mBAAmBxvC,EAAGyS,aAxE5B,QAwEvB8f,EAxEuBgd,EAAA5sC,KAyE7BksC,EAAStc,gBAAkBA,EAzEE,WA4E1Bsc,EAASruC,YA5EiB,CAAA+uC,EAAA1vC,KAAA,YA8E7BgvC,EAASruC,YAAcvN,EAAKgN,MAAM,GAClC4uC,EAAS/tC,WAAa7N,EAAKgN,MAAM,IAEV8tC,EAAW/tC,EAAGo8B,SAjFR,CAAAmT,EAAA1vC,KAAA,SAAA0vC,EAAAnI,GAiFmB2G,EAAW/tC,EAAGo8B,SAjFjCmT,EAAA1vC,KAAA,wBAAA0vC,EAAA1vC,KAAA,GAiFmD,IAAIsQ,QAAJ,eAAAs/B,EAAAhgD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAowC,EAAOn/B,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAAiwC,GAAA,cAAAA,EAAA/vC,KAAA+vC,EAAA9vC,MAAA,OAC1F5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBzoC,EAAG9J,KAAM,SAACya,EAAK3Q,GACnD2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALgF,wBAAA2vC,EAAA5uC,SAAA2uC,EAAAthD,SAAZ,gBAAAwhD,EAAAC,GAAA,OAAAJ,EAAAxuC,MAAA7S,KAAA8S,YAAA,IAjFnD,QAAAquC,EAAAnI,GAAAmI,EAAA5sC,KAAA,SAiFvBssC,EAjFuBM,EAAAnI,MA6FtB2G,EAAW/tC,EAAGo8B,WACjB2R,EAAW/tC,EAAGo8B,SAAW6S,GAGrBC,EAAeD,EAAenoB,KAAK/mB,OAAO,SAAAqiC,GAAG,OAAK6L,EAAoB3pB,SAAS8d,EAAI/mC,QAAQC,gBAAkB8mC,EAAIE,OAAOF,EAAIE,OAAO3yC,OAAS,GAAG2L,gBAAlC,4BAAAzJ,OAAgFw5C,EAAiBhwC,QAAQ4sB,QAAQ,IAAK,IAAI3sB,iBAE7OrI,EAAKkf,UAAU,eAAgB+8B,GAE3BA,GAAgBA,EAAav/C,QAC/Bu/C,EAAat/C,QAAQ,SAAAwyC,GACnB,IAAI5hC,EAAcF,SAAS8hC,EAAIzpC,KAAM,IAC/Bm3C,EAAmB9B,EAAkB5L,EAAI/mC,QAAQC,eACjD+H,EAAgBysC,EAAiB7gD,SACvCuR,EAAcvN,EAAKwQ,iBAAiBjD,EAAa6C,GACjDwrC,EAASruC,YAAcquC,EAASruC,YAAYC,KAAKD,GACjDvN,EAAKkf,UAAU,oBAAsBnS,EAAG9J,KAAO,IAAK45C,EAAiBx+C,MAAOkP,EAAY9E,QAAQ,GAAImzC,EAASruC,YAAY9E,QAAQ,OA5G1G,eAAA6zC,EAAAz+B,OAAA,uBAoH1B+9B,EAAStc,gBApHiB,CAAAgd,EAAA1vC,KAAA,gBAAA0vC,EAAA1vC,KAAA,GAqHC5M,EAAKu8C,mBAAmBxvC,EAAGyS,aArH5B,QAqHvB8f,EArHuBgd,EAAA5sC,KAsH7BksC,EAAStc,gBAAkBA,EAtHE,WAyH/Bsc,EAASruC,YAAcvN,EAAKgN,MAAM4uC,EAAS51C,OAEtC41C,EAAS/tC,WA3HiB,CAAAyuC,EAAA1vC,KAAA,aA6HNkuC,EAAW/tC,EAAGo8B,SA7HR,CAAAmT,EAAA1vC,KAAA,SAAA0vC,EAAAQ,GA6HmBhC,EAAW/tC,EAAGo8B,SA7HjCmT,EAAA1vC,KAAA,wBAAA0vC,EAAA1vC,KAAA,GA6HmD,IAAIsQ,QAAJ,eAAA6/B,EAAAvgD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAA2wC,EAAO1/B,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAAwwC,GAAA,cAAAA,EAAAtwC,KAAAswC,EAAArwC,MAAA,OAC1F5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBzoC,EAAG9J,KAAM,SAACya,EAAK3Q,GACnD2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALgF,wBAAAkwC,EAAAnvC,SAAAkvC,EAAA7hD,SAAZ,gBAAA+hD,EAAAC,GAAA,OAAAJ,EAAA/uC,MAAA7S,KAAA8S,YAAA,IA7HnD,QAAAquC,EAAAQ,GAAAR,EAAA5sC,KAAA,SA6HvBssC,EA7HuBM,EAAAQ,MAuIrBnE,EAAmB34C,EAAK+Q,gBAAgB,CAAC,QAAS,kBAAmBwlC,IACrE6F,EAAoBzD,GAAoBA,EAAiB38C,SAAW28C,EAAiB38C,SAAW,GAChG2zB,EAAmBgpB,GAAoBA,EAAiBvwC,QAAUuwC,EAAiBvwC,QAAU9J,EAAY4wB,KAAK9mB,QAG/G0yC,EAAW/tC,EAAGo8B,WACjB2R,EAAW/tC,EAAGo8B,SAAW6S,IAGrBC,EAAeD,EAAenoB,KAAK/mB,OAAO,SAAAqiC,GAAG,OAAKA,EAAI/mC,QAAQC,gBAAkBsnB,MAClEssB,EAAav/C,SAC/BmR,EAAaR,SAAS4uC,EAAa,GAAGv2C,KAAM,IAC5CmI,EAAa7N,EAAKwQ,iBAAiB3C,EAAYuuC,GAC/CR,EAAS/tC,WAAaA,IApJG,uBAAAyuC,EAAAz+B,OAAA,oBA8JnC+9B,EAASv9C,MAAQ0G,EAGjB+G,EAAaiB,EAAGo8B,SAAWyS,EAG3BpB,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASqB,SAG1CJ,EAASjB,GAvKmB,yBAAA+B,EAAAxuC,SAAA6tC,EAAAxgD,SAA/B,gBAAAiiD,EAAAC,GAAA,OAAA3B,EAAA1tC,MAAA7S,KAAA8S,YAAA,IAhB6B,WA4LjCimC,EA5LiC,CAAAuH,EAAA7uC,KAAA,gBAAA6uC,EAAA7uC,KAAA,GA6Ld5M,EAAKk0C,iBAAiBpoC,EAAc,CAAC/G,GAAgB/E,EAAK3E,MAAMse,cA7LlD,QA6LnC7N,EA7LmC2vC,EAAA/rC,KAAA,yBAAA+rC,EAAA3tC,SAAAytC,EAAApgD,SAAjC,gBAAAmiD,GAAA,OAAAhC,EAAAttC,MAAA7S,KAAA8S,YAAA,IAhCc,eAkOhBusC,GACFx6C,EAAK06C,yBAAyBF,GAnOZW,EAAAt9B,OAAA,SAsOb/R,GAtOa,yBAAAqvC,EAAArtC,SAAA+sC,EAAA1/C,SA5xEH,gBAAAoiD,GAAA,OAAA3C,EAAA5sC,MAAA7S,KAAA8S,YAAA,GAAA9S,KAogFnB+4C,iBApgFmB,eAAAsJ,EAAAhhD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAogFA,SAAAoxC,EAAO3xC,GAAP,IAAAR,EAAAoyC,EAAAlD,EAAAjmB,EAAAopB,EAAA1vC,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAmxC,GAAA,cAAAA,EAAAjxC,KAAAixC,EAAAhxC,MAAA,cAAqBtB,EAArBqyC,EAAAjhD,OAAA,QAAAiuB,IAAAgzB,EAAA,GAAAA,EAAA,GAAqC,GAAID,EAAzCC,EAAAjhD,OAAA,QAAAiuB,IAAAgzB,EAAA,GAAAA,EAAA,GAAwD,KAEpEryC,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKuD,EAAK3E,MAAMsQ,mBAGrC6uC,EAAYx6C,EAAK26C,cAAc,gBAAgB,EAAM,KAG1C36C,EAAK3E,MAAMwQ,WACxB2uC,EAAUx6C,EAAK3E,MAAMwQ,SAAW,IAGlCC,EAAetP,OAAOuB,OAAO,GAAI+N,GAE3ByoB,EAAYv0B,EAAK4wB,uBAfNgtB,EAAAhxC,KAAA,EAmBX5M,EAAKiM,aAAaX,EAAlB,eAAAuyC,EAAArhD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAiC,SAAAyxC,EAAO/4C,GAAP,IAAAzG,EAAAg/B,EAAA,OAAA1P,EAAA3wB,EAAAwP,KAAA,SAAAsxC,GAAA,cAAAA,EAAApxC,KAAAoxC,EAAAnxC,MAAA,cAE/BtO,EAAc0B,EAAK3E,MAAMsQ,gBAAgB5G,GACzCu4B,EAAWh/B,EAAY4wB,KAAK7wB,MAG7Bm8C,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,KACjCkd,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAY,IAG5CogB,EAAeA,GAAgBlhD,OAAOqQ,OAAO6wC,GAAchhD,OAASghD,EAAe19C,EAAKy6C,sBAAsBz6C,EAAK3E,MAAMwQ,QAASyxB,EAAUv4B,GAVvGg5C,EAAAnxC,KAAA,EA6B/B5M,EAAKiM,aAAazP,OAAOC,KAAKihD,GAA9B,eAAAM,EAAAxhD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6C,SAAA4xC,EAAO1D,EAAOtyC,GAAd,IAAA8E,EAAAmxC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArkC,EAAAskC,EAAAhnB,EAAAx7B,EAAAyiD,EAAA7wC,EAAA8wC,EAAAC,EAAAC,EAAA3xC,EAAA4xC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAloB,EAAAQ,EAAA2nB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5xB,EAAA3wB,EAAAwP,KAAA,SAAAgzC,GAAA,cAAAA,EAAA9yC,KAAA8yC,EAAA7yC,MAAA,WAC3CG,EAAK2wC,EAAanD,KAGZxtC,EAAG1O,OAAS0O,EAAG1O,MAAM2S,gBAAkBjM,EAAciM,iBAAkBjE,EAAGwnB,WAAalnB,SAASN,EAAGwnB,aAAelnB,SAASknB,IAJtF,CAAAkrB,EAAA7yC,KAAA,eAAA6yC,EAAA5hC,OAAA,UAKxC,GALwC,UAQ3CqgC,EAAa1D,GAAaA,EAAUx6C,EAAK3E,MAAMwQ,UAAY2uC,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,IAAakd,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAE9I4D,EAAiB,CACrBuB,cAAe,UACfC,gBAAiB,SACjBC,kBAAmB,UACnBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,UACxBC,uBAAwB,UACxBC,yBAA0B,UAC1BC,0BAA2B,WAEvB9B,EAAgB,CAAC,UAAW,WAC5BC,EAA4B,YAAdtxC,EAAGG,OACjBoxC,EAAYF,EAAc/sB,SAAStkB,EAAGG,QACtCqxC,EAAyB,2BAAdxxC,EAAG2rB,OACdxe,EAASnN,EAAG+N,gBAAkB/N,EAAG+N,gBAAkB,KACnD0jC,EAAkBhiD,OAAOC,KAAK0hD,GAAgB9sB,SAAStkB,EAAG2rB,UAG5Dxe,GAAUpO,EAAaoO,IAAWpO,EAAaoO,GAAQtM,YA7BV,CAAA6xC,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UA8BxC,GA9BwC,aAiC7CygC,GAAapkC,IAAWpO,EAAaoO,IAAWskC,GAAmBzxC,EAAGgO,OAAOre,QAjChC,CAAA+iD,EAAA7yC,KAAA,gBAmCzC4qB,EAA8C,YAA9B2mB,EAAepxC,EAAG2rB,QAClC18B,EAAWw7B,EAAgB,GAAKl5B,EAAYtC,SAClD8P,EAAY,IAAAlN,OAAKmO,EAAGozC,UAAa,CAC/BjzC,OAAQ,UACR7O,MAAO0G,EACPkI,OAAQkxC,EAAepxC,EAAG2rB,QAC1BprB,UAAWD,SAASN,EAAGozC,QAAU,KACjCl9C,KAAMiX,EAASnN,EAAG+N,gBAAkB,KACpC4R,YAAa8K,EAAgBl5B,EAAY4wB,KAAK7wB,MAAQ0G,EACtDiB,MAAO+G,EAAG/G,MAAQ+G,EAAG/G,MAAQhG,EAAKwQ,iBAAiBzD,EAAGgO,OAAO,GAAI/e,GAAU0jB,YA5C9B+/B,EAAA5hC,OAAA,UA+CxC,GA/CwC,WAmD5CwgC,GAAgBnkC,GAAWskC,EAnDiB,CAAAiB,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAoDxC,GApDwC,WAuD7C4gC,EAAS1xC,EAAG0xC,OAAS1xC,EAAG0xC,OAAS,KAvDY,CAAAgB,EAAA7yC,KAAA,gBAAA6yC,EAAA7yC,KAAA,GA2D/B,IAAIsQ,QAAJ,eAAAkjC,EAAA5jD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAg0C,EAAO/iC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA6zC,GAAA,cAAAA,EAAA3zC,KAAA2zC,EAAA1zC,MAAA,OAC1B5M,EAAK3E,MAAMogB,KAAKgC,IAAIT,eAAejQ,EAAG+N,gBAAiB,SAAC4C,EAAKkxB,GACvDlxB,GACFH,EAAOG,GAETJ,EAAQsxB,KALgB,wBAAA0R,EAAAxyC,SAAAuyC,EAAAllD,SAAZ,gBAAAolD,EAAAC,GAAA,OAAAJ,EAAApyC,MAAA7S,KAAA8S,YAAA,IA3D+B,QA2D/CwwC,EA3D+CgB,EAAA/vC,KAAA,WAwE5C+uC,IAAYF,GAAYE,EAAOl3C,KAAKc,gBAAkBrI,EAAK3E,MAAMwQ,QAAQxD,eAxE7B,CAAAo3C,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAyExC,GAzEwC,eAAA4hC,EAAA7yC,KAAA,GA4ExB5M,EAAKy9B,kBAAkBn/B,EAAamgD,EAAOj/B,YAAai/B,EAAOnxC,WA5EvC,QA4E3CM,EA5E2C6xC,EAAA/vC,KA8EjD+uC,EAAOvxC,OAAS,YAChBuxC,EAAOxxC,OAASkxC,EAAepxC,EAAG2rB,QAClC+lB,EAAOhnB,gBAAkBn5B,EAAY8J,QACrCq2C,EAAOnxC,UAAYD,SAASN,EAAGozC,QAAU,KAErCzB,EAAU,KAnFmCe,EAAAnwB,GAoFzCviB,EAAG2rB,OApFsC+mB,EAAA7yC,KAqF1C,kBArF0C6yC,EAAAnwB,GAAA,GAsF1C,wBAtF0CmwB,EAAAnwB,GAAA,GAgH1C,oBAhH0CmwB,EAAAnwB,GAAA,GA+H1C,2BA/H0CmwB,EAAAnwB,GAAA,GAkN1C,8BAlN0CmwB,EAAAnwB,GAAA,GAmN1C,6BAnN0CmwB,EAAAnwB,GAAA,GAoN1C,0BApN0CmwB,EAAAnwB,GAAA,GAqN1C,2BArN0CmwB,EAAAnwB,GAAA,GAsN1C,sBAtN0CmwB,EAAAnwB,GAAA,wBAuFxCviB,EAAGgO,OAvFqC,CAAA0kC,EAAA7yC,KAAA,gBAwFvCsxC,IACF1D,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,GAzFR0yC,EAAA5hC,OAAA,UA2FpC,GA3FoC,WA8FzC4gC,EAAO5oB,GAAGxtB,gBAAkB/J,EAAY4wB,KAAK9mB,QAAQC,cA9FZ,CAAAo3C,EAAA7yC,KAAA,gBAgGvCsxC,UACK1D,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAjGNkF,EAAA5hC,OAAA,UAoGpC,GApGoC,WAuG7C6gC,EAAU3xC,EAAGgO,OAAS/a,EAAKwQ,iBAAiBzD,EAAGgO,OAAO,GAAIzc,EAAYtC,UAAU0jB,WAAa,EAvGhD,CAAA+/B,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UA0GpC,GA1GoC,eA6G7C4gC,EAAOz4C,MAAQ04C,EACfD,EAAOlxC,YAAcmxC,EA9GwBe,EAAA5hC,OAAA,wBAiHxC9Q,EAAGgO,OAjHqC,CAAA0kC,EAAA7yC,KAAA,gBAkHvCsxC,IACF1D,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,GAnHR0yC,EAAA5hC,OAAA,UAqHpC,GArHoC,eAwHxC4gC,EAAO7wC,aACJ+wC,EAAqB3+C,EAAKwQ,iBAAiBzD,EAAGgO,OAAO,GAAI,IAAIvS,MAAMoF,GACzE6wC,EAAO7wC,WAAaA,EACpB6wC,EAAOz4C,MAAQ24C,EACfF,EAAOlxC,YAAcoxC,GA5HsBc,EAAA5hC,OAAA,wBAgIzC+gC,EAAgC7xC,EAAG6hC,UAAY7hC,EAAG6hC,UAAY,KAhIrB,CAAA6Q,EAAA7yC,KAAA,gBAAA6yC,EAAA7yC,KAAA,GAmIJ,IAAIsQ,QAAJ,eAAAujC,EAAAjkD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAq0C,EAAOpjC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAAk0C,GAAA,cAAAA,EAAAh0C,KAAAg0C,EAAA/zC,MAAA,OACjD5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBzoC,EAAG+N,gBAAiB,SAAC4C,EAAK3Q,GAC9D2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALuC,wBAAA4zC,EAAA7yC,SAAA4yC,EAAAvlD,SAAZ,gBAAAylD,EAAAC,GAAA,OAAAJ,EAAAzyC,MAAA7S,KAAA8S,YAAA,IAnII,QAmI3C2wC,EAnI2Ca,EAAA/vC,KAAA,WA6IxCkvC,EA7IwC,CAAAa,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UA8IpC,GA9IoC,WAkJxC9Q,EAAG6hC,YACN7hC,EAAG6hC,UAAYgQ,EACXV,IACF1D,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,IAIjDE,EAAS,KACT4xC,EAAqC,KACrCC,EAA0C,GACxCC,EAAsB/+C,EAAK+Q,gBAAgB,CAAC,WAAY,UAAW,kBAGrEzS,EAAY44B,WAAa54B,EAAY44B,UAAU4pB,cAC7ClC,EAA8B/qB,MAChCgrB,EAAqCvgD,EAAY44B,UAAU4pB,YAAY14C,QAAQ4sB,QAAQ,IAAK,IAAI3sB,cAChGy2C,EAA0CF,EAA8B/qB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3E,QAAQC,gBAAkB/J,EAAY8J,QAAQC,eAAiB0E,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8EigD,MAC5OD,EAA8BmC,SACvCjC,EAA0CtiD,OAAOqQ,OAAO+xC,EAA8BmC,QAAQj0C,OAAO,SAACC,GAAS,OAAOA,EAAG3E,QAAQC,gBAAkB/J,EAAY8J,QAAQC,iBAGrKy2C,EAAwCpiD,SAC1CuQ,EAAS,YAKR6xC,EAAwCpiD,SACvCkiD,EAA8B/qB,MAChCgrB,EAAqCvgD,EAAY4wB,KAAK9mB,QAAQ4sB,QAAQ,IAAK,IAAI3sB,gBAC/Ey2C,EAA0CF,EAA8B/qB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3E,QAAQC,gBAAkB/J,EAAY8J,QAAQC,eAAiB0E,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8EigD,MAGxMniD,QAAUqiD,IACrDF,EAAqCE,EAAoB32C,QAAQ4sB,QAAQ,IAAK,IAAI3sB,cAClFy2C,EAA0CF,EAA8B/qB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3E,QAAQC,gBAAkB/J,EAAY8J,QAAQC,eAAiB0E,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8EigD,OAE9OD,EAA8BmC,SACvCjC,EAA0CtiD,OAAOqQ,OAAO+xC,EAA8BmC,QAAQj0C,OAAO,SAACC,GAAS,OAAOA,EAAG3E,QAAQC,gBAAkB/J,EAAY8J,QAAQC,iBAGrKy2C,EAAwCpiD,SAC1CuQ,EAAS,YAIR6xC,EAAwCpiD,OAhMA,CAAA+iD,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAiMpC,GAjMoC,WAoMvCmhC,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBt5C,KAAO2H,SAAS2xC,EAAiBt5C,KAAM,IAAOs5C,EAAiBgC,KAAOhC,EAAiBgC,IAAIt7C,KAAQ2H,SAAS2xC,EAAiBgC,IAAIt7C,KAAM,IAAM,KAtMrI,CAAA+5C,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAyMpC,GAzMoC,eA4MvCqhC,EAAmBl/C,EAAKwQ,iBAAiByuC,EAAa3gD,EAAYtC,UACxEyiD,EAAOxxC,OAASA,EAChBwxC,EAAOz4C,MAAQk5C,EACfT,EAAOlxC,YAAc2xC,EA/MwBO,EAAA5hC,OAAA,wBAuNxCvf,EAAY44B,WAAc54B,EAAY44B,UAAU4pB,YAvNR,CAAArB,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAwNpC,GAxNoC,WA2NzCshC,EAAqBpyC,EAAG6hC,UAAY7hC,EAAG6hC,UAAY,KA3NV,CAAA6Q,EAAA7yC,KAAA,gBAAA6yC,EAAA7yC,KAAA,GA8Nf,IAAIsQ,QAAJ,eAAA+jC,EAAAzkD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAA60C,EAAO5jC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA00C,GAAA,cAAAA,EAAAx0C,KAAAw0C,EAAAv0C,MAAA,OACtC5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBzoC,EAAG+N,gBAAiB,SAAC4C,EAAK3Q,GAC9D2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KAL4B,wBAAAo0C,EAAArzC,SAAAozC,EAAA/lD,SAAZ,gBAAAimD,EAAAC,GAAA,OAAAJ,EAAAjzC,MAAA7S,KAAA8S,YAAA,IA9Ne,QA8N3CkxC,EA9N2CM,EAAA/vC,KAAA,WAwOxCyvC,EAxOwC,CAAAM,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAyOpC,GAzOoC,WA6OxC9Q,EAAG6hC,YACN7hC,EAAG6hC,UAAYuQ,EACXjB,IACF1D,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,IAI/CkqB,EAAwB34B,EAAY44B,UAAUC,kBAAkB/uB,QAAQC,cAAc2sB,QAAQ,IAAK,IACnGyC,EAAkBn5B,EAAY4wB,KAAK9mB,QAAQC,cAAc2sB,QAAQ,IAAK,KACtEoqB,EAA+BD,EAAmBtrB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAGsiC,OAAO3yC,QAAU,GAAKqQ,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8Eq4B,IAA2BlqB,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8E64B,MAEnQ/6B,OAxPW,CAAA+iD,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAyPpC,GAzPoC,WA4PvCwhC,EAA4BD,EAA6BnvC,OAEzDqvC,EAAct/C,EAAK3E,MAAMogB,KAAKgC,IAAIwmB,IAAIqd,UAAU,CACpD,CACE1M,aAAc,UACdhyC,KAAM,SACNhH,KAAM,YAEPyjD,EAA0B35C,KAAM25C,EAA0BhQ,UAExCiQ,EAAYiC,OAtQY,CAAA9B,EAAA7yC,KAAA,gBAAA6yC,EAAA5hC,OAAA,UAuQpC,GAvQoC,eA0QvC0hC,EAAiBD,EAAYiC,OAC7B/B,EAAsBx/C,EAAKwQ,iBAAiB+uC,EAAgBjhD,EAAYtC,UAC9EyiD,EAAOz4C,MAAQw5C,EAAoB9/B,WA5QU+/B,EAAA5hC,OAAA,6BAAA4hC,EAAA5hC,OAAA,sBAkRjD4gC,EAAO7wC,WAAaA,EACpB6wC,EAAOpgD,MAAQ0G,EACf05C,EAAO/xB,YAAc3nB,EACrB05C,EAAO5wC,WAAaD,EAAWpF,MAAMxI,EAAKgN,MAAMyxC,EAAOz4C,QAGvD8F,EAAaoO,GAAUukC,EAIlB1xC,EAAG0xC,SACN1xC,EAAG0xC,OAASA,EACZjE,EAAUx6C,EAAK3E,MAAMwQ,SAASyxB,GAAUid,GAASxtC,GA9RF,0BAAA0yC,EAAA3xC,SAAAmwC,EAAA9iD,SAA7C,gBAAAqmD,EAAAC,GAAA,OAAAzD,EAAAhwC,MAAA7S,KAAA8S,YAAA,IA7B+B,wBAAA8vC,EAAAjwC,SAAAgwC,EAAA3iD,SAAjC,gBAAAumD,GAAA,OAAA7D,EAAA7vC,MAAA7S,KAAA8S,YAAA,IAnBW,cAoVbusC,GACFx6C,EAAK06C,yBAAyBF,GArVfoD,EAAA//B,OAAA,SAwVV/R,GAxVU,yBAAA8xC,EAAA9vC,SAAA2vC,EAAAtiD,SApgFA,gBAAAwmD,GAAA,OAAAnE,EAAAxvC,MAAA7S,KAAA8S,YAAA,GAAA9S,KA81FnBw4C,kBAAoB,SAACH,GAAkC,IAAxBoO,EAAwB3zC,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GAC/ChP,EAAM2iD,GAAgBpO,EAEtBxB,EAAc,CAClBtsC,KAJmDuI,UAAAvR,OAAA,EAAAuR,UAAA,QAAA0c,EAKnDxa,UAHgB9C,SAASe,KAAK04B,MAAQ,MAKxC,OAAO9mC,EAAKyyC,mCAAmC,iBAAkBxzC,EAAK+yC,IAr2FrD72C,KAw2FnB0mD,iBAAmB,WACjB,OAAO7hD,EAAK26C,cAAc,iBAAiB,IAz2F1Bx/C,KA22FnB2mD,iBAAmB,SAACC,GAClB,OAAO/hD,EAAKygB,gBAAgB,gBAAiBshC,IA52F5B5mD,KA82FnBg3C,iBAAmB,SAACqB,GAA4B,IAAlBoO,EAAkB3zC,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GACxChP,EAAM2iD,GAAgBpO,EACxBwO,EAAiBhiD,EAAK6vB,8BAA8B,iBAAkB,IAE1E,OAAImyB,GAAkBA,EAAe/iD,GAC5B+iD,EAAe/iD,GAAKyG,KAEtB,MAr3FUvK,KAu3FnB8mD,mBAAqB,SAACC,EAAOC,GAAqB,IAAdpnC,EAAc9M,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAP,GAGzC,OADA8M,GADAA,EAAS3P,KAAKC,UAAU0P,IACRwG,OAAO,GAAGA,OAAO,EAAExG,EAAOre,OAAO,GAAGs4B,QAAQ,cAAe,OAC3E,YAAAp2B,OACIsjD,EADJ,KAAAtjD,OACcmc,EADd,gBAAAnc,OAEMujD,EAAOr5C,KAAK,KAFlB,qBA13FiB3N,KAi4FnBinD,uBAj4FmB,eAAAC,EAAA7lD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAi4FM,SAAAi2C,EAAOC,GAAP,IAAAC,EAAAC,EAAAN,EAAAO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnsB,EAAAosB,EAAAC,EAAAC,EAAAC,EAAAj1C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA02C,GAAA,cAAAA,EAAAx2C,KAAAw2C,EAAAv2C,MAAA,UAAsB41C,EAAtBU,EAAAxmD,OAAA,QAAAiuB,IAAAu4B,EAAA,GAAAA,EAAA,GAAqC,KAAKT,EAA1CS,EAAAxmD,OAAA,QAAAiuB,IAAAu4B,EAAA,GAAAA,EAAA,GAAuD,KAAKf,EAA5De,EAAAxmD,OAAA,QAAAiuB,IAAAu4B,EAAA,GAAAA,EAAA,GAAmE,MACpFR,EAAiB1iD,EAAK+Q,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAE1Dke,QAHG,CAAAk0B,EAAAv2C,KAAA,eAAAu2C,EAAAtlC,OAAA,UAId,GAJc,cAOjB8kC,EAAWt1C,SAASe,KAAK04B,MAAM,KAC/B8b,EAAc,CAClBQ,MAAM,IACNC,QAAQ,YACRC,eAAe,MACfC,MAAM,CACJC,QAAUjB,EAAel6C,gBAGzBm6C,IACFI,EAAYW,MAAME,cAAgBjB,GAEhCC,IACFG,EAAYW,MAAMG,cAAgBjB,GAEpCN,EAASA,GAAUO,EAAeiB,SAASC,aACrCf,EAAgB7iD,EAAKiiD,mBAAmB,eAAeE,EAAOS,GAC9DE,EAAW,CACfe,MAAMhB,GAzBeM,EAAAv2C,KAAA,GA4BD5M,EAAK8jD,gBAAgBpB,EAAelP,SAASsP,GA5B5C,WA4BjBnsB,EA5BiBwsB,EAAAzzC,KA6BnBqzC,EAAe/iD,EAAKotB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,MAC9DqsB,EAAgBD,GAAgBA,EAAarmD,OAAO,EAAI2Q,SAAS01C,EAAaA,EAAarmD,OAAO,GAAG4Q,WAAa,OAEnG01C,EAAcR,GAAkBQ,EAAcP,GAAgBE,EAASK,EAAc,OAhCnF,CAAAG,EAAAv2C,KAAA,gBAAAu2C,EAAAv2C,KAAA,GAiCQ5M,EAAKoiD,uBAAuBG,EAAeS,EAAc,EAAEP,EAAaN,GAjChF,SAiCfc,EAjCeE,EAAAzzC,QAmCnBqzC,EAAeA,EAAankD,OAAOqkD,IAnChB,eAAAE,EAAAtlC,OAAA,SAsChBklC,GAtCgB,yBAAAI,EAAAr1C,SAAAw0C,EAAAnnD,SAj4FN,gBAAA4oD,GAAA,OAAA1B,EAAAr0C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAy6FnB6oD,eAz6FmBxnD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAy6FF,SAAA43C,IAAA,IAAA5kD,EAAA6kD,EAAA11B,EAAAtD,EAAAyY,EAAAxzB,EAAA0zC,EAAAf,EAAAJ,EAAA/rB,EAAA9zB,EAAAshD,EAAAC,EAAA33B,EAAA43B,EAAAp2C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA63C,GAAA,cAAAA,EAAA33C,KAAA23C,EAAA13C,MAAA,UAAOvN,EAAPglD,EAAA3nD,OAAA,QAAAiuB,IAAA05B,EAAA,GAAAA,EAAA,GAAmB,KAAKH,EAAxBG,EAAA3nD,OAAA,QAAAiuB,IAAA05B,EAAA,GAAAA,EAAA,GAA+B,KAExC71B,EAFS,kBAAA5vB,OAEyBS,GAErB,QADb6rB,EAAalrB,EAAK6vB,8BAA8BrB,IAHvC,CAAA81B,EAAA13C,KAAA,eAAA03C,EAAAzmC,OAAA,SAKNqN,GALM,cAAAo5B,EAAA13C,KAAA,EAQS5M,EAAKkkC,eARd,cAQTP,EARS2gB,EAAA50C,KASTS,EAAYwzB,EAAUxzB,UAAU,KAEhC0zC,EAXS,yFAAAjlD,OAYkEuR,EAZlE,4KA0BT2yC,EAAS,CACbe,SAGInB,EAAiB1iD,EAAK+Q,gBAAgB,CAAC,UAAU,YAAY,WAAW,aA9B/DuzC,EAAA13C,KAAA,GA+BK5M,EAAK8jD,gBAAgBpB,EAAelP,SAASsP,GA/BlD,YA+BXnsB,EA/BW2tB,EAAA50C,OAiCC1P,EAAKotB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GAjClD,CAAA2tB,EAAA13C,KAAA,gBAAA03C,EAAAzmC,OAAA,UAkCN,GAlCM,eAqCf8Y,EAAU32B,EAAKotB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GACrD9zB,EAAO8zB,EAAQj6B,OAGlBi6B,EAAQ,GAAG4tB,WAAa5tB,EAAQ9zB,EAAK,GAAGyK,YACzCqpB,EAAUA,EAAQ6tB,OAAOr3C,KAAKwF,KAAK9P,EAAK,KAGpCshD,EAAe3nD,OAAOC,KAAKuD,EAAK+Q,gBAAgB,CAAC,cACjDqzC,EAAwBpkD,EAAK+Q,gBAAgB,CAAC,aAAa,aAE7D0b,EAAS,GACb03B,EAAaxnD,QAAS,SAAAf,GACpB6wB,EAAO7wB,GAAQ,CACbqrC,IAAI,KACJ5oC,MAAM,KACNE,SAAS,QAKb/B,OAAOC,KAAKuD,EAAK3E,MAAMsC,mBAAmBhB,QAAS,SAAA4B,GACjD/B,OAAOC,KAAKuD,EAAK3E,MAAMsC,kBAAkBY,IAAW5B,QAAS,SAAA0B,GAE3D,IAAMomD,EAAuBzkD,EAAK3E,MAAMsC,kBAAkBY,GAAUF,GAEpE8lD,EAAaxnD,QAAS,SAAAf,GACpB,IAAM4gC,EAAc7F,EAAQ7L,KAAM,SAAA45B,GAAK,OAAIA,EAAMlB,QAAQ3lD,GAAGwK,gBAAkBo8C,EAAqB7oD,GAAMwM,QAAQC,kBAC5GokB,EAAO7wB,GAAMqrC,KAAQzK,GAAex8B,EAAKgN,MAAMwvB,EAAYyK,KAAKr2B,GAAG6b,EAAO7wB,GAAMqrC,QAAUid,GAAUlkD,EAAKgnC,QAAQhnC,EAAKwQ,iBAAiBgsB,EAAYyK,IAAI,IAAIxnB,IAAI,MAAMjX,MAAM,KAAKkF,GAAGw2C,OACtLz3B,EAAO7wB,GAAMyC,MAAQA,EACrBouB,EAAO7wB,GAAM2C,SAAWA,EACxBkuB,EAAO7wB,GAAMqrC,IAAMzK,EAAYyK,WAOvCkd,EAAaxnD,QAAS,SAAAf,GACf6wB,EAAO7wB,GAAMyC,QAChBouB,EAAO7wB,GAAMyC,MAAQ+lD,EAAsB/lD,MAC3CouB,EAAO7wB,GAAM2C,SAAW6lD,EAAsB7lD,YAI9Cc,GAAeotB,EAAOptB,KACxBotB,EAASA,EAAOptB,IAnFHilD,EAAAzmC,OAAA,SAsFR7d,EAAK8vB,8BAA8BtB,EAAe/B,EAAQ,OAtFlD,yBAAA63B,EAAAx2C,SAAAm2C,EAAA9oD,SAz6FEA,KAigGnB2oD,gBAjgGmB,eAAAa,EAAAnoD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAigGD,SAAAu4C,EAAOpR,GAAP,IAAAsP,EAAA+B,EAAAC,EAAAp/C,EAAAq/C,EAAA92C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAu4C,GAAA,cAAAA,EAAAr4C,KAAAq4C,EAAAp4C,MAAA,cAAiBk2C,EAAjBiC,EAAAroD,OAAA,QAAAiuB,IAAAo6B,EAAA,GAAAA,EAAA,GAA0B,GAAIF,EAA9BE,EAAAroD,OAAA,QAAAiuB,IAAAo6B,EAAA,IAAAA,EAAA,GAAsDD,EAAtDC,EAAAroD,OAAA,QAAAiuB,IAAAo6B,EAAA,GAAAA,EAAA,GAA+D,KAA/DC,EAAAp4C,KAAA,EACGqR,IAChBgnC,KAAKzR,EAAUsP,EAAUgC,GACzBI,MAAM,SAAAxnC,GACyB,oBAAnBmnC,GACTA,EAAennC,KALL,cACVhY,EADUs/C,EAAAt1C,KAAAs1C,EAAAnnC,OAAA,SAQTnY,GARS,wBAAAs/C,EAAAl3C,SAAA82C,EAAAzpD,SAjgGC,gBAAAgqD,GAAA,OAAAR,EAAA32C,MAAA7S,KAAA8S,YAAA,GAAA9S,KA2gGnBq3C,YA3gGmB,eAAA4S,EAAA5oD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2gGL,SAAAg5C,EAAO7R,GAAP,IAAAqR,EAAAC,EAAAp/C,EAAA4/C,EAAAr3C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA84C,GAAA,cAAAA,EAAA54C,KAAA44C,EAAA34C,MAAA,cAAiBi4C,EAAjBS,EAAA5oD,OAAA,QAAAiuB,IAAA26B,EAAA,IAAAA,EAAA,GAAyCR,EAAzCQ,EAAA5oD,OAAA,QAAAiuB,IAAA26B,EAAA,GAAAA,EAAA,GAAkD,KAAlDC,EAAA34C,KAAA,EACOqR,IAChBC,IAAIs1B,EAAUsR,GACdI,MAAM,SAAAxnC,GACyB,oBAAnBmnC,GACTA,EAAennC,KALT,YACNhY,EADM6/C,EAAA71C,MAAA,CAAA61C,EAAA34C,KAAA,eAAA24C,EAAA1nC,OAAA,SASHnY,GATG,cAAA6/C,EAAA1nC,OAAA,SAWHI,IAAM6mC,IAXH,yBAAAS,EAAAz3C,SAAAu3C,EAAAlqD,SA3gGK,gBAAAqqD,GAAA,OAAAJ,EAAAp3C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAyhGnBkzC,wBAzhGmB,eAAAoX,EAAAjpD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAyhGO,SAAAq5C,EAAOlS,GAAP,IAAA/2C,EAAA+8B,EAAAmsB,EAAAx1C,EAAA6xC,EAAA4D,EAAAlgD,EAAAssC,EAAA6T,EAAA53C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAq5C,GAAA,cAAAA,EAAAn5C,KAAAm5C,EAAAl5C,MAAA,UAAiBnQ,EAAjBopD,EAAAnpD,OAAA,QAAAiuB,IAAAk7B,EAAA,GAAAA,EAAA,GAAwB,GAAIrsB,EAA5BqsB,EAAAnpD,OAAA,QAAAiuB,IAAAk7B,EAAA,GAAAA,EAAA,GAAkC,IAAKF,EAAvCE,EAAAnpD,OAAA,QAAAiuB,IAAAk7B,EAAA,GAAAA,EAAA,GAAqD,EACvE11C,EAAY9C,SAASe,KAAK04B,MAAQ,QAGpCkb,EAAiBhiD,EAAK6vB,8BAA8B,iBAAkB,MAEpDmyB,EAAexO,IAAawO,EAAexO,GAAUrjC,WAAaA,EAAY6xC,EAAexO,GAAUrjC,UAAYqpB,GANjH,CAAAssB,EAAAl5C,KAAA,eAAAk5C,EAAAjoC,OAAA,SAOfmkC,EAAexO,GAAU9tC,MAPV,cAUlBkgD,EAASnpD,EAAKkpD,GAVIG,EAAAl5C,KAAA,GAWL5M,EAAKwyC,YAAYgB,EAAW,WAAaoS,GAXpC,aAWlBlgD,EAXkBogD,EAAAp2C,QAeZhK,EAAKA,OAASA,EAAKA,KAAKymB,QAAQyjB,MAAM,QAAgC,0BAAtBlqC,EAAKA,KAAKymB,QAf9C,CAAA25B,EAAAl5C,KAAA,gBAgBlB4sB,EAAI,IACAwY,EAAc,CAClBtsC,KAAK,CACHA,KAAKA,EAAKA,MAEZyK,aAEFnQ,EAAKyyC,mCAAmC,iBAAkBe,EAAUxB,IAvBhD8T,EAAAjoC,OAAA,SAyBfnY,GAzBe,aA0BbigD,EAAclpD,EAAKC,OAAS,GA1Bf,CAAAopD,EAAAl5C,KAAA,gBAAAk5C,EAAAl5C,KAAA,GA2BT5M,EAAKquC,wBAAwBmF,EAAU/2C,EAAM+8B,EAAKmsB,EAAc,GA3BvD,eAAAG,EAAAjoC,OAAA,SAAAioC,EAAAp2C,MAAA,eAAAo2C,EAAAjoC,OAAA,SA6BjB,MA7BiB,yBAAAioC,EAAAh4C,SAAA43C,EAAAvqD,SAzhGP,gBAAA4qD,GAAA,OAAAN,EAAAz3C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAwjGnBizC,kBAxjGmB,eAAA4X,EAAAxpD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwjGC,SAAA45C,EAAOzS,GAAP,IAAAha,EAAA0sB,EAAAtE,EAAAkD,EAAAD,EAAA5lD,EAAAkR,EAAA6xC,EAAAt8C,EAAAssC,EAAAmU,EAAAl4C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA25C,GAAA,cAAAA,EAAAz5C,KAAAy5C,EAAAx5C,MAAA,UAAiB4sB,EAAjB2sB,EAAAzpD,OAAA,QAAAiuB,IAAAw7B,EAAA,GAAAA,EAAA,GAAuB,GAAID,EAA3BC,EAAAzpD,OAAA,QAAAiuB,IAAAw7B,EAAA,IAAAA,EAAA,GAAgDvE,EAAhDuE,EAAAzpD,OAAA,QAAAiuB,IAAAw7B,EAAA,IAAAA,EAAA,GAA+DrB,EAA/DqB,EAAAzpD,OAAA,QAAAiuB,IAAAw7B,EAAA,GAAAA,EAAA,GAAwE,KAAMtB,EAA9EsB,EAAAzpD,OAAA,QAAAiuB,IAAAw7B,EAAA,IAAAA,EAAA,GACZlnD,EAAM2iD,GAAgBpO,EACtBrjC,EAAY9C,SAASe,KAAK04B,MAAQ,QAGpCkb,EAAiBhiD,EAAK6vB,8BAA8B,iBAAkB,MAGpDmyB,EAAe/iD,IAAQ+iD,EAAe/iD,GAAKkR,WAAaA,EAAY6xC,EAAe/iD,GAAKkR,UAAYqpB,GARxG,CAAA4sB,EAAAx5C,KAAA,gBAAAw5C,EAAAvoC,OAAA,SASRmkC,EAAe/iD,GAAKyG,MAAQwgD,EAAclE,EAAe/iD,GAAKyG,KAAKA,KAAOs8C,EAAe/iD,GAAKyG,MATtF,eAAA0gD,EAAAx5C,KAAA,GAYD5M,EAAKwyC,YAAYgB,EAAUqR,EAAgBC,GAZ1C,eAYdp/C,EAZc0gD,EAAA12C,KAcZsiC,EAAc,CAClBtsC,KAAK,CACHA,KAAKA,EAAKA,MAEZyK,aAEFnQ,EAAKyyC,mCAAmC,iBAAkBxzC,EAAK+yC,GApB7CoU,EAAAvoC,OAAA,SAqBVnY,GAAQwgD,EAAcxgD,EAAKA,KAAOA,GArBxB,yBAAA0gD,EAAAt4C,SAAAm4C,EAAA9qD,SAxjGD,gBAAAkrD,GAAA,OAAAL,EAAAh4C,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+kGnBmrD,sBA/kGmB,eAAAC,EAAA/pD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+kGK,SAAAm6C,EAAOhT,GAAP,IAAAsP,EAAAtpB,EAAA0sB,EAAAtE,EAAAkD,EAAA7lD,EAAAkR,EAAA6xC,EAAAt8C,EAAAssC,EAAAyU,EAAAx4C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAi6C,GAAA,cAAAA,EAAA/5C,KAAA+5C,EAAA95C,MAAA,UAAiBk2C,EAAjB2D,EAAA/pD,OAAA,QAAAiuB,IAAA87B,EAAA,GAAAA,EAAA,GAA0B,GAAIjtB,EAA9BitB,EAAA/pD,OAAA,QAAAiuB,IAAA87B,EAAA,GAAAA,EAAA,GAAkC,GAAIP,EAAtCO,EAAA/pD,OAAA,QAAAiuB,IAAA87B,EAAA,IAAAA,EAAA,GAAyD7E,EAAzD6E,EAAA/pD,OAAA,QAAAiuB,IAAA87B,EAAA,IAAAA,EAAA,GAAsE3B,EAAtE2B,EAAA/pD,OAAA,QAAAiuB,IAAA87B,EAAA,GAAAA,EAAA,GAA6E,KAC7FxnD,EAAM2iD,GAAgBpO,EACtBrjC,EAAY9C,SAASe,KAAK04B,MAAQ,QAGlCkb,EAAiBhiD,EAAK6vB,8BAA8B,iBAAkB,MAEtDmyB,EAAe/iD,IAAQ+iD,EAAe/iD,GAAKkR,WAAaA,EAAY6xC,EAAe/iD,GAAKkR,UAAYqpB,GAPpG,CAAAktB,EAAA95C,KAAA,gBAAA85C,EAAA7oC,OAAA,SAQZmkC,EAAe/iD,GAAKyG,MAAQwgD,EAAclE,EAAe/iD,GAAKyG,KAAKA,KAAOs8C,EAAe/iD,GAAKyG,MARlF,eAAAghD,EAAA95C,KAAA,GAWH5M,EAAK8jD,gBAAgBtQ,EAAUsP,GAAU,EAAOgC,GAX7C,eAWhBp/C,EAXgBghD,EAAAh3C,KAYhBsiC,EAAc,CAClBtsC,KAAK,CACHA,KAAKA,EAAKA,MAEZyK,aAEFnQ,EAAKyyC,mCAAmC,iBAAkBxzC,EAAK+yC,GAlBzC0U,EAAA7oC,OAAA,SAmBdnY,GAAQwgD,EAAcxgD,EAAKA,KAAOA,GAnBpB,yBAAAghD,EAAA54C,SAAA04C,EAAArrD,SA/kGL,gBAAAwrD,GAAA,OAAAJ,EAAAv4C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAomGnBwf,oBAAsB,SAAAP,GACpB,IAAIqS,EAAS,QACb,GAAIpf,SAAS+M,EAAMwsC,MAAO,CACxB,IAAMC,EAAYx5C,SAAS+M,EAAMwsC,MACjC,OAAQC,GACN,KAAK,KACHp6B,EAAS,SACT,MACF,QACEA,EAAM,SAAA7tB,OAAYioD,SAGbzsC,EAAM+R,UACfM,EAASrS,EAAM+R,QAAQ26B,MAAM,MAAM,IAGrC,OAAOr6B,GApnGUtxB,KAsnGnB4rD,iBAAmB,WACjB,OAAOp+C,KAvnGUxN,KAynGnBiyB,aAAe,SAAClsB,EAAM8lD,GACpB,IAAKA,EACH,OAAO,KAGT,IADA9lD,EAAO1E,OAAOuB,OAAO,GAAImD,IAChBxE,OAAS,EAAG,CACnB,IAAMuqD,EAAO/lD,EAAKgmD,QAClB,IAAKhmD,EAAKxE,OACR,OAAOsqD,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOjnD,EAAKotB,aAAalsB,EAAM8lD,EAAMC,IAGzC,OAAO,MAtoGU9rD,KAwoGnB4V,gBAAkB,SAAC7P,GAA0B,IAApBimD,EAAoBl5C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GAE3C,GADAk5C,EAAUA,GAAoBx+C,IAC1BzH,EAAKxE,OAAS,EAAG,CACnB,IAAMuqD,EAAO/lD,EAAKgmD,QAClB,IAAKhmD,EAAKxE,OACR,YAAyBiuB,IAAlBw8B,EAAQF,GAAsBE,EAAQF,GAAQ,KAChD,GAAIE,EAAQF,GACjB,OAAOjnD,EAAK+Q,gBAAgB7P,EAAMimD,EAAQF,IAG9C,OAAO,MAlpGU9rD,KAopGnBisD,UAAY,SAAClmD,GACX,OAAOyH,IAAc0+C,QAAU,IAAMnmD,GArpGpB/F,KAupGnBmsD,sBAAwB,WAKtB,OAJkB9qD,OAAOC,KAAKkM,IAAc4+C,cAAcz8B,KAAK,SAAA2V,GAE7D,OADe93B,IAAc4+C,aAAa9mB,GAAKhK,IACjCpuB,gBAAkBuY,OAAO8V,SAASkK,OAAOv4B,iBAEnC,QA5pGLlN,KA8pGnBqsD,eAAiB,WACf,MAAO,CAAC,KAAK,KAAK,KAAK,MAAMn2B,SAASrxB,EAAKmO,cAAcoD,OAAO,QAA4C,OAAlCvR,EAAKmO,cAAcoD,OAAO,OA/pGnFpW,KAiqGnBssD,gBAAkB,WAChB,OAAO7mC,OAAO8V,SAASkK,OAAOv4B,cAAcgpB,SAAS1oB,IAAc++C,WAAWr/C,gBAlqG7DlN,KAoqGnBwsD,eAAiB,WACf,OAAO/mC,OAAO8V,SAASkK,OAAOv4B,cAAcgpB,SAAS1oB,IAAc0+C,QAAQh/C,gBArqG1DlN,KAuqGnBysD,aAAe,WACb,OAAOhnC,OAAO8V,SAASkK,OAAOv4B,cAAcgpB,SAAS1oB,IAAck/C,QAAQx/C,gBAxqG1DlN,KA0qGnB2sD,4BA1qGmBtrD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0qGW,SAAA07C,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAl6C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA27C,GAAA,cAAAA,EAAAz7C,KAAAy7C,EAAAx7C,MAAA,OAC5Bo7C,GADmCA,EAAPG,EAAAzrD,OAAA,QAAAiuB,IAAAw9B,EAAA,GAAAA,EAAA,GAAc,OAC3BvnC,OAAO8V,SAASzzB,KAAKse,OAAO,GACrC0mC,EAAqBjoD,EAAK+Q,gBAAgB,CAAC,YAAa,SAAU,aAClEm3C,EAAWloD,EAAK2nD,iBAClBM,EAAmBh5B,SAAWi5B,GAAYtnC,OAAOynC,KACnDznC,OAAOynC,GAAG,MAAO,OAAQL,GACzBpnC,OAAOynC,GAAG,OAAQ,aANQ,wBAAAD,EAAAt6C,SAAAi6C,EAAA5sD,SA1qGXA,KAmrGnByf,yBAnrGmB,eAAA0tC,EAAA9rD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmrGQ,SAAAk8C,EAAOluC,GAAP,IAAAlX,EAAAqlD,EAAAC,EAAAC,EAAAlnC,EAAAmnC,EAAA16C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAm8C,GAAA,cAAAA,EAAAj8C,KAAAi8C,EAAAh8C,MAAA,UAAkBzJ,EAAlBwlD,EAAAjsD,OAAA,QAAAiuB,IAAAg+B,EAAA,GAAAA,EAAA,GAA6B,KAEhDH,EAAmB7/C,IAAckgD,UAAUC,OAAO/H,OAClD0H,EAAeD,EAAiBC,aAChCC,EAAW9nC,OAAO8V,SAASkK,OAAOv4B,cAAcgpB,SAAS1oB,IAAc0+C,QAAQh/C,gBAEjFmgD,EAAiBv5B,UAAWrO,OAAOynC,KAAOI,IAAgBC,EANrC,CAAAE,EAAAh8C,KAAA,eASnB47C,EAAiBO,uBAE2B,IAA1CpgD,IAAc+S,QAAQ6iB,iBAClB/c,EAAiB7Y,IAAc+S,QAAQstC,kBAAkBrgD,IAAc+S,QAAQ6iB,iBACrFlkB,EAAUC,eAAV,IAAA1b,OAA+B4iB,IAEtBinC,IAAiBC,IAC1BruC,EAAUC,eAAiB,UAhBRsuC,EAAAh8C,KAAA,EAoBhB,IAAIsQ,QAAJ,eAAA+rC,EAAAzsD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAA68C,EAAO5rC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA08C,GAAA,cAAAA,EAAAx8C,KAAAw8C,EAAAv8C,MAAA,OACjByN,EAAU+uC,YAAc,WACtB9rC,GAAQ,IAEVjD,EAAUgvC,gBAAkB,WAC1B9rC,KAGFqD,OAAOynC,GAAG,OAAQ,QAAShuC,GARV,wBAAA8uC,EAAAr7C,SAAAo7C,EAAA/tD,SAAZ,gBAAAmuD,EAAAC,GAAA,OAAAN,EAAAj7C,MAAA7S,KAAA8S,YAAA,IApBgB,OA+BC,oBAAb9K,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBylD,EAAA/qC,OAAA,UAwClB,GAxCkB,yBAAA+qC,EAAA96C,SAAAy6C,EAAAptD,SAnrGR,gBAAAquD,GAAA,OAAAlB,EAAAt6C,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6tGnBsuD,eA7tGmB,eAAAC,EAAAltD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6tGF,SAAAs9C,EAAO/mD,EAAMwF,EAAS67B,GAAtB,IAAAxP,EAAA,OAAA7G,EAAA3wB,EAAAwP,KAAA,SAAAm9C,GAAA,cAAAA,EAAAj9C,KAAAi9C,EAAAh9C,MAAA,cAAAg9C,EAAAj9C,KAAA,EAEP8nB,EAAW,IAAIz0B,EAAK3E,MAAMogB,KAAKgC,IAAI+2B,SAASvQ,EAAK77B,GAF1CwhD,EAAA/rC,OAAA,SAGN,CAAEjb,OAAM6xB,aAHF,OAAAm1B,EAAAj9C,KAAA,EAAAi9C,EAAAt6B,GAAAs6B,EAAA,SAKb5pD,EAAKg0B,eAAe,6BAA8BpxB,EAAMwF,EAAxDwhD,EAAAt6B,IALa,cAAAs6B,EAAA/rC,OAAA,SAOR,MAPQ,wBAAA+rC,EAAA97C,SAAA67C,EAAAxuD,KAAA,YA7tGE,gBAAA0uD,EAAAC,EAAAC,GAAA,OAAAL,EAAA17C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAsuGnB6uD,kBAAoB,WAA4B,IAA3BC,EAA2Bh8C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACrC,OAAOjO,EAAK26C,cAAc,kBAAkB,EAAOsP,IAvuGlC9uD,KAyuGnB+uD,qBAAuB,SAACC,EAAUC,GAUhC,OATKD,EAAS/hD,SAAWpI,EAAK3E,MAAMwQ,UAClCs+C,EAAS/hD,QAAUpI,EAAK3E,MAAMwQ,SAE3Bs+C,EAASzrC,WACZyrC,EAASzrC,SAAW1e,EAAKgqD,qBAEG,qBAAnBG,EAASE,OAA0BF,EAASE,cAC9CF,EAASE,QAEbF,EAAS/hD,aAGdgiD,EAAWA,IAAuBpqD,EAAK3E,MAAM+uD,SAAWpqD,EAAK3E,MAAM+uD,SAA+C,oBAA5BpqD,EAAK3E,MAAMivD,aAA8BtqD,EAAK3E,MAAMivD,eAAiB,QAElJF,EAASG,aAAaJ,KAxvGdhvD,KA4vGnBknB,2BAA6B,SAACnI,GAAmC,IAA3BqkB,EAA2BtwB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAChD49B,EAAiB7rC,EAAK+Q,gBAAgB,CAAC,UAAW,oBACxDwtB,EAAkBA,GAAmBv+B,EAAK4wB,uBAC1C,IAAMtO,EAAWtiB,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBwtB,EAAiB,aAClFisB,EAAaxqD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW86B,IACnF4e,EAAUzqD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAauR,EAAU,UAAWic,KAAqBisB,EACxG,OAAOtwC,EAAM,GAAAtb,OAAM6rD,EAAN,QAAA7rD,OAAoBsb,GAAW,MAlwG3B/e,KAowGnBuvD,uBAAyB,SAACtiD,GAAoC,IAA3Bm2B,EAA2BtwB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAC7C49B,EAAiB7rC,EAAK+Q,gBAAgB,CAAC,UAAW,oBACxDwtB,EAAkBA,GAAmBv+B,EAAK4wB,uBAC1C,IAAMtO,EAAWtiB,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAqBwtB,EAAiB,aAClFisB,EAAaxqD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW86B,IACnF4e,EAAUzqD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAauR,EAAU,UAAWic,KAAqBisB,EACxG,OAAOpiD,EAAO,GAAAxJ,OAAM6rD,EAAN,aAAA7rD,OAAyBwJ,GAAY,MA1wGlCjN,KA4wGnBU,YAAc,SAACmxB,GAA6D,IAArD29B,EAAqD18C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAtC,EAAG28C,EAAmC38C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAzB,IAAK48C,EAAoB58C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAR,IAClE,IACE08C,EAAex9C,KAAK29C,IAAIH,GACxBA,EAAehvD,MAAMgvD,GAAgB,EAAIA,EAEzC,IAAMI,EAAe/9B,EAAS,EAAI,IAAM,GAEpC/kB,EAAIoF,SAAS2f,EAAS7f,KAAK29C,IAAIE,OAAOh+B,IAAW,GAAGvkB,QAAQkiD,IAAejrC,WAC3EurC,EAAKhjD,EAAEvL,OAAS,EAAKuL,EAAEvL,OAAS,EAAI,EAExC,OAAOquD,GAAgBE,EAAIhjD,EAAEsZ,OAAO,EAAG0pC,GAAKJ,EAAY,IAAM5iD,EAAEsZ,OAAO0pC,GAAGj2B,QAAQ,iBAAkB,KAAO61B,IAAcF,EAAeC,EAAUz9C,KAAK29C,IAAI99B,EAAS/kB,GAAGQ,QAAQkiD,GAAcx1C,MAAM,GAAK,IACxM,MAAOjT,GACP,OAAO,OAxxGQ/G,KA2xGnB+vD,qBA3xGmB1uD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2xGI,SAAA8+C,IAAA,IAAAC,EAAA58B,EAAAtD,EAAAmgC,EAAA7X,EAAAqQ,EAAAn+C,EAAA4lD,EAAA3I,EAAA4I,EAAAC,EAAAv9C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAg/C,GAAA,cAAAA,EAAA9+C,KAAA8+C,EAAA7+C,MAAA,UAAOw+C,EAAPI,EAAA9uD,OAAA,QAAAiuB,IAAA6gC,EAAA,IAAAA,EAAA,GACfh9B,EADe,qBAAA5vB,OACsBwsD,GAExB,QADblgC,EAAalrB,EAAKiuC,cAAczf,IAFjB,CAAAi9B,EAAA7+C,KAAA,eAAA6+C,EAAA5tC,OAAA,SAIZqN,GAJY,cAOfmgC,EAAYrrD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,WAAY,cAAc3S,IAAI,SAAAstD,GAAI,OAAIA,EAAKrjD,gBACrGmrC,EAAWxzC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,WAAY,YAAa,cAClF8yC,EAAQuH,EAAaprD,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,oBAAsB/Q,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,cAErLrL,EAAO,CACXm+C,MAAK,GAAAjlD,OAAKilD,IAZS4H,EAAA7+C,KAAA,GAeC5M,EAAKsmD,sBAAsB9S,EAAU9tC,EAAM,MAAM,GAAM,GAfxD,cAejB4lD,EAfiBG,EAAA/7C,OAgBJ47C,EAAU5lD,MAAQ4lD,EAAU5lD,KAAK4lD,WAhB7B,CAAAG,EAAA7+C,KAAA,gBAiBnB0+C,EAAYA,EAAU5lD,KAAK4lD,UACrB3I,EAAWt1C,SAASe,KAAK04B,MAAQ,KACjCykB,EAAiB,GAnBJE,EAAA7+C,KAAA,GAoBb5M,EAAKiM,aAAaq/C,EAAlB,eAAAK,EAAAnvD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6B,SAAAu/C,EAAOhvD,GAAP,IAAA4iB,EAAAqsC,EAAA,OAAAj+B,EAAA3wB,EAAAwP,KAAA,SAAAq/C,GAAA,cAAAA,EAAAn/C,KAAAm/C,EAAAl/C,MAAA,YAC7BhQ,EAAEmvD,KAAOpJ,GAAY0I,EAAUh6B,SAASz0B,EAAEovD,OAAO3jD,gBADpB,CAAAyjD,EAAAl/C,KAAA,QAE/B2+C,EAAe7iD,KAAK9L,GAFWkvD,EAAAl/C,KAAA,sBAIzB4S,EAAc5iB,EAAEqvD,SAClBJ,GAAoB,EALOC,EAAAl/C,KAAA,EAMzB5M,EAAKiM,aAAarP,EAAEsvD,WAApB,eAAAC,EAAA3vD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgC,SAAA+/C,EAAO74B,GAAP,IAAA9F,EAAA4+B,EAAAlxB,EAAA,OAAAvN,EAAA3wB,EAAAwP,KAAA,SAAA6/C,GAAA,cAAAA,EAAA3/C,KAAA2/C,EAAA1/C,MAAA,WAChCi/C,EADgC,CAAAS,EAAA1/C,KAAA,eAAA0/C,EAAAzuC,OAAA,oBAIrB,qBAAX0V,EAAE3wB,KAJ8B,CAAA0pD,EAAA1/C,KAAA,YAK5B6gB,EAAY8F,EAAExY,OAAOse,SACrBgzB,EAAgBrsD,EAAKs0B,kBAAkB7G,IANX,CAAA6+B,EAAA1/C,KAAA,gBAAA0/C,EAAA1/C,KAAA,EAQL5M,EAAK6tB,gBAAgBJ,EAAW4+B,EAAcjkD,SAAS,EAAMoX,GARxD,QAQ1B2b,EAR0BmxB,EAAA58C,OASZ1P,EAAKgN,MAAMmuB,GAAcvqB,GAAG,OAC9Ci7C,GAAoB,GAVU,QAAAS,EAAA1/C,KAAA,kCAAA0/C,EAAAx+C,SAAAs+C,EAAAjxD,SAAhC,gBAAAoxD,GAAA,OAAAJ,EAAAn+C,MAAA7S,KAAA8S,YAAA,IANyB,OAyB3B49C,GACFN,EAAe7iD,KAAK9L,GA1BS,wBAAAkvD,EAAAh+C,SAAA89C,EAAAzwD,SAA7B,gBAAAqxD,GAAA,OAAAb,EAAA39C,MAAA7S,KAAA8S,YAAA,IApBa,eAAAw9C,EAAA5tC,OAAA,SAmDZ7d,EAAKmrB,cAAcqD,EAAe+8B,IAnDtB,yBAAAE,EAAA39C,SAAAq9C,EAAAhwD,SA3xGJA,KAi1GnBsxD,eAj1GmBjwD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAi1GF,SAAAqgD,IAAA,IAAAn4B,EAAAuwB,EAAA6H,EAAAC,EAAAC,EAAA5+C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqgD,GAAA,cAAAA,EAAAngD,KAAAmgD,EAAAlgD,MAAA,cAAO2nB,EAAPs4B,EAAAnwD,OAAA,QAAAiuB,IAAAkiC,EAAA,GAAAA,EAAA,GAAmB,KAC5B/H,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WACzCwjB,GAAcv0B,EAAK+Q,gBAAgB,CAAC,UAAW,oBAAoBsgB,SAASkD,KAC/EA,EAAYv0B,EAAK4wB,wBAEb+7B,EAAe3sD,EAAK+Q,gBAAgB,CAAC,QAAS,SALrC+7C,EAAAlgD,KAAA,EAMI5M,EAAKouC,kBAAkBue,EAAanZ,SAASjf,GAAYo4B,EAAanzB,KAAK,GAAM,EAAOsrB,GAN5F,cAMT8H,EANSE,EAAAp9C,KAAAo9C,EAAAjvC,OAAA,SAOR+uC,GAPQ,wBAAAE,EAAAh/C,SAAA4+C,EAAAvxD,SAj1GEA,KA01GnBsU,gBA11GmB,eAAAs9C,EAAAvwD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA01GD,SAAA2gD,EAAO5kD,GAAP,IAAA8G,EAAAszC,EAAAC,EAAAwK,EAAAC,EAAAC,EAAAC,EAAA74B,EAAA/F,EAAAtD,EAAAmiC,EAAAC,EAAAC,EAAA/Z,EAAAz4B,EAAAgb,EAAA+uB,EAAAr4B,EAAA/mB,EAAA8nD,EAAAC,EAAAx/C,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAihD,GAAA,cAAAA,EAAA/gD,KAAA+gD,EAAA9gD,MAAA,UAAgBsC,EAAhBu+C,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAyB,KAAMjL,EAA/BiL,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAgD,KAAMhL,EAAtDgL,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAqE,KAAMR,EAA3EQ,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,IAAAA,EAAA,GAAwGP,EAAxGO,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAoH,KAAMN,EAA1HM,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAkI,KAAML,EAAxIK,EAAA/wD,OAAA,QAAAiuB,IAAA8iC,EAAA,GAAAA,EAAA,GAAgJ,KAC1Jl5B,EAAYv0B,EAAK4wB,uBAQjBpC,EATU,gBAAA5vB,OASsB21B,EATtB,KAAA31B,OASmCwJ,EATnC,KAAAxJ,OAS8CsQ,EAT9C,KAAAtQ,OASwDsuD,EATxD,KAAAtuD,OASqEuuD,EATrE,KAAAvuD,OAS8EwuD,GAG3E,QAFfliC,EAAalrB,EAAKiuC,cAAczf,IAVpB,CAAAk/B,EAAA9gD,KAAA,eAcRygD,EAAqBniC,EAAWpe,OAAO,SAAA6nB,GAAC,OAA2B,OAArBA,EAAE6tB,gBAA4BA,GAAkB7tB,EAAE6tB,gBAAkBA,KAAwC,OAAnB7tB,EAAE8tB,cAA0BA,GAAgB9tB,EAAE8tB,cAAgBA,OACjL4K,EAAmB3wD,OAAS,GAfxC,CAAAgxD,EAAA9gD,KAAA,cAgBR4gD,EAAeH,EAAmBp9C,MAAMvK,MAhBhC,CAAAgoD,EAAA9gD,KAAA,eAkBV4gD,EAAeA,EAAa1gD,OAAO,SAAAtH,GAAC,QAAOg9C,GAAkBh9C,EAAE2K,WAAaqyC,MAAqBC,GAAgBj9C,EAAE2K,WAAasyC,MAC/G/lD,OAAS,GAnBhB,CAAAgxD,EAAA9gD,KAAA,gBAAA8gD,EAAA7vC,OAAA,SAoBD2vC,GApBC,QAAAE,EAAA9gD,KAAA,iBA0Bdse,EAAa,GA1BC,eA6BVqiC,EAAUvtD,EAAK+Q,gBAAgB,CAAC,QAAS,UAC3CyiC,EA9BY,GAAA50C,OA8BE2uD,EAAQ/Z,SAASjf,IA9BnB31B,OA8BgCwJ,IAI5Co6C,GAAkBC,GAA2B,OAAXvzC,GAAiC,OAAdg+C,KACjDnyC,EAAS,GAEXynC,GAAkBn1C,SAASm1C,KACzByK,EACFlyC,EAAOrS,KAAP,SAAA9J,OAAqB4jD,KAEfzsB,EAAQysB,EAAkB,OAChCznC,EAAOrS,KAAP,SAAA9J,OAAqBm3B,MAIrB0sB,GAAgBp1C,SAASo1C,IAC3B1nC,EAAOrS,KAAP,OAAA9J,OAAmB6jD,IAGN,OAAXvzC,GACF6L,EAAOrS,KAAP,UAAA9J,OAAsBsQ,IAGN,OAAdg+C,GAAsB7/C,SAAS6/C,IACjCnyC,EAAOrS,KAAP,aAAA9J,OAAyBsuD,IAGb,OAAVC,GACFpyC,EAAOrS,KAAP,SAAA9J,OAAqBuuD,IAGT,OAAVC,GAAkB//C,SAAS+/C,IAC7BryC,EAAOrS,KAAP,SAAA9J,OAAqBwuD,IAGnBryC,EAAOre,SACT82C,GAAY,IAAMz4B,EAAOjS,KAAK,OAI5Bg8C,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WAvE9B28C,EAAA9gD,KAAA,GAwEG5M,EAAKwyC,YAAYgB,GAAU,EAAOsR,GAxErC,WAwEZr4B,EAxEYihC,EAAAh+C,KAAA,CAAAg+C,EAAA9gD,KAAA,gBAAA8gD,EAAA7vC,OAAA,SA0EP,IA1EO,eA6EVnY,EAAO+mB,EAAO/mB,KAEhB8nD,EAAe,KACJ,OAAXt+C,IACFs+C,EAAe9nD,EAAKoH,OAAO,SAAAtH,GAAC,OAAKA,EAAE0J,SAAWA,KAGhDgc,EAAWxiB,KAAK,CACdwG,SACAuzC,eACAD,iBACA98C,KAAM8nD,IAGRxtD,EAAKmrB,cAAcqD,EAAetD,GA3FlBwiC,EAAA7vC,OAAA,SA6FTnY,GA7FS,yBAAAgoD,EAAA5/C,SAAAk/C,EAAA7xD,SA11GC,gBAAAwyD,GAAA,OAAAZ,EAAA/+C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAy7GnByyD,qBAz7GmB,eAAAC,EAAArxD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAy7GI,SAAAyhD,EAAOpzC,EAAcqzC,GAArB,IAAAv/B,EAAAtD,EAAA8iC,EAAA,OAAApgC,EAAA3wB,EAAAwP,KAAA,SAAAwhD,GAAA,cAAAA,EAAAthD,KAAAshD,EAAArhD,MAAA,UACf4hB,EADe,gBAAA5vB,OACiB8b,EADjB,KAAA9b,OACiCmvD,EAAmBnrD,QACnEsoB,EAAalrB,EAAK6vB,8BAA8BrB,KAEnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJrB,CAAAsyD,EAAArhD,KAAA,eAAAqhD,EAAApwC,OAAA,SAKZ7d,EAAKgN,MAAMke,IALC,cAAA+iC,EAAArhD,KAAA,EAQM5M,EAAKkuB,oBAAoBxT,EAAcqzC,EAAmBnrD,KAAMmrD,EAAmBhzC,QARzF,cAQfizC,EAReC,EAAAv+C,KAAAu+C,EAAApwC,OAAA,SASd7d,EAAK8vB,8BAA8BtB,EAAew/B,EAAc,OATlD,wBAAAC,EAAAngD,SAAAggD,EAAA3yD,SAz7GJ,gBAAA+yD,EAAAC,GAAA,OAAAN,EAAA7/C,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo8GnBizD,iBAp8GmB,eAAAC,EAAA7xD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo8GA,SAAAiiD,EAAO5zC,GAAP,IAAA8T,EAAAtD,EAAA5sB,EAAAtC,EAAA,OAAA4xB,EAAA3wB,EAAAwP,KAAA,SAAA8hD,GAAA,cAAAA,EAAA5hD,KAAA4hD,EAAA3hD,MAAA,UACjB8N,EAAeA,GAAgB1a,EAAK3E,MAAM0J,cADzB,CAAAwpD,EAAA3hD,KAAA,eAAA2hD,EAAA1wC,OAAA,UAIR,GAJQ,UAOX2Q,EAPW,oBAAA5vB,OAOyB8b,KACpCwQ,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QATzB,CAAA4yD,EAAA3hD,KAAA,eAAA2hD,EAAA1wC,OAAA,SAUR7d,EAAKgN,MAAMke,IAVH,YAaX5sB,EAAc0B,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU2J,EAAa1J,mBAC1C1S,EAAYtC,SAd3B,CAAAuyD,EAAA3hD,KAAA,SAAA2hD,EAAAj/B,GAcsChxB,EAAYtC,SAdlDuyD,EAAA3hD,KAAA,wBAAA2hD,EAAA3hD,KAAA,GAcmE5M,EAAKkuB,oBAAoBxT,EAAc,YAd1G,QAAA6zC,EAAAj/B,GAAAi/B,EAAA7+C,KAAA,eAcX1T,EAdWuyD,EAAAj/B,GAAAi/B,EAAA1wC,OAAA,SAgBV7d,EAAK8vB,8BAA8BtB,EAAexyB,EAAU,OAhBlD,yBAAAuyD,EAAAzgD,SAAAwgD,EAAAnzD,SAp8GA,gBAAAqzD,GAAA,OAAAH,EAAArgD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAs9GnBu2B,UAAY,SAACk7B,EAAM6B,EAAa7pD,GAC9B,GAAIgoD,GAAQ6B,GAAe7pD,EAAiB,CAC1C,IAAI8pD,EAASlyD,OAAOC,KAAKmwD,GAAMxrB,OAAO,SAACutB,EAAaxmD,GAClD,IAAMymD,EAAa5uD,EAAKgN,MAAMyhD,EAAYtmD,IACpC8+B,EAAMjnC,EAAKgN,MAAM4/C,EAAKzkD,IAC5B,OAAOnI,EAAKgN,MAAM2hD,GAAanhD,KAAKohD,EAAWpmD,MAAMy+B,KACpD,GAEH,GAAIynB,EACF,OAAO1uD,EAAKgN,MAAM0hD,GAAQjvC,IAAI7a,GAGlC,OAAO,MAl+GUzJ,KAo+GnB0zD,oBAAsB,SAAC3B,GAA4B,IAAjB4B,EAAiB7gD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAN,EAM3C,MAL0B,CACxB8gD,KAAM,KACNC,IAAK,MACLC,KAAM,QAEiB/B,GAAa4B,GA1+GrB3zD,KA4+GnB+zD,yBA5+GmB1yD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4+GQ,SAAA8iD,IAAA,IAAAC,EAAAC,EAAAnjB,EAAAW,EAAAC,EAAAO,EAAA,OAAAzf,EAAA3wB,EAAAwP,KAAA,SAAA6iD,GAAA,cAAAA,EAAA3iD,KAAA2iD,EAAA1iD,MAAA,cACnBwiD,EAAkBpvD,EAAK+Q,gBAAgB,CAAC,YAAa,SACrDs+C,EAAuBrvD,EAAK+Q,gBAAgB,CAAC,QAAS,QAAS,QAAS,kBAAmB,OAAQ,mBACnGm7B,EAAgBlsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,cAC9D87B,EAAkBX,EAAcgC,UAAU,GAC1CpB,EALmB,GAAAluC,OAKIiuC,EALJ,2CAAAjuC,OAK6DywD,EAAqBjnD,QALlF,cAAAknD,EAAA1iD,KAAA,EAMK5M,EAAKquC,wBAAwBvB,EAAmBZ,EAAczvC,KAAM,MANzE,aAMnB4wC,EANmBiiB,EAAA5/C,OAQF29B,EAAgB3nC,MAAQ2nC,EAAgB3nC,KAAK8oC,QAAwD,oBAAvCnB,EAAgB3nC,KAAK8oC,OAAO1hC,QARxF,CAAAwiD,EAAA1iD,KAAA,gBAAA0iD,EAAAzxC,OAAA,SAShBwvB,EAAgB3nC,KAAK8oC,OAAO1hC,OAAO,SAAAC,GAAE,OAAKA,EAAG0qB,gBAAgBpvB,gBAAkB+mD,EAAgBhnD,QAAQC,eAAiB0E,EAAG8oB,GAAGxtB,gBAAkBgnD,EAAqBjnD,QAAQC,eAAiBrI,EAAKgN,MAAMD,EAAG/G,OAAO4K,GAAG,MATtM,eAAA0+C,EAAAzxC,OAAA,SAWlB,IAXkB,yBAAAyxC,EAAAxhD,SAAAqhD,EAAAh0D,SA5+GRA,KAy/GnBo0D,yBAA2B,SAAC7D,GAC1B,OAAO1rD,EAAK3E,MAAMiD,YAAYyJ,UAAU+iB,KAAK,SAAA6J,GAAC,OAAIA,EAAEvsB,QAAQC,gBAAkBqjD,EAAKrjD,iBA1/GlElN,KA4/GnBq0D,aAAe,SAAAxpD,GACb,OAAOhG,EAAKgN,MAAMhH,GAAOwpD,aAAah8B,IAAUi8B,aAAahnD,WA7/G5CtN,KA+/GnBu0D,uBAAyB,SAAAt/C,GACvB,OAAOpQ,EAAKgN,MAAL,KAAApO,OAAgBwR,KAhgHNjV,KAkgHnBw0D,qBAAuB,SAACx0B,EAAc/qB,KAAgCnC,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,OAC9D2hD,EAA0B5vD,EAAK0vD,uBAAuBt/C,GAC5D,OAAOpQ,EAAKgN,MAAMmuB,GAAc3yB,MAAMonD,GAAyBJ,aAAah8B,IAAUi8B,aAAahnD,WApgHlFtN,KAsgHnBqV,iBAAmB,SAAC2qB,EAAc/qB,GAAuC,IAAxB49C,EAAwB//C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAC9D,IAAKmC,EACH,OAAOpQ,EAAKgN,MAAMmuB,GAEpB,IAAMy0B,EAA0B5vD,EAAK0vD,uBAAuBt/C,GACxDzC,EAAU3N,EAAKgN,MAAMmuB,GAAc1b,IAAImwC,GAI3C,OAHI5B,IAAiBA,EAAaryD,UAChCgS,EAAUA,EAAQnF,MAAMwlD,IAEnBrgD,GA/gHUxS,KAihHnB00D,oBAjhHmBrzD,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAihHG,SAAAyjD,IAAA,IAAAp1C,EAAAq1C,EAAAC,EAAA/hD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAwjD,GAAA,cAAAA,EAAAtjD,KAAAsjD,EAAArjD,MAAA,cACpB8N,GAD2BA,EAAPs1C,EAAAtzD,OAAA,QAAAiuB,IAAAqlC,EAAA,GAAAA,EAAA,GAAsB,OACGhwD,EAAK3E,MAAMiD,YAAY4wB,KAAK7wB,MADrD4xD,EAAArjD,KAAA,EAES5M,EAAK+mC,0BAA0BrsB,EAAc,UAAUwqC,MAAM,SAAAxnC,GACxF1d,EAAKg0B,eAAe,yBAA0BtW,KAH5B,cAEdqyC,EAFcE,EAAAvgD,KAAAugD,EAAApyC,OAAA,SAMbkyC,GANa,wBAAAE,EAAAniD,SAAAgiD,EAAA30D,SAjhHHA,KAyhHnBw/C,cAAgB,SAAC17C,GAAkD,IAA7CixD,IAA6CjiD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,GAA1BkiD,EAA0BliD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACpDwe,EAAS0jC,EACb,GAAIvvC,OAAOR,aAAc,CACvB,IAAMnO,EAAOmO,aAAaC,QAAQphB,GAClC,GAAIgT,IACFwa,EAASxa,EACLi+C,GACF,IACEzjC,EAASrhB,KAAKkV,MAAMrO,GACpB,MAAOyL,GAEP+O,EAAS,KACTzsB,EAAKowD,iBAAiBnxD,IAK9B,OAAKwtB,GACI0jC,GA3iHQh1D,KA+iHnBk1D,gBAAkB,WAAsB,IAArBC,EAAqBriD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAP,GAC/B,GAAI2S,OAAOR,aAAc,CAEvB,IAAKkwC,IAAgBA,EAAY5zD,OAC/B,OAAOkkB,OAAOR,aAAamwC,QAI7B,IADA,IAAMC,EAAqB,GAClBvoD,EAAI,EAAGA,EAAI2Y,OAAOR,aAAa1jB,OAAQuL,IAAK,CACnD,IAAMwoD,EAAY7vC,OAAOR,aAAanhB,IAAIgJ,GACrCqoD,EAAYj/B,SAASo/B,IACxBD,EAAmB9nD,KAAK+nD,GAI5BD,EAAmB7zD,QAAQ,SAAC8zD,GAC1BzwD,EAAKowD,iBAAiBK,OA/jHTt1D,KAmkHnBi1D,iBAAmB,SAACnxD,GAClB,QAAI2hB,OAAOR,eACTQ,OAAOR,aAAaswC,WAAWzxD,IACxB,IAtkHQ9D,KA0kHnBslB,gBAAkB,SAACxhB,EAAK+G,GAA6B,IAAtBqF,EAAsB4C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GACnD,GAAI2S,OAAOR,aACT,IAGE,OAFApa,EAAQqF,EAAYD,KAAKC,UAAUrF,GAASA,EAC5C4a,OAAOR,aAAauwC,QAAQ1xD,EAAK+G,IAC1B,EACP,MAAOoU,GACPia,QAAQja,MAAM,kBAAkBA,GAChCwG,OAAOR,aAAaswC,WAAWzxD,GAGnC,OAAO,GArlHU9D,KAulHnBy1D,eAvlHmB,eAAAC,EAAAr0D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAulHF,SAAAykD,EAAOxyD,GAAP,IAAAyyD,EAAAtC,EAAA/8C,EAAAs/C,EAAAC,EAAAC,EAAA,OAAAtjC,EAAA3wB,EAAAwP,KAAA,SAAA0kD,GAAA,cAAAA,EAAAxkD,KAAAwkD,EAAAvkD,MAAA,WACVtO,GAAe0B,EAAK3E,MAAMiD,cAC7BA,EAAc0B,EAAK3E,MAAMiD,aAEtBA,EAJU,CAAA6yD,EAAAvkD,KAAA,eAAAukD,EAAAtzC,OAAA,UAKN,GALM,cAQTkzC,EAA0B,GARjBI,EAAAvkD,KAAA,EASW5M,EAAKkuB,oBAAoB5vB,EAAY4wB,KAAK7wB,MAAO,kBAT5D,WASTowD,EATS0C,EAAAzhD,OAWM++C,EAAY/xD,OAXlB,CAAAy0D,EAAAvkD,KAAA,eAAAukD,EAAAtzC,OAAA,UAYN,GAZM,OAef,IAfenM,EAAA,SAeNs/C,GACP,IAAMI,EAAyB,IAAIl0C,QAAJ,eAAAm0C,EAAA70D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAilD,EAAOh0C,EAASC,GAAhB,IAAAg0C,EAAA,OAAA3jC,EAAA3wB,EAAAwP,KAAA,SAAA+kD,GAAA,cAAAA,EAAA7kD,KAAA6kD,EAAA5kD,MAAA,cAAA4kD,EAAA7kD,KAAA,EAAA6kD,EAAA5kD,KAAA,EAET5M,EAAKkuB,oBAAoB5vB,EAAY4wB,KAAK7wB,MAAO,kBAAmB,CAAC2yD,IAF5D,OAEjCO,EAFiCC,EAAA9hD,KAGvC4N,EAAQi0C,GAH+BC,EAAA5kD,KAAA,gBAAA4kD,EAAA7kD,KAAA,EAAA6kD,EAAAliC,GAAAkiC,EAAA,SAKvCn9B,QAAQ8a,IAARqiB,EAAAliC,IACAhS,EAAQ,MAN+B,yBAAAk0C,EAAA1jD,SAAAwjD,EAAAn2D,KAAA,YAAZ,gBAAAs2D,EAAAC,GAAA,OAAAL,EAAArjD,MAAA7S,KAAA8S,YAAA,IAS/B8iD,EAAwBroD,KAAK0oD,IAVtBJ,EAAgB,EAAGA,EAAgBvC,EAAY/xD,OAAQs0D,IAAiBt/C,EAAxEs/C,GAfM,OAAAG,EAAAvkD,KAAA,GA4BcsQ,QAAQqD,IAAIwwC,GA5B1B,WA4BTE,EA5BSE,EAAAzhD,KA8BV++C,GAAgBwC,EA9BN,CAAAE,EAAAvkD,KAAA,gBAAAukD,EAAAtzC,OAAA,UA+BN,GA/BM,eAkCTqzC,EAAOzC,EAAY3hD,OAAO,SAAC6kD,EAAOxwD,GAAR,OAAkBwwD,IAAUV,EAAe9vD,KAlC5DgwD,EAAAtzC,OAAA,SAoCRqzC,EAAKx0D,OAAS,GApCN,yBAAAy0D,EAAArjD,SAAAgjD,EAAA31D,SAvlHE,gBAAAy2D,GAAA,OAAAf,EAAA7iD,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6nHnBoiC,eA7nHmB,eAAAs0B,EAAAr1D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6nHF,SAAAylD,EAAOxzD,EAAauN,GAApB,IAAAuxB,EAAA20B,EAAAC,EAAA30B,EAAA40B,EAAAnR,EAAA3pB,EAAA,OAAAvJ,EAAA3wB,EAAAwP,KAAA,SAAAylD,GAAA,cAAAA,EAAAvlD,KAAAulD,EAAAtlD,MAAA,UAEVtO,GAAgBuN,EAFN,CAAAqmD,EAAAtlD,KAAA,eAAAslD,EAAAr0C,OAAA,UAGN,GAHM,UAMXuf,GAAmB,EACnB20B,EAAqB,KACrBC,EAA2B,KAE3B30B,EAA8B,MAG9B/+B,EAAY44B,YAAa54B,EAAY44B,UAAUjI,QAbpC,CAAAijC,EAAAtlD,KAAA,YAcPqlD,EAAkB3zD,EAAY44B,UAAU4pB,YAAYl+C,KACpDk+C,EAAc9gD,EAAKs0B,kBAAkB29B,GACrC96B,EAAoBn3B,EAAKs0B,kBAAkBh2B,EAAY44B,UAAUC,kBAAkBv0B,OAIrFk+C,IAAe3pB,EApBN,CAAA+6B,EAAAtlD,KAAA,gBAAAslD,EAAAtlD,KAAA,GAsBsB5M,EAAKouD,iBAAiB6D,GAtB5C,eAsBXD,EAtBWE,EAAAxiD,KAAAwiD,EAAAtlD,KAAA,GAgCgB5M,EAAK07B,mBAAmBu2B,EAAiBpmD,GAhCzD,SAgCXkmD,EAhCWG,EAAAxiD,QAmCT2tB,EAA8Br9B,EAAKwQ,iBAAiBuhD,EAAoBC,GAExE50B,EAAmBp9B,EAAKgN,MAAM+kD,GAAoBnhD,GAAG,IArC5C,eAAAshD,EAAAr0C,OAAA,SA6CR,CACLuf,mBACA20B,qBACAC,2BACA30B,gCAjDa,yBAAA60B,EAAApkD,SAAAgkD,EAAA32D,SA7nHE,gBAAAg3D,EAAAC,GAAA,OAAAP,EAAA7jD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAsrHnB8mC,kBAtrHmB,eAAAowB,EAAA71D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsrHC,SAAAimD,EAAO53C,EAAc63C,GAArB,IAAAC,EAAAC,EAAA13C,EAAAwjB,EAAAm0B,EAAAC,EAAAC,EAAApzC,EAAAqzC,EAAAC,EAAAC,EAAA9kD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAumD,GAAA,cAAAA,EAAArmD,KAAAqmD,EAAApmD,MAAA,UAAgC4lD,EAAhCO,EAAAr2D,OAAA,QAAAiuB,IAAAooC,EAAA,GAAAA,EAAA,GAA2C,EAAGN,EAA9CM,EAAAr2D,OAAA,QAAAiuB,IAAAooC,EAAA,GAAAA,EAAA,GAAuD,SAAUh4C,EAAjEg4C,EAAAr2D,OAAA,QAAAiuB,IAAAooC,EAAA,GAAAA,EAAA,GAA0E,GACtFx0B,EAAkBv+B,EAAKye,qBACvBi0C,EAAgBn0B,EAAgBm0B,eAAiB,IAClB,WAAbD,EAHN,CAAAO,EAAApmD,KAAA,gBAAAomD,EAAApmD,KAAA,EAGoC5M,EAAK3E,MAAMogB,KAAKgC,IAAIw1C,iBAHxD,OAAAD,EAAA1jC,GAAA0jC,EAAAtjD,KAAAsjD,EAAApmD,KAAA,iBAAAomD,EAAA1jC,GAG2EjiB,SAASolD,GAHpF,WAGZE,EAHYK,EAAA1jC,GAIlBkjC,EAAanlD,SAASmlD,IAAeG,EAAgBD,EAE/CE,EAAQ,GAETvlD,SAASmlD,IAAgBnlD,SAASslD,GARrB,CAAAK,EAAApmD,KAAA,gBAAAomD,EAAAn1C,OAAA,SAST+0C,GATS,QAYlB,IAASpzC,EAAcgzC,EAAYhzC,EAAcmzC,EAAiBnzC,GAAakzC,GACzEG,EAAU1lD,KAAKC,IAAIoS,EAAYkzC,EAAcC,MACjCA,GAAgC,WAAbF,IACjCI,EAAU,UAEZD,EAAMlqD,KAAK1I,EAAKkzD,sBAAsBx4C,EAAc63C,EAAzC/1D,OAAA84B,EAAA,EAAA94B,CAAA,CAAqD22D,UAAW3zC,EAAaqzC,WAAY93C,KAjBpF,OAAAi4C,EAAApmD,KAAA,GAoBYsQ,QAAQqD,IAAIqyC,GApBxB,eAoBZE,EApBYE,EAAAtjD,KAAAsjD,EAAAn1C,OAAA,SAqBXi1C,EAAgB1xB,OAAQ,SAAC2f,EAAOv7C,GAErC,OADAu7C,EAASA,EAAOniD,OAAO4G,IAEvB,KAxBgB,yBAAAwtD,EAAAllD,SAAAwkD,EAAAn3D,SAtrHD,gBAAAi4D,EAAAC,GAAA,OAAAhB,EAAArkD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAitHnBm4D,uBAjtHmB,eAAAC,EAAA/2D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAitHM,SAAAmnD,EAAO94C,EAAcF,GAArB,IAAAi5C,EAAA5nD,EAAA4oB,EAAAi/B,EAAAC,EAAAn1C,EAAAo1C,EAAAC,EAAAC,EAAAC,EAAA9lD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAunD,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,UAAiC6mD,EAAjCM,EAAAr3D,OAAA,QAAAiuB,IAAAopC,EAAA,GAAAA,EAAA,GAAgD,GACvEloD,GAD2EA,EAApDkoD,EAAAr3D,OAAA,QAAAiuB,IAAAopC,EAAA,GAAAA,EAAA,GAA8D,OAChE/zD,EAAK3E,MAAMwQ,QADT,CAAAmoD,EAAApnD,KAAA,eAAAonD,EAAAn2C,OAAA,SAGd,MAHc,YAKjB4W,EAAWz0B,EAAKs0B,kBAAkB5Z,MACxB+Z,EAASsgB,QAAQv6B,GANV,CAAAw5C,EAAApnD,KAAA,gBAOf+mD,GAAeD,EAAAj/B,EAASsgB,SAAQv6B,GAAjBxM,MAAA0lD,EAAAl3D,OAAA0/B,EAAA,EAAA1/B,CAAgCi3D,IAEjDj1C,EAAW,KACXo1C,EAAW,KAVMI,EAAArnD,KAAA,GAAAqnD,EAAApnD,KAAA,GAgBTsQ,QAAQqD,IAAI,CACpBvgB,EAAK3E,MAAMogB,KAAKgC,IAAIw2C,cACpBN,EAAaO,YAAY,CAAE3sD,KAAMsE,MAlBhB,QAAAgoD,EAAAG,EAAAtkD,KAAAokD,EAAAt3D,OAAA4yB,EAAA,EAAA5yB,CAAAq3D,EAAA,GAcjBr1C,EAdiBs1C,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAApnD,KAAA,iBAAAonD,EAAArnD,KAAA,GAAAqnD,EAAA1kC,GAAA0kC,EAAA,sBAwBjBx1C,IAAYo1C,EAxBK,CAAAI,EAAApnD,KAAA,gBAAAonD,EAAAn2C,OAAA,SAyBZ7d,EAAKwQ,iBAAiBxQ,EAAKwQ,iBAAiBgO,EAAU,GAAGhW,MAAMorD,GAAW,IAzB9D,eAAAI,EAAAn2C,OAAA,SA6BhB7d,EAAKgN,MAAM,IA7BK,yBAAAgnD,EAAAlmD,SAAA0lD,EAAAr4D,KAAA,cAjtHN,gBAAAg5D,EAAAC,GAAA,OAAAb,EAAAvlD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAivHnB6kD,uBAjvHmB,eAAAqU,EAAA73D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAivHM,SAAAioD,EAAO7/B,EAAU8/B,EAAaC,EAAkBrxD,EAAUsxD,GAA1D,IAAAC,EAAAl2C,EAAA,OAAAoP,EAAA3wB,EAAAwP,KAAA,SAAAkoD,GAAA,cAAAA,EAAAhoD,KAAAgoD,EAAA/nD,MAAA,cAAA+nD,EAAAhoD,KAAA,EAAAgoD,EAAA/nD,KAAA,EASE5M,EAAK3E,MAAMogB,KAAKgC,IAAIw2C,cATtB,OASfz1C,EATem2C,EAAAjlD,MAWVglD,EAAAjgC,EAASsgB,SACjBiL,uBADQhyC,MAAA0mD,EAAA,CACeH,GADf31D,OAAApC,OAAA0/B,EAAA,EAAA1/B,CAC+Bg4D,KACvC7sC,KAAK,CACJpgB,KAAMgtD,EACN/1C,aAIDo2C,GAAG,kBAAmB,SAAU3xD,GACjC9H,KAAK+jB,UAAL,yCAAAtgB,OAAwDqE,IACxDwxD,MACCI,KAAK,eAAgB,SAAUC,EAAoBC,GACpD55D,KAAK+jB,UAAU,iCAAkC61C,GACjDN,EAAiBM,KAxBEJ,EAAA/nD,KAAA,gBAAA+nD,EAAAhoD,KAAA,EAAAgoD,EAAArlC,GAAAqlC,EAAA,SA2BrB30D,EAAKkf,UAALy1C,EAAArlC,IACAnsB,EAAS,KAADwxD,EAAArlC,IA5Ba,yBAAAqlC,EAAA7mD,SAAAwmD,EAAAn5D,KAAA,YAjvHN,gBAAA65D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAArmD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAixHnBk6D,0BAA4B,SAAAC,GAC1B,IAAKt1D,EAAK3E,MAAMogB,KAAKmX,MAAM2iC,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgB52D,OAAO02D,EAAW,iCAGtC,IAAIzc,EAAIyc,EAAUngD,MAAM,EAAG,IACvBoe,EAAI,KAAK30B,OAAO02D,EAAUngD,MAAM,GAAI,MACpCrP,EAAI,KAAKlH,OAAO02D,EAAUngD,MAAM,IAAK,MAGzC,OAFArP,EAAI9F,EAAK3E,MAAMogB,KAAKmX,MAAM6iC,YAAY3vD,GACjC,CAAC,GAAI,IAAIurB,SAASvrB,KAAIA,GAAK,IACzB,CACL+yC,EAAGA,EACHtlB,EAAGA,EACHztB,EAAGA,IA/xHY3K,KAmyHnBu6D,gCAAkC,SAACC,EAAOt9B,EAASu9B,EAAmBn+B,GACpE,OAAOpF,EAAcwjC,aACnB,CAAC,UAAW,UAAW,UAAW,SAClC,CAACF,EAAOl+B,EAAiBY,EAASy9B,mBAASF,MAtyH5Bz6D,KA0yHnB46D,oBA1yHmB,eAAAC,EAAAx5D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0yHG,SAAA4pD,EAAO1B,GAAP,IAAA2B,EAAAC,EAAA,OAAAvoC,EAAA3wB,EAAAwP,KAAA,SAAA2pD,GAAA,cAAAA,EAAAzpD,KAAAypD,EAAAxpD,MAAA,cACdspD,EAAel2D,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,aAD/CqlD,EAAAxpD,KAAA,EAEF5M,EAAKwyC,YAAL,GAAA5zC,OAAoBs3D,EAAahoB,UAAUmoB,OAA3C,iBAAAz3D,OAAiE21D,EAAjE,WAAA31D,OAAsFs3D,EAAan7C,OAAOu7C,OAAS,KAAM,CACzIC,QAAS,CACPC,YAAaN,EAAan7C,OAAO6qC,UAJjB,YAEduQ,EAFcC,EAAA1mD,QAQTymD,EAAIzwD,KARK,CAAA0wD,EAAAxpD,KAAA,eAAAwpD,EAAAv4C,OAAA,SASXs4C,EAAIzwD,MATO,cAAA0wD,EAAAv4C,OAAA,SAYb,MAZa,wBAAAu4C,EAAAtoD,SAAAmoD,EAAA96D,SA1yHH,gBAAAs7D,GAAA,OAAAT,EAAAhoD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAyzHnBu7D,iBAzzHmB,eAAAC,EAAAn6D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAyzHA,SAAAuqD,EAAOl8C,EAAcF,EAAYi5C,EAAckC,EAAOxyD,EAAUsxD,GAAhE,IAAAoC,EAAApiC,EAAAmhC,EAAArB,EAAAl8B,EAAAy+B,EAAAxB,EAAAyB,EAAAle,EAAAtlB,EAAAztB,EAAA,OAAA8nB,EAAA3wB,EAAAwP,KAAA,SAAAuqD,GAAA,cAAAA,EAAArqD,KAAAqqD,EAAApqD,MAAA,UACX6nB,EAAWz0B,EAAKs0B,kBAAkB5Z,GADvB,CAAAs8C,EAAApqD,KAAA,eAIfzJ,EAAS,KAAM,sBAJA6zD,EAAAn5C,OAAA,UAKR,GALQ,UAQZ4W,EAASsgB,QAAQv6B,GARL,CAAAw8C,EAAApqD,KAAA,eASfzJ,EAAS,KAAM,oBATA6zD,EAAAn5C,OAAA,UAUR,GAVQ,cAaX+3C,GAAoBiB,EAAApiC,EAASsgB,SAAQv6B,GAAjBxM,MAAA6oD,EAAAr6D,OAAA0/B,EAAA,EAAA1/B,CAAgCi3D,IAAcwD,YAbvDD,EAAArqD,KAAA,EAgBT4nD,EAAcv0D,EAAK3E,MAAMwQ,QACzBwsB,EAAUr4B,EAAK4wB,uBACfkmC,EAAgB92D,EAAK01D,gCAAgCC,EAAOt9B,EAASu9B,EAAmBnhC,EAASmS,UAlBxFowB,EAAApqD,KAAA,GAoBS5M,EAAK3E,MAAMogB,KAAKgC,IAAIy5C,SAASC,KACnD,KAAOL,EAAcp3C,SAAS,OAC9B60C,GAtBa,eAoBTe,EApBS0B,EAAAtnD,KAAAqnD,EAyBK/2D,EAAKq1D,0BAA0BC,GAA3Czc,EAzBOke,EAyBPle,EAAGtlB,EAzBIwjC,EAyBJxjC,EAAGztB,EAzBCixD,EAyBDjxD,EAEd9F,EAAKob,0BAA0BV,EAAcF,EAAYi5C,EAAa70D,OAAO,CAAC+2D,EAAO9c,EAAGtlB,EAAGztB,IAAK3C,EAAUsxD,GA3B3FuC,EAAAn5C,OAAA,UA6BR,GA7BQ,eAAAm5C,EAAArqD,KAAA,GAAAqqD,EAAA1nC,GAAA0nC,EAAA,SA+Bf7zD,EAAS,KAAD6zD,EAAA1nC,IA/BO0nC,EAAAn5C,OAAA,UAgCR,GAhCQ,yBAAAm5C,EAAAlpD,SAAA8oD,EAAAz7D,KAAA,aAzzHA,gBAAAi8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA3oD,MAAA7S,KAAA8S,YAAA,GAAA9S,KA61HnBu8D,8BA71HmB,eAAAC,EAAAn7D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA61Ha,SAAAurD,EAAOl9C,EAAcpL,EAAcuoD,EAAYC,EAAUlE,GAAzD,IAAAn/B,EAAAsjC,EAAAhrD,EAAA,OAAA6gB,EAAA3wB,EAAAwP,KAAA,SAAAurD,GAAA,cAAAA,EAAArrD,KAAAqrD,EAAAprD,MAAA,UACxB6nB,EAAWz0B,EAAKs0B,kBAAkB5Z,GADV,CAAAs9C,EAAAprD,KAAA,eAAAorD,EAAAn6C,OAAA,UAIrB,GAJqB,cASxBk6C,EAAc,CAClBF,aACAnyD,KAAMoyD,EACNz5D,MAAOiR,EACPumB,GAAIpB,EAASmS,SACbqxB,MAAO5qD,SAASumD,IAdYoE,EAAAprD,KAAA,EAoBb5M,EAAK3E,MAAM68D,qBAAqBC,QAAQJ,GApB3B,cAoBxBhrD,EApBwBirD,EAAAtoD,KAAAsoD,EAAAn6C,OAAA,SAsBvB9Q,GAtBuB,wBAAAirD,EAAAlqD,SAAA8pD,EAAAz8D,SA71Hb,gBAAAi9D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAA3pD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAs3HnBq6C,sBAt3HmB,eAAAijB,EAAAj8D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAs3HK,SAAAqsD,EAAOz1D,GAAP,OAAA2qB,EAAA3wB,EAAAwP,KAAA,SAAAksD,GAAA,cAAAA,EAAAhsD,KAAAgsD,EAAA/rD,MAAA,cAAA+rD,EAAA/rD,KAAA,EACR,IAAIsQ,QAAJ,eAAA07C,EAAAp8D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAwsD,EAAOv7C,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAAqsD,GAAA,cAAAA,EAAAnsD,KAAAmsD,EAAAlsD,MAAA,OACxB5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBvyC,EAAM,SAACya,EAAK3Q,GAChD2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALc,wBAAA+rD,EAAAhrD,SAAA+qD,EAAA19D,SAAZ,gBAAA49D,EAAAC,GAAA,OAAAJ,EAAA5qD,MAAA7S,KAAA8S,YAAA,IADQ,cAAA0qD,EAAA96C,OAAA,SAAA86C,EAAAjpD,MAAA,wBAAAipD,EAAA7qD,SAAA4qD,EAAAv9D,SAt3HL,gBAAA89D,GAAA,OAAAR,EAAAzqD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAi4HnB+9D,iCAj4HmB,eAAAC,EAAA38D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAi4HgB,SAAA+sD,EAAOC,EAAKC,EAAUn2D,EAAUsxD,GAAhC,IAAA35C,EAAAy+C,EAAAxsD,EAAAysD,EAAA,OAAA5rC,EAAA3wB,EAAAwP,KAAA,SAAAgtD,GAAA,cAAAA,EAAA9sD,KAAA8sD,EAAA7sD,MAAA,cAE7BkO,EAAkB,KAFW2+C,EAAA9sD,KAAA,EAAA8sD,EAAA7sD,KAAA,EAKN5M,EAAK3E,MAAM68D,qBAAqBwB,sBAAsB,CAAEL,MAAKC,aALvD,OAKzBC,EALyBE,EAAA/pD,KAM/BoL,EAAkBy+C,EAAWr/C,OANEu/C,EAAA7sD,KAAA,uBAAA6sD,EAAA9sD,KAAA,EAAA8sD,EAAAnqC,GAAAmqC,EAAA,SAU/Bt2D,EAAS,MAAM,GAVgBs2D,EAAA57C,OAAA,UAWxB,GAXwB,WAc5B/C,EAd4B,CAAA2+C,EAAA7sD,KAAA,gBAgB/BzJ,EAAS,MAAM,GAhBgBs2D,EAAA57C,OAAA,UAiBxB,GAjBwB,eAyBjC42C,EALM1nD,EAAK,CACT2rB,OAAQ,gBACR5d,oBAMI0+C,EAAyB54C,OAAO+4C,YAAY,WAChD35D,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsB16B,EAAiB,SAAC4C,EAAKq3C,IAE1Dr3C,GAAOq3C,IACVn0C,OAAOg5C,cAAcJ,GACrBzsD,EAAG6hC,UAAYmmB,EACfhoD,EAAGG,QAAUwQ,GAAOq3C,EAAQ7nD,OAAS,UAAY,QAEjD/J,EAAS4J,EAAI2Q,GAE2B,oBAA7BkD,OAAOi5C,mBAChBj5C,OAAOi5C,kBAAkB9sD,EAAI+N,EAAiB/N,EAAGG,OAAQ,UAI9D,KA3C8BusD,EAAA57C,OAAA,UA6C1B,GA7C0B,yBAAA47C,EAAA3rD,SAAAsrD,EAAAj+D,KAAA,YAj4HhB,gBAAA2+D,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAnrD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAi7HnB++D,+BAj7HmB,eAAAC,EAAA39D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAi7Hc,SAAA+tD,EAAO1/C,EAAck7C,EAAmBzyD,EAAUsxD,GAAlD,IAAAhgC,EAAA8/B,EAAAoB,EAAAt9B,EAAAy+B,EAAAxB,EAAA+E,EAAAxhB,EAAAtlB,EAAAztB,EAAA,OAAA8nB,EAAA3wB,EAAAwP,KAAA,SAAA6tD,GAAA,cAAAA,EAAA3tD,KAAA2tD,EAAA1tD,MAAA,UACzB6nB,EAAWz0B,EAAKs0B,kBAAkB5Z,GADT,CAAA4/C,EAAA1tD,KAAA,eAI7BzJ,EAAS,KAAM,sBAJcm3D,EAAAz8C,OAAA,UAKtB,GALsB,cAAAy8C,EAAA3tD,KAAA,EASvB4nD,EAAcv0D,EAAK3E,MAAMwQ,QATFyuD,EAAA1tD,KAAA,EAUT6nB,EAASsgB,QAAQwlB,SAAShG,GAAatf,OAV9B,cAUvB0gB,EAVuB2E,EAAA5qD,KAWvB2oB,EAAUr4B,EAAK4wB,uBACfkmC,EAAgB92D,EAAK01D,gCAAgCC,EAAOt9B,EAASu9B,EAAmBnhC,EAASmS,UAZ1E0zB,EAAA1tD,KAAA,GAcL5M,EAAK3E,MAAMogB,KAAKgC,IAAIy5C,SAASC,KACnD,KAAOL,EAAcp3C,SAAS,OAC9B60C,GAhB2B,eAcvBe,EAduBgF,EAAA5qD,KAAA2qD,EAmBTr6D,EAAKq1D,0BAA0BC,GAA3Czc,EAnBqBwhB,EAmBrBxhB,EAAGtlB,EAnBkB8mC,EAmBlB9mC,EAAGztB,EAnBeu0D,EAmBfv0D,EAEd9F,EAAKob,0BAA0BV,EAAc,yBAA0B,CAAC65C,EAAaqB,EAAmB/c,EAAGtlB,EAAGztB,GAAI3C,EAAUsxD,GArB/F6F,EAAAz8C,OAAA,UAuBtB,GAvBsB,eAAAy8C,EAAA3tD,KAAA,GAAA2tD,EAAAhrC,GAAAgrC,EAAA,SAyB7BjmC,QAAQja,MAARkgD,EAAAhrC,IACAnsB,EAAS,KAADm3D,EAAAhrC,IA1BqBgrC,EAAAz8C,OAAA,UA2BtB,GA3BsB,yBAAAy8C,EAAAxsD,SAAAssD,EAAAj/D,KAAA,aAj7Hd,gBAAAq/D,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAnsD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAg9HnBy/D,kBAh9HmB,eAAAC,EAAAr+D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAg9HC,SAAAyuD,EAAOrjC,EAAiBsjC,EAAWC,EAAOC,EAASj1D,EAAO2vD,EAAOuF,EAAU7iC,GAA3E,IAAAmW,EAAA2sB,EAAAC,EAAAC,EAAAlvC,EAAAzmB,EAAA,OAAAkoB,EAAA3wB,EAAAwP,KAAA,SAAA6uD,GAAA,cAAAA,EAAA3uD,KAAA2uD,EAAA1uD,MAAA,eACF+d,IAAZ0N,EADc,CAAAijC,EAAA1uD,KAAA,eAAA0uD,EAAA1uD,KAAA,EAEK5M,EAAK3E,MAAMogB,KAAKgC,IAAI89C,aAFzB,OAEV/sB,EAFU8sB,EAAA5rD,KAGhB2oB,EAAUhrB,SAASmhC,GAHH,cAMZ2sB,EAAS,CACb,CAAEv4D,KAAM,OAAQhH,KAAM,UACtB,CAAEgH,KAAM,UAAWhH,KAAM,UACzB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,oBAAqBhH,KAAM,YAG/Bw/D,EAAS,CACb,CAAEx4D,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,WAAYhH,KAAM,YAGtBy/D,EAAa,CACjBG,QAAS,IACT54D,KAAMm4D,EACN1iC,QAASA,EACTojC,kBAAmBhkC,GAGftL,EAAU,CACd6uC,QACAC,UACAj1D,QACA2vD,QACAuF,YAGIx1D,EAAO0F,KAAKC,UAAU,CAC1BqwD,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAAQE,EACRlvC,QAASA,IA3COmvC,EAAAz9C,OAAA,SA8CX,IAAIX,QAAQ,SAACI,EAASC,GAC3Bvd,EAAK3E,MAAMogB,KAAK8c,gBAAgB5Q,KAAK,CACnCm0C,QAAS,MACTj+D,GAAIuQ,KAAK04B,MAAMpnB,WAAWq8C,UAAU,GACpCrjC,OAAQ,uBACR3d,OAAQ,CAACigD,EAAOt1D,GAChB6B,KAAMyzD,GACL,SAAC5gD,EAAO+7C,GACT,GAAI/7C,EACF,OAAOmD,EAAOnD,GAGhBkD,EAAQ64C,EAAI3nB,aA1DE,yBAAA8sB,EAAAxtD,SAAAgtD,EAAA3/D,SAh9HD,gBAAA6gE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAA7sD,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+gInBqhE,WA/gImB,eAAAC,EAAAjgE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+gIN,SAAAqwD,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAA92D,EAAA+2D,EAAAC,EAAAxuB,EAAAnW,EAAAsjC,EAAAsB,EAAAC,EAAAvH,EAAAiG,EAAAuB,EAAAlC,EAAAQ,EAAA2B,EAAAjC,EAAAhvC,EAAA6uC,EAAAE,EAAAx1D,EAAA23D,EAAApvD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA6wD,GAAA,cAAAA,EAAA3wD,KAAA2wD,EAAA1wD,MAAA,UAAsDkwD,EAAtDO,EAAA3gE,OAAA,QAAAiuB,IAAA0yC,EAAA,GAAAA,EAAA,GAAmE,EAAGr3D,EAAtEq3D,EAAA3gE,OAAA,QAAAiuB,IAAA0yC,EAAA,GAAAA,EAAA,GAA8E,KACnFN,EAAe/8D,EAAKs0B,kBAAkBqoC,GACtCK,EAAkBh9D,EAAKs0B,kBAAkBuoC,GAE1CE,GAAiBC,EAJX,CAAAM,EAAA1wD,KAAA,eAAA0wD,EAAAz/C,OAAA,UAKF,GALE,cAAAy/C,EAAA1wD,KAAA,EAQU5M,EAAK3E,MAAMogB,KAAKgC,IAAI8/C,IAAIC,QARlC,UAQLhvB,EARK8uB,EAAA5tD,KASP2oB,EAAUhrB,SAASmhC,GAEjBmtB,EAAe,CACnB,CAAE/4D,KAAM,OAAQhH,KAAM,UACtB,CAAEgH,KAAM,UAAWhH,KAAM,UACzB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,oBAAqBhH,KAAM,YAG/BqhE,EAAej9D,EAAK+Q,gBAAgB,CAAC,SAAU4rD,IAE/CO,EAAS/vD,KAAKswD,OAAM,IAAIrvD,MAAOY,UAAY,IAAO,OAC5CiuD,EAAaS,YArBd,CAAAJ,EAAA1wD,KAAA,gBAAA0wD,EAAA1wD,KAAA,GAqBkCmwD,EAAahoB,QAAQkoB,EAAaS,aAAad,GAAQ3nB,OArBzF,QAAAqoB,EAAAhuC,GAAAguC,EAAA5tD,KAAA4tD,EAAA1wD,KAAA,iBAAA0wD,EAAAhuC,GAqBkG,KArBlG,QAqBPqmC,EArBO2H,EAAAhuC,GAsBPwtC,EAAa,IACfnH,EAAQtoD,SAASsoD,GAAStoD,SAASyvD,IAErCnH,EAAQA,EAAMj2C,WAERk8C,EAASqB,EAAarhE,KACtBuhE,EAAaF,EAAaE,WAE1BlC,EAAU+B,EAAgBp2B,SAC1B60B,EAAoBsB,EAAan2B,SAEjCw2B,EAAaH,EAAar6D,MAAQ+5D,EAElCxB,EAAS,CACb9iC,UACAz1B,KAAMw6D,EACN3B,oBACAD,QAASyB,EAAazB,QAAQ97C,YAAc,KAG1CyM,EAAU,GA1CHmxC,EAAAnpB,GA4CHgpB,EA5CGG,EAAA1wD,KA6CJ,OA7CI0wD,EAAAnpB,GAAA,2BA8CD6mB,EAAQ4B,EACR1B,EAAWgC,EAEjBl3D,EAAQA,GAAShG,EAAKwvD,aAAaxvD,EAAKgN,MAAM,GAAG2wD,IAAI,KAAKlwD,MAAM,IAChE0e,EAAU,CACRnmB,QACA2vD,QACAqF,QACAC,UACAC,YAvDKoC,EAAAz/C,OAAA,2BA2DPsO,EAAU,CACRywC,SACAjH,QACAuH,SACAjC,UACA2C,SAAS,GAhEJN,EAAAz/C,OAAA,2BAqELnY,EAAO0F,KAAKC,UAAU,CAC1B8vD,SACAhvC,UACAuvC,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA5EJyB,EAAAz/C,OAAA,SAiFJ,IAAIX,QAAQ,SAACI,EAASC,GAC3Bvd,EAAK3E,MAAMogB,KAAK8c,gBAAgB5Q,KAAK,CACnCpgB,KAAMq1D,EACNd,QAAS,MACT/gD,OAAQ,CAAC6hD,EAAQl3D,GACjBgzB,OAAQ,uBACR76B,GAAIuQ,KAAK04B,MAAMpnB,WAAWq8C,UAAU,IACnC,SAAC3hD,EAAOyjD,GACT,GAAIzjD,GAAUyjD,GAAYA,EAASzjD,MACjC,OAAOkD,EAAQ,MACV,GAAIugD,GAAYA,EAASrvB,OAAQ,CACtC,IAAMgmB,EAAmBx0D,EAAKq1D,0BAA0BwI,EAASrvB,QAGjE,OAFAgmB,EAAiBmB,MAAQA,EACzBnB,EAAiB0I,OAASA,EACnB5/C,EAAQk3C,SA/FV,yBAAA8I,EAAAxvD,SAAA4uD,EAAAvhE,SA/gIM,gBAAA2iE,EAAAC,EAAAC,GAAA,OAAAvB,EAAAzuD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAonInBu7D,iBApnImB,eAAAuH,EAAAzhE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAonIA,SAAA6xD,EAAOvB,EAAkBC,EAAQC,EAAqBriD,EAAYi5C,EAActwD,EAAUsxD,GAA1F,IAAAsI,EAAAC,EAAAxI,EAAA0I,EAAAvH,EAAA9c,EAAAtlB,EAAAztB,EAAAq4D,EAAAC,EAAAC,EAAAtjD,EAAAujD,EAAArwD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA8xD,GAAA,cAAAA,EAAA5xD,KAAA4xD,EAAA3xD,MAAA,UAAA0xD,EAAA5hE,OAAA,QAAAiuB,IAAA2zC,EAAA,GAAAA,EAAA,GAA8H,KAEzIvB,EAAe/8D,EAAKs0B,kBAAkBqoC,GACtCK,EAAkBh9D,EAAKs0B,kBAAkBuoC,GAE1CE,GAAiBC,EALL,CAAAuB,EAAA3xD,KAAA,eAMfzJ,EAAS,KAAM,sBANAo7D,EAAA1gD,OAAA,UAOR,GAPQ,cAAA0gD,EAAA3xD,KAAA,EAUc5M,EAAKw8D,WAAWG,EAAkBC,EAAQC,GAVxD,QAUXrI,EAVW+J,EAAA7uD,OAaPwtD,EAA2B1I,EAA3B0I,OAAQvH,EAAmBnB,EAAnBmB,MAAO9c,EAAY2b,EAAZ3b,EAAGtlB,EAASihC,EAATjhC,EAAGztB,EAAM0uD,EAAN1uD,EACvBq4D,EAAe,CAACjB,EAAQp3D,EAAG+yC,EAAGtlB,GAE9B6qC,EAAYpB,EAAgBwB,eAAe1zC,KAAK,SAAA2zC,GAAC,OAAIA,EAAE77D,OAAS4X,IAChE6jD,GAAWD,GAAYA,EAAU1pB,OAAO5pB,KAAK,SAAA7iB,GAAC,MAAe,UAAXA,EAAErF,QACrDjH,MAAM0R,SAASsoD,KAAW0I,GAC7BF,EAAaO,QAAQ/I,GAEjB56C,EAAS04C,EAAa70D,OAAOu/D,GACnCn+D,EAAKob,0BAA0ByhD,EAAqBriD,EAAYO,EAAQ5X,EAAUsxD,IAElFtxD,EAAS,KAAM,oBAxBA,yBAAAo7D,EAAAzwD,SAAAowD,EAAA/iE,SApnIA,gBAAAwjE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAAjwD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAgpInB+jE,aAhpImB,eAAAC,EAAA3iE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgpIJ,SAAA+yD,EAAO1kD,EAAc+c,EAAiBm+B,EAAmBzyD,EAAUsxD,GAAnE,IAAAkH,EAAA0D,EAAAhnC,EAAAgjC,EAAA5mC,EAAA8/B,EAAAoB,EAAAxpC,EAAAmzC,EAAA,OAAA1xC,EAAA3wB,EAAAwP,KAAA,SAAA8yD,GAAA,cAAAA,EAAA5yD,KAAA4yD,EAAA3yD,MAAA,cAEP+uD,EAAe,CACnB,CAAE/4D,KAAM,OAAQhH,KAAM,UACtB,CAAEgH,KAAM,UAAWhH,KAAM,UACzB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,oBAAqBhH,KAAM,YAG/ByjE,EAAkB,CACtB,CAAEz8D,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,OAAQhH,KAAM,WACtB,CAAEgH,KAAM,oBAAqBhH,KAAM,UAZxB2jE,EAAA3yD,KAAA,EAeS5M,EAAK3E,MAAMogB,KAAKgC,IAAI89C,aAf7B,UAePljC,EAfOknC,EAAA7vD,KAiBP2rD,EAAa,CACjBhjC,UACAmjC,QAAS,IACT54D,KAAM8X,EACN+gD,kBAAmBhkC,GAGfhD,EAAWz0B,EAAKs0B,kBAAkB5Z,GAxB3B,CAAA6kD,EAAA3yD,KAAA,gBA2BXzJ,EAAS,KAAM,sBA3BJo8D,EAAA1hD,OAAA,UA4BJ,GA5BI,eA+BT02C,EAAcv0D,EAAK3E,MAAMwQ,QA/BhB0zD,EAAA3yD,KAAA,GAgCK6nB,EAASsgB,QAAQwlB,SAAShG,GAAatf,OAhC5C,QAgCT0gB,EAhCS4J,EAAA7vD,MAiCTyc,EAAU,IACNwpC,MAAQA,EAChBxpC,EAAQ5kB,KAAOgtD,EACfpoC,EAAQypC,kBAAoBA,EAEtB0J,EAAal0D,KAAKC,UAAU,CAChCqwD,MAAO,CACLC,eACA0D,mBAEFlE,OAAQE,EACRQ,YAAa,kBACb1vC,YAKFnsB,EAAK3E,MAAMogB,KAAK8c,gBAAgB5Q,KAC9B,CACEm0C,QAAS,MACTj+D,GAAI,aACJ0J,KAAMgtD,EACN77B,OAAQ,uBACR3d,OAAQ,CAACw5C,EAAa+K,IAExB,SAACllD,EAAOyjD,GACN,GAAIzjD,GAAUyjD,GAAYA,EAASzjD,MACjC,OAAOjX,EAAS,KAAMiX,GACjB,GAAIyjD,GAAYA,EAASrvB,OAAQ,CACtC,IAAMgmB,EAAmBx0D,EAAKq1D,0BAA0BwI,EAASrvB,QACzDqK,EAAY2b,EAAZ3b,EAAGtlB,EAASihC,EAATjhC,EAAGztB,EAAM0uD,EAAN1uD,EAEd9F,EAAKob,0BAA0BV,EAAc,yBAA0B,CAAC65C,EAAaqB,EAAmB/c,EAAGtlB,EAAGztB,GAAI3C,EAAUsxD,MAjErH,yBAAA8K,EAAAzxD,SAAAsxD,EAAAjkE,SAhpII,gBAAAqkE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAnxD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAutInB0kE,mBAvtImB,eAAAC,EAAAtjE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAutIE,SAAA0zD,EAAOrlD,EAAcslD,EAAcC,GAAnC,IAAAC,EAAAC,EAAAxyD,EAAAyyD,EAAA,OAAAxyC,EAAA3wB,EAAAwP,KAAA,SAAA4zD,GAAA,cAAAA,EAAA1zD,KAAA0zD,EAAAzzD,MAAA,cAAAyzD,EAAAzzD,KAAA,EAITsQ,QAAQqD,IAAI,CACpBvgB,EAAK6tB,gBAAgBnT,EAAculD,GAAY,GAC/CjgE,EAAKsgE,aAAa5lD,EAAcslD,EAAcC,KAN7B,cAAAC,EAAAG,EAAA3wD,KAAAywD,EAAA3jE,OAAA4yB,EAAA,EAAA5yB,CAAA0jE,EAAA,GAEjBvyD,EAFiBwyD,EAAA,GAGjBC,EAHiBD,EAAA,GAQnBngE,EAAKkf,UAAU,qBAAsBxE,EAAc1a,EAAKgN,MAAMozD,GAAW33D,UAAWzI,EAAKgN,MAAMW,GAASlF,UAAY23D,GAAapgE,EAAKgN,MAAMozD,GAAWG,IAAIvgE,EAAKgN,MAAMW,KARnJ0yD,EAAAxiD,OAAA,SASZuiD,GAAapgE,EAAKgN,MAAMozD,GAAWG,IAAIvgE,EAAKgN,MAAMW,KATtC,wBAAA0yD,EAAAvyD,SAAAiyD,EAAA5kE,SAvtIF,gBAAAqlE,EAAAC,EAAAC,GAAA,OAAAZ,EAAA9xD,MAAA7S,KAAA8S,YAAA,GAAA9S,KAkuInBmlE,aAluImB,eAAAK,EAAAnkE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAkuIJ,SAAAu0D,EAAOlmD,EAAcslD,EAAcC,GAAnC,OAAAryC,EAAA3wB,EAAAwP,KAAA,SAAAo0D,GAAA,cAAAA,EAAAl0D,KAAAk0D,EAAAj0D,MAAA,UACR8N,GAAiBslD,GAAiBC,EAD1B,CAAAY,EAAAj0D,KAAA,eAAAi0D,EAAAhjD,OAAA,UAEJ,GAFI,cAIb7d,EAAKkf,UAAU,eAAgBxE,EAAcslD,EAAcC,GAJ9CY,EAAAj0D,KAAA,EAKA5M,EAAKkuB,oBAChBxT,EAAc,YAAa,CAACulD,EAAYD,IAN7B,cAAAa,EAAAhjD,OAAA,SAAAgjD,EAAAnxD,MAAA,wBAAAmxD,EAAA/yD,SAAA8yD,EAAAzlE,SAluII,gBAAA2lE,EAAAC,EAAAC,GAAA,OAAAL,EAAA3yD,MAAA7S,KAAA8S,YAAA,GAAA9S,KA2uInB8lE,mCAAqC,SAACvmD,EAAcF,EAAYO,EAAQ/U,EAAO7C,EAAUsxD,EAAkByM,GACzGlhE,EAAK3E,MAAM+f,0BAA0BV,EAAcF,EAAYO,EAAQ/U,EAAO,SAAC+G,GACrD,oBAAb5J,GACTA,EAAS4J,IAEV,SAACA,GAC8B,oBAArB0nD,GACTA,EAAiB1nD,IAElB,KAAMm0D,IApvIQ/lE,KAsvInBigB,0BAA4B,SAACV,EAAcF,EAAYO,EAAQ5X,EAAUsxD,GAA0E,IAAxDyM,EAAwDjzD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAA/C,KAAMkzD,EAAyClzD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GAAvBmzD,EAAuBnzD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACxI,IACEjO,EAAK3E,MAAM+f,0BAA0BV,EAAcF,EAAYO,EAAQ,KAAM,SAAChO,GACpD,oBAAb5J,GACTA,EAAS4J,IAEV,SAACA,GAC8B,oBAArB0nD,GACTA,EAAiB1nD,IAElB,KAAMm0D,EAAQC,EAAUC,GAC3B,MAAOhnD,GACPjX,EAAS,KAAMiX,KAlwIAjf,KAqwInBkmE,aAAe,SAAC3mD,EAActS,EAASjF,EAAUsxD,GAC/Cz0D,EAAK3E,MAAM+f,0BAA0BV,EAAc,UAAW,CAC5DtS,EACApI,EAAK3E,MAAMogB,KAAKmX,MAAM0uC,iBAAiB,MACtC,KAAM,SAACv0D,GACgB,oBAAb5J,GACTA,EAAS4J,IAEV,SAACA,GAC8B,oBAArB0nD,GACTA,EAAiB1nD,MA/wIJ5R,KAmxInBomE,wBAA0B,SAAC7mD,EAActS,EAASg4D,EAAWj9D,EAAUsxD,GACrEpgC,QAAQ8a,IAAI,0BAA0Bz0B,EAActS,EAASg4D,GAC7DpgE,EAAK3E,MAAM+f,0BAA0BV,EAAc,UAAW,CAC5DtS,EACApI,EAAKwvD,aAAa4Q,IACjB,KAAM,SAACrzD,GACgB,oBAAb5J,GACTA,EAAS4J,IAEV,SAACA,GAC8B,oBAArB0nD,GACTA,EAAiB1nD,MA9xIJ5R,KAkyInBqmE,YAAc,SAAC9mD,EAActS,EAASjF,EAAUsxD,GAC9Cz0D,EAAK3E,MAAM+f,0BAA0BV,EAAc,UAAW,CAC5DtS,EACApI,EAAK3E,MAAMogB,KAAKmX,MAAM0uC,iBAAiB,OACtC,KAAM,SAACv0D,GACgB,oBAAb5J,GACTA,EAAS4J,IAEV,SAACA,GAC8B,oBAArB0nD,GACTA,EAAiB1nD,MA5yIJ5R,KAgzInBsmE,aAhzImBjlE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgzIJ,SAAAq1D,IAAA,IAAAntC,EAAA5oB,EAAAg2D,EAAA58D,EAAA6nD,EAAAgV,EAAA3zD,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAo1D,GAAA,cAAAA,EAAAl1D,KAAAk1D,EAAAj1D,MAAA,cAAO2nB,EAAPqtC,EAAAllE,OAAA,QAAAiuB,IAAAi3C,EAAA,GAAAA,EAAA,GAAiB,KAAKj2D,EAAtBi2D,EAAAllE,OAAA,QAAAiuB,IAAAi3C,EAAA,GAAAA,EAAA,GAAsC,KAC/CD,EAAe,KACf58D,EAAgB,KACfwvB,IACHA,EAAYv0B,EAAK4wB,wBAJNixC,EAAAj1D,KAAA,EAMM5M,EAAKysD,eAAel4B,GAN1B,YAMPq4B,EANOiV,EAAAnyD,QAODk9C,EAAKkV,UAPJ,CAAAD,EAAAj1D,KAAA,SAQXggD,EAAKkV,UAAUnlE,QAAS,SAAAolE,GACtB,IAAMC,EAAWhiE,EAAKgN,MAAM+0D,EAAQ76B,KACpC,GAAI86B,EAAS,CACX,IAAM3jE,EAAQ0jE,EAAQr1C,YAChBi1C,IAAgBA,EAAaj0D,GAAGs0D,IAAgBr2D,IAAmBA,EAAgBtN,KACvFsjE,EAAeK,EACfj9D,EAAgB1G,MAdXwjE,EAAAj1D,KAAA,qBAkBFjB,EAlBE,CAAAk2D,EAAAj1D,KAAA,gBAAAi1D,EAAAj1D,KAAA,GAmBL5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAs2D,EAAAzlE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+C,SAAA61D,EAAO7jE,GAAP,IAAAC,EAAA0jE,EAAA,OAAAp0C,EAAA3wB,EAAAwP,KAAA,SAAA01D,GAAA,cAAAA,EAAAx1D,KAAAw1D,EAAAv1D,MAAA,cAC7CtO,EAAcqN,EAAgBtN,GADe8jE,EAAAv1D,KAAA,EAE5B5M,EAAKg+B,aAAa1/B,GAFU,QAE7C0jE,EAF6CG,EAAAzyD,OAGf,OAApBsyD,EAAStT,SAClBiT,IAAgBA,EAAaj0D,GAAGs0D,EAAStT,UAC5CiT,EAAeK,EAAStT,OACxB3pD,EAAgB1G,IAN+B,wBAAA8jE,EAAAr0D,SAAAo0D,EAAA/mE,SAA/C,gBAAAinE,GAAA,OAAAH,EAAAj0D,MAAA7S,KAAA8S,YAAA,IAnBK,eAAA4zD,EAAAhkD,OAAA,SA8BN9Y,GA9BM,yBAAA88D,EAAA/zD,SAAA4zD,EAAAvmE,SAhzIIA,KAg1InB4gC,wBAh1ImB,eAAAsmC,EAAA7lE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAg1IO,SAAAi2D,EAAO5nD,EAAaulD,GAApB,IAAAjkE,EAAAwe,EAAAgU,EAAAtD,EAAA+Q,EAAAsmC,EAAAt0D,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+1D,GAAA,cAAAA,EAAA71D,KAAA61D,EAAA51D,MAAA,UAA+B5Q,EAA/BumE,EAAA7lE,OAAA,QAAAiuB,IAAA43C,EAAA,GAAAA,EAAA,GAAwC,KAAK/nD,EAA7C+nD,EAAA7lE,OAAA,QAAAiuB,IAAA43C,EAAA,GAAAA,EAAA,GAAwD,cAC3EtC,EADmB,CAAAuC,EAAA51D,KAAA,eAAA41D,EAAA3kD,OAAA,UAEf,GAFe,UAMlB2Q,EANkB,wBAAA5vB,OAMsB8b,EANtB,KAAA9b,OAMsCqhE,EANtC,KAAArhE,OAMoD5C,KACtEkvB,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QARlB,CAAA6mE,EAAA51D,KAAA,eAAA41D,EAAA3kD,OAAA,SASf7d,EAAKgN,MAAMke,IATI,cAAAs3C,EAAA51D,KAAA,GAYE5M,EAAKkuB,oBAAoBxT,EAAcF,EAAY,CAACylD,IAZtD,aAYpBhkC,EAZoBumC,EAAA9yD,MAAA,CAAA8yD,EAAA51D,KAAA,YAclB5Q,IACFigC,EAAgBj8B,EAAKwQ,iBAAiByrB,EAAejgC,KAEvDigC,EAAgBj8B,EAAKgN,MAAMivB,IAERtgC,QAnBG,CAAA6mE,EAAA51D,KAAA,gBAAA41D,EAAA3kD,OAAA,SAoBb7d,EAAK8vB,8BAA8BtB,EAAeyN,EAAe,KApBpD,eAAAumC,EAAA3kD,OAAA,SAuBjB7d,EAAKgN,MAAM,IAvBM,yBAAAw1D,EAAA10D,SAAAw0D,EAAAnnE,SAh1IP,gBAAAsnE,EAAAC,GAAA,OAAAL,EAAAr0D,MAAA7S,KAAA8S,YAAA,GAAA9S,KAy2InBygC,yBAz2ImB,eAAA+mC,EAAAnmE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAy2IQ,SAAAu2D,EAAO/2D,EAAShN,GAAhB,IAAA2b,EAAAkgB,EAAAmoC,EAAA50D,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAq2D,GAAA,cAAAA,EAAAn2D,KAAAm2D,EAAAl2D,MAAA,cAA+B4N,EAA/BqoD,EAAAnmE,OAAA,QAAAiuB,IAAAk4C,EAAA,GAAAA,EAAA,GAA0C,qBAC7DnoC,EAAiB,GADEooC,EAAAl2D,KAAA,EAGnB5M,EAAKiM,aAAapN,EAAcm9B,WAAWtB,eAA3C,eAAAqoC,EAAAvmE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2D,SAAA22D,EAAO1kE,GAAP,IAAA2kE,EAAAC,EAAA9E,EAAA3K,EAAAlmD,EAAA,OAAAqgB,EAAA3wB,EAAAwP,KAAA,SAAA02D,GAAA,cAAAA,EAAAx2D,KAAAw2D,EAAAv2D,MAAA,UACzDq2D,EAAoBjjE,EAAK+Q,gBAAgB,CAAC,QAAS,SAAUzS,EAAYD,MAAM2S,gBACrF1S,EAAW9B,OAAA84B,EAAA,EAAA94B,CAAA,GAAQ8B,EAAgB2kE,GAE7BC,EAAyBljE,EAAKs0B,kBAAkBz1B,EAAcm9B,WAAWp5B,MAJhB,CAAAugE,EAAAv2D,KAAA,eAAAu2D,EAAAtlD,OAAA,wBASzDugD,EAAY8E,EAAuB1E,eAAe1zC,KAAK,SAAA2zC,GAAC,OAAIA,EAAE77D,OAAS4X,IAEvEi5C,EAAe,CAAC5nD,GAClBuyD,EAAU1pB,OAAOh4C,OAAO,GAC1B+2D,EAAa/qD,KAAKpK,EAAY8J,SAb+B+6D,EAAAv2D,KAAA,GAgBrC5M,EAAK+mC,0BAA0BloC,EAAcm9B,WAAWp5B,KAAM4X,EAAYi5C,GAhBrC,QAgBzDlmD,EAhByD41D,EAAAzzD,KAiB/DgrB,EAAep8B,EAAYD,OAAS2B,EAAKwQ,iBAAiBjD,EAAajP,EAAYtC,UAjBpB,yBAAAmnE,EAAAr1D,SAAAk1D,EAAA7nE,SAA3D,gBAAAioE,GAAA,OAAAL,EAAA/0D,MAAA7S,KAAA8S,YAAA,IAHmB,cAAA60D,EAAAjlD,OAAA,SAyBlB6c,GAzBkB,wBAAAooC,EAAAh1D,SAAA80D,EAAAznE,SAz2IR,gBAAAkoE,EAAAC,GAAA,OAAAX,EAAA30D,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo4InBkhC,oBAp4ImB,eAAAknC,EAAA/mE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo4IG,SAAAm3D,EAAOC,EAAO72C,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,GAAhF,IAAA63D,EAAAl1B,EAAAm1B,EAAA11D,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAm3D,GAAA,cAAAA,EAAAj3D,KAAAi3D,EAAAh3D,MAAA,cAAyF82D,IAAzFC,EAAAjnE,OAAA,QAAAiuB,IAAAg5C,EAAA,KAAAA,EAAA,GAAAC,EAAAh3D,KAAA,EACC5M,EAAK6jE,iBAAiBJ,EAAO72C,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GAAc,GADvH,cACdl1B,EADco1B,EAAAl0D,KAAAk0D,EAAA/lD,OAAA,SAEb2wB,GAFa,wBAAAo1B,EAAA91D,SAAA01D,EAAAroE,SAp4IH,gBAAA2oE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAv1D,MAAA7S,KAAA8S,YAAA,GAAA9S,KAw4InB0oE,iBAx4ImB,eAAAS,EAAA9nE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAw4IA,SAAAk4D,EAAOd,EAAO72C,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,GAAjE,IAAAgN,EAAA63D,EAAAc,EAAA/lE,EAAAguB,EAAAg4C,EAAAxoE,EAAAD,EAAAE,EAAAwoE,EAAAhqC,EAAAiqC,EAAAC,EAAAn3C,EAAA6V,EAAAuhC,EAAAthC,EAAAuhC,EAAAt+B,EAAAu+B,EAAAC,EAAAC,EAAAC,EAAAxlC,EAAAylC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA5rC,GAAA2L,GAAAkgC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAvgC,GAAAwgC,GAAAC,GAAApnC,GAAAqnC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAl6D,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA27D,GAAA,cAAAA,EAAAz7D,KAAAy7D,EAAAx7D,MAAA,cAAgFf,EAAhFs8D,GAAAzrE,OAAA,QAAAiuB,IAAAw9C,GAAA,GAAAA,GAAA,GAA0F,KAAMzE,IAAhGyE,GAAAzrE,OAAA,QAAAiuB,IAAAw9C,GAAA,KAAAA,GAAA,GAAqH3D,IAArH2D,GAAAzrE,OAAA,QAAAiuB,IAAAw9C,GAAA,KAAAA,GAAA,GAAyI1pE,IAAzI0pE,GAAAzrE,OAAA,SAAAiuB,IAAAw9C,GAAA,MAAAA,GAAA,IACb17C,EAAS,KACTg4C,EAAoB,KAClBxoE,EAAgB2wB,GAAcvf,SAASuf,EAAW3wB,cAAc,EAAK2wB,EAAW3wB,aAAe,EAC/FD,EAAY4wB,GAAcvf,SAASuf,EAAW5wB,UAAU,EAAK4wB,EAAW5wB,SAAYgE,EAAK3E,MAAM4C,SAAW,EAAI,EAC9G/B,EAAgB0wB,GAAcvf,SAASuf,EAAW1wB,cAAc,EAAK0wB,EAAW1wB,aAAgB8D,EAAK3E,MAAM4C,SAAW,EAAI,EAE1HymE,EAAgB1kE,EAAKw2B,8BAA8B,iBACnDkE,EAAiBp8B,GAAeI,EAAUJ,EAAYI,GAASs9B,WAAWtB,eAAiB,GAC3FiqC,EAAwBjqC,EAAeh+B,OAAO,EAAIg+B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC5F21C,KAAiBD,GAAyBA,EAAsBjoE,OAAO,GACvE+wB,EAAYztB,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU1S,EAAM2S,cAAe,WAAahR,EAAKgJ,WAAW3K,GAIvGilC,EAAiBhlC,EAAYwlC,SAC7B+gC,EAAgBH,GAA6C,IAA5Br3D,SAASq3D,GAhB/B0D,EAAAx7D,KAAA,GAmBiB5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAM,WAAY,MAnBrF,aAmBX2gC,EAnBW6kC,EAAA14D,MAAA,CAAA04D,EAAAx7D,KAAA,gBAAAw7D,EAAAx7D,KAAA,GAqBT5M,EAAK3E,MAAM2oC,aAAaV,EAAe1gC,KAAM2gC,EAAqBD,EAAeW,KArBxE,QAwBX6gC,EAAqB9kE,EAAK+Q,gBAAgB,CAAC,YAAa,SAxB7Cq3D,EAAA94C,GAyBTm0C,EAzBS2E,EAAAx7D,KA0BV,iBA1BUw7D,EAAA94C,GAAA,GA6BV,cA7BU84C,EAAA94C,GAAA,GAgCV,gBAhCU84C,EAAA94C,GAAA,GAoCV,SApCU84C,EAAA94C,GAAA,GA6CV,kBA7CU84C,EAAA94C,GAAA,GAoDV,sBApDU84C,EAAA94C,GAAA,GAuDV,sBAvDU84C,EAAA94C,GAAA,GA0DV,eA1DU84C,EAAA94C,GAAA,GA6DV,eA7DU84C,EAAA94C,GAAA,GAgEV,cAhEU84C,EAAA94C,GAAA,GAmEV,cAnEU84C,EAAA94C,GAAA,GAsEV,gBAtEU84C,EAAA94C,GAAA,GAuFV,yBAvFU84C,EAAA94C,GAAA,GA8FV,qBA9FU84C,EAAA94C,GAAA,GA0GV,eA1GU84C,EAAA94C,GAAA,GAgHV,qBAhHU84C,EAAA94C,GAAA,GAsHV,iBAtHU84C,EAAA94C,GAAA,IA4HV,kBA5HU84C,EAAA94C,GAAA,IAgJV,sBAhJU84C,EAAA94C,GAAA,IAiKV,gCAjKU84C,EAAA94C,GAAA,IAkLV,oBAlLU84C,EAAA94C,GAAA,IAqMV,gBArMU84C,EAAA94C,GAAA,IAwNV,aAxNU84C,EAAA94C,GAAA,IAwOV,iBAxOU84C,EAAA94C,GAAA,IAuPV,eAvPU84C,EAAA94C,GAAA,IAwPV,mBAxPU84C,EAAA94C,GAAA,IAyPV,0BAzPU84C,EAAA94C,GAAA,IA+TV,gBA/TU84C,EAAA94C,GAAA,IAqVV,2BArVU84C,EAAA94C,GAAA,IAsVV,4BAtVU84C,EAAA94C,GAAA,IAyWV,uBAzWU84C,EAAA94C,GAAA,IA4WV,yBA5WU84C,EAAA94C,GAAA,IAiXV,oBAjXU84C,EAAA94C,GAAA,IA2XV,uBA3XU84C,EAAA94C,GAAA,IA8XV,gBA9XU84C,EAAA94C,GAAA,IA+XV,iBA/XU84C,EAAA94C,GAAA,IAgYV,sBAhYU84C,EAAA94C,GAAA,IAmZV,cAnZU84C,EAAA94C,GAAA,IAoZV,gBApZU84C,EAAA94C,GAAA,IAqZV,mBArZU84C,EAAA94C,GAAA,6BA2Bb7C,GAAUzsB,EAAK+Q,gBAAgB,CAAC,QAAS,YAAaxS,EAAU,WAAayB,EAAKgJ,WAAWzK,IAAWyS,cA3B3Fo3D,EAAAvqD,OAAA,4BA8Bb4O,EAASgB,EA9BI26C,EAAAvqD,OAAA,4BAiCb4O,GAAUzsB,EAAK+Q,gBAAgB,CAAC,WAAYrS,EAAS,cAAgB,IAAIsS,cAjC5Do3D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAqCQ5M,EAAK+mC,0BAA0BzoC,EAAY0jC,IAAIp/B,KAAM,oBArC7D,eAqCT4jC,EArCS4hC,EAAA14D,KAsCR1P,EAAKgN,MAAMw5B,GAAU7qC,UACxB8wB,EAASzsB,EAAKwQ,iBAAiBg2B,EAAUloC,EAAY0jC,IAAIhmC,UACrDwoE,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,KAzCtDksE,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA8CE5M,EAAKq8B,oBAAoB,OAAQzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GA9C9G,eA8Cbj3C,EA9Ca27C,EAAA14D,KAAA04D,EAAAx7D,KAAA,GA+CE5M,EAAKs8B,2BAA2B7P,EAAQnuB,GA/C1C,eA+CbmuB,EA/Ca27C,EAAA14D,KAgDT80D,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,KAjDtG26C,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAqDE5M,EAAK6jE,iBAAiB,cAAej3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYQ,GAAI+M,EAAS63D,EAAcc,GAAa,GArD3I,eAqDb/3C,EArDa27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAwDE5M,EAAK6jE,iBAAiB,cAAej3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYS,GAAI8M,EAAS63D,EAAcc,GAAa,GAxD3I,eAwDb/3C,EAxDa27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA2DE5M,EAAK6jE,iBAAiB,cAAej3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYQ,GAAI+M,EAAS63D,GA3DhH,eA2Dbj3C,EA3Da27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA8DE5M,EAAK6jE,iBAAiB,cAAej3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYS,GAAI8M,EAAS63D,GA9DhH,eA8Dbj3C,EA9Da27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAiEE5M,EAAK6jE,iBAAiB,aAAcj3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYQ,GAAI+M,EAAS63D,GAjE/G,eAiEbj3C,EAjEa27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAoEE5M,EAAK6jE,iBAAiB,aAAcj3C,EAAYruB,EAAUF,EAAO,KAAMC,EAAaA,EAAYS,GAAI8M,EAAS63D,GApE/G,eAoEbj3C,EApEa27C,EAAA14D,KAAA04D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA0EHsQ,QAAQqD,IAAI,CACpBvgB,EAAKqoE,oBAAoBxpE,EAAc+D,KAAM,SAAU,KACvD5C,EAAK6jE,iBAAiB,eAAgBj3C,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KA5EtG,eAAAqB,EAAAqD,EAAA14D,KAAAs1D,EAAAxoE,OAAA4yB,EAAA,EAAA5yB,CAAAuoE,EAAA,GAwEXE,EAxEWD,EAAA,GAyEXE,EAzEWF,EAAA,GA+Ebv4C,EAASzsB,EAAKgN,MAAM,GACfhN,EAAKgN,MAAMk4D,GAAcvpE,SAAYqE,EAAKgN,MAAMi4D,GAAatpE,UAChE8wB,EAASzsB,EAAKwQ,iBAAiBy0D,EAAa3mE,EAAY0jC,IAAIhmC,UAAUwM,MAAM08D,IAE1EV,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,KApFtG26C,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GAwFE5M,EAAKq8B,oBAAoB,cAAezP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GAxFrH,eAwFbj3C,EAxFa27C,EAAA14D,KAAA04D,EAAAx7D,KAAA,GAyFE5M,EAAKs8B,2BAA2B7P,EAAQnuB,GAzF1C,eAyFbmuB,EAzFa27C,EAAA14D,KA0FT80D,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,KA3FtG26C,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA+FW5M,EAAKsqC,0BAA0BhsC,EAAaO,EAAegN,GA/FtE,eA+FP6zB,EA/FO0oC,EAAA14D,KAgGb+c,EAASA,GAAUzsB,EAAKgN,MAAM,IAC9Byf,EAASzsB,EAAKgN,MAAM0yB,IACT9uB,GAAG,GACR4zD,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,KAGnHhB,EAAS+3C,EAAc,IAAM,KAvGlB4D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,GA2GE5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAM,MAAO,MA3GjE,eA2Gb6pB,EA3Ga27C,EAAA14D,QA6GX+c,EAASzsB,EAAKgN,MAAMyf,GAAQhN,IAAIzf,EAAKgN,MAAM,OA7GhCo7D,EAAAvqD,OAAA,4BAAAuqD,EAAAx7D,KAAA,IAiHE5M,EAAK+mC,0BAA0BzoC,EAAY0jC,IAAIp/B,KAAM,eAAgB,CAAC/D,EAAcuJ,UAjHtF,gBAiHbqkB,EAjHa27C,EAAA14D,QAmHX+c,EAASzsB,EAAKwQ,iBAAiBic,EAAQ5tB,EAAc7C,WAnH1CosE,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAuHE5M,EAAK+mC,0BAA0BzoC,EAAY0jC,IAAIp/B,KAAM,eAAgB,CAAC/D,EAAcuJ,UAvHtF,gBAuHbqkB,EAvHa27C,EAAA14D,QAyHX+c,EAASzsB,EAAKwQ,iBAAiBic,EAAQ5tB,EAAc7C,WAzH1CosE,EAAAvqD,OAAA,yBA6Hb4O,EAAS+3C,EAAc,MAAQxkE,EAAKgN,MAAM,IACtC43D,EA9HS,CAAAwD,EAAAx7D,KAAA,iBAAAw7D,EAAAx7D,KAAA,IAkIDsQ,QAAQqD,IAAI,CACpBvgB,EAAK6jE,iBAAL,eAAsCj3C,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GACjH1jE,EAAK+7B,wBAAwBl9B,EAAcm9B,WAAWp5B,KAAMiJ,EAAShN,EAAcm9B,WAAWhgC,SAAS6C,EAAcg9B,UAAUI,iBApItH,SAAAkpC,EAAAiD,EAAA14D,KAAA01D,EAAA5oE,OAAA4yB,EAAA,EAAA5yB,CAAA2oE,EAAA,GAgITE,EAhISD,EAAA,IAiITE,EAjISF,EAAA,KAuIIC,IACb54C,EAASzsB,EAAKgN,MAAMs4D,GAAS98D,MAAM68D,GAE/Bb,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,MA3I1G,gBAAA26C,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAoJHsQ,QAAQqD,IAAI,CACpBvgB,EAAK6tB,gBAAgBhvB,EAAc+D,KAAMiJ,GACzC7L,EAAKq8B,oBAAL,eAAyCzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KAtJzG,gBAAA6B,EAAA6C,EAAA14D,KAAA81D,EAAAhpE,OAAA4yB,EAAA,EAAA5yB,CAAA+oE,EAAA,GAkJXE,EAlJWD,EAAA,GAmJXE,EAnJWF,EAAA,GAyJb/4C,EAAS+3C,EAAc,IAAM,KACzBiB,GAAcC,IAChBj5C,EAASzsB,EAAKgN,MAAMy4D,GAAYj9D,MAAMk9D,GAClClB,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,MA7JxG26C,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAqKHsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAL,oBAA8CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GACzH1jE,EAAKq8B,oBAAL,gBAA0CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KAvK1G,gBAAAiC,EAAAyC,EAAA14D,KAAAk2D,EAAAppE,OAAA4yB,EAAA,EAAA5yB,CAAAmpE,EAAA,GAmKXE,EAnKWD,EAAA,GAoKXE,EApKWF,EAAA,GA0Kbn5C,EAAS+3C,EAAc,IAAM,KACzBqB,GAAeC,IACjBr5C,EAASzsB,EAAKgN,MAAM64D,GAAar4D,KAAKs4D,GAClCtB,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,MA9KxG26C,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAuLHsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAL,WAAqCzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GAChH1jE,EAAKq8B,oBAAL,iBAA2CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GACtH1jE,EAAKq8B,oBAAL,mBAA6CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KA1L7G,gBAAAqC,EAAAqC,EAAA14D,KAAAs2D,EAAAxpE,OAAA4yB,EAAA,EAAA5yB,CAAAupE,EAAA,GAoLXE,EApLWD,EAAA,GAqLXE,EArLWF,EAAA,IAsLXG,EAtLWH,EAAA,KA6LKC,GAAiBC,IAC3BE,EAAcD,EAAWv1D,GAAG,GAAKu1D,EAAW39D,MAAM09D,EAAYzmD,IAAI,MAAMjS,KAAKy4D,GAAiB,EACpGx5C,EAAS,CACP25C,cACAH,kBAjMSmC,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAyMHsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAL,aAAuCzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GAClH1jE,EAAKq8B,oBAAL,kBAA4CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KA3M5G,gBAAA2C,EAAA+B,EAAA14D,KAAA42D,GAAA9pE,OAAA4yB,EAAA,EAAA5yB,CAAA6pE,EAAA,GAuMXE,GAvMWD,GAAA,GAwMXE,GAxMWF,GAAA,GA8MTC,IAAcC,KACVC,GAAUD,GAAgBJ,YAAY59D,MAAM+9D,IAC5CG,GAAYF,GAAgBP,cAAcz9D,MAAM+9D,IAEtD95C,EAAS,CACPg6C,WACAC,eApNS0B,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IA4NHsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAL,mBAA6CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GACxH1jE,EAAKq8B,oBAAL,8BAAwDzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KA9NxH,gBAAAiD,GAAAyB,EAAA14D,KAAAk3D,GAAApqE,OAAA4yB,EAAA,EAAA5yB,CAAAmqE,GAAA,GA0NXE,GA1NWD,GAAA,GA2NXE,GA3NWF,GAAA,GAiOTC,IAAcC,KAChBr6C,EAASzsB,EAAKgN,MAAM85D,IAAar5D,MAAMo5D,IACnCrC,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,MApOxG26C,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IA4OHsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAL,mBAA6CzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,GACxH1jE,EAAKq8B,oBAAL,8BAAwDzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KA9OxH,gBAAAqD,GAAAqB,EAAA14D,KAAAs3D,GAAAxqE,OAAA4yB,EAAA,EAAA5yB,CAAAuqE,GAAA,GA0OXE,GA1OWD,GAAA,GA2OXE,GA3OWF,GAAA,GAgPRhnE,EAAKgN,MAAMk6D,IAAavrE,SAAYqE,EAAKgN,MAAMi6D,IAAYtrE,UAC9D8wB,EAASy6C,GAAYznD,IAAIwnD,IAAYx5D,MAAM,GAAGjF,MAAM,KAChDg8D,IACF/3C,EAASA,EAAOhkB,QAAQzM,GAAY,MAnP3BosE,EAAAvqD,OAAA,6BA0PTspD,GAAY,GACZ5rC,GAAa,KACjB9O,EAASzsB,EAAKgN,MAAM,GAChBk6B,GAAMlnC,EAAKgN,MAAM,GACjBo6D,GAAqB,EACrBC,GAAUrnE,EAAKgN,MAAM,GACrBs6D,GAAetnE,EAAKgN,MAAM,GAhQjBo7D,EAAAx7D,KAAA,IAsQHsQ,QAAQqD,IAAI,CACpBvgB,EAAKqkC,2BAA2B/lC,EAAYO,GAC5CP,EAAYgqE,aAAetoE,EAAKuoE,aAAajqE,EAAYgqE,cAAgB,KACzEtoE,EAAK+mC,0BAA0BzoC,EAAY0jC,IAAIp/B,KAAM,SAAU,CAAC/D,EAAcuJ,YAzQnE,gBAAAm/D,GAAAa,EAAA14D,KAAA83D,GAAAhrE,OAAA4yB,EAAA,EAAA5yB,CAAA+qE,GAAA,GAmQX9C,EAnQW+C,GAAA,GAoQXF,GApQWE,GAAA,IAqQXjsC,GArQWisC,GAAA,KA6QPvgC,GAAMjnC,EAAKwQ,iBAAiB+qB,GAAWj9B,EAAY0jC,IAAIhmC,UAE3DkrC,GAAMlnC,EAAKgnC,QAAQC,GAAIxnB,IAAI,MAAMjX,MAAM,KACvC6+D,GAAUngC,GAELlnC,EAAKgN,MAAMs6D,IAAc3rE,UAC5BurC,GAAMA,GAAI15B,KAAK85D,IACfH,GAAU,cAAgBG,IAIxB7C,GAA+B,mBAAVhB,GACvBjnE,OAAOC,KAAKgoE,GAAmB9nE,QAAS,SAAA0B,GACtC,IAAMmqE,EAAkB/D,EAAkBpmE,GAC1C,IAAK2B,EAAKgN,MAAMw7D,EAAgBthC,KAAKvrC,UAAsB,SAAV0C,GAAoBwmE,GAAe,CAClF,IAAM5/B,EAAWjlC,EAAKgN,MAAMw7D,EAAgBthC,KAC5CA,GAAMA,GAAI15B,KAAKy3B,GACfkiC,GAAU9oE,GAAS4mC,KAKrBiC,GAAIt2B,GAAG,OACTw2D,GAAqB,EACrB36C,EAASzsB,EAAKgN,MAAM,OAEpByf,EAASzsB,EAAKgN,MAAMk6B,IAElBs9B,IACF/3C,EAASA,EAAOhkB,QAAQ2+D,IAAoB,IACxClgC,GAAIt2B,GAAG,QACT6b,EAAM,IAAA7tB,OAAO6tB,OAIjB46C,GAAU56C,EACN+3C,IACF/3C,EAASA,EAAOhkB,QAAQ2+D,IAAoB,MAIlC,0BAAV3D,IAEFh3C,EAAS,CACP46C,WACAF,aACAsB,aAJmBh8C,IAvTV27C,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAmUHsQ,QAAQqD,IAAI,CACpBvgB,EAAK+pC,yBAAyBzrC,EAAaO,EAAegN,GAC1D7L,EAAKq8B,oBAAL,eAAyCzP,EAAYruB,EAAUF,EAAOK,EAASJ,EAAaO,EAAegN,EAAS63D,KArUzG,gBAAA+D,GAAAW,EAAA14D,KAAAg4D,GAAAlrE,OAAA4yB,EAAA,EAAA5yB,CAAAirE,GAAA,GAiUXnnC,GAjUWonC,GAAA,IAkUXC,GAlUWD,GAAA,KA0UOpnC,KACZsnC,GAAqBv6D,SAASe,KAAK04B,MAAQ,KAAQz5B,SAASizB,GAAehzB,WACjFmf,EAASzsB,EAAKgN,MAAM26D,IAAcn/D,MAAM,SAAUiX,IAAImoD,IAIlDpD,IACF/3C,EAASA,EAAOhkB,QAAQ,GAAK,MAjVpB2/D,EAAAvqD,OAAA,6BAuVb4O,EAAS,KAvVI27C,EAAAx7D,KAAA,IAwVa5M,EAAKqkC,2BAA2B/lC,EAAaO,GAxV1D,gBAwVb4lE,EAxVa2D,EAAA14D,OAyVY+0D,EAAkBiE,OAC3B,4BAAVjF,GACFh3C,EAASzsB,EAAKwxB,qBAAqBizC,EAAkBiE,KAAKjjC,gBAAiBq/B,EAAmBrzC,uBAC1F+yC,IACF/3C,EAAS,IAAIzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,GAA1D,SAAA0C,OAAmFkmE,EAAmBrzC,0BAGjHhF,EAASg4C,EAAkBiE,KAAKvjC,WAC5Bq/B,IACF/3C,EAAS,IAAIzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,GAA1D,kBAAA0C,OAA4FoB,EAAKqiB,2BAA2BoiD,EAAkBiE,KAAK3jC,cAAcjqB,iBAAjK,2FAlWFstD,EAAAvqD,OAAA,6BA0Wb4O,EAASzsB,EAAKjE,iBAAiB,OAAOC,EAASC,EAAaC,GAAnD,YA1WIksE,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IA6WE5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAK,uBAAuB,MA7WhF,gBA6Wb6pB,EA7Wa27C,EAAA14D,KA+Wb+c,GADAA,GAAe,KACA/M,WAAW,KAAK,IAAI+M,GAAQ/M,WA/W9B0oD,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAkXE5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAK,uBAAuB,MAlXhF,gBAkXb6pB,EAlXa27C,EAAA14D,KAmXb+c,EAASzsB,EAAKgN,MAAMyf,GAAQhN,IAAI,KAChB,OAAZ/gB,IACF+tB,EAASzsB,EAAKgN,MAAM,KAAKS,MAAMgf,IAE7B+3C,IACF/3C,EAASA,EAAOhkB,QAAQ,GAAG,KAxXhB2/D,EAAAvqD,OAAA,6BA4Xb4O,EAASzsB,EAAKjE,iBAAiB,OAAQC,EAAUC,EAAcC,GAAtD,YA5XIksE,EAAAvqD,OAAA,6BAAAuqD,EAAAx7D,KAAA,IAiYE5M,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAK,QAAQ,MAjYjE,gBAiYb6pB,EAjYa27C,EAAA14D,QAmYX+c,EAASzsB,EAAKwQ,iBAAiBic,EAAQnuB,EAAY0jC,IAAIhmC,UAEzC,iBAAVynE,IACEh3C,EAAO7b,GAAG,GACR4zD,IACF/3C,EAASzsB,EAAKjE,iBAAiB0wB,EAAQzwB,EAAUC,EAAcC,IAAiBuC,EAAY,IAAAG,OAAO6uB,GAAc,MAGnHhB,EAASzsB,EAAKgN,MAAM,GAChBw3D,IACF/3C,EAAS,WA7YJ27C,EAAAvqD,OAAA,6BAsZb4O,EAAS,GAtZI27C,EAAAx7D,KAAA,IA0ZHsQ,QAAQqD,IAAI,CACpBvgB,EAAK+jC,6BAA6BT,EAAe1gC,KAAM,kBAAkB,MACzE5C,EAAK+jC,6BAA6BzlC,EAAY0jC,IAAIp/B,KAAM,qBAAqB,QA5ZlE,gBAAAilE,GAAAO,EAAA14D,KAAAo4D,GAAAtrE,OAAA4yB,EAAA,EAAA5yB,CAAAqrE,GAAA,GAwZXE,GAxZWD,GAAA,GAyZXE,GAzZWF,GAAA,GAgaRjpE,IACHA,EAAgBP,EAAYQ,IAGxB47B,GAAiB77B,EAAgBA,EAAcm9B,WAAWtB,eAAet8B,IAAI,SAAAE,GAAW,OAAKA,EAAY8J,QAAQC,gBAAkB,MACnI6/D,GAAsB,mBAAVzE,GAA8B/oC,GAAiBA,GAA4B,cAAV+oC,EAAwBsE,GAA2B,gBAAVtE,GAA2BsE,GAAgBA,GAAcj7D,OAAO,SAAA67D,GAAe,OAAIX,KAAoBA,GAAgB5pE,IAAI,SAAAstD,GAAI,OAAIA,EAAKrjD,gBAAegpB,SAASs3C,EAAgBtgE,iBAAkB2/D,KAG5TE,GAAUvrE,QAAQ,SAAA2S,GAChB,IAAMu2B,EAAiB7lC,EAAK4oE,wBAAwBt5D,GAEpD,GAAKu2B,GAAmBA,EAAe5W,QAAvC,CAIA,IAAM45C,EAA4BhqE,EAAgBA,EAAcm9B,WAAWtB,eAAe5P,KAAK,SAAAxsB,GAAW,OAAIA,EAAY8J,QAAQC,gBAAkBiH,EAAajH,gBAAiB,KAC9KwgE,IAA8BA,EAA0B55C,UAG5DxC,EAAOoZ,EAAexnC,OAASwnC,MAK/BvnC,EAAYmlE,IAAgD,oBAA/BnlE,EAAYmlE,GAAO9mE,SAClD2B,EAAYmlE,GAAO9mE,QAAS,SAAAmsE,GAC1B,IAAMjjC,EAAiB7lC,EAAK+Q,gBAAgB,CAAC,QAAQ,SAAS+3D,EAAS93D,gBACnE60B,IACFpZ,EAAOq8C,GAAYjjC,KA5bZuiC,EAAAvqD,OAAA,6BAAAuqD,EAAAvqD,OAAA,6BAAAuqD,EAAAvqD,OAAA,SAycV4O,GAzcU,0BAAA27C,EAAAt6D,SAAAy2D,EAAAppE,SAx4IA,gBAAA4tE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA/E,EAAAt2D,MAAA7S,KAAA8S,YAAA,GAAA9S,KAm1JnBmuE,eAn1JmB,eAAAC,EAAA/sE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAm1JF,SAAAm9D,EAAO/F,EAAOplE,EAAOC,EAAauN,GAAlC,IAAA63D,EAAA+F,EAAAh9C,EAAAy7C,EAAAxD,EAAAgF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn8D,EAAAo8D,EAAA34C,EAAA/E,EAAAoY,EAAA5V,EAAAm7C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9tC,EAAA+tC,EAAAC,EAAAC,EAAAC,GAAAj+D,GAAA0yB,GAAA/xB,GAAAu9D,GAAAC,GAAAC,GAAAC,GAAAtE,GAAAuE,GAAAC,GAAAt9C,GAAAsM,GAAAvrB,GAAAw8D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAhhE,GAAAihE,GAAAC,GAAAz/D,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAkhE,GAAA,cAAAA,EAAAhhE,KAAAghE,EAAA/gE,MAAA,OAA2C82D,IAA3CgK,GAAAhxE,OAAA,QAAAiuB,IAAA+iD,GAAA,KAAAA,GAAA,GAAgEjE,EAAhEiE,GAAAhxE,OAAA,QAAAiuB,IAAA+iD,GAAA,IAAAA,GAAA,GAEXjhD,EAAS,KACPy7C,EAAYloE,EAAK+Q,gBAAgB,CAAC,cAClC2zD,EAAgB1kE,EAAKw2B,8BAA8B,iBACnDkzC,EAAchF,GAA6C,IAA5Br3D,SAASq3D,GAGxCiF,EAAe3pE,EAAK+Q,gBAAgB,CAAC,aAAc/Q,EAAK3E,MAAM8T,mBAChEu0D,GAAgBiG,GAAqD,qBAA9BA,EAAajG,eACtDA,EAAeiG,EAAajG,cAI1BkG,EAA0B,KAC1B5pE,EAAK3E,MAAM8T,kBAAoBnP,EAAK3E,MAAM0J,eACtC8kE,EAAiB7pE,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,kBAAkBnP,EAAK3E,MAAM0J,mBAE5F6kE,EAA0B,IACFC,EAAexrE,OAASwrE,GAExCrtE,OAAOC,KAAKyrE,GAAW72C,SAAShzB,MAC1CurE,EAA0B,IACFvrE,GAASC,GAvBpBqvE,EAAAr+C,GA0BPm0C,EA1BOkK,EAAA/gE,KA2BR,oBA3BQ+gE,EAAAr+C,GAAA,GA8CR,sBA9CQq+C,EAAAr+C,GAAA,GAyDR,aAzDQq+C,EAAAr+C,GAAA,GA4DR,qBA5DQq+C,EAAAr+C,GAAA,GA+DR,2BA/DQq+C,EAAAr+C,GAAA,GAmER,kCAnEQq+C,EAAAr+C,GAAA,GA2FR,iBA3FQq+C,EAAAr+C,GAAA,GAqGR,qBArGQq+C,EAAAr+C,GAAA,GA4GR,SA5GQq+C,EAAAr+C,GAAA,GAmHR,0BAnHQq+C,EAAAr+C,GAAA,GA0IR,qBA1IQq+C,EAAAr+C,GAAA,GA0KR,sBA1KQq+C,EAAAr+C,GAAA,IA+LR,QA/LQq+C,EAAAr+C,GAAA,IAgNR,QAhNQq+C,EAAAr+C,GAAA,IAoOR,WApOQq+C,EAAAr+C,GAAA,IAoPR,eApPQq+C,EAAAr+C,GAAA,IAiQR,qBAjQQq+C,EAAAr+C,GAAA,IAuQR,eAvQQq+C,EAAAr+C,GAAA,IA+QR,eA/QQq+C,EAAAr+C,GAAA,IAiSR,QAjSQq+C,EAAAr+C,GAAA,IAoSR,iBApSQq+C,EAAAr+C,GAAA,IAkTR,qBAlTQq+C,EAAAr+C,GAAA,IAwTR,6BAxTQq+C,EAAAr+C,GAAA,IAoVR,sBApVQq+C,EAAAr+C,GAAA,IAiXR,kBAjXQq+C,EAAAr+C,GAAA,IAiYR,aAjYQq+C,EAAAr+C,GAAA,6BAAAq+C,EAAA/gE,KAAA,GAgCDsQ,QAAQqD,IAAI,CACpBvgB,EAAK4+B,sBACL5+B,EAAK2/B,oBAAoB,GAAI9zB,GAC7B7L,EAAK4tE,qBAAqB/hE,GAAS,KAnC1B,eAAAi+D,EAAA6D,EAAAj+D,KAAAq6D,EAAAvtE,OAAA4yB,EAAA,EAAA5yB,CAAAstE,EAAA,GA6BTE,EA7BSD,EAAA,GA8BTE,EA9BSF,EAAA,GA+BTG,EA/BSH,EAAA,GAsCPE,GAAoBC,IACtBz9C,EAASzsB,EAAKgN,MAAMk9D,GAAmB1hE,MAAMyhE,GACzCD,IACFv9C,EAASA,EAAOhf,MAAMgf,EAAOjkB,MAAMwhE,MAzC5B2D,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GA+C4CsQ,QAAQqD,IAAI,CACjEvgB,EAAKspE,eAAe,kBAAmBjrE,EAAOC,EAAauN,GAC3D7L,EAAKspE,eAAe,yBAA0BjrE,EAAOC,EAAauN,KAjDzD,eAAAs+D,EAAAwD,EAAAj+D,KAAA06D,EAAA5tE,OAAA4yB,EAAA,EAAA5yB,CAAA2tE,EAAA,GA+CNE,EA/CMD,EAAA,GA+CYE,EA/CZF,EAAA,GAoDPC,GAAoBC,GAA0BD,EAAiBz5D,GAAG,IAAM05D,EAAuB15D,GAAG,KACpG6b,EAAS69C,EAAuB7qD,IAAI4qD,GAAkB58D,MAAM,GAAGjF,MAAM,MArD5DmlE,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GA0DI5M,EAAK6tE,cA1DT,eA0DXphD,EA1DWkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GA6DI5M,EAAK4+B,sBA7DT,eA6DXnS,EA7DWkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GAgEI5M,EAAK8tE,6BAA6BjiE,GAhEtC,eAgEX4gB,EAhEWkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GAwEDsQ,QAAQqD,IAAI,CACpBvgB,EAAKspE,eAAe,WAAYjrE,EAAOC,EAAauN,GACpD7L,EAAKspE,eAAe,kBAAmBjrE,EAAOC,EAAauN,GAC3D7L,EAAKspE,eAAe,yBAA0BjrE,EAAOC,EAAauN,KA3EzD,eAAA0+D,EAAAoD,EAAAj+D,KAAA86D,EAAAhuE,OAAA4yB,EAAA,EAAA5yB,CAAA+tE,EAAA,GAqETE,EArESD,EAAA,GAsETE,EAtESF,EAAA,GAuETG,EAvESH,EAAA,GA8EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBliE,MAAMiiE,EAAShrD,IAAI,MAC1DmrD,EAA4BD,EAA4Bn9D,KAAKq9D,IAI/Dp+C,EAAS,CACPm+C,4BACAD,+BAxFSgD,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GA4FmCsQ,QAAQqD,IAAI,CACxDvgB,EAAKspE,eAAe,aAAcjrE,EAAOC,EAAauN,GAAS,GAC/D7L,EAAKspE,eAAe,oBAAqBjrE,EAAOC,EAAauN,GAAS,KA9F7D,eAAAi/D,EAAA6C,EAAAj+D,KAAAq7D,EAAAvuE,OAAA4yB,EAAA,EAAA5yB,CAAAsuE,EAAA,GA4FNE,EA5FMD,EAAA,GA4FOE,EA5FPF,EAAA,GAiGPC,GAAeC,GAAsBD,EAAYp6D,GAAG,KACtD6b,EAASw+C,EAAmBxrD,IAAIurD,GAAav9D,MAAM,GAAGjF,MAAM,MAlGnDmlE,EAAA9vD,OAAA,4BAAA8vD,EAAA/gE,KAAA,GAsGoB5M,EAAKspE,eAAe,mBAAoBjrE,EAAOC,EAAauN,GAtGhF,eAsGLq/D,EAtGKyC,EAAAj+D,QAwGHX,EAAgB1B,SAASe,KAAK04B,MAAQ,KAC5Cra,GAAU1d,EAAgBm8D,GAAoB,OAzGrCyC,EAAA9vD,OAAA,yBA6GPrhB,OAAOC,KAAKyrE,GAAW72C,SAAShzB,GA7GzB,CAAAsvE,EAAA/gE,KAAA,gBAAA+gE,EAAA/gE,KAAA,GA8GM5M,EAAK+tE,gBAAgB1vE,EAAOurE,GA9GlC,QA8GTn9C,EA9GSkhD,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,wBAAA+gE,EAAA/gE,KAAA,GAgHM5M,EAAKguE,aAAa1vE,EAAaolE,GAhHrC,QAgHTj3C,EAhHSkhD,EAAAj+D,KAAA,eAAAi+D,EAAA9vD,OAAA,qBAAA8vD,EAAAx5B,GAoHH91C,EApHGsvE,EAAA/gE,KAqHJ,SArHI+gE,EAAAx5B,GAAA,GAwHJ,WAxHIw5B,EAAAx5B,GAAA,GAyHJ,YAzHIw5B,EAAAx5B,GAAA,GA4HJ,SA5HIw5B,EAAAx5B,GAAA,2BAAAw5B,EAAA/gE,KAAA,GAsHQ5M,EAAKiuE,wBAAwBpiE,EAAS+9D,GAtH9C,eAsHPn9C,EAtHOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,2BAAA8vD,EAAA/gE,KAAA,GA0HQ5M,EAAKkuE,2BAA2BriE,EAAS+9D,GA1HjD,eA0HPn9C,EA1HOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,2BA6HD2U,EAAexyB,EAAKmuE,kBA7HnBR,EAAA/gE,KAAA,GA8HQ4lB,EAAapC,oBAAoBvkB,EAAS+9D,GA9HlD,eA8HPn9C,EA9HOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,2BAAA8vD,EAAA9vD,OAAA,2BAmIP4O,IAAWzsB,EAAKgN,MAAMyf,GAAQ9wB,UAChC8wB,EAASzsB,EAAKgN,MAAMyf,GAAQhN,IAAI,SAE9BgN,EAASzsB,EAAKwxB,qBAAqB/E,EAAQnuB,EAAYmzB,sBAAuBnzB,EAAY8vE,mBAtInFT,EAAA9vD,OAAA,4BA2IL2U,EAAexyB,EAAKmuE,kBACpB1gD,EAAYztB,EAAK+Q,gBAAgB,CAAC,aAAc,QAAS,cACzD80B,EAAiB7lC,EAAK+Q,gBAAgB,CAAC,YAAa0c,IA7I/CkgD,EAAA/gE,KAAA,IA8II4lB,EAAa9C,SAASpxB,EAAY4wB,KAAK9mB,SA9I3C,cA8IXqkB,EA9IWkhD,EAAAj+D,MAAA,CAAAi+D,EAAA/gE,KAAA,UAkJT6f,EAASzsB,EAAKwQ,iBAAiBic,EAAQoZ,EAAe7pC,UAEhDi0B,EAAgBjwB,EAAKgN,MAAMhN,EAAK+Q,gBAAgB,CAAC,UAAW,mBApJzD48D,EAAA7wB,GAqJDjX,EAAepU,sBArJdk8C,EAAA/gE,KAsJF,QAtJE+gE,EAAA7wB,GAAA,IA0JF,SA1JE6wB,EAAA7wB,GAAA,IA8JF,UA9JE6wB,EAAA7wB,GAAA,IAkKF,SAlKE6wB,EAAA7wB,GAAA,8BAuJCsuB,EAAen7C,EAAcxQ,IAAI,YACvCgN,EAASA,EAAOjkB,MAAM4iE,GAxJjBuC,EAAA9vD,OAAA,6BA2JCwtD,EAAgBp7C,EAAcxQ,IAAI,SACxCgN,EAASA,EAAOjkB,MAAM6iE,GA5JjBsC,EAAA9vD,OAAA,6BA+JCytD,EAAiBr7C,EAAcxQ,IAAI,IACzCgN,EAASA,EAAOjkB,MAAM8iE,GAhKjBqC,EAAA9vD,OAAA,6BAmKL4O,EAASA,EAAOjkB,MAAMynB,GAnKjB09C,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,sBA2KL0tD,EAAsB3B,EAAwB5pE,EAAK3E,MAAM0J,eA3KpD4oE,EAAAU,GA4KHhwE,EA5KGsvE,EAAA/gE,KA6KJ,SA7KI+gE,EAAAU,GAAA,IAgLJ,WAhLIV,EAAAU,GAAA,IAiLJ,YAjLIV,EAAAU,GAAA,IAoLJ,SApLIV,EAAAU,GAAA,8BAAAV,EAAA/gE,KAAA,IA8KQ5M,EAAKsuE,oBAAoB/C,GA9KjC,gBA8KP9+C,EA9KOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAkLQ5M,EAAKuuE,uBAAuBhD,GAlLpC,gBAkLP9+C,EAlLOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,6BAqLD2U,EAAexyB,EAAKmuE,kBArLnBR,EAAA/gE,KAAA,IAsLQ4lB,EAAa9C,SAAS67C,EAAoBr8C,KAAK9mB,SAtLvD,gBAsLPqkB,EAtLOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,6BA2LP4O,IAAWzsB,EAAKgN,MAAMyf,GAAQ9wB,UAChC8wB,EAASzsB,EAAKgN,MAAMyf,GAAQhN,IAAI,OA5LvBkuD,EAAA9vD,OAAA,sBAAA8vD,EAAAa,GAgMHnwE,EAhMGsvE,EAAA/gE,KAiMJ,SAjMI+gE,EAAAa,GAAA,IAoMJ,SApMIb,EAAAa,GAAA,8BAAAb,EAAA/gE,KAAA,IAkMQ5M,EAAKyuE,cAAc7E,GAlM3B,gBAkMPn9C,EAlMOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,6BAqMD2U,EAAexyB,EAAKmuE,kBArMnBR,EAAA/gE,KAAA,IAsMQ4lB,EAAad,UAAUk4C,GAtM/B,gBAsMPn9C,EAtMOkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAyMiB5M,EAAKg+B,aAAa1/B,GAAa,EAAOolE,EAAcgG,GAzMrE,gBAyMD/rC,EAzMCgwC,EAAAj+D,OA0M+B,OAArBiuB,EAAU+wB,SACzBjiC,EAASkR,EAAU+wB,QA3Mdif,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAiNa5M,EAAKg+B,aAAa1/B,GAAa,EAAOolE,EAAcgG,GAjNjE,YAiNLgC,EAjNKiC,EAAAj+D,KAmNX+c,EAASzsB,EAAKgN,MAAM,IAEhB0+D,GAAc1rE,EAAKgN,MAAM0+D,EAAUxtC,QAAQviC,QArNpC,CAAAgyE,EAAA/gE,KAAA,aAsNT6f,EAASzsB,EAAKgN,MAAM0+D,EAAUxtC,SAE1BurC,EAxNK,CAAAkE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAyNgB5M,EAAK6tE,cAzNrB,UAyNDlC,EAzNCgC,EAAAj+D,QA2NL+c,EAASA,EAAOjf,KAAKm+D,IA3NhB,SAAAgC,EAAA/gE,KAAA,0BAAA+gE,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAyODsQ,QAAQqD,IAAI,CACpBvgB,EAAKy9B,kBAAkBn/B,GACvB0B,EAAKigC,kBAAkB,CAAC5hC,GAAQwN,GAChC7L,EAAKspE,eAAe,mBAAoBjrE,EAAOC,EAAauN,KA5OnD,YAAA+/D,EAAA+B,EAAAj+D,KAAAm8D,GAAArvE,OAAA4yB,EAAA,EAAA5yB,CAAAovE,EAAA,GAsOTh+D,GAtOSi+D,GAAA,GAuOTvrC,GAvOSurC,GAAA,GAwOTt9D,GAxOSs9D,GAAA,KA+OPj+D,IAAc0yB,IAAkBA,GAAejiC,IA/OxC,CAAAsvE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAgP4B5M,EAAKy9B,kBAAkBn/B,EAAagiC,GAAejiC,GAAOmhB,aAhPtF,SAgPHssD,GAhPG6B,EAAAj+D,KAiPT+c,EAASzsB,EAAKgN,MAAMY,IAAY6R,IAAIqsD,IAAwBr+D,MAAM,GAAGjF,MAAM,KAAKiX,IAAIlR,IAAM/F,MAAM,KAjPvF,gBAAAmlE,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAwPDsQ,QAAQqD,IAAI,CACpBvgB,EAAKspE,eAAe,mBAAoBjrE,EAAOC,EAAauN,GAC5D7L,EAAKspE,eAAe,eAAgBjrE,EAAOC,EAAauN,KA1P/C,gBAAAkgE,GAAA4B,EAAAj+D,KAAAs8D,GAAAxvE,OAAA4yB,EAAA,EAAA5yB,CAAAuvE,GAAA,GAsPTE,GAtPSD,GAAA,GAuPTrE,GAvPSqE,GAAA,GA6PPC,IAAoBtE,KACtBl7C,EAASk7C,GAAan/D,MAAM,KAAKiX,IAAIwsD,KA9P5B0B,EAAA9vD,OAAA,0BAkQehS,EAlQf,CAAA8hE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAkQ+B5M,EAAK+gC,oBAAoB,CAAC1iC,GAAQwN,GAlQjE,SAAA8hE,EAAAe,GAAAf,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,mBAAA+gE,EAAAe,IAkQ4E,EAlQ5E,gBAkQLxC,GAlQKyB,EAAAe,KAmQcxC,GAAkB7tE,KACzCouB,EAASy/C,GAAkB7tE,IApQlBsvE,EAAA9vD,OAAA,0BAwQFhS,EAxQE,CAAA8hE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAwQc5M,EAAKi+B,mBAAmB3/B,EAAauN,GAxQnD,SAAA8hE,EAAAgB,GAAAhB,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,mBAAA+gE,EAAAgB,IAwQ8D,EAxQ9D,gBAwQXliD,EAxQWkhD,EAAAgB,GAAAhB,EAAA9vD,OAAA,0BAgRPrhB,OAAOC,KAAKyrE,GAAW72C,SAAShzB,GAhRzB,CAAAsvE,EAAA/gE,KAAA,iBAiRHi5B,GAAiBqiC,EAAU7pE,GAC3BwwB,GAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAnRhC+mC,EAAAhhE,KAAA,IAAAghE,EAAA/gE,KAAA,IAsRQ5M,EAAKqvB,yBAAyBR,GAAgBgX,IAtRtD,SAsRPpZ,EAtROkhD,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,mBAAA+gE,EAAAhhE,KAAA,IAAAghE,EAAAiB,GAAAjB,EAAA,oBA0RJlhD,IAAUzsB,EAAKgN,MAAMyf,GAAQ9wB,UAChC8wB,EAAS,KA3RFkhD,EAAA/gE,KAAA,0BAAA+gE,EAAA/gE,KAAA,IA8RM5M,EAAK6uE,cAAcvwE,EAAY4wB,KAAK7wB,OA9R1C,SA8RTouB,EA9RSkhD,EAAAj+D,KAAA,gBAAAi+D,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAkSI5M,EAAK8uE,iBAAiBxwE,EAAauN,GAlSvC,gBAkSX4gB,EAlSWkhD,EAAAj+D,KAAAi+D,EAAA9vD,OAAA,0BAqSPrhB,OAAOC,KAAKyrE,GAAW72C,SAAShzB,GArSzB,CAAAsvE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAsSM5M,EAAK6tB,gBAAgBxvB,EAAOwN,GAtSlC,UAsST4gB,EAtSSkhD,EAAAj+D,QAuSM+c,EAAO9wB,UACpB8wB,EAAS,KAxSFkhD,EAAA/gE,KAAA,uBA2SUf,EA3SV,CAAA8hE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IA2S0B5M,EAAK6tB,gBAAgBvvB,EAAYD,MAAOwN,GA3SlE,SAAA8hE,EAAAoB,GAAApB,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,mBAAA+gE,EAAAoB,IA2S6E,EA3S7E,UA2SL5zC,GA3SKwyC,EAAAoB,MA4SY5zC,GAAax/B,UAChCw/B,GAAe,KAEjB1O,EAAS0O,GA/SA,gBAAAwyC,EAAA9vD,OAAA,0BAmTchS,EAnTd,CAAA8hE,EAAA/gE,KAAA,iBAAA+gE,EAAA/gE,KAAA,IAmT8B5M,EAAK6tB,gBAAgBvvB,EAAY4wB,KAAK7wB,MAAOwN,GAnT3E,SAAA8hE,EAAAqB,GAAArB,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,mBAAA+gE,EAAAqB,IAmTsF,EAnTtF,gBAmTLp/D,GAnTK+9D,EAAAqB,MAqTTviD,EAAS7c,IArTA+9D,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IA4TkDsQ,QAAQqD,IAAI,CACvEvgB,EAAKspE,eAAe,MAAOjrE,EAAOC,EAAauN,GAAS,GACxD7L,EAAKspE,eAAe,aAAcjrE,EAAOC,EAAauN,GAAS,GAC/D7L,EAAKspE,eAAe,oBAAqBjrE,EAAOC,EAAauN,GAAS,KA/T7D,gBAAAugE,GAAAuB,EAAAj+D,KAAA28D,GAAA7vE,OAAA4yB,EAAA,EAAA5yB,CAAA4vE,GAAA,GA4TNE,GA5TMD,GAAA,GA4TKE,GA5TLF,GAAA,GA4TkBG,GA5TlBH,GAAA,GAsUPI,GAAuBD,GAEvBA,IAA0BF,IAAaC,KACnC1B,GAAiB0B,GAAY/jE,MAAM8jE,GAAU7sD,IAAI,MACvDgtD,GAAuBD,GAAuBh/D,KAAKq9D,KAGrDp+C,EAAS,CACPggD,wBACAD,2BA/USmB,EAAA9vD,OAAA,0BAqVPrhB,OAAOC,KAAKyrE,GAAW72C,SAAShzB,GArVzB,CAAAsvE,EAAA/gE,KAAA,iBAsVHi5B,GAAiBqiC,EAAU7pE,GAtVxBsvE,EAAA/gE,KAAA,IAuVM5M,EAAKivE,uBAAuBppC,GAAgBh6B,EAAS+9D,GAvV3D,SAuVTn9C,EAvVSkhD,EAAAj+D,KAAAi+D,EAAA/gE,KAAA,0BAAA+gE,EAAA/gE,KAAA,IA6VCsQ,QAAQqD,IAAI,CACpBvgB,EAAKy9B,kBAAkBn/B,GACvB0B,EAAKspE,eAAe,mBAAoBjrE,EAAOC,EAAauN,GAC5D63D,EAAe1jE,EAAKkvE,6BAA6BrjE,EAAS+9D,EAAyBvrE,GAAS,OAhWrF,SAAAuuE,GAAAe,EAAAj+D,KAAAm9D,GAAArwE,OAAA4yB,EAAA,EAAA5yB,CAAAowE,GAAA,GA0VPE,GA1VOD,GAAA,GA2VPE,GA3VOF,GAAA,GA4VPG,GA5VOH,GAAA,GAqWLE,IAAqBD,KACjB3xC,GAAe4xC,GAAkBvkE,MAAMskE,IACzCI,GAAoB/xC,GACpB6xC,KAAqBhtE,EAAKgN,MAAMggE,IAAkBrxE,UACpDuxE,GAAoBA,GAAkB1/D,KAAKxN,EAAKgN,MAAMggE,MAExDvgD,EAASygD,IA3WF,gBAAAS,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAkX6CsQ,QAAQqD,IAAI,CAClEvgB,EAAKspE,eAAe,kBAAmBjrE,EAAOC,EAAauN,GAC3D7L,EAAKspE,eAAe,yBAA0BjrE,EAAOC,EAAauN,KApXzD,gBAAAshE,GAAAQ,EAAAj+D,KAAA09D,GAAA5wE,OAAA4yB,EAAA,EAAA5yB,CAAA2wE,GAAA,GAkXNE,GAlXMD,GAAA,GAkXYE,GAlXZF,GAAA,GAuXNC,KACHA,GAAmBrtE,EAAKgN,MAAM,IAG3BsgE,KACHA,GAA0BttE,EAAKgN,MAAM,IAGvCyf,EAAS6gD,GAAwB7/D,MAAM4/D,IA/X5BM,EAAA9vD,OAAA,6BAAA8vD,EAAA/gE,KAAA,IAkYkCsQ,QAAQqD,IAAI,CACvDvgB,EAAKspE,eAAe,aAAcjrE,EAAOC,EAAauN,GAAS,GAC/D7L,EAAKspE,eAAe,oBAAqBjrE,EAAOC,EAAauN,GAAS,KApY7D,gBAAA0hE,GAAAI,EAAAj+D,KAAA89D,GAAAhxE,OAAA4yB,EAAA,EAAA5yB,CAAA+wE,GAAA,GAkYN/gE,GAlYMghE,GAAA,GAkYMC,GAlYND,GAAA,GAuYNhhE,KACHA,GAAaxM,EAAKgN,MAAM,IAErBygE,KACHA,GAAqBztE,EAAKgN,MAAM,KAGlCyf,EAASghD,GAAmBhgE,MAAMjB,KAIvBkB,GAAG1N,EAAKgN,MAAM,MACvByf,EAASzsB,EAAKgN,MAAM,IAnZX2gE,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,6BAAA8vD,EAAA9vD,OAAA,SA0ZR4O,GA1ZQ,0BAAAkhD,EAAA7/D,SAAA07D,EAAAruE,KAAA,gBAn1JE,gBAAAg0E,EAAAC,EAAAC,EAAAC,GAAA,OAAA/F,EAAAv7D,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+uKnBo0E,mBA/uKmB,eAAAC,EAAAhzE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+uKE,SAAAojE,EAAOl5B,GAAP,IAAA/2B,EAAAgP,EAAAtD,EAAAwkD,EAAAC,EAAA1hE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAmjE,GAAA,cAAAA,EAAAjjE,KAAAijE,EAAAhjE,MAAA,UAAkB4S,EAAlBmwD,EAAAjzE,OAAA,QAAAiuB,IAAAglD,EAAA,GAAAA,EAAA,GAAgC,SAC7CnhD,EADa,mBAAA5vB,OACsB23C,EADtB,KAAA33C,OACmC4gB,KAChD0L,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAHvB,CAAAi0E,EAAAhjE,KAAA,eAAAgjE,EAAA/xD,OAAA,SAIV7d,EAAKgN,MAAMke,IAJD,cAAA0kD,EAAAhjE,KAAA,EAOS5M,EAAKqoE,oBAAoB9xB,EAAW/2B,GAP7C,YAOfkwD,EAPeE,EAAAlgE,MAAA,CAAAkgE,EAAAhjE,KAAA,gBAAAgjE,EAAA/xD,OAAA,SASV7d,EAAKgN,MAAM0iE,IATD,eAAAE,EAAA/xD,OAAA,SAYZ,MAZY,yBAAA+xD,EAAA9hE,SAAA2hE,EAAAt0E,SA/uKF,gBAAA00E,GAAA,OAAAL,EAAAxhE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6vKnB20E,yBA7vKmB,eAAAC,EAAAvzE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6vKQ,SAAA2jE,EAAO1xE,EAAauN,GAApB,IAAA2T,EAAAywD,EAAAC,EAAAC,EAAAviE,EAAAq9B,EAAAmlC,EAAAC,EAAApiE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA6jE,GAAA,cAAAA,EAAA3jE,KAAA2jE,EAAA1jE,MAAA,UAA6B4S,EAA7B6wD,EAAA3zE,OAAA,QAAAiuB,IAAA0lD,EAAA,GAAAA,EAAA,GAA2C,SACpExkE,EAAUA,GAAW7L,EAAK3E,MAAMwQ,QADP,CAAAykE,EAAA1jE,KAAA,eAAA0jE,EAAAzyD,OAAA,SAGhB,MAHgB,cAAAyyD,EAAA1jE,KAAA,EAUfsQ,QAAQqD,IAAI,CACpBvgB,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,MAAO,GAAI,GAAImhB,GACtExf,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,aAAc,GAAI,GAAImhB,GAC7Exf,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,gBAAiB,CAACwN,GAAU,GAAI2T,KAbhE,UAAAywD,EAAAK,EAAA5gE,KAAAwgE,EAAA1zE,OAAA4yB,EAAA,EAAA5yB,CAAAyzE,EAAA,GAOvBE,EAPuBD,EAAA,GAQvBtiE,EARuBsiE,EAAA,GASvBjlC,EATuBilC,EAAA,GAgBzBC,EAAMnwE,EAAKgN,MAAMmjE,GACjBviE,EAAa5N,EAAKgN,MAAMY,GACxBq9B,EAAejrC,EAAKgN,MAAMi+B,GAErBr9B,EAAWjS,SAAYsvC,EAAatvC,SAAYw0E,EAAIx0E,SAAYqE,EAAKgN,MAAMi+B,GAAcslC,GAAG,KAAMvwE,EAAKgN,MAAMY,GAAYgD,GAAG5Q,EAAKgN,MAAMi+B,IApBnH,CAAAqlC,EAAA1jE,KAAA,gBAqBjBwjE,EAAYpwE,EAAKwvD,aAAaxvD,EAAKgN,MAAMY,GAAYH,MAAMJ,SAAS8iE,EAAI1wD,IAAI,KAAKjX,MAAMoF,EAAWH,MAAMw9B,OArBvFqlC,EAAAzyD,OAAA,SAsBhBuyD,GAtBgB,eAAAE,EAAAzyD,OAAA,SAyBlBjQ,GAzBkB,yBAAA0iE,EAAAxiE,SAAAkiE,EAAA70E,SA7vKR,gBAAAq1E,EAAAC,GAAA,OAAAV,EAAA/hE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAwxKnBsiC,kBAxxKmB,eAAAizC,EAAAl0E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwxKC,SAAAskE,EAAOryE,GAAP,IAAAkhB,EAAArP,EAAAqe,EAAAtD,EAAAlvB,EAAA4R,EAAAsB,EAAAszC,EAAAC,EAAAmuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtjE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+kE,GAAA,cAAAA,EAAA7kE,KAAA6kE,EAAA5kE,MAAA,UAAoB4S,EAApB+xD,EAAA70E,OAAA,QAAAiuB,IAAA4mD,EAAA,GAAAA,EAAA,GAAkC,SAAUphE,EAA5CohE,EAAA70E,OAAA,QAAAiuB,IAAA4mD,EAAA,IAAAA,EAAA,GAEZ/iD,EAFY,kBAAA5vB,OAEsBN,EAAY4wB,KAAK7wB,MAFvC,KAAAO,OAEgD4gB,KAC5D0L,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJxB,CAAA61E,EAAA5kE,KAAA,eAAA4kE,EAAA3zD,OAAA,SAKT7d,EAAKgN,MAAMke,IALF,cAQdlvB,EAAWsC,EAAYtC,SARTw1E,EAAA5kE,KAAA,EAUK5M,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,aAAc,GAAI,GAAImhB,GAVlF,WAUd5R,EAVc4jE,EAAA9hE,QAaCS,EAbD,CAAAqhE,EAAA5kE,KAAA,gBAcVsC,EAAyC,SAAhClP,EAAK3E,MAAM8T,iBACpBqzC,EAAiBn1C,SAAS8C,GAAc,KACxCsyC,EAAep1C,SAAS8C,GAAc,KAhB5BqhE,EAAA5kE,KAAA,GAiBQ5M,EAAKyP,gBAAgBnR,EAAY8J,QAAS8G,EAAQszC,EAAgBC,GAAc,GAjBxF,QAiBVmuB,EAjBUY,EAAA9hE,KAmBZmhE,EAAc,CAChBnrE,KAAM,KACNyrE,SAAU,MAGRL,EAAa,CACfprE,KAAM,KACNyrE,SAAU,MAGZP,EAAUj0E,QAAQ,SAAA6I,GAChB,IAAM2rE,EAAWhkE,KAAK29C,IAAIz9C,SAAS7H,EAAE2K,WAAa9C,SAAS8C,IACvD9C,SAAS7H,EAAE2K,WAAa9C,SAAS8C,MAAgB0gE,EAAYM,UAAYA,EAAWN,EAAYM,YAClGN,EAAYM,SAAWA,EACvBN,EAAYnrE,KAAOF,GAGjB6H,SAAS7H,EAAE2K,WAAa9C,SAAS8C,KAAe2gE,EAAWK,WAC7DL,EAAWK,SAAWA,EACtBL,EAAWprE,KAAOF,KAKlBqrE,EAAYnrE,MAAQorE,EAAWprE,OAC3BqrE,EAAmB/wE,EAAKgN,MAAM6jE,EAAYnrE,KAAK6K,WAC/CygE,EAAkBhxE,EAAKgN,MAAM8jE,EAAWprE,KAAK6K,WAC7C0gE,EAAajxE,EAAKgN,MAAM6jE,EAAYnrE,KAAKyK,WACzC+gE,EAAYlxE,EAAKgN,MAAM8jE,EAAWprE,KAAKyK,WACvCghE,EAAWD,EAAUzjE,MAAMwjE,GAC3BG,EAAYJ,EAAgBvjE,MAAMsjE,GAClCM,EAAoBD,EAAU3xD,IAAI0xD,GAClCG,EAA0BtxE,EAAKgN,MAAMmD,GAAW1C,MAAMwjE,GAC5DrjE,EAAamjE,EAAiBvjE,KAAK6jE,EAAkB7oE,MAAM8oE,KApD7C,eAyDd1jE,IAAe5N,EAAKgN,MAAMY,GAAYjS,UACxCiS,EAAa5N,EAAKwQ,iBAAiB5C,EAAY5R,MAI5C4R,GAAc5N,EAAKgN,MAAMY,GAAYjS,SAAWqE,EAAKgN,MAAMY,GAAYF,GAAG,MAC7EE,EAAa5N,EAAKgN,MAAM,IA/DRwkE,EAAA3zD,OAAA,SAkEX7d,EAAK8vB,8BAA8BtB,EAAe5gB,IAlEvC,yBAAA4jE,EAAA1jE,SAAA6iE,EAAAx1E,SAxxKD,gBAAAs2E,GAAA,OAAAf,EAAA1iE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA41KnBu2E,gBAAkB,WAAuB,IAAtBC,EAAsB1jE,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GAOvC,OANIjO,EAAK3E,MAAMq2E,iBAAyD,oBAA/B1xE,EAAK3E,MAAMq2E,iBAElD1xE,EAAK3E,MAAMq2E,gBAAgB,KAAMC,IAI5B,GAn2KUx2E,KAw2KnBgwB,cAAgB,SAAClsB,EAAKyG,GAAoB,IAAd8zB,EAAcvrB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAR,IAIhC,OAHIjO,EAAK3E,MAAM8vB,eAAqD,oBAA7BnrB,EAAK3E,MAAM8vB,eAChDnrB,EAAK3E,MAAM8vB,cAAclsB,EAAKyG,EAAM8zB,GAE/B9zB,GA52KUvK,KA82KnBs3C,mCAAqC,SAACm/B,EAAY3yE,EAAKyG,GAAoB,IAAd8zB,EAAcvrB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAR,IACjE,GAAIjO,EAAK3E,MAAM8vB,eAAqD,oBAA7BnrB,EAAK3E,MAAM8vB,eAAgC/f,KAAKC,UAAU3F,GAAMhJ,QAAQ,IAAS,CACtH,IAAMwuB,EAAalrB,EAAK6vB,8BAA8B+hD,EAAY,IAClE1mD,EAAWjsB,GAAOyG,EAClB1F,EAAK3E,MAAM8vB,cAAcymD,EAAY1mD,EAAYsO,GAAK,GAExD,OAAO9zB,GAp3KUvK,KAs3KnB20B,8BAAgC,SAAC7wB,EAAKyG,GAAoB,IAAd8zB,EAAcvrB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAR,IAIhD,OAHIjO,EAAK3E,MAAM8vB,eAAqD,oBAA7BnrB,EAAK3E,MAAM8vB,eAChDnrB,EAAK3E,MAAM8vB,cAAclsB,EAAKyG,EAAM8zB,GAAK,GAEpC9zB,GA13KUvK,KA43KnB00B,8BAAgC,SAAC5wB,GAA6B,IAAxBmX,EAAwBnI,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACnD,OAAOjO,EAAKiuC,cAAchvC,EAAKmX,GAAc,IA73K5Bjb,KA+3KnB8yC,cAAgB,SAAChvC,GAAsD,IAAjDmX,EAAiDnI,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAlC,KAAM4jE,EAA4B5jE,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GACjEid,EAAa,KACjBjsB,EAAMA,EAAIoJ,cACV,IAAMypE,EAAoB9xE,EAAK4wB,uBAE/B,GAAI5wB,EAAK3E,MAAM6vB,YAAclrB,EAAK3E,MAAM6vB,WAAW4mD,IAAsB9xE,EAAK3E,MAAM6vB,WAAW4mD,GAAmB7yE,GAChHisB,EAAalrB,EAAK3E,MAAM6vB,WAAW4mD,GAAmB7yE,QAEjD,GAAI4yE,EAAiB,CAC1B,IAAME,EAAgB/xE,EAAK26C,cAAc,cACrCo3B,GAAiBA,EAAcD,IAAsBC,EAAcD,GAAmB7yE,KACxFisB,EAAa6mD,EAAcD,GAAmB7yE,IAWlD,OAPwBisB,GAAcA,EAAWxlB,OAAuC,OAA9BwlB,EAAW8mD,gBAA2B3kE,SAAS6d,EAAW8mD,iBAAmB3kE,SAASe,KAAK04B,MAAM,MAQlJ5b,EAAWxlB,KAEb0Q,GAx5KUjb,KA05KnBm2B,iBA15KmB,eAAA2gD,EAAAz1E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA05KA,SAAA6lE,EAAOjS,EAAY3hE,GAAnB,IAAA6zE,EAAAC,EAAApyC,EAAAqyC,EAAAC,EAAA,OAAA1kD,EAAA3wB,EAAAwP,KAAA,SAAA8lE,GAAA,cAAAA,EAAA5lE,KAAA4lE,EAAA3lE,MAAA,cAAA2lE,EAAA3lE,KAAA,EAIPsQ,QAAQqD,IAAI,CACpBvgB,EAAK6tB,gBAAgBvvB,EAAY4wB,KAAK7wB,MAAO4hE,GAAY,GACzDjgE,EAAKqoE,oBAAoB/pE,EAAY4wB,KAAK7wB,SAN3B,cAAA8zE,EAAAI,EAAA7iE,KAAA0iE,EAAA51E,OAAA4yB,EAAA,EAAA5yB,CAAA21E,EAAA,GAEfnyC,EAFeoyC,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYtyE,EAAKgN,MAAM,GACvBhN,EAAKgN,MAAMgzB,GAAmBpvB,GAAG,IAAM5Q,EAAKgN,MAAMqlE,GAAuBzhE,GAAG,KAC9E0hE,EAAYtyE,EAAKgN,MAAMgzB,GAAmBvgB,IAAIzf,EAAKgN,MAAMqlE,KAX1CE,EAAA10D,OAAA,SAcVy0D,GAdU,wBAAAC,EAAAzkE,SAAAokE,EAAA/2E,SA15KA,gBAAAq3E,EAAAC,GAAA,OAAAR,EAAAjkE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA06KnBu3E,WAAa,SAACj8C,GACZ,OAAO7V,OAAO+xD,KAAKl8C,EAAK,SAAU,aA36KjBt7B,KA66KnBy3E,mBA76KmBp2E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA66KE,SAAAwmE,IAAA,IAAAhnE,EAAAinE,EAAA/jE,EAAAgkE,EAAAC,EAAAC,EAAAhlE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAymE,GAAA,cAAAA,EAAAvmE,KAAAumE,EAAAtmE,MAAA,UAAOf,EAAPonE,EAAAv2E,OAAA,QAAAiuB,IAAAsoD,EAAA,GAAAA,EAAA,GAAiB,KAC9BH,EAAkB,GACxBjnE,EAAUA,GAAW7L,EAAK3E,MAAMwQ,QAFb,CAAAqnE,EAAAtmE,KAAA,eAAAsmE,EAAAr1D,OAAA,SAKVi1D,GALU,UAQb/jE,EAAgB1B,SAASe,KAAK04B,MAAQ,OAEtCisC,EAAsB/yE,EAAK+Q,gBAAgB,CAAC,QAAS,mBACnCke,QAXL,CAAAikD,EAAAtmE,KAAA,gBAAAsmE,EAAAtmE,KAAA,GAYX5M,EAAKiM,aAAa8mE,EAAoB13E,MAAM83E,UAA5C,eAAAC,EAAA52E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAuD,SAAAgnE,EAAOC,GAAP,IAAAj1E,EAAAk1E,EAAAj1E,EAAAqP,EAAA6lE,EAAAtrE,EAAAurE,EAAAC,EAAAxmE,EAAAymE,EAAA3B,EAAA,OAAApkD,EAAA3wB,EAAAwP,KAAA,SAAAmnE,GAAA,cAAAA,EAAAjnE,KAAAinE,EAAAhnE,MAAA,cACrDvO,EAAQ,QACRk1E,EAAiBD,EAASO,OAC1Bv1E,EAAci1E,EAAel1E,GAHwBu1E,EAAAhnE,KAAA,EAKrD5M,EAAK3E,MAAM2oC,aAAa1lC,EAAYsE,KAAMtE,EAAY8J,QAAS9J,EAAY2lC,KALtB,cAAA2vC,EAAAhnE,KAAA,EAOrC5M,EAAK6tB,gBAAgBvvB,EAAYsE,KAAMiJ,GAPF,QAOrD8B,EAPqDimE,EAAAlkE,OAQ5C/B,EAAQiD,GAAG,KACJ,aACd4iE,EAAaF,EAASE,WACtBtrE,EAAe6qE,EAAoBhqE,MACnC0qE,EAAgBV,EAAoB55D,MACpCu6D,EAAYX,EAAoBe,aAChC5mE,EAASomE,EAASS,qBAAuBhlE,EAAgB,UAAY,SACrE4kE,EAA4B,YAAXzmE,EACjB8kE,EAAiBj+C,IAAsC,IAA/Bu/C,EAASS,qBAA4BC,MAAMziE,OAAO,uBAAyB,OACzGuhE,EAAgBpqE,KAAK,CACnBrK,QACA6O,SACAS,UACA+lE,YACAF,aACAS,YAdkB,aAelB/rE,eACAurE,gBACAzB,iBACA2B,oBA3BuD,wBAAAC,EAAA9lE,SAAAulE,EAAAl4E,SAAvD,gBAAA+4E,GAAA,OAAAd,EAAAplE,MAAA7S,KAAA8S,YAAA,IAZW,aA4Cb+kE,EAAoBhzE,EAAK+Q,gBAAgB,CAAC,QAAS,iBACnCke,QA7CH,CAAAikD,EAAAtmE,KAAA,gBAAAsmE,EAAAtmE,KAAA,GA8CkB5M,EAAKm0E,wBAAwBtoE,GA9C/C,QAAAqnE,EAAAxjE,KA+CI/S,QAAQ,SAAA22E,GAC3B,IACM3lE,EAAU2lE,EAASc,WACnB/1E,EAAQi1E,EAASe,iBAAiBh2E,MAClCm1E,EAAaF,EAASgB,iBAAiBj2E,MACvCk2E,EAAoBjB,EAASiB,kBAC7BC,EAAc,iBAAA51E,OAAoB40E,EAApB,QACdG,GAAkBL,EAASmB,WAAanB,EAASoB,QACjDxsE,EAAelI,EAAK+Q,gBAAgB,CAAC,YAAa,cAAe,UACjE0iE,EAAgBzzE,EAAK+Q,gBAAgB,CAAC,YAAa,cAAe,UAClE4jE,EAAoB30E,EAAK+Q,gBAAgB,CAAC,YAAa,cAAe,cACtEihE,EAAiBj+C,IAA0C,IAAnCu/C,EAASsB,aAAaC,YAAmBb,MAAMziE,OAAO,uBAAyB,OACvGrE,EAASomE,EAASoB,QAAU,UAAYrnE,SAASimE,EAASsB,aAAaC,aAAe9lE,EAAgB,UAAY,SAClH2kE,EAAS,GAAA90E,OAAMgiB,OAAO8V,SAASkK,OAAtB,MAAAhiC,OAAiCoB,EAAK+Q,gBAAgB,CAAC,YAAa,cAApE,WAAAnS,OAA2Fo0E,EAAkB8B,MAA7G,KAAAl2E,OAAsH00E,EAASgB,iBAAiBj2E,MAAhJ,UACfy0E,EAAgBpqE,KAAK,CACnBrK,QACA6O,SACAS,UACA+lE,YACAF,aACAS,YAnBkB,QAoBlB/rE,eACAurE,gBACAzB,iBACA2B,iBACAa,iBACAD,oBACAI,wBA1Ea,eAAAzB,EAAAr1D,OAAA,SA+EZi1D,GA/EY,yBAAAI,EAAAplE,SAAA+kE,EAAA13E,SA76KFA,KA8/KnBg5E,wBA9/KmB,eAAAY,EAAAv4E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA8/KO,SAAA2oE,EAAOnpE,GAAP,IAAAmnE,EAAA7f,EAAA9D,EAAA4lB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1nD,EAAA3wB,EAAAwP,KAAA,SAAA8oE,GAAA,cAAAA,EAAA5oE,KAAA4oE,EAAA3oE,MAAA,cAClBomE,EAAoBhzE,EAAK+Q,gBAAgB,CAAC,QAAS,gBAEnDoiD,EAAY6f,EAAkBwC,YAAYhjB,WAC1CnD,EAAuB2jB,EAAkBwC,YAAYC,aACrDR,EAAgBjC,EAAkBwC,YAAYP,cAL5BM,EAAA3oE,KAAA,EAOlBsQ,QAAQqD,IAAI,CAChBvgB,EAAK3E,MAAM2oC,aAAaixC,EAAcryE,KAAMqyE,EAAc7sE,QAAS6sE,EAAchxC,KACjFjkC,EAAK3E,MAAM2oC,aAAaqrB,EAAqBzsD,KAAMysD,EAAqBjnD,QAASinD,EAAqBprB,OAThF,cAAAsxC,EAAA3oE,KAAA,EAedsQ,QAAQqD,IAAI,CACpBvgB,EAAKiiC,kBAAkBotB,EAAqBzsD,KAAM,cAAeuwD,EAAW,SAAU,CAACrmD,OAAQ,CAAE4oE,MAAO7pE,KACxG7L,EAAKiiC,kBAAkBotB,EAAqBzsD,KAAM,iBAAkBuwD,EAAW,SAAU,CAACrmD,OAAQ,CAAE4oE,MAAO7pE,OAjBrF,cAAAqpE,EAAAK,EAAA7lE,KAAAylE,EAAA34E,OAAA4yB,EAAA,EAAA5yB,CAAA04E,EAAA,GAatBE,EAbsBD,EAAA,GActBE,EAdsBF,EAAA,GAoBlBG,EAAuB,GApBLC,EAAA3oE,KAAA,GAsBlB5M,EAAKiM,aAAampE,EAAlB,eAAAO,EAAAn5E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAqC,SAAAupE,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAA9B,EAAAF,EAAAC,EAAAgC,EAAA3B,EAAA4B,EAAAvtE,EAAA/C,EAAAuwE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnpE,EAAAgC,EAAAurB,EAAAo5C,EAAA,OAAA3mD,EAAA3wB,EAAAwP,KAAA,SAAAuqE,GAAA,cAAAA,EAAArqE,KAAAqqE,EAAApqE,MAAA,cAEnCkpE,EAAUzoE,SAASwoE,EAAM1xC,aAAa2xC,SACtCC,EAAsBV,EAAqBvqD,KAAK,SAAAmsD,GAAK,OAAI5pE,SAAS4pE,EAAM9yC,aAAa2xC,WAAaA,IAH/DkB,EAAApqE,KAAA,EAO/BsQ,QAAQqD,IAAI,CACpBvgB,EAAKkuB,oBAAoBmhC,EAAqBzsD,KAAM,WAAY,CAACkzE,IACjE91E,EAAKiiC,kBAAkBgzC,EAAcryE,KAAM,gBAAiBizE,EAAMr2D,YAAa,SAAU,CAAE1S,OAAQ,CAAEoqE,UAAWrB,EAAMp+C,qBAT/E,UAAAu+C,EAAAgB,EAAAtnE,KAAAumE,EAAAz5E,OAAA4yB,EAAA,EAAA5yB,CAAAw5E,EAAA,GAKvCpB,EALuCqB,EAAA,GAMvCC,EANuCD,EAAA,GAYpCrB,EAZoC,CAAAoC,EAAApqE,KAAA,gBAAAoqE,EAAAn5D,OAAA,UAahC,GAbgC,WAiBnCs4D,EAAmBD,EAAiBA,EAAeppE,OAAO,SAAA2nE,GAC9D,OAAOA,EAAStwC,aAAa+yC,YAActC,EAAan9C,iBACtDz3B,EAAKgN,MAAMynE,EAASj1D,aAAa5O,GAAGilE,EAAMr2D,cAC1Cxf,EAAKgN,MAAMynE,EAAStwC,aAAagzC,cAAczpE,GAAGknE,EAAaC,aAC/DxnE,SAASunE,EAAaC,YAAc7B,EAAkBwC,YAAY4B,4BAA8BhpE,KAAK04B,MAAQ,MAC5G,GAGCsvC,EAAkBD,EAAiB/0C,OAAO,SAACz0B,EAAM0qE,GACrD,OAAK1qE,EAID3M,EAAKgN,MAAMqqE,EAAKlzC,aAAamzC,aAAa1mE,GAAGjE,EAAKw3B,aAAamzC,aAC1DD,EAEF1qE,EANE0qE,GAOR,MAEG/C,EAAmB93E,OAAOqQ,OAAOmmE,EAAkB33E,MAAMsQ,iBAAiBmf,KAAK,SAAAxsB,GAAW,OAAIA,EAAY8J,QAAQC,gBAAkBusE,EAAan9C,gBAAgBpvB,gBACjK+rE,EAAap0E,EAAKwQ,iBAAiBokE,EAAaR,WAAYE,EAAiBt4E,UAC7Eq4E,EAAmB73E,OAAOqQ,OAAOynE,EAAiBiD,YAAYzsD,KAAK,SAAA0sD,GAAgB,OAAIA,EAAiBpvE,QAAQC,gBAAkBusE,EAAa6C,WAAWpvE,gBAC1JguE,EAAar2E,EAAKmO,YAAsC,IAA1BymE,EAAaC,YAAmBtjE,OAAO,gBAErEmjE,EAAUqB,EAAsBA,EAAoB5xC,aAAauwC,QAAU,MAzCxC,CAAAsC,EAAApqE,KAAA,gBAAAoqE,EAAApqE,KAAA,GA0CH5M,EAAKkuB,oBAAoBmhC,EAAqBzsD,KAAM,mBAAoB,CAAC8xE,IA1CtE,QAAAsC,EAAA1nD,GAAA0nD,EAAAtnE,KAAAsnE,EAAApqE,KAAA,iBAAAoqE,EAAA1nD,GA0CkF,KA1ClF,WA0CnCgnD,EA1CmCU,EAAA1nD,GA2CnCvmB,EA3CmC,GAAAnK,OA2CxB01E,EAAiB1xE,KA3CO,OAAAhE,OA2CGw1E,EAAW3rE,QAAQ,GA3CtB,KAAA7J,OA2C4By1E,EAAiBh2E,MA3C7C,YAAAO,OA2C6Dy3E,GAChGrwE,EAAQ8vE,EAEVS,EAAgB,MAChBR,EA/CqC,CAAAiB,EAAApqE,KAAA,gBAAAoqE,EAAApqE,KAAA,GAgDV5M,EAAKw1C,sBAAsBugC,EAAoBj7D,iBAhDrC,QAgDjC07D,EAhDiCQ,EAAAtnE,KAiDjC+mE,EAAmBD,EAAiBA,EAAe3iD,KAAK/I,KAAK,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkBgsE,EAAiBjsE,QAAQC,gBAAiB,KAClJkuE,EAAgBE,EAAmBz2E,EAAKwQ,iBAAiBnD,SAASopE,EAAiB/wE,KAAM,IAAK2uE,EAAiBr4E,UAAYgE,EAAKgN,MAAM,GAlD/F,eAqDnC0pE,EAAkB12E,EAAKwQ,iBAAiBokE,EAAaR,WAAYC,EAAiBr4E,UAElF26E,EAAiBP,EAAkBp2E,EAAKgN,MAAMopE,EAAgBjyC,aAAamzC,aAAa9uE,MAAM,IAAOxI,EAAKgN,MAAM,GAChH4pE,EAAmBD,EAAe/lE,GAAG,GAAK5Q,EAAKgN,MAAM4nE,EAAaR,YAAY30D,IAAIk3D,GAAkB32E,EAAKgN,MAAM,GAC/G6pE,EAAqB72E,EAAK2vD,qBAAqBinB,EAAkBvC,EAAiBr4E,UAzD/Cg7E,EAAApqE,KAAA,GA8D/BsQ,QAAQqD,IAAI,CACpBvgB,EAAK6uE,cAAcyF,EAAiBj2E,OACpC2B,EAAK6tB,gBAAgBymD,EAAiBj2E,MAAOwN,GAAS,KAhEf,QAAAirE,EAAAE,EAAAtnE,KAAAqnE,EAAAv6E,OAAA4yB,EAAA,EAAA5yB,CAAAs6E,EAAA,GA4DvClpE,EA5DuCmpE,EAAA,GA6DvCnnE,EA7DuCmnE,EAAA,GAmEzCnpE,EAAa5N,EAAKwQ,iBAAiB5C,EAAY0mE,EAAiBt4E,UAChE4T,EAAmB5P,EAAKwQ,iBAAiBZ,EAAkB0kE,EAAiBt4E,UACtEm/B,EAAevrB,EAAiBpH,MAAMoF,GACtC2mE,EAAoBp5C,EAAavqB,GAAG,GAAKwjE,EAAW30D,IAAI0b,GAAc3yB,MAAM,KAAKC,QAAQ,GAAK,IAAM,MAI1G6sE,EAAqB5sE,KAAK,CACxBK,QACA/C,QACA0uE,UACAN,aACAQ,eACA2B,gBACAD,gBACAI,kBACAE,mBACAtC,mBACAD,mBACAE,oBACAsC,qBACApC,SAAU2B,EAAe55E,OAAA84B,EAAA,EAAA94B,CAAA,GAAQ45E,EAAR,CAAyBv4E,GAAIq4E,EAAewB,UAAU,SAAA7lE,GAAC,OAAIA,EAAED,OAASwkE,EAAgBxkE,SAAU,OAxFlF,yBAAAolE,EAAAlpE,SAAA8nE,EAAAz6E,SAArC,gBAAAw8E,GAAA,OAAAhC,EAAA3nE,MAAA7S,KAAA8S,YAAA,IAtBkB,eAAAsnE,EAAA13D,OAAA,SAkHjBy3D,GAlHiB,yBAAAC,EAAAznE,SAAAknE,EAAA75E,SA9/KP,gBAAAy8E,GAAA,OAAA7C,EAAA/mE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAknLnB08E,4BAlnLmB,eAAAC,EAAAt7E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAknLW,SAAA0rE,EAAOtgD,GAAP,IAAA8G,EAAA2N,EAAAW,EAAAC,EAAAnzB,EAAA,OAAAiU,EAAA3wB,EAAAwP,KAAA,SAAAurE,GAAA,cAAAA,EAAArrE,KAAAqrE,EAAAprE,MAAA,UACtB2xB,EAAkBv+B,EAAK4wB,yBACvBsb,EAAgBlsC,EAAK+Q,gBAAgB,CAAC,UAAW,YAAa,eAClDke,UAAWid,EAAcgC,UAAU3P,GAHzB,CAAAy5C,EAAAprE,KAAA,gBAIpBigC,EAAkBX,EAAcgC,UAAU3P,GAC1CuO,EALoB,GAAAluC,OAKGiuC,EALH,aAAAjuC,OAK8BstC,EAAcjtC,IAL5C,2CAAAL,OAKyF64B,EALzF,cAAAugD,EAAAprE,KAAA,EAMC5M,EAAKouC,kBAAkBtB,EAAmB,MAAM,GANjD,YAMpBnzB,EANoBq+D,EAAAtoE,OAOyB,kBAAxBiK,EAAa60B,OAPd,CAAAwpC,EAAAprE,KAAA,gBAAAorE,EAAAn6D,OAAA,SAQjBlE,EAAa60B,OAAO1hC,OAAO,SAAAC,GAAE,MAAgB,+CAAZA,EAAGxF,MAAyDwF,EAAG8oB,GAAGxtB,gBAAkBovB,EAAgBpvB,iBARpH,eAAA2vE,EAAAn6D,OAAA,SAWrB,MAXqB,yBAAAm6D,EAAAlqE,SAAAiqE,EAAA58E,SAlnLX,gBAAA88E,GAAA,OAAAH,EAAA9pE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+nLnB+8E,mBA/nLmB17E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+nLE,SAAA8rE,IAAA,IAAAtsE,EAAAusE,EAAAC,EAAA7pD,EAAAtD,EAAAotD,EAAA3sE,EAAA4sE,EAAAtqE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+rE,GAAA,cAAAA,EAAA7rE,KAAA6rE,EAAA5rE,MAAA,UAAOf,EAAP0sE,EAAA77E,OAAA,QAAAiuB,IAAA4tD,EAAA,GAAAA,EAAA,GAAiB,KAAMH,EAAvBG,EAAA77E,OAAA,QAAAiuB,IAAA4tD,EAAA,GAAAA,EAAA,GAA0C,KAC7D1sE,EAAUA,GAAW7L,EAAK3E,MAAMwQ,QADb,CAAA2sE,EAAA5rE,KAAA,eAAA4rE,EAAA36D,OAAA,SAGV,MAHU,WAMbw6D,EAAqBr4E,EAAK+Q,gBAAgB,CAAC,QAAS,kBAClCke,QAPL,CAAAupD,EAAA5rE,KAAA,eAAA4rE,EAAA36D,OAAA,SAQV,MARU,UAWb2Q,EAXa,mBAAA5vB,OAWsBiN,EAXtB,KAAAjN,OAWiCw5E,GAEjC,QADbltD,EAAalrB,EAAKiuC,cAAczf,IAZnB,CAAAgqD,EAAA5rE,KAAA,gBAAA4rE,EAAA36D,OAAA,SAcVqN,GAdU,eAiBbotD,EAAkB,GAClB3sE,EAAkB0sE,EAAmBh9E,MAAMsQ,gBAlB9B6sE,EAAA5rE,KAAA,GAmBb5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAA8sE,EAAAj8E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAqsE,EAAOr6E,GAAP,IAAAC,EAAA64B,EAAAwhD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnsE,EAAAosE,EAAA,OAAA1rD,EAAA3wB,EAAAwP,KAAA,SAAA8sE,GAAA,cAAAA,EAAA5sE,KAAA4sE,EAAA3sE,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GAC9B84B,EAAoB74B,EAAY64B,kBAFcoiD,EAAA3sE,KAAA,EAG9C5M,EAAK3E,MAAM2oC,aAAa7M,EAAkBv0B,KAAMu0B,EAAkB/uB,QAAS+uB,EAAkB8M,KAH/C,cAAAs1C,EAAA3sE,KAAA,EAIvB5M,EAAKkuB,oBAAoBiJ,EAAkBv0B,KAAM,aAJ1B,OAI9C+1E,EAJ8CY,EAAA7pE,KAK3CkpE,EAAa,EAL8B,YAK3BA,GAAcvrE,SAASsrE,IALI,CAAAY,EAAA3sE,KAAA,gBAAA2sE,EAAA3sE,KAAA,GAWxCsQ,QAAQqD,IAAI,CACpBvgB,EAAK63E,4BAA4B1gD,EAAkB/uB,SACnDpI,EAAKkuB,oBAAoBiJ,EAAkBv0B,KAAM,cAAe,CAACg2E,IACjE54E,EAAKkuB,oBAAoBiJ,EAAkBv0B,KAAM,sBAAuB,CAACg2E,IACzE54E,EAAKkuB,oBAAoBiJ,EAAkBv0B,KAAM,gBAAiB,CAAC5C,EAAK3E,MAAMwQ,QAAS+sE,MAfvC,WAAAC,EAAAU,EAAA7pE,KAAAopE,EAAAt8E,OAAA4yB,EAAA,EAAA5yB,CAAAq8E,EAAA,GAOhDE,EAPgDD,EAAA,GAQhDE,EARgDF,EAAA,GAShDG,EATgDH,EAAA,GAUhDI,EAVgDJ,EAAA,GAkBlDzkD,QAAQ8a,IAAR,UAAAvwC,OAAsBg6E,EAAtB,OAAAh6E,OAAsCo6E,EAAtC,OAAAp6E,OAAsDq6E,EAAtD,OAAAr6E,OAAuEs6E,IAEnEC,EAAc,KACdC,EAAe,KACfC,EAAgB,KAChBL,GAA6B,OAAfA,IAChBG,EAAcn5E,EAAKwQ,iBAAiBwoE,EAAY16E,EAAYtC,WAEzC,OAAjBk9E,EA1B8C,CAAAK,EAAA3sE,KAAA,YA2BhDqsE,EAAcj5E,EAAKwQ,iBAAiByoE,EAAa,MACjDC,EAAel5E,EAAKwQ,iBAAiB0oE,EAAc56E,EAAYtC,WAC9C4U,GAAG,GA7B4B,CAAA2oE,EAAA3sE,KAAA,YA8B9CysE,EAAgBH,GAGhBE,EAAeF,EAAa1wE,MAAMywE,GAAax5D,IAAI05D,IAClCvoE,GAAGqoE,KAClBG,EAAeH,GAGX/rE,EAAS0rE,EAAaD,GAAkBS,EAAaxoE,GAAG,GAAK,WAAa,UAEvD,OAArBwnE,GAA6BA,EAAiB/vE,gBAAkB6E,EAxCtB,CAAAqsE,EAAA3sE,KAAA,gBAAA2sE,EAAA17D,OAAA,kBA4CxCy7D,EAAgBP,GAAmBA,EAAgBr8E,OAASq8E,EAAgB,GAAK,KAEvFT,EAAgBj6E,GAAS,CACvB6O,SACAisE,cACAC,eACAC,gBACAC,iBAnD4C,QAKaV,IALbW,EAAA3sE,KAAA,iCAAA2sE,EAAAzrE,SAAA4qE,EAAAv9E,SAAhD,gBAAAq+E,GAAA,OAAAf,EAAAzqE,MAAA7S,KAAA8S,YAAA,IAnBa,eAAAuqE,EAAA36D,OAAA,SA6EZ7d,EAAKmrB,cAAcqD,EAAe8pD,IA7EtB,yBAAAE,EAAA1qE,SAAAqqE,EAAAh9E,SA/nLFA,KA8sLnBs+E,cA9sLmB,eAAAC,EAAAl9E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA8sLH,SAAAstE,EAAO1Z,GAAP,IAAA2Z,EAAAp6D,EAAAgP,EAAAtD,EAAAiQ,EAAA0+C,EAAA5rE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqtE,GAAA,cAAAA,EAAAntE,KAAAmtE,EAAAltE,MAAA,UAAmBgtE,IAAnBC,EAAAn9E,OAAA,QAAAiuB,IAAAkvD,EAAA,KAAAA,EAAA,GAAuCr6D,EAAvCq6D,EAAAn9E,OAAA,QAAAiuB,IAAAkvD,EAAA,GAAAA,EAAA,GAAqD,SAC9D5Z,EADS,CAAA6Z,EAAAltE,KAAA,eAAAktE,EAAAj8D,OAAA,UAEL,GAFK,UAMR2Q,EANQ,cAAA5vB,OAMsBqhE,EANtB,KAAArhE,OAMoCg7E,EANpC,KAAAh7E,OAMmD4gB,GAC7C,WAAhBA,EAPU,CAAAs6D,EAAAltE,KAAA,aAQNse,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAT9B,CAAAm+E,EAAAltE,KAAA,eAAAktE,EAAAj8D,OAAA,SAUH7d,EAAKgN,MAAMke,IAVR,cAAA4uD,EAAAltE,KAAA,GAcW5M,EAAK3E,MAAMogB,KAAKgC,IAAIiQ,WAAWuyC,GAd1C,aAcV9kC,EAdU2+C,EAAApqE,MAAA,CAAAoqE,EAAAltE,KAAA,YAiBRgtE,IACFz+C,EAAen7B,EAAKwQ,iBAAiB2qB,EAAc,MAGrDA,EAAen7B,EAAKgN,MAAMmuB,IAGRx/B,QAxBN,CAAAm+E,EAAAltE,KAAA,YAyBU,WAAhB4S,EAzBM,CAAAs6D,EAAAltE,KAAA,gBAAAktE,EAAAj8D,OAAA,SA0BD7d,EAAK8vB,8BAA8BtB,EAAe2M,IA1BjD,eAAA2+C,EAAAj8D,OAAA,SA4BDsd,GA5BC,eAAA2+C,EAAAj8D,OAAA,SAgCP,MAhCO,yBAAAi8D,EAAAhsE,SAAA6rE,EAAAx+E,SA9sLG,gBAAA4+E,GAAA,OAAAL,EAAA1rE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAgvLnB0yB,gBAhvLmB,eAAAmsD,EAAAx9E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgvLD,SAAA4tE,EAAOv/D,EAAculD,GAArB,IAAA2Z,EAAAp6D,EAAAgP,EAAAtD,EAAA5sB,EAAA47E,EAAAC,EAAA/pE,EAAA+qB,EAAAi/C,EAAAnsE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA4tE,GAAA,cAAAA,EAAA1tE,KAAA0tE,EAAAztE,MAAA,UAAiCgtE,IAAjCQ,EAAA19E,OAAA,QAAAiuB,IAAAyvD,EAAA,KAAAA,EAAA,GAAqD56D,EAArD46D,EAAA19E,OAAA,QAAAiuB,IAAAyvD,EAAA,GAAAA,EAAA,GAAmE,SAC9Ena,EADW,CAAAoa,EAAAztE,KAAA,eAAAytE,EAAAx8D,OAAA,UAEP,GAFO,UAMV2Q,EANU,gBAAA5vB,OAMsB8b,EANtB,KAAA9b,OAMsCqhE,EANtC,KAAArhE,OAMoDg7E,EANpD,KAAAh7E,OAMmE4gB,GAC/D,WAAhBA,EAPY,CAAA66D,EAAAztE,KAAA,aAQRse,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAT5B,CAAA0+E,EAAAztE,KAAA,eAAAytE,EAAAx8D,OAAA,SAUL7d,EAAKgN,MAAMke,IAVN,UAeMlrB,EAAKs0B,kBAAkB5Z,GAf7B,CAAA2/D,EAAAztE,KAAA,cAiBRtO,EAAc0B,EAAK+Q,gBAAgB,CAAC,QAAQ,SAAS2J,EAAa1J,iBAjB1D,CAAAqpE,EAAAztE,KAAA,gBAAAytE,EAAAztE,KAAA,GAmBN5M,EAAK3E,MAAM2oC,aAAatpB,EAAcpc,EAAY8J,QAASkyE,GAnBrD,QAAAD,EAAAztE,KAAA,wBAAAytE,EAAAx8D,OAAA,UAqBL,GArBK,eAAAw8D,EAAAztE,KAAA,GA4BNsQ,QAAQqD,IAAI,CACpBvgB,EAAKouD,iBAAiB1zC,GACtB1a,EAAK07B,mBAAmBhhB,EAAculD,EAAYzgD,KA9BpC,WAAA06D,EAAAG,EAAA3qE,KAAAyqE,EAAA39E,OAAA4yB,EAAA,EAAA5yB,CAAA09E,EAAA,GA0Bd9pE,EA1Bc+pE,EAAA,KA2Bdh/C,EA3Bcg/C,EAAA,KAAAE,EAAAztE,KAAA,YAkCVgtE,IACFz+C,EAAen7B,EAAKwQ,iBAAiB2qB,EAAc/qB,KAGrD+qB,EAAen7B,EAAKgN,MAAMmuB,IAGRx/B,QAzCJ,CAAA0+E,EAAAztE,KAAA,YA0CQ,WAAhB4S,EA1CQ,CAAA66D,EAAAztE,KAAA,gBAAAytE,EAAAx8D,OAAA,SA2CH7d,EAAK8vB,8BAA8BtB,EAAe2M,EAAc,KA3C7D,eAAAk/C,EAAAx8D,OAAA,SA6CHsd,GA7CG,QAAAk/C,EAAAztE,KAAA,iBAiDd5M,EAAKg0B,eAAe,gCAAiCtZ,GAjDvC,eAAA2/D,EAAAx8D,OAAA,SAmDT,MAnDS,yBAAAw8D,EAAAvsE,SAAAmsE,EAAA9+E,SAhvLC,gBAAAo/E,EAAAC,GAAA,OAAAR,EAAAhsE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAqyLnBs/E,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAAS5uD,OAAuB,CACzC4uD,EAAS5uD,SACT4uD,EAASC,kBAAkB,EAAG,OAC9B,IAAMxkB,EAAMhsC,SAASywD,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvBxkB,EAET,OAAO,GA7yLUh7D,KA+yLnB0/E,WAAa,SAACpkD,EAAKp7B,EAAO8H,GACxB,IAAM23E,EAAS3wD,SAASjtB,cAAc,UACtC49E,EAAOtxE,IAAMitB,EAGTp7B,GACFmB,OAAOC,KAAKpB,GAAOsB,QAAQ,SAACo+E,EAAM9yE,GAChC6yE,EAAOC,GAAQ1/E,EAAM0/E,KAID,oBAAb53E,IACL23E,EAAOE,WACTF,EAAOG,mBAAqB,WACA,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC3CF,EAAOG,mBAAqB,KAC5B93E,MAIJ23E,EAAOI,OAAS/3E,GAIf23E,EAAOj9E,IAAOssB,SAASC,eAAe0wD,EAAOj9E,KAChDssB,SAASgxD,KAAKC,YAAYN,IAx0LX3/E,KA20LnBkgF,YAAc,SAAApmD,GACZ,IACE7pB,KAAKkV,MAAM2U,GACX,MAAO/yB,GACP,OAAO,EAET,OAAO,GAj1LU/G,KAm1LnBy+B,aAAe,SAACxxB,GACd,QAAOA,GAAmD,OAAzCA,EAAQwnC,MAAM,wBAp1Ldz0C,KAs1LnBktE,oBAt1LmB,eAAAiT,EAAA9+E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAs1LG,SAAAkvE,EAAO7gE,GAAP,IAAA8E,EAAAgP,EAAAtD,EAAA+5C,EAAAuW,EAAAvtE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAgvE,GAAA,cAAAA,EAAA9uE,KAAA8uE,EAAA7uE,MAAA,UAAqB4S,EAArBg8D,EAAA9+E,OAAA,QAAAiuB,IAAA6wD,EAAA,GAAAA,EAAA,GAAmC,SACjDhtD,EADc,eAAA5vB,OACiB8b,EADjB,KAAA9b,OACiC4gB,KAC/C0L,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAHtB,CAAA8/E,EAAA7uE,KAAA,eAAA6uE,EAAA59D,OAAA,SAIX7d,EAAKgN,MAAMke,IAJA,cAAAuwD,EAAA7uE,KAAA,EAOM5M,EAAKkuB,oBAAoBxT,EAAc,cAAe,GAAI,GAAI8E,GAPpE,cAOdylD,EAPcwW,EAAA/rE,KAAA+rE,EAAA59D,OAAA,SAQb7d,EAAK8vB,8BAA8BtB,EAAey2C,IARrC,wBAAAwW,EAAA3tE,SAAAytE,EAAApgF,SAt1LH,gBAAAugF,GAAA,OAAAJ,EAAAttE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAg2LnB0zE,cAh2LmB,eAAA8M,EAAAn/E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAg2LH,SAAAuvE,EAAOlhE,GAAP,IAAA8E,EAAAgP,EAAAtD,EAAAtd,EAAAiuE,EAAA5tE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqvE,GAAA,cAAAA,EAAAnvE,KAAAmvE,EAAAlvE,MAAA,UAAqB4S,EAArBq8D,EAAAn/E,OAAA,QAAAiuB,IAAAkxD,EAAA,GAAAA,EAAA,GAAmC,SAC3CrtD,EADQ,cAAA5vB,OACsB8b,KAC9BwQ,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAH5B,CAAAmgF,EAAAlvE,KAAA,eAAAkvE,EAAAj+D,OAAA,SAIL7d,EAAKgN,MAAMke,IAJN,cAAA4wD,EAAAlvE,KAAA,EAOW5M,EAAKkuB,oBAAoBxT,EAAc,aAAc,GAAI,GAAI8E,GAPxE,cAOR5R,EAPQkuE,EAAApsE,KAAAosE,EAAAj+D,OAAA,SAQP7d,EAAK8vB,8BAA8BtB,EAAe5gB,EAAY,KARvD,wBAAAkuE,EAAAhuE,SAAA8tE,EAAAzgF,SAh2LG,gBAAA4gF,GAAA,OAAAJ,EAAA3tE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA02LnBugC,mBA12LmB,eAAAsgD,EAAAx/E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA02LE,SAAA4vE,EAAOvhE,EAActS,GAArB,IAAAoX,EAAAgP,EAAAtD,EAAAvd,EAAAuuE,EAAAjuE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0vE,GAAA,cAAAA,EAAAxvE,KAAAwvE,EAAAvvE,MAAA,UAA8B4S,EAA9B08D,EAAAx/E,OAAA,QAAAiuB,IAAAuxD,EAAA,GAAAA,EAAA,GAA4C,SAC/D9zE,EAAUA,GAAoBpI,EAAK3E,MAAMiD,YAAY4wB,KAAK9mB,QACpDomB,EAFa,aAAA5vB,OAEgB8b,EAFhB,KAAA9b,OAEgCwJ,EAFhC,KAAAxJ,OAE2C4gB,KACxD0L,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJvB,CAAAwgF,EAAAvvE,KAAA,eAAAuvE,EAAAt+D,OAAA,SAKV7d,EAAKgN,MAAMke,IALD,cAAAixD,EAAAvvE,KAAA,EAOG5M,EAAKkuB,oBAAoBxT,EAAc,YAAa,CAACtS,GAAU,GAAIoX,GAPtE,cAOb7R,EAPawuE,EAAAzsE,KAAAysE,EAAAt+D,OAAA,SAQZ7d,EAAK8vB,8BAA8BtB,EAAe7gB,EAAS,KAR/C,yBAAAwuE,EAAAruE,SAAAmuE,EAAA9gF,SA12LF,gBAAAihF,EAAAC,GAAA,OAAAL,EAAAhuE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo3LnBmhF,mBAp3LmB,eAAAC,EAAA//E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo3LE,SAAAmwE,EAAO9hE,EAActS,GAArB,OAAAwlB,EAAA3wB,EAAAwP,KAAA,SAAAgwE,GAAA,cAAAA,EAAA9vE,KAAA8vE,EAAA7vE,MAAA,cAAA6vE,EAAA7vE,KAAA,EACN5M,EAAK07B,mBAAmBhhB,EAActS,GADhC,cAAAq0E,EAAA5+D,OAAA,SAAA4+D,EAAA/sE,MAAA,wBAAA+sE,EAAA3uE,SAAA0uE,EAAArhF,SAp3LF,gBAAAuhF,EAAAC,GAAA,OAAAJ,EAAAvuE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu3LnByhF,QAv3LmB,eAAAC,EAAArgF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu3LT,SAAAywE,EAAOpiE,GAAP,IAAA8T,EAAAtD,EAAA0hC,EAAApe,EAAA,OAAA5gB,EAAA3wB,EAAAwP,KAAA,SAAAswE,GAAA,cAAAA,EAAApwE,KAAAowE,EAAAnwE,MAAA,UACF4hB,EADE,WAAA5vB,OACyB8b,KAC3BwQ,EAAalrB,EAAK6vB,8BAA8BrB,IAF9C,CAAAuuD,EAAAnwE,KAAA,eAAAmwE,EAAAl/D,OAAA,SAKuB,kBAAfqN,EAA0BA,EAAa9f,KAAKkV,MAAM4K,IAL1D,cAQRxQ,EAAeA,GAA8B1a,EAAK3E,MAAMiD,YAAY4wB,KAAK7wB,MARjE0+E,EAAAnwE,KAAA,EASW5M,EAAKkuB,oBAAoBxT,EAAc,WATlD,YASFkyC,EATEmwB,EAAArtE,MAAA,CAAAqtE,EAAAnwE,KAAA,gBAWA4hC,EAAS,CACboe,KAAMA,EAAK,GACXowB,UAAWpwB,EAAK,IAbZmwB,EAAAl/D,OAAA,SAeC7d,EAAK8vB,8BAA8BtB,EAAeggB,IAfnD,eAAAuuC,EAAAl/D,OAAA,SAiBD,MAjBC,yBAAAk/D,EAAAjvE,SAAAgvE,EAAA3hF,SAv3LS,gBAAA8hF,GAAA,OAAAJ,EAAA7uE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA04LnB+hF,gBA14LmB,eAAAC,EAAA3gF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA04LD,SAAA+wE,EAAO5iE,GAAP,IAAAO,EAAAsiE,EAAAC,EAAArvE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA8wE,GAAA,cAAAA,EAAA5wE,KAAA4wE,EAAA3wE,MAAA,cAAmBmO,EAAnBuiE,EAAA5gF,OAAA,QAAAiuB,IAAA2yD,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAA5gF,OAAA,QAAAiuB,IAAA2yD,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAA3wE,KAAA,EACH5M,EAAKkuB,oBAAoBluB,EAAK3E,MAAMiD,YAAY4wB,KAAK7wB,MAAOmc,EAAYO,EAAQsiE,GAAYn4B,MAAM,SAAAxnC,GAC7G1d,EAAKg0B,eAAe,yBAA0BtW,KAFhC,cAAA6/D,EAAA1/D,OAAA,SAAA0/D,EAAA7tE,MAAA,wBAAA6tE,EAAAzvE,SAAAsvE,EAAAjiF,SA14LC,gBAAAqiF,GAAA,OAAAL,EAAAnvE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+4LnB+4D,YA/4LmB,eAAAupB,EAAAjhF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+4LL,SAAAqxE,EAAOhjE,EAAcF,GAArB,IAAAmjE,EAAA5iE,EAAAsiE,EAAA5oD,EAAAmpD,EAAA3vE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAoxE,GAAA,cAAAA,EAAAlxE,KAAAkxE,EAAAjxE,MAAA,UAAiCmO,EAAjC6iE,EAAAlhF,OAAA,QAAAiuB,IAAAizD,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAAlhF,OAAA,QAAAiuB,IAAAizD,EAAA,GAAAA,EAAA,GAA2D,GACnEnpD,EAAWz0B,EAAKs0B,kBAAkB5Z,GAD1B,CAAAmjE,EAAAjxE,KAAA,eAIV5M,EAAKg0B,eAAe,sBAAuBtZ,GAJjCmjE,EAAAhgE,OAAA,SAKH,MALG,cAAAggE,EAAAjxE,KAAA,GAQC+wE,EAAAlpD,EAASsgB,SAAQv6B,GAAjBxM,MAAA2vE,EAAAnhF,OAAA0/B,EAAA,EAAA1/B,CAAgCue,IAAQm5C,YAAYmpB,GARrD,cAAAQ,EAAAhgE,OAAA,SAAAggE,EAAAnuE,MAAA,wBAAAmuE,EAAA/vE,SAAA4vE,EAAAviF,SA/4LK,gBAAA2iF,EAAAC,GAAA,OAAAN,EAAAzvE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAy5LnB8zC,aAz5LmB,eAAA+uC,EAAAxhF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAy5LJ,SAAA4xE,EAAO/jE,GAAP,IAAAuB,EAAAyiE,EAAAjwE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0xE,GAAA,cAAAA,EAAAxxE,KAAAwxE,EAAAvxE,MAAA,WACb6O,GAD4BA,EAAfyiE,EAAAxhF,OAAA,QAAAiuB,IAAAuzD,EAAA,GAAAA,EAAA,GAAsB,OACpBl+E,EAAK3E,MAAMogB,OACZA,EAAKgC,IAFN,CAAA0gE,EAAAvxE,KAAA,eAAAuxE,EAAAtgE,OAAA,SAGJ,MAHI,cAAAsgE,EAAAvxE,KAAA,EAKC,IAAIsQ,QAAJ,eAAAkhE,EAAA5hF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAAgyE,EAAO/gE,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA6xE,GAAA,cAAAA,EAAA3xE,KAAA2xE,EAAA1xE,MAAA,OACxB6O,EAAKgC,IAAI+3B,sBAAsBt7B,EAAQ,SAACwD,EAAK3Q,GACvC2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALc,wBAAAuxE,EAAAxwE,SAAAuwE,EAAAljF,SAAZ,gBAAAojF,EAAAC,GAAA,OAAAJ,EAAApwE,MAAA7S,KAAA8S,YAAA,IALD,cAAAkwE,EAAAtgE,OAAA,SAAAsgE,EAAAzuE,MAAA,wBAAAyuE,EAAArwE,SAAAmwE,EAAA9iF,SAz5LI,gBAAAsjF,GAAA,OAAAT,EAAAhwE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu6LnBujF,iBAv6LmB,eAAAC,EAAAniF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu6LA,SAAAuyE,EAAO7xE,EAAI8xE,EAASC,EAAYljC,GAAhC,IAAAhN,EAAAmwC,EAAA,OAAAnxD,EAAA3wB,EAAAwP,KAAA,SAAAuyE,GAAA,cAAAA,EAAAryE,KAAAqyE,EAAApyE,MAAA,UAEbgiC,EAAYgN,GAAYA,EAAShN,UAAYgN,EAAShN,UAAY,KAFrD,CAAAowC,EAAApyE,KAAA,eAAAoyE,EAAApyE,KAAA,EAKI,IAAIsQ,QAAJ,eAAA+hE,EAAAziF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAY,SAAA6yE,EAAO5hE,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA0yE,GAAA,cAAAA,EAAAxyE,KAAAwyE,EAAAvyE,MAAA,OAC7B5M,EAAK3E,MAAMogB,KAAKgC,IAAI+3B,sBAAsBzoC,EAAG9J,KAAM,SAACya,EAAK3Q,GACnD2Q,GACFH,EAAOG,GAETJ,EAAQvQ,KALmB,wBAAAoyE,EAAArxE,SAAAoxE,EAAA/jF,SAAZ,gBAAAikF,EAAAC,GAAA,OAAAJ,EAAAjxE,MAAA7S,KAAA8S,YAAA,IALJ,OAKf2gC,EALeowC,EAAAtvE,KAAA,UAgBZk/B,EAhBY,CAAAowC,EAAApyE,KAAA,eAAAoyE,EAAAnhE,OAAA,SAiBR,MAjBQ,WAoBXkhE,EAAoBnwC,EAAU/a,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAGsiC,OAAOtiC,EAAGsiC,OAAO3yC,OAAS,GAAG2L,gBAAhC,4BAAAzJ,OAA8EigF,MAExHniF,OAtBN,CAAAsiF,EAAApyE,KAAA,gBAAAoyE,EAAAnhE,OAAA,SAuBR,MAvBQ,eAAAmhE,EAAAryE,KAAA,GAAAqyE,EAAAnhE,OAAA,SA2BR,CACL+wB,EACA5uC,EAAK3E,MAAMogB,KAAKgC,IAAIwmB,IAAIqd,UAAUw9B,EAAYC,EAAkB,GAAGr5E,KAAMq5E,EAAkB,GAAG1vC,UA7BjF,eAAA2vC,EAAAryE,KAAA,GAAAqyE,EAAA1vD,GAAA0vD,EAAA,UAAAA,EAAAnhE,OAAA,SAgCR,MAhCQ,yBAAAmhE,EAAAlxE,SAAA8wE,EAAAzjF,KAAA,cAv6LA,gBAAAmkF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA3wE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA08LnBukF,gBAAkB,SAACC,GACjB,IAAMC,EAAmB5/E,EAAKgN,MAAMhN,EAAK+Q,gBAAgB,CAAC,UAAW,mBAAmB0O,IAAI,UAAUA,IAAI,OAC1G,OAAOzf,EAAKgN,MAAM2yE,GAAQlgE,IAAImgE,IA58LbzkF,KA88LnB83D,eA98LmBz2D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA88LF,SAAAwzE,IAAA,OAAAjyD,EAAA3wB,EAAAwP,KAAA,SAAAqzE,GAAA,cAAAA,EAAAnzE,KAAAmzE,EAAAlzE,MAAA,UACV5M,EAAK3E,MAAMogB,KADD,CAAAqkE,EAAAlzE,KAAA,eAAAkzE,EAAAjiE,OAAA,UAEN,GAFM,cAAAiiE,EAAAlzE,KAAA,EAIF5M,EAAK3E,MAAMogB,KAAKgC,IAAIw1C,iBAJlB,cAAA6sB,EAAAjiE,OAAA,SAAAiiE,EAAApwE,MAAA,wBAAAowE,EAAAhyE,SAAA+xE,EAAA1kF,SA98LEA,KAo9LnB+oC,aAp9LmB1nC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo9LJ,SAAA0zE,IAAA,IAAAvgE,EAAAgP,EAAAtD,EAAAyY,EAAAq8C,EAAAxmD,EAAAymD,EAAAhyE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAyzE,GAAA,cAAAA,EAAAvzE,KAAAuzE,EAAAtzE,MAAA,UAAO4S,EAAPygE,EAAAvjF,OAAA,QAAAiuB,IAAAs1D,EAAA,GAAAA,EAAA,GAAmB,SAC1BzxD,EADO,gBAAA5vB,OACyB4gB,KAChC0L,EAAalrB,EAAK6vB,8BAA8BrB,IAFzC,CAAA0xD,EAAAtzE,KAAA,eAAAszE,EAAAriE,OAAA,SAIJqN,GAJI,cAAAg1D,EAAAtzE,KAAA,EAOW5M,EAAK3E,MAAMogB,KAAKgC,IAAI0iE,SAAS3gE,GAPxC,YAOPmkB,EAPOu8C,EAAAxwE,MAAA,CAAAwwE,EAAAtzE,KAAA,gBAULozE,EAAkB,CACtB/8E,KAAK0gC,EAAU1gC,KACfvH,OAAOioC,EAAUjoC,OACjByU,UAAUwzB,EAAUxzB,WAEhBqpB,EAAuB,WAAhBha,EAA2Bxf,EAAK+Q,gBAAgB,CAAC,QAAQ,QAAU,KAChF/Q,EAAK8vB,8BAA8BtB,EAAewxD,EAAiBxmD,GAhBxD0mD,EAAAriE,OAAA,SAiBJ8lB,GAjBI,eAAAu8C,EAAAriE,OAAA,SAoBN,MApBM,yBAAAqiE,EAAApyE,SAAAiyE,EAAA5kF,SAp9LIA,KA0+LnB+3D,sBA1+LmB,eAAAktB,EAAA5jF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0+LK,SAAAg0E,EAAO3lE,EAAcF,GAArB,IAAAO,EAAA0Z,EAAAjG,EAAAtD,EAAAsO,EAAAunB,EAAAu/B,EAAAryE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA8zE,GAAA,cAAAA,EAAA5zE,KAAA4zE,EAAA3zE,MAAA,UAAiCmO,EAAjCulE,EAAA5jF,OAAA,QAAAiuB,IAAA21D,EAAA,GAAAA,EAAA,GAA0C,GAC3D5lE,EADiB,CAAA6lE,EAAA3zE,KAAA,eAAA2zE,EAAA1iE,OAAA,SAEb,MAFa,UAKhB4W,EAAWz0B,EAAKs0B,kBAAkB5Z,GALlB,CAAA6lE,EAAA3zE,KAAA,eAQpB5M,EAAKg0B,eAAe,sBAAuBtZ,GARvB6lE,EAAA1iE,OAAA,SASb,MATa,UAYhB2Q,EAZgB,yBAAA5vB,OAYyB8b,EAZzB,KAAA9b,OAYyC4b,EAZzC,KAAA5b,OAYuDwM,KAAKC,UAAU0P,MACtFmQ,EAAalrB,EAAK6vB,8BAA8BrB,IAbhC,CAAA+xD,EAAA3zE,KAAA,gBAAA2zE,EAAA1iE,OAAA,SAebqN,GAfa,eAmBlBsO,EAAMx5B,EAAK+Q,gBAAgB,CAAC,QAAQ,QACpCgK,EAAO83C,SAA8B,WAAnB93C,EAAO83C,UAC3Br5B,EAAM,MArBc+mD,EAAA3zE,KAAA,GAwBD6nB,EAAS+rD,cAAchmE,EAAYO,GAxBlC,eAwBhBgmC,EAxBgBw/B,EAAA7wE,KAAA6wE,EAAA1iE,OAAA,SA0Bf7d,EAAK8vB,8BAA8BtB,EAAeuyB,EAAQvnB,IA1B3C,yBAAA+mD,EAAAzyE,SAAAuyE,EAAAllF,SA1+LL,gBAAAslF,EAAAC,GAAA,OAAAN,EAAApyE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAugMnB4oC,6BAvgMmB,eAAA48C,EAAAnkF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAugMY,SAAAu0E,EAAOlmE,EAAcF,GAArB,IAAAgf,EAAAze,EAAAsiE,EAAA79D,EAAAgP,EAAAtD,EAAAsjB,EAAAqyC,EAAA5yE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAq0E,GAAA,cAAAA,EAAAn0E,KAAAm0E,EAAAl0E,MAAA,UAAiC4sB,EAAjCqnD,EAAAnkF,OAAA,QAAAiuB,IAAAk2D,EAAA,GAAAA,EAAA,GAAuC,IAAK9lE,EAA5C8lE,EAAAnkF,OAAA,QAAAiuB,IAAAk2D,EAAA,GAAAA,EAAA,GAAqD,GAAIxD,EAAzDwD,EAAAnkF,OAAA,QAAAiuB,IAAAk2D,EAAA,GAAAA,EAAA,GAAsE,GAAIrhE,EAA1EqhE,EAAAnkF,OAAA,QAAAiuB,IAAAk2D,EAAA,GAAAA,EAAA,GAAwF,SAC/GryD,EADuB,uBAAA5vB,OACgB8b,EADhB,KAAA9b,OACgC4b,EADhC,KAAA5b,OAC8CwM,KAAKC,UAAU0P,GAD7D,KAAAnc,OACwEwM,KAAKC,UAAUgyE,GADvF,KAAAz+E,OACsG4gB,KAC7H0L,EAAalrB,EAAK6vB,8BAA8BrB,IAFzB,CAAAsyD,EAAAl0E,KAAA,eAAAk0E,EAAAjjE,OAAA,SAIpBqN,GAJoB,aAQT,WAAhB1L,IACFga,EAAM,MATqBsnD,EAAAl0E,KAAA,GAYR5M,EAAKkuB,oBAAoBxT,EAAcF,EAAYO,EAAQsiE,EAAY79D,GAZ/D,eAYvBgvB,EAZuBsyC,EAAApxE,KAAAoxE,EAAAjjE,OAAA,SActB7d,EAAK8vB,8BAA8BtB,EAAeggB,EAAQhV,IAdpC,yBAAAsnD,EAAAhzE,SAAA8yE,EAAAzlF,SAvgMZ,gBAAA4lF,EAAAC,GAAA,OAAAL,EAAA3yE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAwhMnB4rC,0BAxhMmB,eAAAk6C,EAAAzkF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwhMS,SAAA60E,EAAOxmE,EAAcF,GAArB,IAAAO,EAAAsiE,EAAA79D,EAAAga,EAAAhL,EAAAtD,EAAAsjB,EAAA2yC,EAAAlzE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA20E,GAAA,cAAAA,EAAAz0E,KAAAy0E,EAAAx0E,MAAA,UAAiCmO,EAAjComE,EAAAzkF,OAAA,QAAAiuB,IAAAw2D,EAAA,GAAAA,EAAA,GAA0C,GAAI9D,EAA9C8D,EAAAzkF,OAAA,QAAAiuB,IAAAw2D,EAAA,GAAAA,EAAA,GAA2D,GAAI3hE,EAA/D2hE,EAAAzkF,OAAA,QAAAiuB,IAAAw2D,EAAA,GAAAA,EAAA,GAA6E,SAAU3nD,EAAvF2nD,EAAAzkF,OAAA,QAAAiuB,IAAAw2D,EAAA,GAAAA,EAAA,GAA6F,IACjH3yD,EADoB,uBAAA5vB,OACmB8b,EADnB,KAAA9b,OACmC4b,EADnC,KAAA5b,OACiDwM,KAAKC,UAAU0P,GADhE,KAAAnc,OAC2EwM,KAAKC,UAAUgyE,GAD1F,KAAAz+E,OACyG4gB,KAC7H0L,EAAalrB,EAAK6vB,8BAA8BrB,IAF5B,CAAA4yD,EAAAx0E,KAAA,eAAAw0E,EAAAvjE,OAAA,SAIjBqN,GAJiB,aAQN,WAAhB1L,IACFga,EAAM,MATkB4nD,EAAAx0E,KAAA,GAcL5M,EAAKkuB,oBAAoBxT,EAAcF,EAAYO,EAAQsiE,EAAY79D,GAdlE,eAcpBgvB,EAdoB4yC,EAAA1xE,KAAA0xE,EAAAvjE,OAAA,SAgBnB7d,EAAK8vB,8BAA8BtB,EAAeggB,EAAQhV,IAhBvC,yBAAA4nD,EAAAtzE,SAAAozE,EAAA/lF,SAxhMT,gBAAAkmF,EAAAC,GAAA,OAAAL,EAAAjzE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA2iMnBomF,mBA3iMmB,eAAAC,EAAAhlF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2iME,SAAAo1E,EAAO/mE,EAAcF,GAArB,IAAAO,EAAAsiE,EAAA79D,EAAAga,EAAAkoD,EAAAzzE,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAk1E,GAAA,cAAAA,EAAAh1E,KAAAg1E,EAAA/0E,MAAA,cAAiCmO,EAAjC2mE,EAAAhlF,OAAA,QAAAiuB,IAAA+2D,EAAA,GAAAA,EAAA,GAA0C,GAAIrE,EAA9CqE,EAAAhlF,OAAA,QAAAiuB,IAAA+2D,EAAA,GAAAA,EAAA,GAA2D,GAAIliE,EAA/DkiE,EAAAhlF,OAAA,QAAAiuB,IAAA+2D,EAAA,GAAAA,EAAA,GAA6E,SAAUloD,EAAvFkoD,EAAAhlF,OAAA,QAAAiuB,IAAA+2D,EAAA,GAAAA,EAAA,GAA6F,IAA7FC,EAAA/0E,KAAA,EACN5M,EAAK+mC,0BAA0BrsB,EAAcF,EAAYO,EAAQsiE,EAAY79D,EAAaga,GADpF,cAAAmoD,EAAA9jE,OAAA,SAAA8jE,EAAAjyE,MAAA,wBAAAiyE,EAAA7zE,SAAA2zE,EAAAtmF,SA3iMF,gBAAAymF,EAAAC,GAAA,OAAAL,EAAAxzE,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+iMnB+yB,oBA/iMmB,eAAA4zD,EAAAtlF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+iMG,SAAA01E,EAAOrnE,EAAcF,GAArB,IAAAO,EAAAsiE,EAAA79D,EAAAiV,EAAAutD,EAAAh8E,EAAAi8E,EAAAh0E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAy1E,GAAA,cAAAA,EAAAv1E,KAAAu1E,EAAAt1E,MAAA,UAAiCmO,EAAjCknE,EAAAvlF,OAAA,QAAAiuB,IAAAs3D,EAAA,GAAAA,EAAA,GAA0C,GAAI5E,EAA9C4E,EAAAvlF,OAAA,QAAAiuB,IAAAs3D,EAAA,GAAAA,EAAA,GAA2D,GAAIziE,EAA/DyiE,EAAAvlF,OAAA,QAAAiuB,IAAAs3D,EAAA,GAAAA,EAAA,GAA6E,SAA7EA,EAAAvlF,OAAA,QAAAiuB,IAAAs3D,EAAA,GAAAA,EAAA,GAA+F,EAE9GvnE,EAFe,CAAAwnE,EAAAt1E,KAAA,eAAAs1E,EAAArkE,OAAA,SAGX,MAHW,UAMd4W,EAAWz0B,EAAKs0B,kBAAkB5Z,GANpB,CAAAwnE,EAAAt1E,KAAA,gBASlB5M,EAAKkf,UAAU,sBAAuBxE,GATpBwnE,EAAArkE,OAAA,SAUX,MAVW,WAaf4W,EAASsgB,QAAQv6B,GAbF,CAAA0nE,EAAAt1E,KAAA,gBAclB5M,EAAKkf,UAAU,oBAAqB1E,GAdlB0nE,EAAArkE,OAAA,SAeX,MAfW,eAkBpB2B,EAA8B,WAAhBA,GAA4BA,IAAgB7jB,MAAM6jB,GAAenS,SAASmS,GAAeA,EAlBnF0iE,EAAAv1E,KAAA,GAAAu1E,EAAAt1E,KAAA,IAsBEo1E,EAAAvtD,EAASsgB,SAAQv6B,GAAjBxM,MAAAg0E,EAAAxlF,OAAA0/B,EAAA,EAAA1/B,CAAgCue,IAAQk6B,KAAKooC,EAAY79D,GAAa0lC,MAAM,SAAA9qC,GAC9Fpa,EAAKkf,UAAL,GAAAtgB,OAAkB8b,EAAlB,qBAAA9b,OAAkD4b,EAAlD,YAAwEJ,KAvBxD,eAsBZpU,EAtBYk8E,EAAAxyE,KAAAwyE,EAAArkE,OAAA,SA6BX7X,GA7BW,QAAAk8E,EAAAv1E,KAAA,GAAAu1E,EAAA5yD,GAAA4yD,EAAA,UAgClBliF,EAAKkf,UAAU,4BAAfgjE,EAAA5yD,IAhCkB,yBAAA4yD,EAAAp0E,SAAAi0E,EAAA5mF,KAAA,cA/iMH,gBAAAgnF,EAAAC,GAAA,OAAAN,EAAA9zE,MAAA7S,KAAA8S,YAAA,GAAA9S,KAslMnB8Q,aAtlMmB,eAAAo2E,EAAA7lF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAslMJ,SAAAi2E,EAAOt7B,EAAO7jD,GAAd,IAAAo/E,EAAA91D,EAAAtrB,EAAAqhF,EAAAv0E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAg2E,GAAA,cAAAA,EAAA91E,KAAA81E,EAAA71E,MAAA,UAAwB21E,IAAxBC,EAAA9lF,OAAA,QAAAiuB,IAAA63D,EAAA,KAAAA,EAAA,GACT/1D,EAAS,IACT81D,EAFS,CAAAE,EAAA71E,KAAA,eAAA61E,EAAA71E,KAAA,EAGIsQ,QAAQqD,IAAIymC,EAAM5oD,IAAI,SAACu2B,EAAGxzB,GACvC,OAAOgC,EAASwxB,EAAGxzB,EAAO6lD,MAJjB,OAGXv6B,EAHWg2D,EAAA/yE,KAAA+yE,EAAA71E,KAAA,gBAOFzL,EAAQ,EAPN,YAOSA,EAAQ6lD,EAAMtqD,QAPvB,CAAA+lF,EAAA71E,KAAA,gBAAA61E,EAAAnzD,GAQT7C,EARSg2D,EAAA71E,KAAA,GAQSzJ,EAAS6jD,EAAM7lD,GAAQA,EAAO6lD,GARvC,QAAAy7B,EAAAtuC,GAAAsuC,EAAA/yE,KAAA+yE,EAAAnzD,GAQF5mB,KAREusC,KAAAwtC,EAAAnzD,GAAAmzD,EAAAtuC,IAAA,QAO+BhzC,IAP/BshF,EAAA71E,KAAA,uBAAA61E,EAAA5kE,OAAA,SAWN4O,GAXM,yBAAAg2D,EAAA30E,SAAAw0E,EAAAnnF,SAtlMI,gBAAAunF,EAAAC,GAAA,OAAAN,EAAAr0E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmmMnB6rC,QAAU,SAACC,GACT,OAAOjnC,EAAKgN,MAAOhN,EAAKgN,MAAM,GAAGQ,KAAKxN,EAAKgN,MAAMi6B,GAAKxnB,IAAI,MAAOk+C,IAAI,KAAKlwD,MAAM,GAAGhF,QAAQ,MApmM1EtN,KAsmMnBynF,iBAtmMmB,eAAAC,EAAArmF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsmMA,SAAAy2E,EAAOxkF,GAAP,IAAAykF,EAAA,OAAAn1D,EAAA3wB,EAAAwP,KAAA,SAAAu2E,GAAA,cAAAA,EAAAr2E,KAAAq2E,EAAAp2E,MAAA,cAAAo2E,EAAAp2E,KAAA,EACS5M,EAAKs8E,mBAAmBh+E,EAAYD,MAAOC,EAAY4wB,KAAK9mB,SADrE,cACb26E,EADaC,EAAAtzE,QAGfqzE,EAAgB/iF,EAAKwQ,iBAAiBuyE,EAAezkF,EAAYtC,WAHlDgnF,EAAAnlE,OAAA,SAKVklE,GALU,wBAAAC,EAAAl1E,SAAAg1E,EAAA3nF,SAtmMA,gBAAA8nF,GAAA,OAAAJ,EAAA70E,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6mMnB6yE,aA7mMmB,eAAAkV,EAAA1mF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6mMJ,SAAA82E,EAAO7kF,GAAP,IAAAolE,EAAAl1C,EAAAtD,EAAA0D,EAAAE,EAAAs0D,EAAAn1E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA42E,GAAA,cAAAA,EAAA12E,KAAA02E,EAAAz2E,MAAA,UAAoB82D,IAApB0f,EAAA1mF,OAAA,QAAAiuB,IAAAy4D,EAAA,KAAAA,EAAA,GAEP50D,EAFO,aAAA5vB,OAEsBN,EAAY4wB,KAAK9mB,QAFvC,KAAAxJ,OAEkD8kE,KACzDx4C,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJ7B,CAAA0nF,EAAAz2E,KAAA,eAAAy2E,EAAAxlE,OAAA,SAKJ7d,EAAKgN,MAAMke,IALP,cAAAm4D,EAAAz2E,KAAA,EAQiB5M,EAAKgF,mBAAmB1G,GAAa,EAAOolE,GAR7D,YAQP90C,EAROy0D,EAAA3zE,QASUkf,EAAgBa,0BAT1B,CAAA4zD,EAAAz2E,KAAA,YAULkiB,EAAYF,EAAgBa,0BAC7BzvB,EAAKgN,MAAM8hB,GAAWnzB,QAXhB,CAAA0nF,EAAAz2E,KAAA,gBAAAy2E,EAAAxlE,OAAA,SAYF7d,EAAK8vB,8BAA8BtB,EAAeM,IAZhD,eAAAu0D,EAAAxlE,OAAA,SAgBN,MAhBM,yBAAAwlE,EAAAv1E,SAAAq1E,EAAAhoF,SA7mMI,gBAAAmoF,GAAA,OAAAJ,EAAAl1E,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+nMnBooF,mBA/nMmB,eAAAC,EAAAhnF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+nME,SAAAo3E,EAAOnlF,GAAP,IAAAsuD,EAAA7Y,EAAA2vC,EAAA,OAAA91D,EAAA3wB,EAAAwP,KAAA,SAAAk3E,GAAA,cAAAA,EAAAh3E,KAAAg3E,EAAA/2E,MAAA,UACdtO,EAAY4wB,KADE,CAAAy0D,EAAA/2E,KAAA,eAAA+2E,EAAA9lE,OAAA,UAEV,GAFU,cAAA8lE,EAAA/2E,KAAA,EAKA5M,EAAK48E,QAAQt+E,EAAY4wB,KAAK7wB,OAL9B,UAKbuuD,EALa+2B,EAAAj0E,OAMbqkC,EAAqB6Y,EAAOA,EAAKowB,UAAY,MANhC,CAAA2G,EAAA/2E,KAAA,gBAAA+2E,EAAA/2E,KAAA,EAQc5M,EAAKiM,aAAa8nC,EAAlB,eAAA6vC,EAAApnF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAsC,SAAAw3E,EAAO17E,EAAchH,GAArB,OAAAysB,EAAA3wB,EAAAwP,KAAA,SAAAq3E,GAAA,cAAAA,EAAAn3E,KAAAm3E,EAAAl3E,MAAA,cAAAk3E,EAAAl3E,KAAA,EACtD5M,EAAKkuB,oBAAoB5vB,EAAY4wB,KAAK7wB,MAAO,kBAAmB,CAAC8C,IADf,cAAA2iF,EAAAjmE,OAAA,SAAAimE,EAAAp0E,MAAA,wBAAAo0E,EAAAh2E,SAAA+1E,EAAA1oF,SAAtC,gBAAA4oF,EAAAC,GAAA,OAAAJ,EAAA51E,MAAA7S,KAAA8S,YAAA,IARd,cAQXy1E,EARWC,EAAAj0E,KAAAi0E,EAAA9lE,OAAA,SAWVk2B,EAAmB3S,OAAO,SAACmwB,EAAiBppD,EAAchH,GAE/D,OADAowD,EAAgBppD,EAAaE,eAAiBq7E,EAAiBviF,GACxDowD,GACN,KAdc,eAAAoyB,EAAA9lE,OAAA,SAiBZ,IAjBY,yBAAA8lE,EAAA71E,SAAA21E,EAAAtoF,SA/nMF,gBAAA8oF,GAAA,OAAAT,EAAAx1E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAkpMnB6J,mBAlpMmB,eAAAk/E,EAAA1nF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAkpME,SAAA83E,EAAO7lF,GAAP,IAAA8lF,EAAA1gB,EAAAl1C,EAAAtD,EAAA0D,EAAA/pB,EAAAC,EAAAu/E,EAAAC,EAAAvB,EAAAn1E,EAAA2jD,EAAA1gD,EAAAo0D,EAAAsf,EAAA3/E,EAAA4/E,EAAAv2E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAg4E,GAAA,cAAAA,EAAA93E,KAAA83E,EAAA73E,MAAA,UAAoBw3E,EAApBI,EAAA9nF,OAAA,QAAAiuB,IAAA65D,EAAA,IAAAA,EAAA,GAA2C9gB,IAA3C8gB,EAAA9nF,OAAA,QAAAiuB,IAAA65D,EAAA,KAAAA,EAAA,GAEdlmF,EAAY4wB,KAFE,CAAAu1D,EAAA73E,KAAA,eAAA63E,EAAA5mE,OAAA,UAGV,GAHU,UAOb2Q,EAPa,mBAAA5vB,OAOsBN,EAAY4wB,KAAK9mB,QAPvC,KAAAxJ,OAOkD8kE,GAElD,QADbx4C,EAAalrB,EAAKiuC,cAAczf,IARnB,CAAAi2D,EAAA73E,KAAA,eAAA63E,EAAA5mE,OAAA,SAUVqN,GAVU,cAab0D,EAAkB,CACtB8/B,OAAQ,KACRq0B,cAAe,KACfn+E,gBAAiB,KACjBC,qBAAsB,KACtBC,yBAA0B,KAC1B4/E,yBAA0B,KAC1Bj1D,0BAA2B,KAC3Bk1D,mCAAoC,MAGhC9/E,EAAuB,GACvBC,EAA2B,GAzBd2/E,EAAA73E,KAAA,GAkCTsQ,QAAQqD,IAAI,CACpBvgB,EAAK4iF,iBAAiBtkF,GACtB0B,EAAKy9B,kBAAkBn/B,GACvB0B,EAAKujF,mBAAmBjlF,GACxB0B,EAAK4kF,uBAAuBtmF,GAAa,GACzC0B,EAAKuvE,mBAAmBjxE,EAAY4wB,KAAK7wB,OACzCqlE,EAAe1jE,EAAK6kF,qBAAqBvmF,EAAY4wB,KAAK9mB,SAAW,OAxCpD,eAAAi8E,EAAAI,EAAA/0E,KAAA40E,EAAA9nF,OAAA4yB,EAAA,EAAA5yB,CAAA6nF,EAAA,GA4BjBtB,EA5BiBuB,EAAA,GA6BjB12E,EA7BiB02E,EAAA,GA8BjB/yB,EA9BiB+yB,EAAA,GA+BjBzzE,EA/BiByzE,EAAA,GAgCjBrf,EAhCiBqf,EAAA,GAiCjBC,EAjCiBD,EAAA,GA2Cb1/E,EAAkB5E,EAAKwQ,iBAAiBy0D,EAAa,IAAIz8D,MAAMoF,GAAYH,MAAMs1E,GAEnFxxB,GACF/0D,OAAOC,KAAK80D,GAAiB50D,QAAQ,SAACwL,GACpC,IAAMH,EAAe1J,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAIA,EAAEwL,QAAQC,gBAAkBF,EAAaE,gBAC9F,GAAIL,GAAgBA,EAAainB,QAAS,CACxC,IAAM61D,EAAyB9kF,EAAKgN,MAAMukD,EAAgBppD,IAAesX,IAAI,KACvEslE,EAAqBngF,EAAgB4D,MAAMs8E,GACjDjgF,EAAqBsD,EAAaE,eAAiB08E,EACnDjgF,EAAyBqD,EAAaE,eAAiBy8E,KAK7Dl2D,EAAgBm0D,cAAgB/iF,EAAKgN,MAAM,GAC3C4hB,EAAgBa,0BAA4B7qB,EAExCm+E,IACFn0D,EAAgBm0D,cAAgBA,EAChCn0D,EAAgBa,0BAA4Bb,EAAgBa,0BAA0BjiB,KAAKu1E,IAG7Fn0D,EAAgBhqB,gBAAkBA,EAClCgqB,EAAgB/pB,qBAAuBA,EACvC+pB,EAAgB9pB,yBAA2BA,EAGvCy/E,GAAqBA,EAAkBp9C,QACrCt2B,IACF0zE,EAAkBp9C,MAAQo9C,EAAkBp9C,MAAM1nB,IAAI5O,IAIxD+d,EAAgBa,0BAA4Bb,EAAgBa,0BAA0BjiB,KAAK+2E,EAAkBp9C,QAG/GvY,EAAgB81D,yBAA2B91D,EAAgBhqB,gBAC3DgqB,EAAgB+1D,mCAAqC/1D,EAAgBa,0BAEjE5e,IACF+d,EAAgB81D,yBAA2B91D,EAAgB81D,yBAAyBl8E,MAAMqI,GAC1F+d,EAAgB+1D,mCAAqC/1D,EAAgB+1D,mCAAmCn8E,MAAMqI,IAG5GuzE,IACFx1D,EAAgB8/B,OAAS1uD,EAAK0xB,UAAU0yD,EAAev/E,EAAsBD,IAxF5D6/E,EAAA5mE,OAAA,SA+FZ7d,EAAKmrB,cAAcqD,EAAeI,IA/FtB,yBAAA61D,EAAA32E,SAAAq2E,EAAAhpF,SAlpMF,gBAAA6pF,GAAA,OAAAd,EAAAl2E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmvMnB8pF,2BAnvMmB,eAAAC,EAAA1oF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmvMU,SAAA84E,EAAOzqE,GAAP,IAAA0qE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvgB,EAAAwgB,EAAAC,EAAA72D,EAAA82D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAt4D,EAAA3wB,EAAAwP,KAAA,SAAA05E,GAAA,cAAAA,EAAAx5E,KAAAw5E,EAAAv5E,MAAA,cAAAu5E,EAAAv5E,KAAA,EAMjBsQ,QAAQqD,IAAI,CACpBvgB,EAAK+mC,0BAA0BrsB,EAAc,UAC7C1a,EAAK+mC,0BAA0BrsB,EAAc,UAC7C1a,EAAK+mC,0BAA0BrsB,EAAc,eAC7C1a,EAAKqoE,oBAAoB3tD,KAVA,UAAA0qE,EAAAe,EAAAz2E,KAAA21E,EAAA7oF,OAAA4yB,EAAA,EAAA5yB,CAAA4oF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBpgB,EALyBogB,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBvgB,GAb7B,CAAAkhB,EAAAv5E,KAAA,gBAcnB64E,EAAgB,CACpBr9E,QAASk9E,GAELI,EAAgB,CACpBt9E,QAASm9E,GAEL12D,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UArBhBu/C,EAAAv5E,KAAA,GA2BfsQ,QAAQqD,IAAI,CACpBvgB,EAAKomF,2BAA2Bv3D,EAAgB42D,GAChDzlF,EAAKomF,2BAA2Bv3D,EAAgB62D,KA7BzB,WAAAC,EAAAQ,EAAAz2E,KAAAk2E,EAAAppF,OAAA4yB,EAAA,EAAA5yB,CAAAmpF,EAAA,GAyBvBE,EAzBuBD,EAAA,GA0BvBE,EA1BuBF,EAAA,IAgCrBC,IAAgBC,EAhCK,CAAAK,EAAAv5E,KAAA,gBAoCjBm5E,EAAcF,EAAar9E,MAAMxI,EAAKwQ,iBAAiBg1E,EAAa,GAAI,KACxEQ,EAAcF,EAAat9E,MAAMxI,EAAKwQ,iBAAiBg1E,EAAa,GAAI,KAExES,EAAgBF,EAAYv4E,KAAKw4E,GACjCE,EAAiBD,EAAcxmE,IAAIzf,EAAKwQ,iBAAiBy0D,EAAa,KAxCrDkhB,EAAAtoE,OAAA,SA4ChBqoE,GA5CgB,eAAAC,EAAAtoE,OAAA,SAgDpB,MAhDoB,yBAAAsoE,EAAAr4E,SAAAq3E,EAAAhqF,SAnvMV,gBAAAkrF,GAAA,OAAAnB,EAAAl3E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAqyMnBirF,2BAryMmB,eAAAE,EAAA9pF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqyMU,SAAAk6E,EAAOC,EAAiBC,GAAxB,IAAAj4D,EAAAtD,EAAAw7D,EAAAC,EAAAzlF,EAAAi1D,EAAA52B,EAAA,OAAA3R,EAAA3wB,EAAAwP,KAAA,SAAAm6E,GAAA,cAAAA,EAAAj6E,KAAAi6E,EAAAh6E,MAAA,UAGrB4hB,EAHqB,2BAAA5vB,OAGsB4nF,EAAgBp+E,QAHtC,KAAAxJ,OAGiD6nF,EAAgBr+E,WACtF8iB,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QALf,CAAAirF,EAAAh6E,KAAA,eAAAg6E,EAAA/oE,OAAA,SAMlB7d,EAAKgN,MAAMke,IANO,cAAA07D,EAAAj6E,KAAA,EAUnB+5E,EAAW1mF,EAAKs0B,kBAAkB,QAAQsS,SAC1C+/C,EAAM3mF,EAAK0vD,uBAAuB,KAElCxuD,EAAO,IACRwH,KAAK89E,EAAgBp+E,SAGtBs+E,EAASr+E,gBAAkBm+E,EAAgBp+E,QAAQC,eAAiBq+E,EAASr+E,gBAAkBo+E,EAAgBr+E,QAAQC,eACzHnH,EAAKwH,KAAKg+E,GAEZxlF,EAAKwH,KAAK+9E,EAAgBr+E,SApBDw+E,EAAAh6E,KAAA,GAsBP5M,EAAKkuB,oBAAoB,kBAAmB,eAAgB,CAACy4D,EAAIl+E,UAAWvH,IAtBrE,aAsBnBi1D,EAtBmBywB,EAAAl3E,MAAA,CAAAk3E,EAAAh6E,KAAA,gBA2BjB2yB,EAAQv/B,EAAKgN,MAAMmpD,EAAI,IAAI12C,IAAIknE,GA3BdC,EAAA/oE,OAAA,SA4BhB7d,EAAK8vB,8BAA8BtB,EAAe+Q,IA5BlC,eAAAqnD,EAAA/oE,OAAA,SA8BlB,MA9BkB,eAAA+oE,EAAAj6E,KAAA,GAAAi6E,EAAAt3D,GAAAs3D,EAAA,SAAAA,EAAA/oE,OAAA,SAgClB,MAhCkB,yBAAA+oE,EAAA94E,SAAAy4E,EAAAprF,KAAA,aAryMV,gBAAA0rF,EAAAC,GAAA,OAAAR,EAAAt4E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAw0MnBk0B,yBAx0MmB,eAAA03D,EAAAvqF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAw0MQ,SAAA26E,EAAOR,EAAiBC,GAAxB,IAAAjnE,EAAAynE,EAAAz4D,EAAAtD,EAAAw7D,EAAAC,EAAAzlF,EAAAgmF,EAAA3nD,EAAA/F,EAAA2tD,EAAAl5E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA26E,GAAA,cAAAA,EAAAz6E,KAAAy6E,EAAAx6E,MAAA,UAAyC4S,EAAzC2nE,EAAAzqF,OAAA,QAAAiuB,IAAAw8D,EAAA,GAAAA,EAAA,GAAqD,SAAUF,IAA/DE,EAAAzqF,OAAA,QAAAiuB,IAAAw8D,EAAA,KAAAA,EAAA,GAErBV,EAAgBY,mBAClBZ,EAAkBjqF,OAAOuB,OAAO,GAAI0oF,IACpBr+E,QAAUq+E,EAAgBY,iBAItC74D,EARmB,yBAAA5vB,OAQsB4nF,EAAgBp+E,QARtC,KAAAxJ,OAQiD6nF,EAAgBr+E,QARjE,KAAAxJ,OAQ4E4gB,KAC/F0L,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAVjB,CAAAyrF,EAAAx6E,KAAA,eAAAw6E,EAAAvpE,OAAA,SAWhB7d,EAAKgN,MAAMke,IAXK,cAAAk8D,EAAAz6E,KAAA,EAejB+5E,EAAW1mF,EAAKs0B,kBAAkB,QAAQsS,SAC1C+/C,EAAM3mF,EAAK0vD,uBAAuB,KAElCxuD,EAAO,IACRwH,KAAK89E,EAAgBp+E,SAEtB6+E,GAAWP,EAASr+E,gBAAkBm+E,EAAgBp+E,QAAQC,eAAiBq+E,EAASr+E,gBAAkBo+E,EAAgBr+E,QAAQC,eACpInH,EAAKwH,KAAKg+E,GAEZxlF,EAAKwH,KAAK+9E,EAAgBr+E,SAxBHg/E,EAAAx6E,KAAA,GA0BF5M,EAAKkuB,oBAAoB,gBAAiB,eAAgB,CAACy4D,EAAIl+E,UAAWvH,GAAO,GAAIse,GA1BnF,aA0BjB0nE,EA1BiBE,EAAA13E,MAAA,CAAA03E,EAAAx6E,KAAA,gBA6Bf2yB,EAAQv/B,EAAKgN,MAAMk6E,EAAO,IAAIznE,IAAIknE,GAClCntD,EAAsB,WAAhBha,EAA2Bxf,EAAK+Q,gBAAgB,CAAC,QAAQ,QAAU,KA9B1Dq2E,EAAAvpE,OAAA,SA+Bd7d,EAAK8vB,8BAA8BtB,EAAe+Q,EAAO/F,IA/B3C,eAAA4tD,EAAAvpE,OAAA,SAiChB,MAjCgB,eAAAupE,EAAAz6E,KAAA,GAAAy6E,EAAA93D,GAAA83D,EAAA,SAAAA,EAAAvpE,OAAA,SAmChB,MAnCgB,yBAAAupE,EAAAt5E,SAAAk5E,EAAA7rF,KAAA,aAx0MR,gBAAAmsF,EAAAC,GAAA,OAAAR,EAAA/4E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAo4MnBqsF,wBAp4MmB,eAAAC,EAAAjrF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAo4MO,SAAAq7E,EAAO77E,GAAP,IAAAP,EAAA0zB,EAAA2oD,EAAAC,EAAAC,EAAA55E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAq7E,GAAA,cAAAA,EAAAn7E,KAAAm7E,EAAAl7E,MAAA,UAAgBtB,EAAhBu8E,EAAAnrF,OAAA,QAAAiuB,IAAAk9D,EAAA,GAAAA,EAAA,GAAgC,GACxDh8E,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,QAEpCP,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKuD,EAAK3E,MAAMsQ,kBAGpCE,GAAYP,GAAkBA,EAAc5O,OAPzB,CAAAorF,EAAAl7E,KAAA,eAAAk7E,EAAAjqE,OAAA,SAQf,IARe,cAAAiqE,EAAAl7E,KAAA,EAWD5M,EAAKo/B,YAAYvzB,EAAS,EAAG,SAAUP,GAXtC,OAWlB0zB,EAXkB8oD,EAAAp4E,KAalBi4E,EAAqB,GACvBC,EAAuB5nF,EAAKgN,MAAM,GAItCgyB,EAASriC,QAAQ,SAAAoQ,GAEf,IAAMwpC,EAAYxpC,EAAGwpC,UACf1oC,EAAa7N,EAAKgN,MAAMD,EAAGc,YAMjC,OAJK85E,EAAmBpxC,KACtBoxC,EAAmBpxC,GAAav2C,EAAKgN,MAAM,IAGrCD,EAAGE,QACT,IAAK,UACL,IAAK,aACH06E,EAAmBpxC,GAAaoxC,EAAmBpxC,GAAW/oC,KAAKK,GACnE,MACF,IAAK,WACL,IAAK,cACCA,EAAW+C,GAAG+2E,EAAmBpxC,MACnCqxC,EAAuBA,EAAqBp6E,KAAKK,EAAWJ,MAAMk6E,EAAmBpxC,MAEvFoxC,EAAmBpxC,GAAaoxC,EAAmBpxC,GAAW9oC,MAAMI,GAChE85E,EAAmBpxC,GAAW7oC,GAAG,KACnCi6E,EAAmBpxC,GAAav2C,EAAKgN,MAAM,IAU7C46E,EAAqBh3E,GAAG,IAC1BpU,OAAOC,KAAKkrF,GAAoBhrF,QAAQ,SAAA0B,GACtC,IAAM88B,EAAewsD,EAAmBtpF,GACpC88B,GAAgBA,EAAavqB,GAAG,KAC9BuqB,EAAavqB,GAAGg3E,GAClBD,EAAmBtpF,GAASspF,EAAmBtpF,GAAOoP,MAAMm6E,IAE5DA,EAAuBA,EAAqBn6E,MAAMk6E,EAAmBtpF,IACrEspF,EAAmBtpF,GAAS,QAzDd,yBAAAypF,EAAAh6E,SAAA45E,EAAAvsF,SAp4MP,gBAAA4sF,GAAA,OAAAN,EAAAz5E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAs8MnB6sF,2BAt8MmB,eAAAC,EAAAzrF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAs8MU,SAAA67E,EAAOC,EAASC,GAAhB,IAAA9vC,EAAA+vC,EAAA,OAAAz6D,EAAA3wB,EAAAwP,KAAA,SAAA67E,GAAA,cAAAA,EAAA37E,KAAA27E,EAAA17E,MAAA,cAAA07E,EAAA17E,KAAA,EACK5M,EAAKuoF,0BADV,YACrBjwC,EADqBgwC,EAAA54E,MAAA,CAAA44E,EAAA17E,KAAA,eAAA07E,EAAA17E,KAAA,EAGG5M,EAAKkuB,oBAAoBoqB,EAAkB11C,KAAM,6BAA8B,CAACulF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAA54E,KAAA44E,EAAAzqE,OAAA,SAKlBwqE,GALkB,cAAAC,EAAAzqE,OAAA,SAOpB,MAPoB,wBAAAyqE,EAAAx6E,SAAAo6E,EAAA/sF,SAt8MV,gBAAAqtF,EAAAC,GAAA,OAAAR,EAAAj6E,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+8MnBotE,aA/8MmB/rE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+8MJ,SAAAq8E,IAAA,IAAAxnF,EAAAstB,EAAAtD,EAAAy9D,EAAAhyD,EAAA8zC,EAAAme,EAAA36E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAo8E,GAAA,cAAAA,EAAAl8E,KAAAk8E,EAAAj8E,MAAA,UAAO1L,EAAP0nF,EAAAlsF,OAAA,QAAAiuB,IAAAi+D,EAAA,GAAAA,EAAA,GAAY,KAGnBp6D,EAHO,gBAIPtD,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAL7B,CAAAktF,EAAAj8E,KAAA,eAAAi8E,EAAAhrE,OAAA,SAMJ7d,EAAKgN,MAAMke,IANP,YASPy9D,EAAiB3oF,EAAK+Q,gBAAgB,CAAC,QAAS,WATzC,CAAA83E,EAAAj8E,KAAA,gBAAAi8E,EAAAj8E,KAAA,EAWW5M,EAAKwyC,YAAYm2C,EAAen1C,UAX3C,YAWL7c,EAXKkyD,EAAAn5E,QAYIinB,EAAQjxB,KAZZ,CAAAmjF,EAAAj8E,KAAA,aAaL1L,EAbK,CAAA2nF,EAAAj8E,KAAA,cAcH69D,EAAWzqE,EAAKotB,aAAalsB,EAAMy1B,EAAQjxB,OAdxC,CAAAmjF,EAAAj8E,KAAA,YAgBL69D,EAAWzqE,EAAKgN,MAAMy9D,GAAUjiE,MAAM,KACjCxI,EAAKgN,MAAMy9D,GAAU9uE,QAjBrB,CAAAktF,EAAAj8E,KAAA,gBAAAi8E,EAAAhrE,OAAA,SAkBI7d,EAAK8vB,8BAA8BtB,EAAei8C,IAlBtD,QAAAoe,EAAAj8E,KAAA,wBAAAi8E,EAAAhrE,OAAA,SAsBA7d,EAAK8vB,8BAA8BtB,EAAemI,EAAQjxB,OAtB1D,eAAAmjF,EAAAhrE,OAAA,SA0BN,MA1BM,yBAAAgrE,EAAA/6E,SAAA46E,EAAAvtF,SA/8MIA,KA2+MnB0yE,YA3+MmBrxE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2+ML,SAAAy8E,IAAA,IAAAt6D,EAAAtD,EAAAy9D,EAAAhyD,EAAAz1B,EAAAupE,EAAA,OAAA78C,EAAA3wB,EAAAwP,KAAA,SAAAs8E,GAAA,cAAAA,EAAAp8E,KAAAo8E,EAAAn8E,MAAA,UAGN4hB,EAHM,gBAINtD,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAL9B,CAAAotF,EAAAn8E,KAAA,eAAAm8E,EAAAlrE,OAAA,SAMH7d,EAAKgN,MAAMke,IANR,YASNy9D,EAAiB3oF,EAAK+Q,gBAAgB,CAAC,QAAS,WAT1C,CAAAg4E,EAAAn8E,KAAA,gBAAAm8E,EAAAn8E,KAAA,EAWY5M,EAAKwyC,YAAYm2C,EAAen1C,UAX5C,YAWJ7c,EAXIoyD,EAAAr5E,QAYKinB,EAAQjxB,KAZb,CAAAqjF,EAAAn8E,KAAA,YAaF1L,EAAO1E,OAAOqQ,OAAO87E,EAAeznF,QACtCupE,EAAWzqE,EAAKotB,aAAalsB,EAAMy1B,EAAQjxB,OAdvC,CAAAqjF,EAAAn8E,KAAA,YAgBN69D,EAAWzqE,EAAKgN,MAAMy9D,GAAUjiE,MAAM,KACjCxI,EAAKgN,MAAMy9D,GAAU9uE,QAjBpB,CAAAotF,EAAAn8E,KAAA,gBAAAm8E,EAAAlrE,OAAA,SAkBG7d,EAAK8vB,8BAA8BtB,EAAei8C,IAlBrD,eAAAse,EAAAlrE,OAAA,SAuBL,MAvBK,yBAAAkrE,EAAAj7E,SAAAg7E,EAAA3tF,SA3+MKA,KAogNnBgkC,wBAA0B,WACxB,IAAKn/B,EAAK3E,MAAMs1B,oBACd,OAAO,EAET,IAAM0O,EAAcr/B,EAAK+Q,gBAAgB,CAAC,QAAS,oBAC7Ci4E,EAAiBhpF,EAAK3E,MAAMs1B,oBAAX,KASvB,OARwBn0B,OAAOC,KAAKusF,GAAgB5nD,OAAO,SAACz1B,EAAiBtN,GAC3E,IAAMC,EAAc0qF,EAAe3qF,GAInC,OAHI7B,OAAOC,KAAK4iC,GAAahO,SAAS/yB,EAAY4wB,KAAK7wB,QAAUghC,EAAY/gC,EAAY4wB,KAAK7wB,OAAO4wB,UACnGtjB,EAAgBtN,GAASC,GAEpBqN,GACN,KAhhNcxQ,KAohNnB8tF,oBAphNmBzsF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAohNG,SAAA68E,IAAA,IAAA5wC,EAAA94B,EAAA2pE,EAAAC,EAAAC,EAAAz7E,EAAA07E,EAAAC,EAAAC,EAAA,OAAA57D,EAAA3wB,EAAAwP,KAAA,SAAAg9E,GAAA,cAAAA,EAAA98E,KAAA88E,EAAA78E,MAAA,cAAA68E,EAAA78E,KAAA,EACY5M,EAAKuoF,0BADjB,YACdjwC,EADcmxC,EAAA/5E,MAAA,CAAA+5E,EAAA78E,KAAA,gBAAA68E,EAAA78E,KAAA,EAGQ5M,EAAKizD,iBAHb,YAGZzzC,EAHYiqE,EAAA/5E,MAAA,CAAA+5E,EAAA78E,KAAA,gBAKVu8E,EAA0B,GALhBM,EAAA78E,KAAA,GAMyBsQ,QAAQqD,IAAI,CACnDvgB,EAAKkuB,oBAAoBoqB,EAAkB11C,KAAM,qBACjD5C,EAAK+mC,0BAA0BuR,EAAkB11C,KAAM,oBAAqB,GAAI,GAAI4c,EAAc2pE,KARpF,WAAAC,EAAAK,EAAA/5E,KAAA25E,EAAA7sF,OAAA4yB,EAAA,EAAA5yB,CAAA4sF,EAAA,GAMXx7E,EANWy7E,EAAA,GAMCC,EANDD,EAAA,IAWZz7E,IAAc07E,EAXF,CAAAG,EAAA78E,KAAA,gBAaR28E,EAAmBvpF,EAAKgN,MAAMhN,EAAK+Q,gBAAgB,CAAC,UAAW,mBAAmB0O,IAAI0pE,GACtFK,EAAWxpF,EAAKgN,MAAMY,GAAY6R,IAAI6pE,GAAgB77E,MAAM,GAAGjF,MAAM+gF,GAd7DE,EAAA5rE,OAAA,SAeP7d,EAAKgnC,QAAQwiD,GAAUhhF,MAAM,MAftB,eAAAihF,EAAA5rE,OAAA,SAmBb,MAnBa,yBAAA4rE,EAAA37E,SAAAo7E,EAAA/tF,SAphNHA,KAyiNnBuuF,oBAziNmBltF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAyiNG,SAAAs9E,IAAA,IAAAtxC,EAAA,OAAAzqB,EAAA3wB,EAAAwP,KAAA,SAAAm9E,GAAA,cAAAA,EAAAj9E,KAAAi9E,EAAAh9E,MAAA,cAAAg9E,EAAAh9E,KAAA,EACY5M,EAAK6pF,uBADjB,YACdxxC,EADcuxC,EAAAl6E,MAAA,CAAAk6E,EAAAh9E,KAAA,eAAAg9E,EAAAh9E,KAAA,EAGL5M,EAAKqoE,oBAAoBhwB,EAAkBz1C,MAHtC,cAAAgnF,EAAA/rE,OAAA,SAAA+rE,EAAAl6E,MAAA,cAAAk6E,EAAA/rE,OAAA,SAKb,MALa,wBAAA+rE,EAAA97E,SAAA67E,EAAAxuF,SAziNHA,KAgjNnByyE,qBAhjNmBpxE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgjNI,SAAAy9E,IAAA,IAAAj+E,EAAA+tE,EAAAvhC,EAAA0xC,EAAA97E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAu9E,GAAA,cAAAA,EAAAr9E,KAAAq9E,EAAAp9E,MAAA,cAAOf,EAAPk+E,EAAArtF,OAAA,QAAAiuB,IAAAo/D,EAAA,GAAAA,EAAA,GAAiB,KAAMnQ,IAAvBmQ,EAAArtF,OAAA,QAAAiuB,IAAAo/D,EAAA,KAAAA,EAAA,GAAAC,EAAAp9E,KAAA,EACW5M,EAAK6pF,uBADhB,YACfxxC,EADe2xC,EAAAt6E,MAAA,CAAAs6E,EAAAp9E,KAAA,gBAGnBf,EAAUA,GAAoB7L,EAAK3E,MAAMwQ,QAHtBm+E,EAAAp9E,KAAA,EAIN5M,EAAK6tB,gBAAgBwqB,EAAkBz1C,KAAMiJ,EAAS+tE,GAJhD,cAAAoQ,EAAAnsE,OAAA,SAAAmsE,EAAAt6E,MAAA,eAAAs6E,EAAAnsE,OAAA,SAMd,MANc,yBAAAmsE,EAAAl8E,SAAAg8E,EAAA3uF,SAhjNJA,KAwjNnBohD,mBAxjNmB//C,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwjNE,SAAA49E,IAAA,IAAAzqE,EAAAo6D,EAAAziD,EAAAmI,EAAA+Y,EAAA6xC,EAAAj8E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA09E,GAAA,cAAAA,EAAAx9E,KAAAw9E,EAAAv9E,MAAA,cAAO4S,EAAP0qE,EAAAxtF,OAAA,QAAAiuB,IAAAu/D,EAAA,GAAAA,EAAA,GAAqB,SAAUtQ,IAA/BsQ,EAAAxtF,OAAA,QAAAiuB,IAAAu/D,EAAA,KAAAA,EAAA,GAAAC,EAAAv9E,KAAA,EACa5M,EAAKuoF,0BADlB,cACbpxD,EADagzD,EAAAz6E,KAAAy6E,EAAAv9E,KAAA,EAES5M,EAAK+mC,0BAA0B5P,EAAkBv0B,KAAM,oBAAqB,GAAI,GAAI4c,GAF7F,YAEf8f,EAFe6qD,EAAAz6E,MAAA,CAAAy6E,EAAAv9E,KAAA,gBAIjB0yB,EAAkBt/B,EAAKgN,MAAMsyB,GACzBs6C,IACIvhC,EAAoBr4C,EAAK+Q,gBAAgB,CAAC,QAAS,iBACzDuuB,EAAkBt/B,EAAKwQ,iBAAiB8uB,EAAiB+Y,EAAkBr8C,WAP5DmuF,EAAAtsE,OAAA,SASVyhB,GATU,eAAA6qD,EAAAtsE,OAAA,SAWZ,MAXY,yBAAAssE,EAAAr8E,SAAAm8E,EAAA9uF,SAxjNFA,KAqkNnB2yE,6BArkNmB,eAAAsc,EAAA5tF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqkNY,SAAAg+E,EAAOx+E,GAAP,IAAAy+E,EAAAC,EAAAjrD,EAAA4qC,EAAA,OAAAt8C,EAAA3wB,EAAAwP,KAAA,SAAA+9E,GAAA,cAAAA,EAAA79E,KAAA69E,EAAA59E,MAAA,cAAA49E,EAAA59E,KAAA,EACoBsQ,QAAQqD,IAAI,CAC3DvgB,EAAKu8C,mBAAmB,UACxBv8C,EAAK4tE,qBAAqB/hE,KAHC,UAAAy+E,EAAAE,EAAA96E,KAAA66E,EAAA/tF,OAAA4yB,EAAA,EAAA5yB,CAAA8tF,EAAA,GACxBhrD,EADwBirD,EAAA,KACPrgB,EADOqgB,EAAA,MAKJjrD,EALI,CAAAkrD,EAAA59E,KAAA,eAAA49E,EAAA3sE,OAAA,SAMpB7d,EAAKgN,MAAMk9D,GAAmB1hE,MAAM82B,IANhB,cAAAkrD,EAAA3sE,OAAA,SAQtB,MARsB,wBAAA2sE,EAAA18E,SAAAu8E,EAAAlvF,SArkNZ,gBAAAsvF,GAAA,OAAAL,EAAAp8E,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+kNnBotF,wBA/kNmB/rF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+kNO,SAAAq+E,IAAA,IAAAC,EAAA,OAAA/8D,EAAA3wB,EAAAwP,KAAA,SAAAm+E,GAAA,cAAAA,EAAAj+E,KAAAi+E,EAAAh+E,MAAA,YAClB+9E,EAAsB3qF,EAAK+Q,gBAAgB,CAAC,QAAS,qBADnC,CAAA65E,EAAAh+E,KAAA,WAGK5M,EAAKs0B,kBAAkBq2D,EAAoB/nF,QACzC+nF,EAAoB1mD,IAJ3B,CAAA2mD,EAAAh+E,KAAA,eAAAg+E,EAAAh+E,KAAA,EAKS5M,EAAK3E,MAAM2oC,aAAa2mD,EAAoB/nF,KAAM+nF,EAAoBviF,QAASuiF,EAAoB1mD,KAL5G,OAAA2mD,EAAAl7E,KAAA,cAAAk7E,EAAA/sE,OAAA,SAQjB8sE,GARiB,wBAAAC,EAAA98E,SAAA48E,EAAAvvF,SA/kNPA,KAylNnB0vF,oBAzlNmBruF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAylNG,SAAAy+E,IAAA,IAAAC,EAAA,OAAAn9D,EAAA3wB,EAAAwP,KAAA,SAAAu+E,GAAA,cAAAA,EAAAr+E,KAAAq+E,EAAAp+E,MAAA,YACdm+E,EAAkB/qF,EAAK+Q,gBAAgB,CAAC,QAAS,iBADnC,CAAAi6E,EAAAp+E,KAAA,WAGK5M,EAAKs0B,kBAAkBy2D,EAAgBnoF,QACrCmoF,EAAgB9mD,IAJvB,CAAA+mD,EAAAp+E,KAAA,eAAAo+E,EAAAp+E,KAAA,EAKS5M,EAAK3E,MAAM2oC,aAAa+mD,EAAgBnoF,KAAMmoF,EAAgB3iF,QAAS2iF,EAAgB9mD,KALhG,OAAA+mD,EAAAt7E,KAAA,cAAAs7E,EAAAntE,OAAA,SAQbktE,GARa,wBAAAC,EAAAl9E,SAAAg9E,EAAA3vF,SAzlNHA,KAmmNnB0uF,qBAnmNmBrtF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmmNI,SAAA4+E,IAAA,IAAAC,EAAA,OAAAt9D,EAAA3wB,EAAAwP,KAAA,SAAA0+E,GAAA,cAAAA,EAAAx+E,KAAAw+E,EAAAv+E,MAAA,YACfs+E,EAAmBlrF,EAAK+Q,gBAAgB,CAAC,QAAS,kBADnC,CAAAo6E,EAAAv+E,KAAA,WAGK5M,EAAKs0B,kBAAkB42D,EAAiBtoF,QACtCsoF,EAAiBjnD,IAJxB,CAAAknD,EAAAv+E,KAAA,eAAAu+E,EAAAv+E,KAAA,EAKS5M,EAAK3E,MAAM2oC,aAAaknD,EAAiBtoF,KAAMsoF,EAAiB9iF,QAAS8iF,EAAiBjnD,KALnG,OAAAknD,EAAAz7E,KAAA,cAAAy7E,EAAAttE,OAAA,SAQdqtE,GARc,wBAAAC,EAAAr9E,SAAAm9E,EAAA9vF,SAnmNJA,KA6mNnBiwF,qBA7mNmB5uF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6mNI,SAAAg/E,IAAA,IAAAC,EAAA,OAAA19D,EAAA3wB,EAAAwP,KAAA,SAAA8+E,GAAA,cAAAA,EAAA5+E,KAAA4+E,EAAA3+E,MAAA,YACf0+E,EAAwBtrF,EAAK+Q,gBAAgB,CAAC,QAAS,uBADxC,CAAAw6E,EAAA3+E,KAAA,WAGK5M,EAAKs0B,kBAAkBg3D,EAAsB1oF,QAC3C0oF,EAAsBrnD,IAJ7B,CAAAsnD,EAAA3+E,KAAA,eAAA2+E,EAAA3+E,KAAA,EAKS5M,EAAK3E,MAAM2oC,aAAasnD,EAAsB1oF,KAAM0oF,EAAsBljF,QAASkjF,EAAsBrnD,KALlH,OAAAsnD,EAAA77E,KAAA,cAAA67E,EAAA1tE,OAAA,SAQdytE,GARc,wBAAAC,EAAAz9E,SAAAu9E,EAAAlwF,SA7mNJA,KAunNnBqwF,0BAvnNmBhvF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAunNS,SAAAo/E,IAAA,IAAA5/E,EAAAq+D,EAAAwhB,EAAA57E,EAAAwoC,EAAA2C,EAAA0wC,EAAAC,EAAAC,EAAAC,EAAA79E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAs/E,GAAA,cAAAA,EAAAp/E,KAAAo/E,EAAAn/E,MAAA,UAAOf,EAAPigF,EAAApvF,OAAA,QAAAiuB,IAAAmhE,EAAA,GAAAA,EAAA,GAAiB,KAAM5hB,EAAvB4hB,EAAApvF,OAAA,QAAAiuB,IAAAmhE,EAAA,GAAAA,EAAA,GAA2C,KAAMJ,EAAjDI,EAAApvF,OAAA,QAAAiuB,IAAAmhE,EAAA,GAAAA,EAAA,GAAgE,MACrFjgF,GAAW7L,EAAK3E,MAAMwQ,UACzBA,EAAU7L,EAAK3E,MAAMwQ,SAGlBA,EALqB,CAAAkgF,EAAAn/E,KAAA,eAAAm/E,EAAAluE,OAAA,SAMjB,MANiB,cASpB/N,EAAiB,GATGi8E,EAAAn/E,KAAA,EAUM5M,EAAKorF,uBAVX,cAUpB9yC,EAVoByzC,EAAAr8E,KAWpBurC,EAAuBj7C,EAAK+Q,gBAAgB,CAAC,QAAS,oBAXlCg7E,EAAAn/E,KAAA,GAaK5M,EAAK0pF,sBAbV,WAapBiC,EAboBI,EAAAr8E,KAcrBw6D,EAdqB,CAAA6hB,EAAAn/E,KAAA,gBAAAm/E,EAAAn/E,KAAA,GAeE5M,EAAK4tE,qBAAqB/hE,GAAS,GAfrC,QAexBq+D,EAfwB6hB,EAAAr8E,KAAA,YAkBtBw6D,IAAqByhB,EAlBC,CAAAI,EAAAn/E,KAAA,gBAmBlBg/E,EAAkB5rF,EAAKgN,MAAMk9D,GAAmBzqD,IAAIzf,EAAKgN,MAAM2+E,IAC/DE,EAAUrvF,OAAOC,KAAKw+C,GAAsBv+C,OAE9CgvF,IACFA,EAAe1rF,EAAKgN,MAAM0+E,GAAcjsE,IAAIosE,IAvBtBE,EAAAn/E,KAAA,GA4BlB5M,EAAKiM,aAAazP,OAAOC,KAAKw+C,GAA9B,eAAA+wC,EAAAxvF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAqD,SAAA4/E,EAAO5tF,GAAP,IAAAs6C,EAAAuzC,EAAAC,EAAAv8E,EAAA,OAAAge,EAAA3wB,EAAAwP,KAAA,SAAA2/E,GAAA,cAAAA,EAAAz/E,KAAAy/E,EAAAx/E,MAAA,cACnD+rC,EAAmBsC,EAAqB58C,GACxC6tF,EAAYvzC,EAAiB0zC,gBAAgBH,UAFME,EAAAx/E,KAAA,EAG3B5M,EAAKkuB,oBAAoBoqB,EAAkB11C,KAAM,WAAY,CAACspF,IAHnC,QAGnDC,EAHmDC,EAAA18E,QAKnDE,EAAmB5P,EAAKgN,MAAMm/E,GAAiB3jF,MAAMojF,GACrDF,IAEF97E,EAAmBA,EAAiBnC,MAAMmC,EAAiBpH,MAAMkjF,KAEnE57E,EAAeo8E,GAAalsF,EAAKwvD,aAAa5/C,IAVS,wBAAAw8E,EAAAt+E,SAAAm+E,EAAA9wF,SAArD,gBAAAmxF,GAAA,OAAAN,EAAAh+E,MAAA7S,KAAA8S,YAAA,IA5BkB,eAAA89E,EAAAluE,OAAA,SA2CnBrhB,OAAOqQ,OAAOiD,IA3CK,yBAAAi8E,EAAAj+E,SAAA29E,EAAAtwF,SAvnNTA,KAsqNnBoxF,sBAtqNmB/vF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsqNK,SAAAmgF,IAAA,IAAA3gF,EAAAq+D,EAAA0P,EAAA6S,EAAA38E,EAAAnE,EAAA2sC,EAAA2C,EAAA0wC,EAAAC,EAAAc,EAAAz+E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAkgF,GAAA,cAAAA,EAAAhgF,KAAAggF,EAAA//E,MAAA,UAAOf,EAAP6gF,EAAAhwF,OAAA,QAAAiuB,IAAA+hE,EAAA,GAAAA,EAAA,GAAiB,KAAMxiB,EAAvBwiB,EAAAhwF,OAAA,QAAAiuB,IAAA+hE,EAAA,GAAAA,EAAA,GAA2C,KAAM9S,EAAjD8S,EAAAhwF,OAAA,QAAAiuB,IAAA+hE,EAAA,IAAAA,EAAA,GAAsED,EAAtEC,EAAAhwF,OAAA,QAAAiuB,IAAA+hE,EAAA,IAAAA,EAAA,IAEjB7gF,GAAW7L,EAAK3E,MAAMwQ,UACzBA,EAAU7L,EAAK3E,MAAMwQ,SAGlBA,EANiB,CAAA8gF,EAAA//E,KAAA,eAAA+/E,EAAA9uE,OAAA,SAOb,MAPa,cAUhB/N,EAAiB,GACjBnE,EAAkB3L,EAAKm/B,0BAXPwtD,EAAA//E,KAAA,GAYU5M,EAAKorF,uBAZf,eAYhB9yC,EAZgBq0C,EAAAj9E,KAahBurC,EAAuBj7C,EAAK+Q,gBAAgB,CAAC,QAAS,oBAbtC47E,EAAA//E,KAAA,GAeS5M,EAAK0pF,sBAfd,WAehBiC,EAfgBgB,EAAAj9E,KAgBjBw6D,EAhBiB,CAAAyiB,EAAA//E,KAAA,gBAAA+/E,EAAA//E,KAAA,GAiBM5M,EAAK4tE,qBAAqB/hE,GAAS,GAjBzC,QAiBpBq+D,EAjBoByiB,EAAAj9E,KAAA,YAoBlBw6D,IAAqByhB,EApBH,CAAAgB,EAAA//E,KAAA,gBAqBdg/E,EAAkB5rF,EAAKgN,MAAMk9D,GAAmBzqD,IAAIzf,EAAKgN,MAAM2+E,IArBjDgB,EAAA//E,KAAA,GAuBd5M,EAAKiM,aAAazP,OAAOC,KAAKw+C,GAA9B,eAAA2xC,EAAApwF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAqD,SAAAwgF,EAAOxuF,GAAP,IAAAs6C,EAAAuzC,EAAA5tF,EAAAwuF,EAAAC,EAAAC,EAAAp9E,EAAAq9E,EAAA9xD,EAAA,OAAAvN,EAAA3wB,EAAAwP,KAAA,SAAAygF,GAAA,cAAAA,EAAAvgF,KAAAugF,EAAAtgF,MAAA,cACnD+rC,EAAmBsC,EAAqB58C,GACxC6tF,EAAYvzC,EAAiB0zC,gBAAgBH,UAC7C5tF,EAAcqN,EAAgBgtC,EAAiBvf,WAHI8zD,EAAAtgF,KAAA,EAO/CsQ,QAAQqD,IAAI,CACpBvgB,EAAKy9B,kBAAkBn/B,GACvB0B,EAAKkuB,oBAAoBoqB,EAAkB11C,KAAM,WAAY,CAACspF,MATP,OAAAY,EAAAI,EAAAx9E,KAAAq9E,EAAAvwF,OAAA4yB,EAAA,EAAA5yB,CAAAswF,EAAA,GAKvDE,EALuDD,EAAA,GAMvDn9E,EANuDm9E,EAAA,GAYnDE,EAAmBjtF,EAAKgN,MAAM4C,GAAkBpH,MAAMxI,EAAKgN,MAAMggF,IACnE7xD,EAAe8xD,EAAiBzkF,MAAMojF,GACtChS,IACFz+C,EAAen7B,EAAKwQ,iBAAiB2qB,EAAc,KAGrDrrB,EAAe6oC,EAAiBvf,WAAaqzD,EAAezsF,EAAKwvD,aAAar0B,GAAgBA,EAlBrC,yBAAA+xD,EAAAp/E,SAAA++E,EAAA1xF,SAArD,gBAAAgyF,GAAA,OAAAP,EAAA5+E,MAAA7S,KAAA8S,YAAA,IAvBc,eAAA0+E,EAAA9uE,OAAA,SA6Cf4uE,EAAejwF,OAAOqQ,OAAOiD,GAAkBA,GA7ChC,yBAAA68E,EAAA7+E,SAAA0+E,EAAArxF,SAtqNLA,KAutNnBiyF,gBAvtNmB,eAAAC,EAAA7wF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAutND,SAAAihF,EAAOjvF,EAAO2uB,GAAd,IAAApG,EAAAuhE,EAAAx8E,EAAAsvC,EAAAsyC,EAAAt/E,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+gF,GAAA,cAAAA,EAAA7gF,KAAA6gF,EAAA5gF,MAAA,cAAsBga,EAAtB2mE,EAAA7wF,OAAA,QAAAiuB,IAAA4iE,EAAA,IAAAA,EAAA,GACVpF,EAAU,GACVx8E,EAAkB3L,EAAKm/B,0BACvB8b,EAAuBj7C,EAAK+Q,gBAAgB,CAAC,QAAS,oBAH5Cy8E,EAAA5gF,KAAA,EAKV5M,EAAKiM,aAAazP,OAAOC,KAAKw+C,GAA9B,eAAAwyC,EAAAjxF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAqD,SAAAqhF,EAAOn3C,GAAP,IAAAoC,EAAA0zC,EAAAH,EAAA5tF,EAAA0uF,EAAA,OAAAp/D,EAAA3wB,EAAAwP,KAAA,SAAAkhF,GAAA,cAAAA,EAAAhhF,KAAAghF,EAAA/gF,MAAA,UACnD+rC,EAAmBsC,EAAqB1E,GACxC81C,EAAkB1zC,EAAiB0zC,gBACnCH,EAAYG,EAAgBH,YAC9B31C,IAAcl4C,GAASkK,WAAWykB,GAAU,GAJS,CAAA2gE,EAAA/gF,KAAA,YAKjDtO,EAAcqN,EAAgBgtC,EAAiBvf,WACrDpM,EAAShtB,EAAKwQ,iBAAiBwc,EAAQ,IAClCpG,EAPkD,CAAA+mE,EAAA/gF,KAAA,gBAAA+gF,EAAA/gF,KAAA,EAQxB5M,EAAKy9B,kBAAkBn/B,GARC,OAQ/C0uF,EAR+CW,EAAAj+E,KASrDsd,EAASA,EAAOvN,IAAIutE,GATiC,QAWvDhgE,EAAShtB,EAAK2vD,qBAAqB3iC,EAAQ2rB,EAAiB38C,UAC5DmsF,EAAQ+D,GAAal/D,EAZkC2gE,EAAA/gF,KAAA,iBAcvDu7E,EAAQ+D,GAAa,EAdkC,yBAAAyB,EAAA7/E,SAAA4/E,EAAAvyF,SAArD,gBAAAyyF,GAAA,OAAAH,EAAAz/E,MAAA7S,KAAA8S,YAAA,IALU,cAAAu/E,EAAA3vE,OAAA,SAuBTrhB,OAAOqQ,OAAOs7E,IAvBL,wBAAAqF,EAAA1/E,SAAAw/E,EAAAnyF,SAvtNC,gBAAA0yF,EAAAC,GAAA,OAAAT,EAAAr/E,MAAA7S,KAAA8S,YAAA,GAAA9S,KAgvNnB4yF,oBAhvNmB,eAAAC,EAAAxxF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgvNG,SAAA4hF,EAAO9F,GAAP,IAAAvhE,EAAAuQ,EAAA+2D,EAAAjgF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0hF,GAAA,cAAAA,EAAAxhF,KAAAwhF,EAAAvhF,MAAA,cAAgBga,IAAhBsnE,EAAAxxF,OAAA,QAAAiuB,IAAAujE,EAAA,KAAAA,EAAA,GAAAC,EAAAvhF,KAAA,EACY5M,EAAKorF,uBADjB,YACdj0D,EADcg3D,EAAAz+E,MAAA,CAAAy+E,EAAAvhF,KAAA,eAAAuhF,EAAAvhF,KAAA,EAGL5M,EAAKkuB,oBAAoBiJ,EAAkBv0B,KAAM,oBAAqB,CAACulF,EAASvhE,IAH3E,cAAAunE,EAAAtwE,OAAA,SAAAswE,EAAAz+E,MAAA,cAAAy+E,EAAAtwE,OAAA,SAKb,MALa,wBAAAswE,EAAArgF,SAAAmgF,EAAA9yF,SAhvNH,gBAAAizF,GAAA,OAAAJ,EAAAhgF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAuvNnBkzF,iBAvvNmB,eAAAC,EAAA9xF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAuvNA,SAAAkiF,EAAOlwF,EAAO2uB,GAAd,IAAApG,EAAA4nE,EAAA/uD,EAAAgvD,EAAA5C,EAAA1D,EAAAuG,EAAAC,EAAAzpB,EAAA33D,EAAAqhF,EAAAC,EAAA5gF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqiF,GAAA,cAAAA,EAAAniF,KAAAmiF,EAAAliF,MAAA,cAAsBga,IAAtBioE,EAAAnyF,OAAA,QAAAiuB,IAAAkkE,EAAA,KAAAA,EAAA,GAAsCL,EAAtCK,EAAAnyF,OAAA,QAAAiuB,IAAAkkE,EAAA,GAAAA,EAAA,GAAuD,KACpEpvD,EAAW,KADEqvD,EAAAliF,KAAA,EAEa5M,EAAKuoF,0BAFlB,YAEXkG,EAFWK,EAAAp/E,MAAA,CAAAo/E,EAAAliF,KAAA,YAKTi/E,EAAU7rF,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU,aAEzDic,EAAShtB,EAAKgN,MAAMggB,MACLA,EAAOrxB,UAAWqxB,EAAOuC,IAAI,GAR7B,CAAAu/D,EAAAliF,KAAA,gBAAAkiF,EAAAjxE,OAAA,SASN,MATM,YAYXsqE,EAAUqG,IACErG,EAAQzrF,SAAWmvF,EAbpB,CAAAiD,EAAAliF,KAAA,gBAAAkiF,EAAAliF,KAAA,GAcG5M,EAAKotF,gBAAgB/uF,EAAO2uB,GAd/B,QAcbm7D,EAda2G,EAAAp/E,KAAA,eAAAo/E,EAAAliF,KAAA,GAoBLsQ,QAAQqD,IAAI,CACpBvgB,EAAKkuB,oBAAoBugE,EAAgB7rF,KAAM,qBAC/C5C,EAAKkuB,oBAAoBugE,EAAgB7rF,KAAM,oBAAqB,CAACulF,EAASvhE,MAtBjE,WAAA8nE,EAAAI,EAAAp/E,KAAAi/E,EAAAnyF,OAAA4yB,EAAA,EAAA5yB,CAAAkyF,EAAA,GAkBbxpB,EAlBaypB,EAAA,GAmBbphF,EAnBaohF,EAAA,IAyBXzpB,IAAgB33D,EAzBL,CAAAuhF,EAAAliF,KAAA,gBA0BbogB,EAAShtB,EAAKwQ,iBAAiBwc,EAAQ,IACvCk4C,EAAellE,EAAKwQ,iBAAiB00D,EAAc,IACnD33D,EAAcvN,EAAKwQ,iBAAiBjD,EAAa,IAC3CqhF,EAAKrhF,EAAY/E,MAAM08D,GAGzBspB,IAAmB5nE,IACrBoG,EAASA,EAAOxkB,MAAM08D,IAItBzlC,EADE7Y,EACSgoE,EAAGnvE,IAAIuN,GAAQvf,MAAM,GAAGjF,OAAO,GAE/BwkB,EAAOvN,IAAImvE,GAAInhF,MAAM,GAAGjF,OAAO,GAvC/BsmF,EAAAjxE,OAAA,SA4CN4hB,GA5CM,eAAAqvD,EAAAjxE,OAAA,SA+CV,MA/CU,yBAAAixE,EAAAhhF,SAAAygF,EAAApzF,SAvvNA,gBAAA4zF,EAAAC,GAAA,OAAAV,EAAAtgF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAwyNnBozE,uBAxyNmB,eAAA0gB,EAAAzyF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwyNM,SAAA6iF,EAAO5wF,GAAP,IAAA6wF,EAAAC,EAAA5gE,EAAAtD,EAAAqF,EAAA8+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjhE,EAAAkhE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAliF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2jF,GAAA,cAAAA,EAAAzjF,KAAAyjF,EAAAxjF,MAAA,UAAoBuiF,EAApBgB,EAAAzzF,OAAA,QAAAiuB,IAAAwlE,EAAA,GAAAA,EAAA,GAAuC,KAAMf,IAA7Ce,EAAAzzF,OAAA,QAAAiuB,IAAAwlE,EAAA,KAAAA,EAAA,GAEjB3hE,EAFiB,0BAAA5vB,OAEyBN,EAAY4wB,KAAK7wB,MAF1C,KAAAO,OAEmDuwF,EAFnD,KAAAvwF,OAEuEwwF,KACxFlkE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJnB,CAAAy0F,EAAAxjF,KAAA,eAAAwjF,EAAAvyE,OAAA,SAKd7d,EAAKgN,MAAMke,IALG,UAQjBqF,EAAmBvwB,EAAK4wB,uBAE1By+D,EAAmBrvF,EAAKgN,MAAM,GAC5BsiF,EAAqBtvF,EAAK+Q,gBAAgB,CAAC,YAAa,YACxDw+E,EAAejxF,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAIA,EAAEgG,OAAS0sF,EAAmB/wF,WAG7EixF,EAAiBxvF,EAAKotB,aAAa,CAAC,iBAAkBmD,GAAmB++D,IAAuB,GAEjGC,IAAgBC,EAAen+D,SAAS/yB,EAAY4wB,KAAK7wB,OAjBvC,CAAA+xF,EAAAxjF,KAAA,gBAAAwjF,EAAAvyE,OAAA,SAkBdwxE,GAlBc,eAAAe,EAAAxjF,KAAA,GAqBwB5M,EAAKkuB,oBAAoBqhE,EAAalxF,MAAO,2BArBrE,WAqBjBoxF,EArBiBW,EAAA1gF,KAAA,CAAA0gF,EAAAxjF,KAAA,gBAAAwjF,EAAAvyE,OAAA,SAwBdwxE,GAxBc,eA2BjBK,EA3BiB,6BAAA9wF,OA2B6C6wF,GA3B7CW,EAAAxjF,KAAA,GA4BjB5M,EAAK3E,MAAM2oC,aAAa0rD,EAAgCD,EAAkCY,GA5BzE,eAAAD,EAAAxjF,KAAA,GAkCbsQ,QAAQqD,IAAI,CACpBvgB,EAAKqoE,oBAAoBknB,EAAalxF,OACtC2B,EAAKgF,mBAAmB1G,GAAa,GAAO,GAC5C0B,EAAKkuB,oBAAoBwhE,EAAgC,SAAU,CAACH,EAAannF,YArC5D,WAAAunF,EAAAS,EAAA1gF,KAAAkgF,EAAApzF,OAAA4yB,EAAA,EAAA5yB,CAAAmzF,EAAA,GA+BrBE,EA/BqBD,EAAA,GAgCrBhhE,EAhCqBghE,EAAA,KAiCrBE,EAjCqBF,EAAA,MA0CNhhE,EA1CM,CAAAwhE,EAAAxjF,KAAA,cA4CfmjF,EAAqBnhE,EAAgB9pB,yBAAyByqF,EAAannF,QAAQC,kBAE/D0nF,EAAmBxvB,IAAI,MA9C5B,CAAA6vB,EAAAxjF,KAAA,YA+CduiF,EA/Cc,CAAAiB,EAAAxjF,KAAA,gBAAAwjF,EAAAxjF,KAAA,GAgDQ5M,EAAKkuB,oBAAoBqhE,EAAalxF,MAAO,YAAa,CAACC,EAAY4wB,KAAK9mB,UAhDpF,QAgDjB+mF,EAhDiBiB,EAAA1gF,KAAA,WAmDbsgF,EAAYhwF,EAAKgN,MAAM8iF,EAAUQ,mBACvCnB,EAAmBnvF,EAAKgN,MAAMmiF,GAC9BU,EAAoB7vF,EAAKgN,MAAM6iF,GACzBI,EAAiBjwF,EAAK+Q,gBAAgB,CAAC,UAAW,mBAElDm/E,EAAgBf,EAAiB1vE,IAAIowE,GAC3CR,EAAmBW,EAAUxnF,MAAM0nF,GAE/Bd,IACFC,EAAmBA,EAAiB5vE,IAAI,MAAMjX,MAAMynF,IAGjDjwF,EAAKgN,MAAMqiF,GAAkB1zF,QA/Df,CAAAy0F,EAAAxjF,KAAA,gBAAAwjF,EAAAvyE,OAAA,SAgEV7d,EAAK8vB,8BAA8BtB,EAAe6gE,IAhExC,eAAAe,EAAAvyE,OAAA,SAqEhBwxE,GArEgB,yBAAAe,EAAAtiF,SAAAohF,EAAA/zF,SAxyNN,gBAAAo1F,GAAA,OAAAtB,EAAAjhF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA+2NnB+yE,2BA/2NmB1xE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+2NU,SAAAmkF,IAAA,IAAA3kF,EAAAF,EAAA2jF,EAAA7iE,EAAAgkE,EAAAxiF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAikF,GAAA,cAAAA,EAAA/jF,KAAA+jF,EAAA9jF,MAAA,UAAOf,EAAP4kF,EAAA/zF,OAAA,QAAAiuB,IAAA8lE,EAAA,GAAAA,EAAA,GAAiB,KAAM9kF,EAAvB8kF,EAAA/zF,OAAA,QAAAiuB,IAAA8lE,EAAA,GAAAA,EAAA,GAAyC,KAC/D5kF,IACHA,EAAU7L,EAAK3E,MAAMwQ,UAElBF,GAAmB3L,EAAK3E,MAAM8T,mBACjCxD,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAGzDtD,GAAYF,EARU,CAAA+kF,EAAA9jF,KAAA,eAAA8jF,EAAA7yE,OAAA,UASlB,GATkB,cAYrByxE,EAAqBtvF,EAAK+Q,gBAAgB,CAAC,YAAa,YAE1D0b,EAASzsB,EAAKgN,MAAM,GAdG0jF,EAAA9jF,KAAA,GAerB5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAglF,EAAAn0F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAukF,EAAOvyF,GAAP,IAAAC,EAAAuyF,EAAAC,EAAA5/D,EAAAm+D,EAAA,OAAAzhE,EAAA3wB,EAAAwP,KAAA,SAAAskF,GAAA,cAAAA,EAAApkF,KAAAokF,EAAAnkF,MAAA,UAC9CtO,EAAcqN,EAAgBtN,IACjBC,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAKA,EAAEgG,OAAS0sF,EAAmB/wF,WAF9B,CAAAwyF,EAAAnkF,KAAA,gBAAAmkF,EAAAnkF,KAAA,EAOxCsQ,QAAQqD,IAAI,CACpBvgB,EAAKsxB,iBAAiBzlB,EAASvN,GAAa,GAC5C0B,EAAKuuE,uBAAuBjwE,EAAa,MAAM,KATC,OAAAuyF,EAAAE,EAAArhF,KAAAohF,EAAAt0F,OAAA4yB,EAAA,EAAA5yB,CAAAq0F,EAAA,GAKhD3/D,EALgD4/D,EAAA,IAMhDzB,EANgDyB,EAAA,KAY1B5/D,IAAkBlxB,EAAKgN,MAAMqiF,GAAkB1zF,UAAYqE,EAAKgN,MAAMkkB,GAAev1B,UAC3G8wB,EAASA,EAAOjf,KAAK6hF,EAAiB7mF,MAAM0oB,KAbI,yBAAA6/D,EAAAjjF,SAAA8iF,EAAAz1F,SAAhD,gBAAA61F,GAAA,OAAAL,EAAA3iF,MAAA7S,KAAA8S,YAAA,IAfqB,eAAAyiF,EAAA7yE,OAAA,SAiCpB4O,GAjCoB,yBAAAikE,EAAA5iF,SAAA0iF,EAAAr1F,SA/2NVA,KAk5NnB81F,aAl5NmB,eAAAC,EAAA10F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAk5NJ,SAAA8kF,EAAO9yF,EAAOC,GAAd,IAAA8yF,EAAAC,EAAA7iE,EAAAtD,EAAAomE,EAAA3rD,EAAA9W,EAAA0iE,EAAAC,EAAA5iE,EAAA6iE,EAAAxjF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAilF,GAAA,cAAAA,EAAA/kF,KAAA+kF,EAAA9kF,MAAA,UAA2BwkF,EAA3BK,EAAA/0F,OAAA,QAAAiuB,IAAA8mE,EAAA,GAAAA,EAAA,GAAiD,MACxDJ,EAAoBrxF,EAAK+Q,gBAAgB,CAAC,YAAa,YACtCke,QAFV,CAAAyiE,EAAA9kF,KAAA,eAAA8kF,EAAA7zE,OAAA,UAGJ,GAHI,UAMP2Q,EANO,gBAAA5vB,OAMyBN,EAAY4wB,KAAK7wB,MAN1C,KAAAO,OAMmDwyF,KAC1DlmE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAR7B,CAAA+1F,EAAA9kF,KAAA,eAAA8kF,EAAA7zE,OAAA,SASJ7d,EAAKgN,MAAMke,IATP,cAYTomE,EAAYtxF,EAAKgN,MAAM,GAZd0kF,EAAA9kF,KAAA,GAamB5M,EAAKuuE,uBAAuBjwE,GAb/C,aAaPqnC,EAbO+rD,EAAAhiF,QAeY1P,EAAKgN,MAAM24B,GAAmB/0B,GAAG,GAf7C,CAAA8gF,EAAA9kF,KAAA,YAkBNwkF,EAlBM,CAAAM,EAAA9kF,KAAA,gBAmBHiiB,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UApBhC8qD,EAAA/kF,KAAA,GAuBD4kF,EAAkB,CACtBnpF,QAASipF,EAAkBhK,iBAAmBgK,EAAkBjpF,SAxB3DspF,EAAA9kF,KAAA,GA0BqB5M,EAAKqvB,yBAAyBR,EAAgB0iE,GA1BnE,QA0BPH,EA1BOM,EAAAhiF,KAAAgiF,EAAA9kF,KAAA,iBAAA8kF,EAAA/kF,KAAA,GAAA+kF,EAAApiE,GAAAoiE,EAAA,kBA8BJN,IAAuBA,EAAoBz1F,UAC9Cy1F,EAAsBpxF,EAAKgN,MAAM,IA/B1B,eAmCLwkF,EAAcxxF,EAAKgN,MAAMokF,GAAqB5oF,MAAMm9B,GAnC/C+rD,EAAA9kF,KAAA,GAoCmB5M,EAAKgF,mBAAmB1G,GAAa,GAAO,GApC/D,SAoCLswB,EApCK8iE,EAAAhiF,QAyCT4hF,EAAYE,EAAY/xE,IAAImP,EAAgB81D,0BAA0Bl8E,MAAM,KAIvExI,EAAKgN,MAAMskF,GAAW31F,SACzBqE,EAAK8vB,8BAA8BtB,EAAe8iE,IA9C3C,eAAAI,EAAA7zE,OAAA,SAmDNyzE,GAnDM,yBAAAI,EAAA5jF,SAAAqjF,EAAAh2F,KAAA,cAl5NI,gBAAAw2F,EAAAC,GAAA,OAAAV,EAAAljF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu8NnB02F,cAv8NmB,eAAAC,EAAAt1F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu8NH,SAAA0lF,EAAO1zF,EAAOC,GAAd,IAAA0zF,EAAA1C,EAAA9gE,EAAAtD,EAAA+mE,EAAA5C,EAAAxgE,EAAA0iE,EAAAW,EAAAtjE,EAAAujE,EAAAlkF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2lF,GAAA,cAAAA,EAAAzlF,KAAAylF,EAAAxlF,MAAA,UAA2BolF,EAA3BG,EAAAz1F,OAAA,QAAAiuB,IAAAwnE,EAAA,GAAAA,EAAA,GAAgD,MACxD7C,EAAqBtvF,EAAK+Q,gBAAgB,CAAC,YAAa,aACtCke,QAFV,CAAAmjE,EAAAxlF,KAAA,eAAAwlF,EAAAv0E,OAAA,UAGL,GAHK,UAMR2Q,EANQ,iBAAA5vB,OAMyBN,EAAY4wB,KAAK7wB,MAN1C,KAAAO,OAMmDozF,KAC3D9mE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAR5B,CAAAy2F,EAAAxlF,KAAA,eAAAwlF,EAAAv0E,OAAA,SASL7d,EAAKgN,MAAMke,IATN,cAYV+mE,EAAajyF,EAAKgN,MAAM,GAZdolF,EAAAxlF,KAAA,GAaiB5M,EAAKuuE,uBAAuBjwE,GAb7C,aAaR+wF,EAbQ+C,EAAA1iF,QAeU1P,EAAKgN,MAAMqiF,GAAkBz+E,GAAG,GAf1C,CAAAwhF,EAAAxlF,KAAA,YAkBPolF,EAlBO,CAAAI,EAAAxlF,KAAA,gBAmBJiiB,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UApB/BwrD,EAAAzlF,KAAA,GAuBF4kF,EAAkB,CACtBnpF,QAASknF,EAAmBjI,iBAAmBiI,EAAmBlnF,SAxB5DgqF,EAAAxlF,KAAA,GA0BmB5M,EAAKqvB,yBAAyBR,EAAgB0iE,GA1BjE,QA0BRS,EA1BQI,EAAA1iF,KAAA0iF,EAAAxlF,KAAA,iBAAAwlF,EAAAzlF,KAAA,GAAAylF,EAAA9iE,GAAA8iE,EAAA,kBA8BLJ,IAAsBA,EAAmBr2F,UAC5Cq2F,EAAqBhyF,EAAKgN,MAAM,IA/BxB,eAmCNklF,EAAelyF,EAAKgN,MAAMglF,GAAoBxpF,MAAM6mF,GAnC9C+C,EAAAxlF,KAAA,GAqCkB5M,EAAKgF,mBAAmB1G,GAAa,GAAO,GArC9D,SAqCNswB,EArCMwjE,EAAA1iF,QAwCVuiF,EAAaC,EAAazyE,IAAImP,EAAgB81D,0BAA0Bl8E,MAAM,KAIzExI,EAAKgN,MAAMilF,GAAYt2F,SAC1BqE,EAAK8vB,8BAA8BtB,EAAeyjE,IA7C1C,eAAAG,EAAAv0E,OAAA,SAkDPo0E,GAlDO,yBAAAG,EAAAtkF,SAAAikF,EAAA52F,KAAA,cAv8NG,gBAAAk3F,EAAAC,GAAA,OAAAR,EAAA9jF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA2/NnBo3F,WA3/NmB,eAAAC,EAAAh2F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2/NN,SAAAomF,EAAOp0F,EAAOC,GAAd,IAAAo0F,EAAAC,EAAAC,EAAApkE,EAAAtD,EAAA2nE,EAAAC,EAAAjkE,EAAAkkE,EAAAnkE,EAAAokE,EAAA/kF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAwmF,GAAA,cAAAA,EAAAtmF,KAAAsmF,EAAArmF,MAAA,UAA2B8lF,EAA3BM,EAAAt2F,OAAA,QAAAiuB,IAAAqoE,EAAA,GAAAA,EAAA,GAA8C,KAAML,EAApDK,EAAAt2F,OAAA,QAAAiuB,IAAAqoE,EAAA,GAAAA,EAAA,GAAyE,MAC9EJ,EAAkB5yF,EAAK+Q,gBAAgB,CAAC,YAAa,UACtCke,QAFV,CAAAgkE,EAAArmF,KAAA,eAAAqmF,EAAAp1E,OAAA,UAGF,GAHE,UAML2Q,EANK,cAAA5vB,OAMyBN,EAAY4wB,KAAK7wB,MAN1C,KAAAO,OAMmD8zF,EANnD,KAAA9zF,OAMuE+zF,KAC5EznE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAR/B,CAAAs3F,EAAArmF,KAAA,eAAAqmF,EAAAp1E,OAAA,SASF7d,EAAKgN,MAAMke,IATT,cAYP2nE,EAAU7yF,EAAKgN,MAAM,GAZdimF,EAAArmF,KAAA,GAaoB5M,EAAKsuE,oBAAoBhwE,EAAao0F,GAb1D,aAaLI,EAbKG,EAAAvjF,MAAA,CAAAujF,EAAArmF,KAAA,YAiBHiiB,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAIpC+rD,EAtBI,CAAAM,EAAArmF,KAAA,gBAAAqmF,EAAAtmF,KAAA,GAAAsmF,EAAArmF,KAAA,GAwBsB5M,EAAKqvB,yBAAyBR,EAAgB+jE,GAxBpE,QAwBLD,EAxBKM,EAAAvjF,KAAAujF,EAAArmF,KAAA,iBAAAqmF,EAAAtmF,KAAA,GAAAsmF,EAAA3jE,GAAA2jE,EAAA,kBA4BFN,IAAsBA,EAAmBh3F,UAC5Cg3F,EAAqB3yF,EAAKgN,MAAM,IA7B3B,eAiCH+lF,EAAY/yF,EAAKgN,MAAM2lF,GAAoBnqF,MAAMsqF,GAjC9CG,EAAArmF,KAAA,GAmCqB5M,EAAKgF,mBAAmB1G,GAAa,GAAO,GAnCjE,QAmCHswB,EAnCGqkE,EAAAvjF,KAqCT2kB,QAAQ8a,IAAI,aAAc7wC,EAAY4wB,KAAK7wB,MAAOs0F,EAAmBlqF,QAAQ,GAAIqqF,EAAiBrqF,QAAQ,GAAIsqF,EAAUtqF,QAAQ,GAAImmB,EAAgB81D,yBAAyBj8E,QAAQ,IAEjLmmB,IACFikE,EAAUE,EAAUtzE,IAAImP,EAAgB81D,0BAA0Bl8E,MAAM,KACnExI,EAAKgN,MAAM6lF,GAASl3F,SACvBqE,EAAK8vB,8BAA8BtB,EAAeqkE,IA1C7C,eAAAI,EAAAp1E,OAAA,SA+CJg1E,GA/CI,yBAAAI,EAAAnlF,SAAA2kF,EAAAt3F,KAAA,cA3/NM,gBAAA+3F,EAAAC,GAAA,OAAAX,EAAAxkF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA4iOnBi4F,aA5iOmB,eAAAC,EAAA72F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4iOJ,SAAAinF,EAAOC,GAAP,IAAAC,EAAA,OAAA5lE,EAAA3wB,EAAAwP,KAAA,SAAAgnF,GAAA,cAAAA,EAAA9mF,KAAA8mF,EAAA7mF,MAAA,cAAA6mF,EAAA7mF,KAAA,EACS5M,EAAK+mC,0BAA0B,cAAe,mBAAoB,CAACwsD,IAD5E,YACTC,EADSC,EAAA/jF,MAAA,CAAA+jF,EAAA7mF,KAAA,eAAA6mF,EAAA51E,OAAA,SAGJ7d,EAAKgN,MAAMwmF,IAHP,cAAAC,EAAA51E,OAAA,SAKN,MALM,wBAAA41E,EAAA3lF,SAAAwlF,EAAAn4F,SA5iOI,gBAAAu4F,GAAA,OAAAL,EAAArlF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmjOnBmzE,oBAnjOmB,eAAAqlB,EAAAn3F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmjOG,SAAAunF,EAAOt1F,GAAP,IAAAo0F,EAAAtD,EAAA5gE,EAAAtD,EAAA2oE,EAAAjlE,EAAAklE,EAAAC,EAAAC,EAAAR,EAAAS,EAAAhkE,EAAAikE,EAAApB,EAAAqB,EAAAlmF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2nF,GAAA,cAAAA,EAAAznF,KAAAynF,EAAAxnF,MAAA,UAAoB8lF,EAApByB,EAAAz3F,OAAA,QAAAiuB,IAAAwpE,EAAA,GAAAA,EAAA,GAAuC,KAAM/E,IAA7C+E,EAAAz3F,OAAA,QAAAiuB,IAAAwpE,EAAA,KAAAA,EAAA,GAEd3lE,EAFc,uBAAA5vB,OAEyBN,EAAY4wB,KAAK7wB,MAF1C,KAAAO,OAEmD8zF,EAFnD,KAAA9zF,OAEuEwwF,KACrFlkE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJtB,CAAAy4F,EAAAxnF,KAAA,eAAAwnF,EAAAv2E,OAAA,SAKX7d,EAAKgN,MAAMke,IALA,YAQd2oE,EAAav1F,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,MAAgB,aAAXA,EAAEgG,QARlC,CAAAwxF,EAAAxnF,KAAA,gBAAAwnF,EAAAxnF,KAAA,GAYY5M,EAAKgF,mBAAmB1G,GAAa,GAAO,GAZxD,WAYZswB,EAZYwlE,EAAA1kF,OAaZokF,EAAyBllE,EAAgB9pB,yBAAyB+uF,EAAWzrF,QAAQC,kBAG7DyrF,EAAuBvzB,IAAI,MAhBvC,CAAA6zB,EAAAxnF,KAAA,gBAAAwnF,EAAAxnF,KAAA,GAsBNsQ,QAAQqD,IAAI,CACpBvgB,EAAKozF,aAAaS,EAAWzrF,SAC7BpI,EAAKqoE,oBAAoBwrB,EAAWx1F,SAxBtB,WAAA01F,EAAAK,EAAA1kF,KAAAskF,EAAAx3F,OAAA4yB,EAAA,EAAA5yB,CAAAu3F,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAAxnF,KAAA,YA8BT8lF,EA9BS,CAAA0B,EAAAxnF,KAAA,gBAAAwnF,EAAAxnF,KAAA,GA+Ba5M,EAAK07B,mBAAmBm4D,EAAWx1F,MAAOC,EAAY4wB,KAAK9mB,SA/BxE,QA+BZsqF,EA/BY0B,EAAA1kF,KAAA,YAkCVgjF,EAlCU,CAAA0B,EAAAxnF,KAAA,YAqCNqjB,EAAgBjwB,EAAK+Q,gBAAgB,CAAC,UAAW,kBAGjDmjF,EAAoBl0F,EAAKgN,MAAM0lF,GAAkBjzE,IAAIzf,EAAKgN,MAAMinF,IAClEnB,EAAmB9yF,EAAKgN,MAAMwmF,GAAWhrF,MAAM0rF,GAE/C9E,IACF0D,EAAmB9yF,EAAKwQ,iBAAiBsiF,EAAkB,IAAItqF,MAAMynB,IAGlEjwB,EAAKgN,MAAM8lF,GAAkBn3F,QA/CtB,CAAAy4F,EAAAxnF,KAAA,gBAAAwnF,EAAAv2E,OAAA,SAgDH7d,EAAK8vB,8BAA8BtB,EAAeskE,IAhD/C,eAAAsB,EAAAv2E,OAAA,SAuDb,MAvDa,yBAAAu2E,EAAAtmF,SAAA8lF,EAAAz4F,SAnjOH,gBAAAk5F,GAAA,OAAAV,EAAA3lF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA4mOnB8yE,wBA5mOmBzxE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4mOO,SAAAioF,IAAA,IAAAzoF,EAAAF,EAAA8gB,EAAA8nE,EAAAtmF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+nF,GAAA,cAAAA,EAAA7nF,KAAA6nF,EAAA5nF,MAAA,UAAOf,EAAP0oF,EAAA73F,OAAA,QAAAiuB,IAAA4pE,EAAA,GAAAA,EAAA,GAAiB,KAAM5oF,EAAvB4oF,EAAA73F,OAAA,QAAAiuB,IAAA4pE,EAAA,GAAAA,EAAA,GAAyC,KAC5D1oF,IACHA,EAAU7L,EAAK3E,MAAMwQ,UAElBF,GAAmB3L,EAAK3E,MAAM8T,mBACjCxD,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAGzDtD,GAAYF,EARO,CAAA6oF,EAAA5nF,KAAA,eAAA4nF,EAAA32E,OAAA,UASf,GATe,cAYpB4O,EAASzsB,EAAKgN,MAAM,GAZAwnF,EAAA5nF,KAAA,EAalB5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAA8oF,EAAAj4F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAqoF,EAAOr2F,GAAP,IAAAC,EAAAq2F,EAAAC,EAAA1jE,EAAA4hE,EAAA,OAAAllE,EAAA3wB,EAAAwP,KAAA,SAAAooF,GAAA,cAAAA,EAAAloF,KAAAkoF,EAAAjoF,MAAA,UAC9CtO,EAAcqN,EAAgBtN,IACjBC,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,MAAgB,aAAXA,EAAEgG,OAFF,CAAAiyF,EAAAjoF,KAAA,gBAAAioF,EAAAjoF,KAAA,EAOxCsQ,QAAQqD,IAAI,CACpBvgB,EAAKsxB,iBAAiBzlB,EAASvN,GAAa,GAC5C0B,EAAKsuE,oBAAoBhwE,EAAa,MAAM,KATI,OAAAq2F,EAAAE,EAAAnlF,KAAAklF,EAAAp4F,OAAA4yB,EAAA,EAAA5yB,CAAAm4F,EAAA,GAKhDzjE,EALgD0jE,EAAA,IAMhD9B,EANgD8B,EAAA,KAY1B1jE,IACtBzE,EAASA,EAAOjf,KAAKslF,EAAiBtqF,MAAM0oB,KAbI,yBAAA2jE,EAAA/mF,SAAA4mF,EAAAv5F,SAAhD,gBAAA25F,GAAA,OAAAL,EAAAzmF,MAAA7S,KAAA8S,YAAA,IAbkB,cAAAumF,EAAA32E,OAAA,SA+BjB4O,GA/BiB,yBAAA+nE,EAAA1mF,SAAAwmF,EAAAn5F,SA5mOPA,KA6oOnBszE,cA7oOmBjyE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6oOH,SAAA0oF,IAAA,IAAAppF,EAAA8gB,EAAA7nB,EAAAowF,EAAA/mF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAwoF,GAAA,cAAAA,EAAAtoF,KAAAsoF,EAAAroF,MAAA,eAAOjB,EAAPqpF,EAAAt4F,OAAA,QAAAiuB,IAAAqqE,EAAA,GAAAA,EAAA,GAAyB,OACfh1F,EAAK3E,MAAM8T,mBACjCxD,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAE1Dsd,EAASzsB,EAAKgN,MAAM,GACpBpI,EAAkB5E,EAAKgN,MAAM,GALnBioF,EAAAroF,KAAA,EAMR5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAupF,EAAA14F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAA8oF,EAAO92F,GAAP,IAAAC,EAAA82F,EAAAC,EAAAC,EAAA1mE,EAAA,OAAAhB,EAAA3wB,EAAAwP,KAAA,SAAA8oF,GAAA,cAAAA,EAAA5oF,KAAA4oF,EAAA3oF,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgBk3F,EAAA3oF,KAAA,EAEXsQ,QAAQqD,IAAI,CACnDvgB,EAAKuyF,WAAWl0F,EAAOC,GACvB0B,EAAKgF,mBAAmB1G,GAAa,GAAO,KAJM,OAAA82F,EAAAG,EAAA7lF,KAAA2lF,EAAA74F,OAAA4yB,EAAA,EAAA5yB,CAAA44F,EAAA,GAE7CE,EAF6CD,EAAA,GAEpCzmE,EAFoCymE,EAAA,GAOhDC,GAAW1mE,IACbnC,EAASA,EAAOjf,KAAK8nF,EAAQ9sF,MAAMomB,EAAgBhqB,kBACnDA,EAAkBA,EAAgB4I,KAAKohB,EAAgBhqB,kBATL,wBAAA2wF,EAAAznF,SAAAqnF,EAAAh6F,SAAhD,gBAAAq6F,GAAA,OAAAN,EAAAlnF,MAAA7S,KAAA8S,YAAA,IANQ,cAoBdwe,EAASA,EAAOhN,IAAI7a,GApBNqwF,EAAAp3E,OAAA,SAsBP4O,GAtBO,wBAAAwoE,EAAAnnF,SAAAinF,EAAA55F,SA7oOGA,KAqqOnBs6F,aArqOmBj5F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqqOJ,SAAAqpF,IAAA,IAAAC,EAAAhlE,EAAA,OAAA/C,EAAA3wB,EAAAwP,KAAA,SAAAmpF,GAAA,cAAAA,EAAAjpF,KAAAipF,EAAAhpF,MAAA,cAGb+mB,MAAMkiE,UAAUC,IAAM,WACpB,OAAO36F,KAAKimC,OAAO,SAAU20D,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG5DriE,MAAMkiE,UAAUrkF,IAAM,WACpB,OAAOrE,KAAKqE,IAAIxD,MAAM,KAAM7S,OAG9Bw4B,MAAMkiE,UAAUI,IAAM,WACpB,OAAO96F,KAAK26F,MAAQ36F,KAAKuB,QAGrBi5F,EAAM,GACNhlE,EAAsB3wB,EAAK3E,MAAMs1B,oBAhB1BilE,EAAAhpF,KAAA,EAiBP5M,EAAKiM,aAAazP,OAAOC,KAAKk0B,GAA9B,eAAAulE,EAAA15F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAoD,SAAA8pF,EAAO34D,GAAP,IAAA7xB,EAAAuD,EAAA,OAAA0e,EAAA3wB,EAAAwP,KAAA,SAAA2pF,GAAA,cAAAA,EAAAzpF,KAAAypF,EAAAxpF,MAAA,cAClDjB,EAAkBglB,EAAoB6M,GACtCtuB,EAAsB,SAAbsuB,EAFyC44D,EAAAxpF,KAAA,EAGlD5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAA0qF,EAAA75F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAiqF,EAAOj4F,GAAP,IAAAC,EAAAi4F,EAAAC,EAAAzuF,EAAA0uF,EAAAC,EAAAC,EAAAC,EAAA,OAAAhpE,EAAA3wB,EAAAwP,KAAA,SAAAoqF,GAAA,cAAAA,EAAAlqF,KAAAkqF,EAAAjqF,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgBw4F,EAAAjqF,KAAA,EAEhC5M,EAAKyP,gBAAgBnR,EAAY8J,QAAS8G,EAAQ,KAAM,MAAM,EAAO,KAAM,OAF3C,OAE9CqnF,EAF8CM,EAAAnnF,KAG9C8mF,EAAS,GACXzuF,EAAY,KACV0uF,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUL,EAAMA,EAAM75F,OAAS,GAErC65F,EAAM55F,QAAQ,SAAAk8C,GACP9wC,IACHyuF,EAAO9tF,KAAK,SACZ8tF,EAAO9tF,KAAK,QAGZX,EAAY,GACZ6uF,EAAQE,cAAcn6F,QAAQ,SAAAo6F,GAC5B,IAAMC,EAAgB14F,EAAYyJ,UAAU+iB,KAAK,SAAAmsE,GAAE,OAAKA,EAAG7uF,QAAQC,gBAAkB0uF,EAAG5uF,aAAaE,gBACjG2uF,GACFjvF,EAAUW,KAAKsuF,KAKnBR,EAAO9tF,KAAK,YACZ8tF,EAAO9tF,KAAK,cAEZguF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnB5uF,EAAUpL,QAAQ,SAAAC,GAChB45F,EAAO9tF,KAAK,OAAS9L,EAAEgG,MACvB4zF,EAAO9tF,KAAK,SAAW9L,EAAEgG,MAEzB8zF,EAAO95F,EAAEgG,MAAQ,GACjB+zF,EAAS/5F,EAAEgG,MAAQ,KAGrB6zF,EAAK/tF,KAAK8tF,EAAO1tF,KAAK,OAGxB,IAAM8I,EAAOmiB,IAAqB,IAAd8kB,EAAE1oC,WAAkBoB,OAAO,cACzC2lF,EAAOl3F,EAAKgN,MAAM6rC,EAAEs+C,UAAU13E,IAAI,MAAMhX,QAAQ,GAChD2uF,EAAQ7uF,WAAWswC,EAAEw+C,WAErBC,EAAM,GACZA,EAAI5uF,KAAJ,GAAA9J,OAAYP,EAAZ,KAAAO,OAAqB4+B,IACrB85D,EAAI5uF,KAAKkJ,GACT0lF,EAAI5uF,KAAKwuF,GACTI,EAAI5uF,KAAK0uF,GAELxlF,GAAQ,eACV8kF,EAAM,KAAShuF,KAAKH,WAAW2uF,IAC/BP,EAAQ,KAASjuF,KAAKH,WAAW6uF,KAGnCrvF,EAAUpL,QAAQ,SAAA46F,GAChB,IAAMC,EAAQ3+C,EAAEi+C,cAAchsE,KAAK,SAAAluB,GAAC,OAAKA,EAAEuL,aAAaE,gBAAkBkvF,EAAMnvF,QAAQC,gBACpFovF,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAO,CAGT,GAFAE,EAAU13F,EAAKgN,MAAMwqF,EAAMG,WAAWh8F,QAAwC,UAA9B4M,WAAWivF,EAAMG,WACjEF,EAASz3F,EAAKgN,MAAMwqF,EAAMN,MAAMv7F,QAA6C,UAAnCqE,EAAKgN,MAAMwqF,EAAMN,MAAMz3E,IAAI,MAClB,qBAAxC+3E,EAAK,GAAA54F,OAAI24F,EAAM30F,KAAV,kBAAgD,CAC9D,IAAMg1F,EAAiB53F,EAAKgN,MAAMwqF,EAAK,GAAA54F,OAAI24F,EAAM30F,KAAV,mBAAgC6c,IAAI,MACtEm4E,EAAej8F,UAClB87F,EAAQA,EAAMjqF,KAAKoqF,IAInBhmF,GAAQ,eACLjW,MAAM4M,WAAWkvF,KACpBf,EAAOa,EAAM30F,MAAM8F,KAAKH,WAAWkvF,IAEhC97F,MAAM4M,WAAWmvF,KACpBf,EAASY,EAAM30F,MAAM8F,KAAKH,WAAWmvF,KAK3CJ,EAAI5uF,KAAK+uF,GACTH,EAAI5uF,KAAKgvF,KAGXjB,EAAK/tF,KAAK4uF,EAAIxuF,KAAK,QAGrBtM,OAAOC,KAAKi6F,GAAQ/5F,QAAQ,SAAAC,GAC1B,IAAMi7F,EAAUnB,EAAO95F,GAAGk5F,MAAQY,EAAO95F,GAAGF,OAC5CsD,EAAKkf,UAAL,GAAAtgB,OAAkBP,EAAlB,KAAAO,OAA2B4+B,EAA3B,KAAA5+B,OAAuChC,EAAvC,iBAAAgC,OAAwDi5F,MAG1Dr7F,OAAOC,KAAKk6F,GAAUh6F,QAAQ,SAAAC,GAC5B,IAAMk7F,EAAWnB,EAAS/5F,GAAGk5F,MAAQa,EAAS/5F,GAAGF,OACjDsD,EAAKkf,UAAL,GAAAtgB,OAAkBP,EAAlB,KAAAO,OAA2B4+B,EAA3B,KAAA5+B,OAAuChC,EAAvC,kBAAAgC,OAAyDk5F,MAO3DnC,EAAIjtF,KAAK+tF,EAAK3tF,KAAK,OAvGiC,yBAAA+tF,EAAA/oF,SAAAwoF,EAAAn7F,SAAhD,gBAAA48F,GAAA,OAAA1B,EAAAroF,MAAA7S,KAAA8S,YAAA,IAHkD,wBAAAmoF,EAAAtoF,SAAAqoF,EAAAh7F,SAApD,gBAAA68F,GAAA,OAAA9B,EAAAloF,MAAA7S,KAAA8S,YAAA,IAjBO,OA+HbjO,EAAKkf,UAAUy2E,EAAI7sF,KAAK,OA/HX,wBAAA8sF,EAAA9nF,SAAA4nF,EAAAv6F,SArqOIA,KAsyOnB4yE,gBAtyOmBvxE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsyOD,SAAA4rF,IAAA,IAAAnvB,EAAAn9D,EAAAusF,EAAAzrE,EAAA0rE,EAAAlqF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2rF,GAAA,cAAAA,EAAAzrF,KAAAyrF,EAAAxrF,MAAA,cAAOk8D,EAAPqvB,EAAAz7F,OAAA,QAAAiuB,IAAAwtE,EAAA,GAAAA,EAAA,GAAkB,KAAMxsF,EAAxBwsF,EAAAz7F,OAAA,QAAAiuB,IAAAwtE,EAAA,GAAAA,EAAA,GAA0C,KAAMD,EAAhDC,EAAAz7F,OAAA,QAAAiuB,IAAAwtE,EAAA,GAAAA,EAAA,GAA+D,KAC3E1rE,EAASzsB,EAAKgN,MAAM,GAEnBrB,IACHA,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAJ9CipF,EAAAxrF,KAAA,EAOV5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAA0sF,EAAA77F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAisF,EAAOj6F,GAAP,IAAAC,EAAAgN,EAAAitF,EAAA,OAAA3qE,EAAA3wB,EAAAwP,KAAA,SAAA+rF,GAAA,cAAAA,EAAA7rF,KAAA6rF,EAAA5rF,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GAC9BiN,EAAgBw9D,EAAW,CAACA,GAAY,KAFM0vB,EAAA5rF,KAAA,EAGrB5M,EAAK6kF,qBAAqBvmF,EAAY4wB,KAAK9mB,QAAS8vF,EAAc5sF,GAH7C,QAG9CitF,EAH8CC,EAAA9oF,OAI5B6oF,EAAiBpxD,QACvC1a,EAASA,EAAOjf,KAAK+qF,EAAiBpxD,QALY,wBAAAqxD,EAAA1qF,SAAAwqF,EAAAn9F,SAAhD,gBAAAs9F,GAAA,OAAAJ,EAAArqF,MAAA7S,KAAA8S,YAAA,IAPU,cAAAmqF,EAAAv6E,OAAA,SAeT4O,GAfS,wBAAA2rE,EAAAtqF,SAAAmqF,EAAA98F,SAtyOCA,KAuzOnBgzE,gBAAkB,WAMhB,OALKnuE,EAAKwyB,aAGRxyB,EAAKwyB,aAAap3B,SAAS4E,EAAK3E,OAFhC2E,EAAKwyB,aAAe,IAAIjF,EAAavtB,EAAK3E,OAIrC2E,EAAKwyB,cA7zOKr3B,KA+zOnBu9F,oBAAsB,WACpB,IAAMjsE,EAAS,GACT9gB,EAAkB3L,EAAK3E,MAAMsQ,gBASnC,OAPAnP,OAAOC,KAAKkP,GAAiBhP,QAAQ,SAAA0B,GACnC,IAAMs6F,EAAiB34F,EAAK44F,kBAAkBjtF,EAAgBtN,IAC9D7B,OAAOC,KAAKk8F,GAAgBh8F,QAAQ,SAAAmsE,GAClCr8C,EAAOq8C,GAAY6vB,EAAe7vB,OAI/Br8C,GA10OUtxB,KA40OnBy9F,kBAAoB,SAACt6F,GACnB,IAAMmuB,EAAS,GACT8D,EAAmBvwB,EAAK4wB,uBACxBs3C,EAAYloE,EAAK+Q,gBAAgB,CAAC,cAiBxC,OAhBAvU,OAAOC,KAAKyrE,GAAWvrE,QAAQ,SAAAmsE,GAC7B,IAAMjjC,EAAiBqiC,EAAUY,GAC3B0mB,EAAiBxvF,EAAKotB,aAAa,CAAC,iBAAkBmD,GAAmBsV,IAAmB,IAC7FA,EAAe5W,SAAWugE,EAAen+D,SAAS/yB,EAAY4wB,KAAK7wB,QAAWwnC,EAAemjB,oBAAsBnjB,EAAemjB,kBAAkB33B,SAASd,KAIlI,SAA5BsV,EAAetnC,SACjBkuB,EAAOq8C,GAAYjjC,EAEGvnC,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAKA,EAAEqyB,SAAWryB,EAAEgG,KAAKyF,gBAAkBw9B,EAAetnC,SAAS8J,kBAEnHokB,EAAOq8C,GAAYjjC,MAIlBpZ,GAh2OUtxB,KAk2OnBq2B,qBAAuB,SAACqnE,GAA6C,IAAtC3rC,EAAsCj/C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAA1B,MAAO6qF,EAAmB7qF,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAZ,QACjDgiB,EAAgBjwB,EAAKgN,MAAMhN,EAAK+Q,gBAAgB,CAAC,UAAW,mBAC5Dk/E,EAAiBjwF,EAAKgN,MAAMhN,EAAK+Q,gBAAgB,CAAC,UAAW,oBAC7DgoF,EAAc,CAClB/pC,IAAO,CACLgqC,MAAS/oE,EAAcxQ,IAAI,YAC3Bw5E,OAAUhJ,EAAexwE,IAAI,aAE/BwvC,KAAQ,CACN+pC,MAAS/oE,EAAcxQ,IAAI,SAC3Bw5E,OAAUhJ,EAAexwE,IAAI,UAE/By5E,MAAS,CACPF,MAAS/oE,EAAcxQ,IAAI,IAC3Bw5E,OAAUhJ,EAAexwE,IAAI,KAE/B05E,KAAQ,CACNH,MAAS/oE,EAAcxQ,IAAI,GAC3Bw5E,OAAUhJ,EAAexwE,IAAI,KAIjC,OADAo5E,EAAQ74F,EAAKgN,MAAM6rF,MACLA,EAAMl9F,QACXk9F,EAAMrwF,MAAMuwF,EAAY7rC,GAAW4rC,IAErC,MA33OU39F,KA63OnBi+F,kCA73OmB,eAAAC,EAAA78F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA63OiB,SAAAitF,EAAOztF,GAAP,IAAAvN,EAAAgN,EAAAiuF,EAAArxB,EAAAsxB,EAAAvrF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAgtF,GAAA,cAAAA,EAAA9sF,KAAA8sF,EAAA7sF,MAAA,cAAgBtO,EAAhBk7F,EAAA98F,OAAA,QAAAiuB,IAAA6uE,EAAA,GAAAA,EAAA,GAA8B,KAAMluF,EAApCkuF,EAAA98F,OAAA,QAAAiuB,IAAA6uE,EAAA,GAAAA,EAAA,GAAoD,KAChFD,EAA4B,GAC5BrxB,EAAYloE,EAAK+Q,gBAAgB,CAAC,cAFN0oF,EAAA7sF,KAAA,EAI5B5M,EAAKiM,aAAazP,OAAOC,KAAKyrE,GAA9B,eAAAwxB,EAAAl9F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA0C,SAAAstF,EAAO7wB,GAAP,IAAAjjC,EAAAl6B,EAAA8gB,EAAA+F,EAAA,OAAA5E,EAAA3wB,EAAAwP,KAAA,SAAAmtF,GAAA,cAAAA,EAAAjtF,KAAAitF,EAAAhtF,MAAA,WAC1CtB,GAAkBA,EAAc+lB,SAASy3C,GADC,CAAA8wB,EAAAhtF,KAAA,eAAAgtF,EAAA/7E,OAAA,qBAKxCgoB,EAAiBqiC,EAAUY,IAEb75C,QAP0B,CAAA2qE,EAAAhtF,KAAA,eAAAgtF,EAAA/7E,OAAA,kBAWxClS,EAAkB,IACRrN,EAAYD,OAASC,EAEjCmuB,EAAS,KAdiCmtE,EAAAtqE,GAetCw5C,EAfsC8wB,EAAAhtF,KAgBvC,SAhBuCgtF,EAAAtqE,GAAA,GAmBvC,SAnBuCsqE,EAAAtqE,GAAA,2BAAAsqE,EAAAhtF,KAAA,GAiB3B5M,EAAKiuE,wBAAwBpiE,EAASF,GAjBX,eAiB1C8gB,EAjB0CmtE,EAAAlqF,KAAAkqF,EAAA/7E,OAAA,2BAoBpC2U,EAAexyB,EAAKmuE,kBApBgByrB,EAAAhtF,KAAA,GAqB3B4lB,EAAapC,oBAAoBvkB,EAASF,GArBf,eAqB1C8gB,EArB0CmtE,EAAAlqF,KAAAkqF,EAAA/7E,OAAA,2BAAA+7E,EAAA/7E,OAAA,oBA2B1C4O,IACFA,EAASA,EAAOhN,IAAI,MAChBomB,EAAepU,wBACjBhF,EAASzsB,EAAKwxB,qBAAqB/E,EAAQoZ,EAAepU,sBAAuBoU,EAAeuoC,mBAElGmrB,EAA0BzwB,GAAYr8C,GAhCM,yBAAAmtE,EAAA9rF,SAAA6rF,EAAAx+F,SAA1C,gBAAA0+F,GAAA,OAAAH,EAAA1rF,MAAA7S,KAAA8S,YAAA,IAJ4B,cAAAwrF,EAAA57E,OAAA,SAwC3B07E,GAxC2B,wBAAAE,EAAA3rF,SAAAwrF,EAAAn+F,SA73OjB,gBAAA2+F,GAAA,OAAAT,EAAArrF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu6OnB4+F,8BAv6OmB,eAAAC,EAAAx9F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu6Oa,SAAA4tF,EAAO37F,GAAP,IAAA47F,EAAAvB,EAAAwB,EAAAlsF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2tF,GAAA,cAAAA,EAAAztF,KAAAytF,EAAAxtF,MAAA,cAAAutF,EAAAz9F,OAAA,QAAAiuB,IAAAwvE,EAAA,GAAAA,EAAA,GAAoC,KAC5DD,EAAwB,GACxBvB,EAAiB34F,EAAK44F,kBAAkBt6F,GAFhB87F,EAAAxtF,KAAA,EAIxB5M,EAAKiM,aAAazP,OAAOC,KAAKk8F,GAA9B,eAAA0B,EAAA79F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+C,SAAAiuF,EAAOxxB,GAAP,IAAAyxB,EAAA10D,EAAArT,EAAA,OAAA5E,EAAA3wB,EAAAwP,KAAA,SAAA+tF,GAAA,cAAAA,EAAA7tF,KAAA6tF,EAAA5tF,MAAA,OAC/C2tF,EAAW,KACT10D,EAAiB8yD,EAAe7vB,GAFa0xB,EAAAlrE,GAI3Cw5C,EAJ2C0xB,EAAA5tF,KAK5C,SAL4C4tF,EAAAlrE,GAAA,EAQ5C,WAR4CkrE,EAAAlrE,GAAA,EAS5C,YAT4CkrE,EAAAlrE,GAAA,EAY5C,SAZ4CkrE,EAAAlrE,GAAA,0BAAAkrE,EAAA5tF,KAAA,EAM9B5M,EAAKsuE,oBAAoBhwE,EAAa,MAAM,GANd,cAM/Ci8F,EAN+CC,EAAA9qF,KAAA8qF,EAAA38E,OAAA,0BAAA28E,EAAA5tF,KAAA,GAU9B5M,EAAKuuE,uBAAuBjwE,EAAa,MAAM,GAVjB,eAU/Ci8F,EAV+CC,EAAA9qF,KAAA8qF,EAAA38E,OAAA,2BAazC2U,EAAexyB,EAAKmuE,kBAbqBqsB,EAAA5tF,KAAA,GAc9B4lB,EAAa9C,SAASpxB,EAAY4wB,KAAK9mB,SAdT,eAc/CmyF,EAd+CC,EAAA9qF,KAAA8qF,EAAA38E,OAAA,2BAAA28E,EAAA38E,OAAA,oBAoB/C08E,IACFA,EAAWA,EAAS96E,IAAI,MACpBomB,EAAepU,uBAAyBoU,EAAeuoC,mBACzDmsB,EAAWv6F,EAAKwxB,qBAAqB+oE,EAAU10D,EAAepU,sBAAuBoU,EAAeuoC,mBAEtG8rB,EAAsBpxB,GAAYyxB,GAzBe,yBAAAC,EAAA1sF,SAAAwsF,EAAAn/F,SAA/C,gBAAAs/F,GAAA,OAAAJ,EAAArsF,MAAA7S,KAAA8S,YAAA,IAJwB,cAAAmsF,EAAAv8E,OAAA,SAiCvBq8E,GAjCuB,wBAAAE,EAAAtsF,SAAAmsF,EAAA9+F,SAv6Ob,gBAAAu/F,GAAA,OAAAV,EAAAhsF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA08OnBw/F,iBA18OmB,eAAAC,EAAAp+F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA08OA,SAAAwuF,EAAOx8F,EAAOC,GAAd,IAAAgN,EAAA48D,EAAA4yB,EAAAC,EAAA9sF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAuuF,GAAA,cAAAA,EAAAruF,KAAAquF,EAAApuF,MAAA,cAA2BtB,EAA3ByvF,EAAAr+F,OAAA,QAAAiuB,IAAAowE,EAAA,GAAAA,EAAA,GAA2C,KACtD7yB,EAAYloE,EAAK+Q,gBAAgB,CAAC,cAClC+pF,EAAgB,GAFLE,EAAApuF,KAAA,EAIX5M,EAAKiM,aAAazP,OAAOC,KAAKyrE,GAA9B,eAAA+yB,EAAAz+F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA0C,SAAA6uF,EAAOpyB,GAAP,IAAAjjC,EAAApZ,EAAAmC,EAAAusE,EAAAC,EAAA7L,EAAAQ,EAAAsL,EAAAC,EAAAC,EAAAzH,EAAAthE,EAAA,OAAA5E,EAAA3wB,EAAAwP,KAAA,SAAA+uF,GAAA,cAAAA,EAAA7uF,KAAA6uF,EAAA5uF,MAAA,WAE1CtB,GAAkBA,EAAc+lB,SAASy3C,GAFC,CAAA0yB,EAAA5uF,KAAA,eAAA4uF,EAAA39E,OAAA,qBAMxCgoB,EAAiBqiC,EAAUY,IAEb75C,UAA6C,IAAlC4W,EAAe41D,eARA,CAAAD,EAAA5uF,KAAA,eAAA4uF,EAAA39E,OAAA,iBAY1C4O,EAAS,KACTmC,EAAkB,KAbwB4sE,EAAAlsE,GAetCw5C,EAfsC0yB,EAAA5uF,KAgBvC,WAhBuC4uF,EAAAlsE,GAAA,GAiBvC,YAjBuCksE,EAAAlsE,GAAA,GAuCvC,SAvCuCksE,EAAAlsE,GAAA,GA6DvC,SA7DuCksE,EAAAlsE,GAAA,oBAAAksE,EAAArnD,GAkBlCtO,EAAe41D,eAlBmBD,EAAA5uF,MAAA4uF,EAAArnD,GAAA,yBAAAqnD,EAAA5uF,KAAA,GAqBJsQ,QAAQqD,IAAI,CAC5CvgB,EAAK6xF,cAAcxzF,EAAOC,GAC1B0B,EAAKgF,mBAAmB1G,GAAa,GAAO,KAvBR,eAAA68F,EAAAK,EAAA9rF,KAAA0rF,EAAA5+F,OAAA4yB,EAAA,EAAA5yB,CAAA2+F,EAAA,GAqBrC1uE,EArBqC2uE,EAAA,IAqB7BxsE,EArB6BwsE,EAAA,MA4B9B7L,EAAejxF,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAKA,EAAEgG,OAASijC,EAAetnC,aAE1EqwB,EAAgB9pB,yBAAyByqF,EAAannF,QAAQC,iBAC1D0nF,EAAqBnhE,EAAgB9pB,yBAAyByqF,EAAannF,QAAQC,eACzFokB,EAASA,EAAOjkB,MAAMunF,IAhCUyL,EAAA39E,OAAA,2BAAA29E,EAAA39E,OAAA,oBAAA29E,EAAA1+C,GAwClCjX,EAAe41D,eAxCmBD,EAAA5uF,MAAA4uF,EAAA1+C,GAAA,yBAAA0+C,EAAA5uF,KAAA,GA2CJsQ,QAAQqD,IAAI,CAC5CvgB,EAAKuyF,WAAWl0F,EAAOC,GACvB0B,EAAKgF,mBAAmB1G,GAAa,GAAO,KA7CR,eAAA+8F,EAAAG,EAAA9rF,KAAA4rF,EAAA9+F,OAAA4yB,EAAA,EAAA5yB,CAAA6+F,EAAA,GA2CrC5uE,EA3CqC6uE,EAAA,IA2C7B1sE,EA3C6B0sE,EAAA,MAkD9BC,EAAej9F,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,MAAgB,aAAXA,EAAEgG,SAElDgsB,EAAgB9pB,yBAAyBy2F,EAAanzF,QAAQC,iBAC1DyrF,EAAyBllE,EAAgB9pB,yBAAyBy2F,EAAanzF,QAAQC,eAC7FokB,EAASA,EAAOjkB,MAAMsrF,IAtDU0H,EAAA39E,OAAA,2BAAA29E,EAAA39E,OAAA,oBA8DpC2U,EAAexyB,EAAKmuE,kBA9DgBqtB,EAAAntB,GA+DlCxoC,EAAe41D,eA/DmBD,EAAA5uF,KAgEnC,QAhEmC4uF,EAAAntB,GAAA,GAmEnC,iBAnEmCmtB,EAAAntB,GAAA,GA0EnC,qBA1EmCmtB,EAAAntB,GAAA,2BAAAmtB,EAAA5uF,KAAA,GAiEvB4lB,EAAanE,OAAOhwB,EAAOC,GAjEJ,eAiEtCmuB,EAjEsC+uE,EAAA9rF,KAAA8rF,EAAA39E,OAAA,2BAAA29E,EAAA5uF,KAAA,GAoEvB4lB,EAAa9C,SAASpxB,EAAY4wB,KAAK9mB,SApEhB,eAoEtCqkB,EApEsC+uE,EAAA9rF,QAsEpC+c,EAASzsB,EAAKwQ,iBAAiBic,EAAQ,IACvCA,EAASzsB,EAAKwxB,qBAAqB/E,EAAQoZ,EAAepU,sBAAuBoU,EAAeuoC,mBAvE5DotB,EAAA39E,OAAA,2BAAA29E,EAAA5uF,KAAA,GA2EvB4lB,EAAapC,oBAAoB9xB,GA3EV,eA2EtCmuB,EA3EsC+uE,EAAA9rF,KAAA8rF,EAAA39E,OAAA,2BAAA29E,EAAA39E,OAAA,mCAAA29E,EAAA39E,OAAA,oBAqF/B,OAAX4O,GAAmBzsB,EAAKgN,MAAMyf,GAAQ7b,GAAG,KAC3CkqF,EAAchyB,GAAYr8C,GAtFkB,yBAAA+uE,EAAA1tF,SAAAotF,EAAA//F,SAA1C,gBAAAugG,GAAA,OAAAT,EAAAjtF,MAAA7S,KAAA8S,YAAA,IAJW,cAAA+sF,EAAAn9E,OAAA,SA8FVi9E,GA9FU,wBAAAE,EAAAltF,SAAA+sF,EAAA1/F,SA18OA,gBAAAwgG,EAAAC,GAAA,OAAAhB,EAAA5sF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA0iPnB0pF,qBA1iPmBroF,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0iPI,SAAAwvF,IAAA,IAAAzzF,EAAA8vF,EAAA5sF,EAAAkjB,EAAAtD,EAAAg9C,EAAAqc,EAAAuX,EAAA7tF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAsvF,GAAA,cAAAA,EAAApvF,KAAAovF,EAAAnvF,MAAA,UAAOxE,EAAP0zF,EAAAp/F,OAAA,QAAAiuB,IAAAmxE,EAAA,GAAAA,EAAA,GAAiB,KAAM5D,EAAvB4D,EAAAp/F,OAAA,QAAAiuB,IAAAmxE,EAAA,GAAAA,EAAA,GAAsC,MAAOxwF,EAA7CwwF,EAAAp/F,OAAA,QAAAiuB,IAAAmxE,EAAA,GAAAA,EAAA,GAA6D,KAC7E1zF,IACHA,EAAUpI,EAAK3E,MAAMiD,YAAY4wB,KAAK9mB,SAGlComB,EALe,wBAAA5vB,OAKyBwJ,EALzB,KAAAxJ,OAKoCs5F,EALpC,KAAAt5F,OAKoDwM,KAAKC,UAAUC,IAErE,QADb4f,EAAalrB,EAAKiuC,cAAczf,IANjB,CAAAutE,EAAAnvF,KAAA,eAAAmvF,EAAAl+E,OAAA,SAQZqN,GARY,cAWfg9C,EAAYloE,EAAK+Q,gBAAgB,CAAC,cAClCwzE,EAAoB,GAZLwX,EAAAnvF,KAAA,GAcf5M,EAAKiM,aAAazP,OAAOC,KAAKyrE,GAA9B,eAAA8zB,EAAAx/F,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA0C,SAAA4vF,EAAO59F,GAAP,IAAAwnC,EAAA0rD,EAAA2K,EAAAnzD,EAAAozD,EAAAhhE,EAAA,OAAAvN,EAAA3wB,EAAAwP,KAAA,SAAA2vF,GAAA,cAAAA,EAAAzvF,KAAAyvF,EAAAxvF,MAAA,WAE1CtB,GAAkBA,EAAc+lB,SAAShzB,GAFC,CAAA+9F,EAAAxvF,KAAA,eAAAwvF,EAAAv+E,OAAA,qBAMxCgoB,EAAiBqiC,EAAU7pE,IAEb4wB,QAR0B,CAAAmtE,EAAAxvF,KAAA,eAAAwvF,EAAAv+E,OAAA,wBAYxC0zE,EAAkB,CACtBnpF,QAASy9B,EAAewhD,iBAAmBxhD,EAAez9B,SAbdg0F,EAAAxvF,KAAA,EAiBlB5M,EAAKs8E,mBAAmBj+E,EAAO+J,GAjBb,YAiB1C8zF,EAjB0CE,EAAA1sF,MAAA,CAAA0sF,EAAAxvF,KAAA,YAqBxCm8B,EAAsB,MACtBmvD,EAtBwC,CAAAkE,EAAAxvF,KAAA,gBAuBpCuvF,EAAkBn8F,EAAK+Q,gBAAgB,CAAC,QAAS,SAAUmnF,EAAalnF,gBAvBpCorF,EAAAzvF,KAAA,GAAAyvF,EAAAxvF,KAAA,GAyBZ5M,EAAKqvB,yBAAyB8sE,EAAiB5K,GAzBnC,QAyBxCxoD,EAzBwCqzD,EAAA1sF,KAAA0sF,EAAAxvF,KAAA,iBAAAwvF,EAAAzvF,KAAA,GAAAyvF,EAAA9sE,GAAA8sE,EAAA,UA2BxCrzD,EAAsB/oC,EAAKgN,MAAM,GA3BO,QA+BtCmuB,EAAen7B,EAAKwQ,iBAAiB0rF,EAAiBh0B,EAAU7pE,GAAOrC,SAAU+sC,GAGvFw7C,EAAkBlmF,GAAS88B,EAGtBopD,EAAkBp9C,QACrBo9C,EAAkBp9C,MAAQnnC,EAAKgN,MAAM,IAIvCu3E,EAAkBp9C,MAAQo9C,EAAkBp9C,MAAM35B,KAAK+2E,EAAkBlmF,IA1C7B,yBAAA+9F,EAAAtuF,SAAAmuF,EAAA9gG,KAAA,cAA1C,gBAAAkhG,GAAA,OAAAL,EAAAhuF,MAAA7S,KAAA8S,YAAA,IAde,eAAA8tF,EAAAl+E,OAAA,SA4Dd7d,EAAKmrB,cAAcqD,EAAe+1D,IA5DpB,yBAAAwX,EAAAjuF,SAAA+tF,EAAA1gG,SA1iPJA,KAwmPnBytE,wBAA0B,SAACxgE,GACzB,IAAKA,EACH,OAAO,EAET,IAAMk0F,EAAgBt8F,EAAK+Q,gBAAgB,CAAC,QAAQ,WAChDwrF,EAAa//F,OAAOC,KAAK6/F,GAAexxE,KAAK,SAAAzsB,GAC/C,IAAMC,EAAcg+F,EAAcj+F,GAClC,OAAOC,EAAY2wB,SAAW3wB,EAAY8J,SAAW9J,EAAY8J,QAAQC,gBAAkBD,EAAQC,gBAEjGm0F,EAAmB,KAOvB,OANID,GACFC,EAAmBF,EAAcC,IAChBl+F,MAAQk+F,EAEzBC,EAAmBx8F,EAAKy8F,2BAA2Br0F,GAE9Co0F,GAxnPUrhG,KA0nPnBshG,2BAA6B,SAACr0F,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM8/D,EAAYloE,EAAK+Q,gBAAgB,CAAC,cACxC,OAAOvU,OAAOqQ,OAAOq7D,GAAWp9C,KAAK,SAAAxsB,GAAW,OAAKA,EAAY2wB,SAAW3wB,EAAY8J,SAAW9J,EAAY8J,QAAQC,gBAAkBD,EAAQC,iBA/nPhIlN,KAioPnB+zE,6BAjoPmB1yE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAioPY,SAAAqwF,IAAA,IAAA7wF,EAAAF,EAAAusF,EAAAyE,EAAAnuE,EAAAtD,EAAA0xE,EAAAC,EAAAC,EAAA7uF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAswF,GAAA,cAAAA,EAAApwF,KAAAowF,EAAAnwF,MAAA,UAAOf,EAAPixF,EAAApgG,OAAA,QAAAiuB,IAAAmyE,EAAA,GAAAA,EAAA,GAAiB,KAAMnxF,EAAvBmxF,EAAApgG,OAAA,QAAAiuB,IAAAmyE,EAAA,GAAAA,EAAA,GAAyC,KAAM5E,EAA/C4E,EAAApgG,OAAA,QAAAiuB,IAAAmyE,EAAA,GAAAA,EAAA,GAA8D,KAAMH,IAApEG,EAAApgG,OAAA,QAAAiuB,IAAAmyE,EAAA,KAAAA,EAAA,GAGvBtuE,EAHuB,6BAAA5vB,OAGsBiN,EAHtB,KAAAjN,OAGiC+M,EAAkBP,KAAKC,UAAU7O,OAAOC,KAAKkP,IAAoB,OAHlG,KAAA/M,OAG4Gs5F,EAH5G,KAAAt5F,OAG4H+9F,KACnJzxE,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QALb,CAAAohG,EAAAnwF,KAAA,eAAAmwF,EAAAl/E,OAAA,SAMpB7d,EAAKgN,MAAMke,IANS,cAAA6xE,EAAAnwF,KAAA,GASO5M,EAAKg9F,yBAAyBnxF,EAASF,EAAiBusF,EAAc,KAAMyE,GATnF,aASvBC,EATuBG,EAAArtF,MAAA,CAAAqtF,EAAAnwF,KAAA,gBAWrBiwF,EAAoBrgG,OAAOqQ,OAAO+vF,GAAuBx7D,OAAO,SAACC,EAAK47D,GAE1E,OADA57D,EAAMA,EAAI7zB,KAAKxN,EAAKgN,MAAMiwF,KAEzBj9F,EAAKgN,MAAM,IAda+vF,EAAAl/E,OAAA,SAgBpB7d,EAAK8vB,8BAA8BtB,EAAequE,IAhB9B,eAAAE,EAAAl/E,OAAA,SAkBtB7d,EAAKgN,MAAM,IAlBW,yBAAA+vF,EAAAjvF,SAAA4uF,EAAAvhG,SAjoPZA,KAqpPnB+hG,oBArpPmB,eAAAC,EAAA3gG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqpPG,SAAA+wF,EAAOvxF,EAASvN,GAAhB,IAAAmuB,EAAA4wE,EAAA,OAAAzvE,EAAA3wB,EAAAwP,KAAA,SAAA6wF,GAAA,cAAAA,EAAA3wF,KAAA2wF,EAAA1wF,MAAA,cACff,IACHA,EAAU7L,EAAK3E,MAAMwQ,SAEjB4gB,EAAS,GAJK6wE,EAAA1wF,KAAA,EAKW5M,EAAKu9F,wBAAwBj/F,EAAY4wB,KAAK7wB,MAAOwN,GALhE,YAKdwxF,EALcC,EAAA5tF,MAAA,CAAA4tF,EAAA1wF,KAAA,eAAA0wF,EAAA1wF,KAAA,EAOZ5M,EAAKiM,aAAaoxF,EAAlB,eAAAG,EAAAhhG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAoC,SAAAoxF,EAAOR,EAAgBS,GAAvB,IAAAC,EAAA93D,EAAA,OAAAjY,EAAA3wB,EAAAwP,KAAA,SAAAmxF,GAAA,cAAAA,EAAAjxF,KAAAixF,EAAAhxF,MAAA,cAAAgxF,EAAAhxF,KAAA,EAEV5M,EAAK69F,yBAAyBv/F,EAAY4wB,KAAK7wB,MAAOq/F,GAF5C,QAElCC,EAFkCC,EAAAluF,QAKhCm2B,EAAiB7lC,EAAKy8F,2BAA2BkB,MAErDlxE,EAAOoZ,EAAexnC,OAASq/F,GAPK,wBAAAE,EAAA9vF,SAAA2vF,EAAAtiG,SAApC,gBAAA2iG,EAAAC,GAAA,OAAAP,EAAAxvF,MAAA7S,KAAA8S,YAAA,IAPY,cAAAqvF,EAAAz/E,OAAA,SAoBb4O,GApBa,wBAAA6wE,EAAAxvF,SAAAsvF,EAAAjiG,SArpPH,gBAAA6iG,EAAAC,GAAA,OAAAd,EAAAnvF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA2qPnB0iG,yBA3qPmB,eAAAK,EAAA1hG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA2qPQ,SAAA8xF,EAAO9/F,EAAOq/F,GAAd,IAAAlvE,EAAAtD,EAAAyyE,EAAA,OAAA/vE,EAAA3wB,EAAAwP,KAAA,SAAA2xF,GAAA,cAAAA,EAAAzxF,KAAAyxF,EAAAxxF,MAAA,UACnB4hB,EADmB,0BAAA5vB,OACuBP,EADvB,KAAAO,OACgC8+F,KACnDxyE,EAAalrB,EAAK6vB,8BAA8BrB,IAF7B,CAAA4vE,EAAAxxF,KAAA,eAAAwxF,EAAAvgF,OAAA,SAKhBqN,GALgB,cAAAkzE,EAAAxxF,KAAA,EAQK5M,EAAKkuB,oBAAoB7vB,EAAO,YAAa,CAACq/F,IARnD,cAQnBC,EARmBS,EAAA1uF,KAAA0uF,EAAAvgF,OAAA,SASlB7d,EAAK8vB,8BAA8BtB,EAAemvE,EAAiB,OATjD,wBAAAS,EAAAtwF,SAAAqwF,EAAAhjG,SA3qPR,gBAAAkjG,EAAAC,GAAA,OAAAJ,EAAAlwF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAsrPnBoiG,wBAtrPmB,eAAAgB,EAAA/hG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAsrPO,SAAAmyF,EAAOngG,EAAOwN,GAAd,IAAA2iB,EAAAtD,EAAAyyE,EAAA,OAAA/vE,EAAA3wB,EAAAwP,KAAA,SAAAgyF,GAAA,cAAAA,EAAA9xF,KAAA8xF,EAAA7xF,MAAA,UAClB4hB,EADkB,sBAAA5vB,OACoBP,EADpB,KAAAO,OAC6BiN,KAC/Cqf,EAAalrB,EAAK6vB,8BAA8BrB,IAF9B,CAAAiwE,EAAA7xF,KAAA,eAAA6xF,EAAA5gF,OAAA,SAIfqN,GAJe,cAAAuzE,EAAA7xF,KAAA,EAOM5M,EAAKkuB,oBAAoB7vB,EAAO,sBAAuB,CAACwN,IAP9D,cAOlB8xF,EAPkBc,EAAA/uF,KAAA+uF,EAAA5gF,OAAA,SAQjB7d,EAAK8vB,8BAA8BtB,EAAemvE,IARjC,wBAAAc,EAAA3wF,SAAA0wF,EAAArjG,SAtrPP,gBAAAujG,EAAAC,GAAA,OAAAJ,EAAAvwF,MAAA7S,KAAA8S,YAAA,GAAA9S,KAgsPnB6hG,yBAhsPmBxgG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAgsPQ,SAAAuyF,IAAA,IAAA/yF,EAAAF,EAAAusF,EAAA2G,EAAAlC,EAAAlwE,EAAAqyE,EAAA7wF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAsyF,GAAA,cAAAA,EAAApyF,KAAAoyF,EAAAnyF,MAAA,cAAOf,EAAPizF,EAAApiG,OAAA,QAAAiuB,IAAAm0E,EAAA,GAAAA,EAAA,GAAiB,KAAMnzF,EAAvBmzF,EAAApiG,OAAA,QAAAiuB,IAAAm0E,EAAA,GAAAA,EAAA,GAAyC,KAAM5G,EAA/C4G,EAAApiG,OAAA,QAAAiuB,IAAAm0E,EAAA,GAAAA,EAAA,GAA8D,KAAMD,EAApEC,EAAApiG,OAAA,QAAAiuB,IAAAm0E,EAAA,GAAAA,EAAA,GAA2F,KAAMnC,EAAjGmC,EAAApiG,OAAA,QAAAiuB,IAAAm0E,EAAA,IAAAA,EAAA,GACpBjzF,IACHA,EAAU7L,EAAK3E,MAAMwQ,UAElBF,GAAmB3L,EAAK3E,MAAMs1B,qBAAuB3wB,EAAK3E,MAAM8T,mBACnExD,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB3wB,EAAK3E,MAAM8T,mBAGxDsd,EAAS,GARUsyE,EAAAnyF,KAAA,GAUnB5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAqzF,EAAAxiG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAA4yF,EAAO5gG,GAAP,IAAA+wD,EAAAiuC,EAAA,OAAAzvE,EAAA3wB,EAAAwP,KAAA,SAAAyyF,GAAA,cAAAA,EAAAvyF,KAAAuyF,EAAAtyF,MAAA,cAC9CwiD,EAAkBzjD,EAAgBtN,GAAO6wB,KADKgwE,EAAAtyF,KAAA,EAIrB5M,EAAKu9F,wBAAwBnuC,EAAgB/wD,MAAOwN,GAJ/B,YAI9CwxF,EAJ8C6B,EAAAxvF,MAAA,CAAAwvF,EAAAtyF,KAAA,eAAAsyF,EAAAtyF,KAAA,EAS5C5M,EAAKiM,aAAaoxF,EAAlB,eAAA8B,EAAA3iG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAoC,SAAA+yF,EAAOnC,EAAgBS,GAAvB,IAAAC,EAAA93D,EAAAkD,EAAAozD,EAAA,OAAAvuE,EAAA3wB,EAAAwP,KAAA,SAAA4yF,GAAA,cAAAA,EAAA1yF,KAAA0yF,EAAAzyF,MAAA,cACxCqwF,EAAiBj9F,EAAKgN,MAAMiwF,GADYoC,EAAAzyF,KAAA,EAGV5M,EAAK69F,yBAAyBzuC,EAAgB/wD,MAAOq/F,GAH3C,YAGlCC,EAHkC0B,EAAA3vF,MAAA,CAAA2vF,EAAAzyF,KAAA,cAQhCi5B,EAAiBg5D,GAA8C7+F,EAAKy8F,2BAA2BkB,KAE7EhB,IAAoB92D,EAAeza,cAAgBya,EAAez9B,SAAWy9B,EAAez9B,QAAQC,gBAAkBs1F,EAAgBt1F,cAVxH,CAAAg3F,EAAAzyF,KAAA,YAahCm8B,EAAsB,MACtBmvD,EAdgC,CAAAmH,EAAAzyF,KAAA,cAe5BuvF,EAAkBn8F,EAAK+Q,gBAAgB,CAAC,QAAS,SAAUmnF,EAAalnF,iBAf5C,CAAAquF,EAAAzyF,KAAA,gBAAAyyF,EAAA1yF,KAAA,GAAA0yF,EAAAzyF,KAAA,GAkBF5M,EAAKqvB,yBAAyB8sE,EAAiBt2D,GAlB7C,QAkB9BkD,EAlB8Bs2D,EAAA3vF,KAAA2vF,EAAAzyF,KAAA,iBAAAyyF,EAAA1yF,KAAA,GAAA0yF,EAAA/vE,GAAA+vE,EAAA,kBAyBpCpC,EAAiBj9F,EAAKwQ,iBAAiBysF,EAAgBp3D,EAAe7pC,SAAU+sC,GAK3Etc,EAAOoZ,EAAexnC,SACzBouB,EAAOoZ,EAAexnC,OAAS2B,EAAKgN,MAAM,IAI5Cyf,EAAOoZ,EAAexnC,OAASouB,EAAOoZ,EAAexnC,OAAOmP,KAAKyvF,GAnC7B,yBAAAoC,EAAAvxF,SAAAsxF,EAAAjkG,KAAA,cAApC,gBAAAmkG,EAAAC,GAAA,OAAAJ,EAAAnxF,MAAA7S,KAAA8S,YAAA,IAT4C,wBAAAixF,EAAApxF,SAAAmxF,EAAA9jG,SAAhD,gBAAAqkG,GAAA,OAAAR,EAAAhxF,MAAA7S,KAAA8S,YAAA,IAVmB,eAAA8wF,EAAAlhF,OAAA,SA6DlB4O,GA7DkB,yBAAAsyE,EAAAjxF,SAAA8wF,EAAAzjG,SAhsPRA,KA+vPnBskG,aA/vPmBjjG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA+vPJ,SAAAqzF,IAAA,IAAAphG,EAAA6xE,EAAAwvB,EAAA1xF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAmzF,GAAA,cAAAA,EAAAjzF,KAAAizF,EAAAhzF,MAAA,eAAOtO,EAAPqhG,EAAAjjG,OAAA,QAAAiuB,IAAAg1E,EAAA,GAAAA,EAAA,GAAqB,OACd3/F,EAAK3E,MAAMiD,cAC7BA,EAAc0B,EAAK3E,MAAMiD,aAFdshG,EAAAhzF,KAAA,EAIK5M,EAAK+mC,0BAA0BzoC,EAAY4wB,KAAK7wB,MAAO,MAAO,GAAI,GAAI,SAAU,MAJrF,YAIP8xE,EAJOyvB,EAAAlwF,MAAA,CAAAkwF,EAAAhzF,KAAA,eAAAgzF,EAAA/hF,OAAA,SAMJ7d,EAAKgN,MAAMmjE,GAAK1wD,IAAIzf,EAAKgN,MAAM,OAN3B,cAAA4yF,EAAA/hF,OAAA,SAQN,MARM,wBAAA+hF,EAAA9xF,SAAA4xF,EAAAvkG,SA/vPIA,KAywPnB2zE,iBAzwPmBtyE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAywPA,SAAAwzF,IAAA,IAAAvhG,EAAAuN,EAAAi0F,EAAAC,EAAAC,EAAAxzF,EAAA0gE,EAAA+yB,EAAAC,EAAAC,EAAAlyF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2zF,GAAA,cAAAA,EAAAzzF,KAAAyzF,EAAAxzF,MAAA,UAAOtO,EAAP6hG,EAAAzjG,OAAA,QAAAiuB,IAAAw1E,EAAA,GAAAA,EAAA,GAAqB,KAAMt0F,EAA3Bs0F,EAAAzjG,OAAA,QAAAiuB,IAAAw1E,EAAA,GAAAA,EAAA,GAAqC,MACjD7hG,GAAe0B,EAAK3E,MAAMiD,cAC7BA,EAAc0B,EAAK3E,MAAMiD,cAEtBuN,GAAW7L,EAAK3E,MAAMwQ,UACzBA,EAAU7L,EAAK3E,MAAMwQ,SAGlBA,GAAYvN,EARA,CAAA8hG,EAAAxzF,KAAA,eAAAwzF,EAAAviF,OAAA,SASR,MATQ,cAAAuiF,EAAAxzF,KAAA,EAgBPsQ,QAAQqD,IAAI,CACpBvgB,EAAKy/F,aAAanhG,GAClB0B,EAAKspE,eAAe,aAAchrE,EAAYD,MAAOC,EAAauN,GAClE7L,EAAKspE,eAAe,oBAAqBhrE,EAAYD,MAAOC,EAAauN,KAnB1D,UAAAi0F,EAAAM,EAAA1wF,KAAAqwF,EAAAvjG,OAAA4yB,EAAA,EAAA5yB,CAAAsjG,EAAA,GAafE,EAbeD,EAAA,GAcfvzF,EAdeuzF,EAAA,GAef7yB,EAfe6yB,EAAA,KAsBbC,GAAiBxzF,GAAc0gE,GAtBlB,CAAAkzB,EAAAxzF,KAAA,gBAuBTqzF,EAAO/yB,EAAkBz/D,MAAMjB,GAC/B0zF,EAAOD,EAAKz3F,MAAMw3F,GAxBTI,EAAAviF,OAAA,SA4BRqiF,GA5BQ,eAAAE,EAAAviF,OAAA,SA+BV,MA/BU,yBAAAuiF,EAAAtyF,SAAA+xF,EAAA1kG,SAzwPAA,KA0yPnB8zE,uBA1yPmB,eAAAoxB,EAAA7jG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0yPM,SAAAi0F,EAAOz6D,GAAP,IAAAh6B,EAAAF,EAAAusF,EAAA0E,EAAA2D,EAAAtyF,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+zF,GAAA,cAAAA,EAAA7zF,KAAA6zF,EAAA5zF,MAAA,cAAuBf,EAAvB00F,EAAA7jG,OAAA,QAAAiuB,IAAA41E,EAAA,GAAAA,EAAA,GAAiC,KAAM50F,EAAvC40F,EAAA7jG,OAAA,QAAAiuB,IAAA41E,EAAA,GAAAA,EAAA,GAAyD,KAAMrI,EAA/DqI,EAAA7jG,OAAA,QAAAiuB,IAAA41E,EAAA,GAAAA,EAAA,GAA8E,KAA9EC,EAAA5zF,KAAA,EACa5M,EAAKg9F,yBAAyBnxF,EAASF,EAAiBusF,EAAcryD,GADnF,cACjB+2D,EADiB4D,EAAA9wF,KAAA8wF,EAAA3iF,OAAA,SAEhB++E,GAAyBA,EAAsB/2D,EAAexnC,OAASu+F,EAAsB/2D,EAAexnC,OAAS2B,EAAKgN,MAAM,IAFhH,wBAAAwzF,EAAA1yF,SAAAwyF,EAAAnlG,SA1yPN,gBAAAslG,GAAA,OAAAJ,EAAAryF,MAAA7S,KAAA8S,YAAA,GAAA9S,KA8yPnBulG,YA9yPmBlkG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA8yPL,SAAAs0F,IAAA,IAAAC,EAAA,OAAAhzE,EAAA3wB,EAAAwP,KAAA,SAAAo0F,GAAA,cAAAA,EAAAl0F,KAAAk0F,EAAAj0F,MAAA,cAAAi0F,EAAAj0F,KAAA,EACY5M,EAAK8gG,eADjB,cACNF,EADMC,EAAAnxF,KAAAmxF,EAAAhjF,OAAA,SAELrhB,OAAOqQ,OAAO+zF,GAAWx/D,OAAO,SAAC2/D,EAAUC,GAChD,IAAMC,EAAWjhG,EAAKgN,MAAMg0F,EAAUD,UAItC,OAHIE,IAAaA,EAAStlG,UACxBolG,EAAWA,EAASvzF,KAAKyzF,IAEpBF,GACN/gG,EAAKgN,MAAM,KARF,wBAAA6zF,EAAA/yF,SAAA6yF,EAAAxlG,SA9yPKA,KAwzPnB2lG,aAxzPmBtkG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwzPJ,SAAA60F,IAAA,IAAAz0E,EAAAoC,EAAA,OAAAjB,EAAA3wB,EAAAwP,KAAA,SAAA00F,GAAA,cAAAA,EAAAx0F,KAAAw0F,EAAAv0F,MAAA,cACP6f,EAAS,GACToC,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAH5Bu6D,EAAAv0F,KAAA,EAKP5M,EAAKiM,aAAazP,OAAOC,KAAKuD,EAAK3E,MAAMs1B,qBAAzC,eAAAywE,EAAA5kG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+D,SAAAg1F,EAAO7jE,GAAP,IAAAtuB,EAAAvD,EAAA,OAAAiiB,EAAA3wB,EAAAwP,KAAA,SAAA60F,GAAA,cAAAA,EAAA30F,KAAA20F,EAAA10F,MAAA,cAC7DsC,EAAsB,SAAbsuB,EACT7xB,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB6M,GAFY8jE,EAAA10F,KAAA,EAG7D5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAA41F,EAAA/kG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAm1F,EAAOnjG,GAAP,IAAA4iG,EAAAF,EAAAU,EAAAnjG,EAAAojG,EAAAC,EAAAC,EAAAh0F,EAAAq3D,EAAAiD,EAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAr0E,EAAA3wB,EAAAwP,KAAA,SAAAy1F,GAAA,cAAAA,EAAAv1F,KAAAu1F,EAAAt1F,MAAA,cAEhDq0F,EAAWjhG,EAAKgN,MAAM,GACtB+zF,EAAW/gG,EAAKgN,MAAM,GACtBy0F,EAAczhG,EAAKgN,MAAM,GACvB1O,EAAcqN,EAAgBtN,GAC9BqjG,EAAgBpjG,EAAY4wB,KAAK7wB,MAEvCouB,EAAOi1E,GAAiB,CACtBT,WACAF,WACAU,cACAv5B,UAAW,IAZuCg6B,EAAAt1F,KAAA,EAkB1CsQ,QAAQqD,IAAI,CACpBvgB,EAAKy9B,kBAAkBn/B,GACvB0B,EAAKuvE,mBAAmBmyB,KApB0B,cAAAC,EAAAO,EAAAxyF,KAAAkyF,EAAAplG,OAAA4yB,EAAA,EAAA5yB,CAAAmlG,EAAA,GAgBlD/zF,EAhBkDg0F,EAAA,GAiBlD38B,EAjBkD28B,EAAA,GAuBpDX,EAAWjhG,EAAKwQ,iBAAiBy0D,EAAa,IAAIz8D,MAAMoF,GAvBJs0F,EAAAt1F,KAAA,GAwBnC5M,EAAKwvB,oBAAoByxE,EAAU5iG,EAAOC,EAAa4Q,GAxBpB,WAwBpD+xF,EAxBoDiB,EAAAxyF,KA0BpD+c,EAAOi1E,GAAeT,SAAWA,EACjCF,EAAWA,EAASvzF,KAAKyzF,KAGnB/4B,EAAYloE,EAAK44F,kBAAkBt6F,IA9BW,CAAA4jG,EAAAt1F,KAAA,gBAAAs1F,EAAAt1F,KAAA,GAgC5C5M,EAAKiM,aAAazP,OAAOC,KAAKyrE,GAAWp7D,OAAO,SAAAg8D,GAAQ,OAAKZ,EAAUY,GAAUq5B,UAAjF,eAAAC,EAAA5lG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA4F,SAAAg2F,EAAOv5B,GAAP,IAAAjjC,EAAAy8D,EAAAC,EAAArG,EAAAsG,EAAAC,EAAA,OAAA70E,EAAA3wB,EAAAwP,KAAA,SAAAi2F,GAAA,cAAAA,EAAA/1F,KAAA+1F,EAAA91F,MAAA,cAC1Fi5B,EAAiBqiC,EAAUY,GAD+D45B,EAAA91F,KAAA,EAKtFsQ,QAAQqD,IAAI,CACpBvgB,EAAKs8E,mBAAmBxT,EAAUxqE,EAAY4wB,KAAK9mB,SACnDpI,EAAKqvB,yBAAyBR,EAAgBgX,KAPgD,OAAAy8D,EAAAI,EAAAhzF,KAAA6yF,EAAA/lG,OAAA4yB,EAAA,EAAA5yB,CAAA8lG,EAAA,GAG9FpG,EAH8FqG,EAAA,GAI9FC,EAJ8FD,EAAA,GAU5FrG,GAAmBsG,IACfC,EAA2BziG,EAAKwQ,iBAAiB0rF,EAAiBr2D,EAAe7pC,UAAUwM,MAAMxI,EAAKgN,MAAMw1F,OACjFC,EAAyB9mG,UACxDolG,EAAWA,EAASvzF,KAAKi1F,GACzBh2E,EAAOi1E,GAAex5B,UAAUY,GAAY25B,GAdgD,wBAAAC,EAAA50F,SAAAu0F,EAAAlnG,SAA5F,gBAAAwnG,GAAA,OAAAP,EAAAp0F,MAAA7S,KAAA8S,YAAA,IAhC4C,YAqDhD3P,EAAY44B,YAAa54B,EAAY44B,UAAU4pB,YArDC,CAAAohD,EAAAt1F,KAAA,gBAsD5Ci1F,EAAiBrlG,OAAOuB,OAAO,GAAIO,IAC1ByJ,UAAYvL,OAAOqQ,OAAOvO,EAAYyJ,WACrD85F,EAAe3yE,KAAO1yB,OAAOuB,OAAO,GAAIO,EAAY44B,UAAU4pB,aAG1D+gD,EAAe3qE,UAAU0rE,cAC3Bf,EAAe3qE,UAAU0rE,aAAajmG,QAAQ,SAAAkmG,GAC5C,IAAM7L,EAAgB6K,EAAe95F,UAAU+iB,KAAK,SAAAluB,GAAC,OAAKA,EAAEgG,OAASigG,EAAYjgG,OACjF,GAAIo0F,EAAe,CACjB,IAAM8L,EAAcjB,EAAe95F,UAAUkQ,QAAQ++E,GACrD6K,EAAe95F,UAAU+6F,GAAeD,KAhEIX,EAAAt1F,KAAA,GAwExCsQ,QAAQqD,IAAI,CACpBvgB,EAAKy9B,kBAAkBokE,GACvB7hG,EAAKuvE,mBAAmBsyB,EAAe3yE,KAAKtsB,QA1EI,WAAAk/F,EAAAI,EAAAxyF,KAAAqyF,EAAAvlG,OAAA4yB,EAAA,EAAA5yB,CAAAslG,EAAA,GAsEhDE,EAtEgDD,EAAA,GAuEhDE,EAvEgDF,EAAA,IA6E9CC,IAAiBC,EA7E6B,CAAAC,EAAAt1F,KAAA,gBA8EhD60F,EAAczhG,EAAKwQ,iBAAiByxF,EAAgB,IAAIz5F,MAAMw5F,GA9EdE,EAAAt1F,KAAA,GA+E5B5M,EAAKwvB,oBAAoBiyE,EAAapjG,EAAOwjG,EAAgB3yF,GA/EjC,SA+EhDuyF,EA/EgDS,EAAAxyF,QAgF5B+xF,EAAY9lG,UAC9B8wB,EAAOi1E,GAAeD,YAAcA,EACpCV,EAAWA,EAASvzF,KAAKi0F,IAlFqB,QAuFpDh1E,EAAOi1E,GAAeX,SAAWA,EAvFmB,yBAAAmB,EAAAp0F,SAAA0zF,EAAArmG,SAAhD,gBAAA4nG,GAAA,OAAAxB,EAAAvzF,MAAA7S,KAAA8S,YAAA,IAH6D,wBAAAqzF,EAAAxzF,SAAAuzF,EAAAlmG,SAA/D,gBAAA6nG,GAAA,OAAA5B,EAAApzF,MAAA7S,KAAA8S,YAAA,IALO,cAAAkzF,EAAAtjF,OAAA,SAmGN4O,GAnGM,wBAAA00E,EAAArzF,SAAAozF,EAAA/lG,SAxzPIA,KA65PnB8nG,sBA75PmBzmG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA65PK,SAAA62F,IAAA,IAAA10E,EAAAtD,EAAAqJ,EAAAuwB,EAAA6H,EAAAw2C,EAAAC,EAAA,OAAAx1E,EAAA3wB,EAAAwP,KAAA,SAAA42F,GAAA,cAAAA,EAAA12F,KAAA02F,EAAAz2F,MAAA,UAChB4hB,EADgB,uBAEhBtD,EAAalrB,EAAK6vB,8BAA8BrB,IAFhC,CAAA60E,EAAAz2F,KAAA,eAAAy2F,EAAAxlF,OAAA,SAIbqN,GAJa,cAOhBqJ,EAAYv0B,EAAK4wB,uBACjBk0B,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WACxC47C,EAAe3sD,EAAK+Q,gBAAgB,CAAC,QAAS,aAT9BsyF,EAAAz2F,KAAA,EAUS5M,EAAKwyC,YAAYma,EAAanZ,SAASjf,IAAY,EAAOuwB,GAVnE,aAUhBq+C,EAVgBE,EAAA3zF,OAYEyzF,EAAiBz9F,MAAQy9F,EAAiBz9F,KAAK2qC,OAAS8yD,EAAiBz9F,KAAK2qC,MAAM3zC,OAAS,GAZ/F,CAAA2mG,EAAAz2F,KAAA,gBAadw2F,EAAaD,EAAiBz9F,KAAK2qC,MAAM,GAb3BgzD,EAAAxlF,OAAA,SAcb7d,EAAK8vB,8BAA8BtB,EAAe40E,EAAYz2C,EAAanzB,MAd9D,eAAA6pE,EAAAxlF,OAAA,SAiBf,MAjBe,yBAAAwlF,EAAAv1F,SAAAo1F,EAAA/nG,SA75PLA,KAg7PnBqU,yBAA2B,SAACnR,EAAOm/B,GACjC,IAAMjJ,EAAYv0B,EAAK4wB,uBACjBtyB,EAAc0B,EAAKotB,aAAa,CAACmH,EAAWiJ,EAAUn/B,GAAQsN,KACpE,OAAOrN,EAAcA,EAAY8J,QAAU,MAn7P1BjN,KAq7PnBmoG,0BAr7PmB9mG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAq7PS,SAAAk3F,IAAA,IAAAnpE,EAAAC,EAAAmpE,EAAAC,EAAAx1F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAi3F,GAAA,cAAAA,EAAA/2F,KAAA+2F,EAAA92F,MAAA,cAAOwtB,EAAPqpE,EAAA/mG,OAAA,QAAAiuB,IAAA84E,EAAA,GAAAA,EAAA,GAAkB,KACxCppE,EAASr6B,EAAKgN,MAAM,GACpBw2F,EAAWxjG,EAAKgN,MAAM,GACrBotB,GAAaA,EAAS19B,SACzB09B,EAAW59B,OAAOC,KAAKuD,EAAK+Q,gBAAgB,CAAC,eAJrB2yF,EAAA92F,KAAA,EAMpB5M,EAAKiM,aAAazP,OAAOC,KAAKuD,EAAK3E,MAAMsC,mBAAzC,eAAAgmG,EAAAnnG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6D,SAAAu3F,EAAOrlG,GAAP,IAAAa,EAAA,OAAAwuB,EAAA3wB,EAAAwP,KAAA,SAAAo3F,GAAA,cAAAA,EAAAl3F,KAAAk3F,EAAAj3F,MAAA,cAC3DxN,EAAiBY,EAAK3E,MAAMsC,kBAAkBY,GADaslG,EAAAj3F,KAAA,EAE3D5M,EAAKiM,aAAazP,OAAOC,KAAK2C,GAA9B,eAAA0kG,EAAAtnG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+C,SAAA03F,EAAO1lG,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAAu3F,GAAA,cAAAA,EAAAr3F,KAAAq3F,EAAAp3F,MAAA,cAC7CtO,EAAcc,EAAef,GADgB2lG,EAAAp3F,KAAA,EAE7C5M,EAAKiM,aAAamuB,EAAlB,eAAA6pE,EAAAznG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA4B,SAAA63F,EAAOxlG,GAAP,IAAAG,EAAAslG,EAAAC,EAAA7oE,EAAAL,EAAA,OAAAtN,EAAA3wB,EAAAwP,KAAA,SAAA43F,GAAA,cAAAA,EAAA13F,KAAA03F,EAAAz3F,MAAA,cAC1B/N,EAAgBP,EAAYI,GADF2lG,EAAAz3F,KAAA,EAKtBsQ,QAAQqD,IAAI,CACpBvgB,EAAKq8B,oBAAoB,aAAc,GAAI99B,EAAUF,EAAOK,EAASJ,EAAaO,EAAe,MACjGmB,EAAKq8B,oBAAoB,uBAAwB,GAAI99B,EAAUF,EAAOK,EAASJ,EAAaO,EAAe,QAP7E,OAAAslG,EAAAE,EAAA30F,KAAA00F,EAAA5nG,OAAA4yB,EAAA,EAAA5yB,CAAA2nG,EAAA,GAG9B5oE,EAH8B6oE,EAAA,GAI9BlpE,EAJ8BkpE,EAAA,GAUhC/pE,EAASA,EAAO7sB,KAAKxN,EAAKgN,MAAMuuB,GAAY/yB,MAAMxI,EAAKgN,MAAMkuB,KAC7DsoE,EAAWA,EAASh2F,KAAKxN,EAAKgN,MAAMkuB,IAXJ,wBAAAmpE,EAAAv2F,SAAAo2F,EAAA/oG,SAA5B,gBAAAmpG,GAAA,OAAAL,EAAAj2F,MAAA7S,KAAA8S,YAAA,IAF6C,wBAAA+1F,EAAAl2F,SAAAi2F,EAAA5oG,SAA/C,gBAAAopG,GAAA,OAAAT,EAAA91F,MAAA7S,KAAA8S,YAAA,IAF2D,wBAAA41F,EAAA/1F,SAAA81F,EAAAzoG,SAA7D,gBAAAqpG,GAAA,OAAAb,EAAA31F,MAAA7S,KAAA8S,YAAA,IANoB,cA4B1BosB,EAASA,EAAO5a,IAAI+jF,GA5BME,EAAA7lF,OAAA,SAgCnB,CACLwc,SACAmpE,aAlCwB,wBAAAE,EAAA51F,SAAAy1F,EAAApoG,SAr7PTA,KA09PnBspG,mBA19PmBjoG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA09PE,SAAAq4F,IAAA,IAAAC,EAAApwE,EAAAuwB,EAAA6H,EAAAi4C,EAAAvqE,EAAAmpE,EAAAqB,EAAAC,EAAA72F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAs4F,GAAA,cAAAA,EAAAp4F,KAAAo4F,EAAAn4F,MAAA,eAAAk4F,EAAApoG,OAAA,QAAAiuB,IAAAm6E,EAAA,KAAAA,EAAA,GAA4BH,EAA5BG,EAAApoG,OAAA,QAAAiuB,IAAAm6E,EAAA,IAAAA,EAAA,GACbvwE,EAAYv0B,EAAK4wB,uBACjBk0B,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WACxC47C,EAAe3sD,EAAK+Q,gBAAgB,CAAC,QAAS,SAChD6zF,EAAa,CAACrwE,GACdowE,IACFC,EAAapoG,OAAOC,KAAKkwD,EAAanZ,WAGpCnZ,EAASr6B,EAAKgN,MAAM,GACpBw2F,EAAWxjG,EAAKgN,MAAM,GAVP+3F,EAAAn4F,KAAA,GAYb5M,EAAKiM,aAAa24F,EAAlB,eAAAI,EAAAxoG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8B,SAAA44F,EAAO1wE,GAAP,IAAAswE,EAAA,OAAAj3E,EAAA3wB,EAAAwP,KAAA,SAAAy4F,GAAA,cAAAA,EAAAv4F,KAAAu4F,EAAAt4F,MAAA,cAC9Bi4F,EAAO,KADuBK,EAAAv4F,KAAA,EAAAu4F,EAAAt4F,KAAA,EAGnB5M,EAAKouC,kBAAkBue,EAAanZ,SAASjf,GAAYo4B,EAAanzB,KAAK,GAAM,EAAOsrB,GAHrE,OAGhC+/C,EAHgCK,EAAAx1F,KAAAw1F,EAAAt4F,KAAA,eAAAs4F,EAAAv4F,KAAA,EAAAu4F,EAAA51E,GAAA41E,EAAA,gBAQ9BL,IACFxqE,EAASA,EAAO7sB,KAAKxN,EAAKgN,MAAM63F,EAAKxqE,QAAQ7xB,MAAMxI,EAAKgN,MAAM63F,EAAK9D,YACnEyC,EAAWA,EAASh2F,KAAKxN,EAAKgN,MAAM63F,EAAK9D,YAVT,yBAAAmE,EAAAp3F,SAAAm3F,EAAA9pG,KAAA,YAA9B,gBAAAgqG,GAAA,OAAAH,EAAAh3F,MAAA7S,KAAA8S,YAAA,IAZa,WA0Bdu1F,IAAYxjG,EAAKgN,MAAMw2F,GAAU7nG,UAAWqE,EAAKgN,MAAMw2F,GAAUj0E,IAAI,GA1BvD,CAAAw1E,EAAAn4F,KAAA,gBA2BjBytB,EAASr6B,EAAKgN,MAAM,GACpBw2F,EAAWxjG,EAAKgN,MAAM,GA5BL+3F,EAAAn4F,KAAA,GA6BA5M,EAAKolG,2BA7BL,SA6BbP,EA7BaE,EAAAr1F,QA+Bf2qB,EAASA,EAAO7sB,KAAKxN,EAAKgN,MAAM63F,EAAKxqE,QAAQ7xB,MAAMxI,EAAKgN,MAAM63F,EAAK9D,YACnEyC,EAAWA,EAASh2F,KAAKxN,EAAKgN,MAAM63F,EAAK9D,YAhC1B,eAoCnB1mE,EAASA,EAAO5a,IAAI+jF,GApCDuB,EAAAlnF,OAAA,SAsCZ,CACLwc,SACAmpE,aAxCiB,yBAAAuB,EAAAj3F,SAAA42F,EAAAvpG,SA19PFA,KAqgQnBiqG,yBArgQmB5oG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAqgQQ,SAAAg5F,IAAA,IAAA3hC,EAAAnvC,EAAA/F,EAAAtD,EAAAo6E,EAAAjrE,EAAAmpE,EAAA30E,EAAApC,EAAA84E,EAAAt3F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+4F,GAAA,cAAAA,EAAA74F,KAAA64F,EAAA54F,MAAA,UAAO82D,IAAP6hC,EAAA7oG,OAAA,QAAAiuB,IAAA46E,EAAA,KAAAA,EAAA,GAEzBhxE,GAFqDA,EAA5BgxE,EAAA7oG,OAAA,QAAAiuB,IAAA46E,EAAA,GAAAA,EAAA,GAAwC,OAExCvlG,EAAK4wB,uBAGxBpC,EALmB,sBAAA5vB,OAKmB8kE,EALnB,KAAA9kE,OAKmC21B,KACtDrJ,EAAalrB,EAAK6vB,8BAA8BrB,MACnCtD,EAAWo6E,QAAWtlG,EAAKgN,MAAMke,EAAWo6E,QAAQ3pG,UAAauvB,EAAWmP,QAAWr6B,EAAKgN,MAAMke,EAAWmP,QAAQ1+B,UAAauvB,EAAWs4E,UAAaxjG,EAAKgN,MAAMke,EAAWs4E,UAAU7nG,QAPpL,CAAA6pG,EAAA54F,KAAA,eAAA44F,EAAA3nF,OAAA,SAQhB,CACLynF,OAAQtlG,EAAKgN,MAAMke,EAAWo6E,QAC9BjrE,OAAQr6B,EAAKgN,MAAMke,EAAWmP,QAC9BmpE,SAAUxjG,EAAKgN,MAAMke,EAAWs4E,YAXX,cAerB8B,EAAStlG,EAAKgN,MAAM,GACpBqtB,EAASr6B,EAAKgN,MAAM,GACpBw2F,EAAWxjG,EAAKgN,MAAM,GACpB6hB,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAnBhB4+D,EAAA54F,KAAA,GAsBnB5M,EAAKiM,aAAazP,OAAOC,KAAKuD,EAAK3E,MAAMoqG,6BAAzC,eAAAC,EAAAlpG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAuE,SAAAs5F,EAAOpxE,GAAP,IAAA23B,EAAA,OAAAt+B,EAAA3wB,EAAAwP,KAAA,SAAAm5F,GAAA,cAAAA,EAAAj5F,KAAAi5F,EAAAh5F,MAAA,cACrEs/C,EAAalsD,EAAK3E,MAAMoqG,4BAA4BlxE,GADiBqxE,EAAAh5F,KAAA,EAErE5M,EAAKiM,aAAazP,OAAOC,KAAKyvD,GAA9B,eAAA25C,EAAArpG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2C,SAAAy5F,EAAOtoE,GAAP,IAAAtuB,EAAAvD,EAAA,OAAAiiB,EAAA3wB,EAAAwP,KAAA,SAAAs5F,GAAA,cAAAA,EAAAp5F,KAAAo5F,EAAAn5F,MAAA,cACzCsC,EAAsB,SAAbsuB,EACT7xB,EAAkBugD,EAAW1uB,GAFYuoE,EAAAn5F,KAAA,EAGzC5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAq6F,EAAAxpG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAA45F,EAAO5nG,GAAP,IAAAC,EAAAswB,EAAA+O,EAAAuoE,EAAAh+B,EAAA25B,EAAAsE,EAAAC,EAAA,OAAAx4E,EAAA3wB,EAAAwP,KAAA,SAAA45F,GAAA,cAAAA,EAAA15F,KAAA05F,EAAAz5F,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgBgoG,EAAAz5F,KAAA,EAEtB5M,EAAKgF,mBAAmB1G,GAAa,EAAOolE,GAFtB,cAE9C90C,EAF8Cy3E,EAAA32F,KAAA22F,EAAAz5F,KAAA,EAG5B5M,EAAKg+B,aAAa1/B,EAAaswB,EAAiB80C,GAHpB,UAG9C/lC,EAH8C0oE,EAAA32F,MAIhDkf,IAAmBA,EAAgBa,2BAA8Bb,EAAgBa,0BAA0B9zB,QAJ3D,CAAA0qG,EAAAz5F,KAAA,gBAAAy5F,EAAAz5F,KAAA,GAK3B5M,EAAKwvB,oBAAoBZ,EAAgBa,0BAA2BpxB,EAAOC,EAAa4Q,GAL7D,QAK5Cg3F,EAL4CG,EAAA32F,KAMlD8zF,EAAWA,EAASh2F,KAAK04F,GAErBvoE,GAAaA,EAAU+wB,SAAW/wB,EAAU+wB,OAAO/yD,UACrD2pG,EAASA,EAAO93F,KAAK04F,EAAS19F,MAAMm1B,EAAU+wB,SAC9Cr0B,EAASA,EAAO7sB,KAAK04F,EAAS19F,MAAMm1B,EAAUO,UAVE,aAe9CgqC,EAAYloE,EAAK44F,kBAAkBt6F,IAfW,CAAA+nG,EAAAz5F,KAAA,gBAAAy5F,EAAAz5F,KAAA,GAiB5C5M,EAAKiM,aAAazP,OAAOC,KAAKyrE,GAAWp7D,OAAO,SAAAg8D,GAAQ,OAAKZ,EAAUY,GAAUq5B,UAAjF,eAAAmE,EAAA9pG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA4F,SAAAk6F,EAAOz9B,GAAP,IAAAjjC,EAAA2gE,EAAAC,EAAAtrE,EAAA4N,EAAA1N,EAAA,OAAAzN,EAAA3wB,EAAAwP,KAAA,SAAAi6F,GAAA,cAAAA,EAAA/5F,KAAA+5F,EAAA95F,MAAA,cAC1Fi5B,EAAiBqiC,EAAUY,GAD+D49B,EAAA95F,KAAA,EAKtFsQ,QAAQqD,IAAI,CACpBvgB,EAAKs8E,mBAAmBxT,EAAUxqE,EAAY4wB,KAAK9mB,SACnDpI,EAAKqvB,yBAAyBR,EAAgBgX,KAPgD,OAAA2gE,EAAAE,EAAAh3F,KAAA+2F,EAAAjqG,OAAA4yB,EAAA,EAAA5yB,CAAAgqG,EAAA,GAG9FrrE,EAH8FsrE,EAAA,GAI9F19D,EAJ8F09D,EAAA,GAU5FtrE,GAAgB4N,IACZ1N,EAAwBr7B,EAAKwQ,iBAAiB2qB,EAAc0K,EAAe7pC,UAAUwM,MAAMxI,EAAKgN,MAAM+7B,OAC9E1N,EAAsB1/B,UAElD6nG,EAAWA,EAASh2F,KAAK6tB,IAdmE,wBAAAqrE,EAAA54F,SAAAy4F,EAAAprG,SAA5F,gBAAAwrG,GAAA,OAAAL,EAAAt4F,MAAA7S,KAAA8S,YAAA,IAjB4C,YAsChD3P,EAAY44B,YAAa54B,EAAY44B,UAAU4pB,YAtCC,CAAAulD,EAAAz5F,KAAA,gBAuC5Ci1F,EAAiBrlG,OAAOuB,OAAO,GAAIO,IAC1ByJ,UAAYvL,OAAOqQ,OAAOvO,EAAYyJ,WACrD85F,EAAe3yE,KAAO1yB,OAAOuB,OAAO,GAAIO,EAAY44B,UAAU4pB,aAG1D+gD,EAAe3qE,UAAU0rE,cAC3Bf,EAAe3qE,UAAU0rE,aAAajmG,QAAQ,SAAAkmG,GAC5C,IAAM7L,EAAgB6K,EAAe95F,UAAU+iB,KAAK,SAAAluB,GAAC,OAAKA,EAAEgG,OAASigG,EAAYjgG,OACjF,GAAIo0F,EAAe,CACjB,IAAM8L,EAAcjB,EAAe95F,UAAUkQ,QAAQ++E,GACrD6K,EAAe95F,UAAU+6F,GAAeD,KAjDIwD,EAAAz5F,KAAA,GAsDjB5M,EAAKgF,mBAAmB68F,GAAgB,GAAO,GAtD9B,aAsD5CsE,EAtD4CE,EAAA32F,QAuDxBy2F,EAAmBvhG,iBAAoBuhG,EAAmBvhG,gBAAgBjJ,QAvDlD,CAAA0qG,EAAAz5F,KAAA,gBAAAy5F,EAAAz5F,KAAA,GAwDV5M,EAAKwvB,oBAAoB22E,EAAmBvhG,gBAAiBvG,EAAOwjG,EAAgB3yF,GAxD1E,QAwD1Ck3F,EAxD0CC,EAAA32F,KAyDhD8zF,EAAWA,EAASh2F,KAAK44F,GAzDuB,yBAAAC,EAAAv4F,SAAAm4F,EAAA9qG,SAAhD,gBAAAyrG,GAAA,OAAAZ,EAAAh4F,MAAA7S,KAAA8S,YAAA,IAHyC,wBAAA83F,EAAAj4F,SAAAg4F,EAAA3qG,SAA3C,gBAAA0rG,GAAA,OAAAhB,EAAA73F,MAAA7S,KAAA8S,YAAA,IAFqE,wBAAA23F,EAAA93F,SAAA63F,EAAAxqG,SAAvE,gBAAA2rG,GAAA,OAAApB,EAAA13F,MAAA7S,KAAA8S,YAAA,IAtBmB,eA4FzBq3F,EAASA,EAAO7lF,IAAI+jF,GACpBnpE,EAASA,EAAO5a,IAAI+jF,GAEd/2E,EAAS,CACb64E,SACAjrE,SACAmpE,YAlGuBgC,EAAA3nF,OAAA,SAqGlB7d,EAAK8vB,8BAA8BtB,EAAe/B,IArGhC,yBAAA+4E,EAAA13F,SAAAu3F,EAAAlqG,SArgQRA,KA4mQnB4rG,YA5mQmB,eAAAC,EAAAxqG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4mQL,SAAA46F,EAAO3oG,GAAP,IAAAq/B,EAAA,OAAA/P,EAAA3wB,EAAAwP,KAAA,SAAAy6F,GAAA,cAAAA,EAAAv6F,KAAAu6F,EAAAt6F,MAAA,cAAAs6F,EAAAt6F,KAAA,EACY5M,EAAKg+B,aAAa1/B,GAD9B,YACNq/B,EADMupE,EAAAx3F,OAE0B,OAArBiuB,EAAUO,OAFf,CAAAgpE,EAAAt6F,KAAA,eAAAs6F,EAAArpF,OAAA,SAGH8f,EAAUO,QAHP,cAAAgpE,EAAArpF,OAAA,SAKL,MALK,wBAAAqpF,EAAAp5F,SAAAm5F,EAAA9rG,SA5mQK,gBAAAgsG,GAAA,OAAAH,EAAAh5F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAmnQnBisG,mBAnnQmB5qG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAmnQE,SAAAg7F,IAAA,IAAAl4F,EAAA6tB,EAAAsqE,EAAAr5F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA86F,GAAA,cAAAA,EAAA56F,KAAA46F,EAAA36F,MAAA,UAAOuC,EAAPm4F,EAAA5qG,OAAA,QAAAiuB,IAAA28E,EAAA,GAAAA,EAAA,GAA0B,KAExCtnG,EAAK3E,MAAMs1B,qBAAwB3wB,EAAK3E,MAAMwQ,QAFhC,CAAA07F,EAAA36F,KAAA,eAAA26F,EAAA1pF,OAAA,UAGV,GAHU,cAMbmf,EAAkB,GANLuqE,EAAA36F,KAAA,EAQb5M,EAAKiM,aAAazP,OAAOC,KAAKuD,EAAK3E,MAAMs1B,qBAAzC,eAAA62E,EAAAhrG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA+D,SAAAo7F,EAAOjqE,GAAP,IAAA7xB,EAAA,OAAAiiB,EAAA3wB,EAAAwP,KAAA,SAAAi7F,GAAA,cAAAA,EAAA/6F,KAAA+6F,EAAA96F,MAAA,WAC/DuC,GAAoBA,IAAqBquB,EADsB,CAAAkqE,EAAA96F,KAAA,eAAA86F,EAAA7pF,OAAA,wBAI7DlS,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB6M,GAJYkqE,EAAA96F,KAAA,EAK7D5M,EAAKiM,aAAazP,OAAOC,KAAKkP,GAA9B,eAAAg8F,EAAAnrG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAu7F,EAAOvpG,GAAP,IAAAC,EAAAupG,EAAAzqE,EAAAC,EAAAC,EAAA,OAAA1P,EAAA3wB,EAAAwP,KAAA,SAAAq7F,GAAA,cAAAA,EAAAn7F,KAAAm7F,EAAAl7F,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgBypG,EAAAl7F,KAAA,EAK1C5M,EAAKu9B,eAAej/B,EAAa0B,EAAK3E,MAAMwQ,SALF,OAAAg8F,EAAAC,EAAAp4F,KAGlD0tB,EAHkDyqE,EAGlDzqE,iBACAC,EAJkDwqE,EAIlDxqE,4BAGED,IACIE,EAAWnuB,EAAmB9Q,EAAQC,EAAY4wB,KAAK7wB,MAC7D2+B,EAAgBM,GAAY,CAC1Bj/B,QACAm/B,WACAl/B,cACA++B,gCAbgD,wBAAAyqE,EAAAh6F,SAAA85F,EAAAzsG,SAAhD,gBAAA4sG,GAAA,OAAAJ,EAAA35F,MAAA7S,KAAA8S,YAAA,IAL6D,wBAAAy5F,EAAA55F,SAAA25F,EAAAtsG,SAA/D,gBAAA6sG,GAAA,OAAAR,EAAAx5F,MAAA7S,KAAA8S,YAAA,IARa,cAAAs5F,EAAA1pF,OAAA,SAgCZmf,GAhCY,wBAAAuqE,EAAAz5F,SAAAu5F,EAAAlsG,SAnnQFA,KAwpQnB8sG,2BAxpQmBzrG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAwpQU,SAAA67F,IAAA,IAAA3pG,EAAA4pG,EAAAC,EAAAC,EAAAC,EAAAr6F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA87F,GAAA,cAAAA,EAAA57F,KAAA47F,EAAA37F,MAAA,UAAOrO,EAAP+pG,EAAA5rG,OAAA,QAAAiuB,IAAA29E,EAAA,GAAAA,EAAA,GAAkB,KACxCtoG,EAAK3E,MAAMwQ,QADW,CAAA08F,EAAA37F,KAAA,eAAA27F,EAAA1qF,OAAA,UAElB,GAFkB,UAIrBsqF,EAAgB,GAChBC,EAAkBpoG,EAAKgN,MAAM,GAAGyS,IAAI,OACpC4oF,EAAkBroG,EAAK+Q,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,qBANvD,CAAAw3F,EAAA37F,KAAA,eAAA27F,EAAA37F,KAAA,EAQnB5M,EAAKiM,aAAazP,OAAOC,KAAK4rG,GAA9B,eAAAG,EAAAhsG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAo8F,EAAOpqG,GAAP,IAAAC,EAAA+tD,EAAAlxB,EAAA,OAAAvN,EAAA3wB,EAAAwP,KAAA,SAAAi8F,GAAA,cAAAA,EAAA/7F,KAAA+7F,EAAA97F,MAAA,UAC9CtO,EAAc+pG,EAAgBhqG,GACnB,OAAbE,GAAqBD,EAAYC,SAAS8J,gBAAkB9J,EAAS8J,cAFrB,CAAAqgG,EAAA97F,KAAA,eAAA87F,EAAA7qF,OAAA,qBAKhDwuC,EAAgBrsD,EAAKs0B,kBAAkBh2B,EAAYD,UACjCC,EAAY2lC,IANkB,CAAAykE,EAAA97F,KAAA,eAAA87F,EAAA97F,KAAA,EAO5B5M,EAAK3E,MAAM2oC,aAAa1lC,EAAYD,MAAOC,EAAY8J,QAAS9J,EAAY2lC,KAPhD,OAOlDooB,EAPkDq8C,EAAAh5F,KAAA,WAShD28C,EATgD,CAAAq8C,EAAA97F,KAAA,gBAAA87F,EAAA97F,KAAA,GAUvB5M,EAAK6tB,gBAAgBvvB,EAAYD,MAAO2B,EAAK3E,MAAMwQ,SAV5B,SAU5CsvB,EAV4CutE,EAAAh5F,OAW9ByrB,EAAaolC,IAAI6nC,KACnCD,EAAc9pG,GAAS,CACrBC,cACAqP,QAASwtB,IAdqC,yBAAAutE,EAAA56F,SAAA26F,EAAAttG,SAAhD,gBAAAwtG,GAAA,OAAAH,EAAAx6F,MAAA7S,KAAA8S,YAAA,IARmB,cAAAs6F,EAAA1qF,OAAA,SA6BpBsqF,GA7BoB,yBAAAI,EAAAz6F,SAAAo6F,EAAA/sG,SAxpQVA,KAurQnBytG,4BAA8B,SAACvqG,GAC7B,OAAO2B,EAAK+Q,gBAAgB,CAAC,QAAS,SAAU1S,EAAM2S,cAAe,yBAxrQpD7V,KA0rQnBmhC,2BA1rQmB,eAAAusE,EAAArsG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA0rQU,SAAAy8F,EAAO3tE,EAAc78B,GAArB,IAAAkhB,EAAA3O,EAAAk4F,EAAA96F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAu8F,GAAA,cAAAA,EAAAr8F,KAAAq8F,EAAAp8F,MAAA,UAAkC4S,EAAlCupF,EAAArsG,OAAA,QAAAiuB,IAAAo+E,EAAA,GAAAA,EAAA,GAA8C,SAEzE5tE,EAAen7B,EAAKgN,MAAMmuB,GAEEn7B,EAAK4oG,4BAA4BtqG,EAAYD,OAJ9C,CAAA2qG,EAAAp8F,KAAA,eAAAo8F,EAAAnrF,OAAA,SAMlBsd,GANkB,WAQvBA,EAAavqB,GAAG,GARO,CAAAo4F,EAAAp8F,KAAA,gBAAAo8F,EAAAp8F,KAAA,EASY5M,EAAK48B,8BAA8Bt+B,EAAYkhB,GAT3D,QASnB3O,EATmBm4F,EAAAt5F,QAWvByrB,EAAeA,EAAa3yB,MAAMqI,IAXX,eAAAm4F,EAAAnrF,OAAA,SAcpBsd,GAdoB,yBAAA6tE,EAAAl7F,SAAAg7F,EAAA3tG,SA1rQV,gBAAA8tG,EAAAC,GAAA,OAAAL,EAAA76F,MAAA7S,KAAA8S,YAAA,GAAA9S,KA6sQnBq0B,oBA7sQmB,eAAA25E,EAAA3sG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA6sQG,SAAA+8F,EAAOjuE,EAAc98B,EAAOC,GAA5B,IAAA4Q,EAAA2B,EAAAw4F,EAAAp7F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA68F,GAAA,cAAAA,EAAA38F,KAAA28F,EAAA18F,MAAA,UAAyCsC,EAAzCm6F,EAAA3sG,OAAA,QAAAiuB,IAAA0+E,EAAA,IAAAA,EAAA,KAEpBluE,EAAen7B,EAAKgN,MAAMmuB,IACTvqB,GAAG,GAHA,CAAA04F,EAAA18F,KAAA,eAAA08F,EAAA18F,KAAA,EAImB5M,EAAK4kF,uBAAuBtmF,EAAa4Q,GAJ5D,QAIZ2B,EAJYy4F,EAAA55F,QAOhByrB,EAAeA,EAAa3yB,MAAMqI,IAPlB,cAAAy4F,EAAAzrF,OAAA,SAUbsd,GAVa,wBAAAmuE,EAAAx7F,SAAAs7F,EAAAjuG,SA7sQH,gBAAAouG,EAAAC,EAAAC,GAAA,OAAAN,EAAAn7F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAytQnBuuG,eAztQmB,eAAAC,EAAAntG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAytQF,SAAAu9F,EAAOxhG,EAAS8G,GAAhB,IAAAszC,EAAAC,EAAAonD,EAAA5iE,EAAA6iE,EAAA77F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAs9F,GAAA,cAAAA,EAAAp9F,KAAAo9F,EAAAn9F,MAAA,cAAwB41C,EAAxBsnD,EAAAptG,OAAA,QAAAiuB,IAAAm/E,EAAA,GAAAA,EAAA,GAAyC,KAAMrnD,EAA/CqnD,EAAAptG,OAAA,QAAAiuB,IAAAm/E,EAAA,GAAAA,EAAA,GAA8D,KAA9DC,EAAAn9F,KAAA,EACU5M,EAAKyP,gBAAgBrH,EAAS8G,EAAQszC,EAAgBC,GAAc,EAAM,MADpF,YACTonD,EADSE,EAAAr6F,QAEGm6F,EAAWntG,OAFd,CAAAqtG,EAAAn9F,KAAA,eAGPq6B,EAAM4iE,EAAWzoE,OAAO,SAAC00D,EAAKj9C,GAClC,IAAMs+C,EAAWn3F,EAAKwQ,iBAAiBqoC,EAAEs+C,SAAU,IACnD,OAAOrB,EAAItoF,KAAK2pF,IACfn3F,EAAKgN,MAAM,IAND+8F,EAAAlsF,OAAA,SASNopB,EAAIxnB,IAAIoqF,EAAWntG,SATb,cAAAqtG,EAAAlsF,OAAA,SAYR7d,EAAKgN,MAAM,IAZH,wBAAA+8F,EAAAj8F,SAAA87F,EAAAzuG,SAztQE,gBAAA6uG,EAAAC,GAAA,OAAAN,EAAA37F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAuuQnByhC,8BAvuQmB,eAAAstE,EAAA1tG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAuuQa,SAAA89F,EAAO7rG,GAAP,IAAAkhB,EAAAqP,EAAAu7E,EAAAC,EAAApjB,EAAA/1E,EAAAo5F,EAAAr8F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA89F,GAAA,cAAAA,EAAA59F,KAAA49F,EAAA39F,MAAA,cAAoB4S,EAApB8qF,EAAA5tG,OAAA,QAAAiuB,IAAA2/E,EAAA,GAAAA,EAAA,GAAgC,SACxDz7E,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,WAEnCwjE,EAAmB9rG,EAAYD,MAAQ2B,EAAK+Q,gBAAgB,CAAC,QAAS,SAAUzS,EAAYD,MAAM2S,gBAAkB,MAGrGw5F,sBACnB37E,EAAezmB,QAAUgiG,EAAiBI,qBAGtCH,EAAgBD,GAAoB9rG,EAGpC2oF,GAAWmjB,EAAiBI,oBAdJD,EAAA39F,KAAA,EAgBD5M,EAAKqvB,yBAAyBR,EAAgBw7E,EAAe7qF,EAAaynE,GAhBzE,UAgBxB/1E,EAhBwBq5F,EAAA76F,KAiBzB1P,EAAKgN,MAAMkE,GAAgBvV,QAjBF,CAAA4uG,EAAA39F,KAAA,gBAAA29F,EAAA1sF,OAAA,SAkBrB3M,GAlBqB,eAAAq5F,EAAA1sF,OAAA,SAqBvB,MArBuB,yBAAA0sF,EAAAz8F,SAAAq8F,EAAAhvG,SAvuQb,gBAAAsvG,GAAA,OAAAP,EAAAl8F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAiwQnBypF,uBAjwQmB,eAAA8lB,EAAAluG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAiwQM,SAAAs+F,EAAOrsG,EAAa4Q,GAApB,IAAA4B,EAAA85F,EAAAp8E,EAAAtD,EAAA0lD,EAAAi6B,EAAAh8E,EAAAw7E,EAAAn5F,EAAA45F,EAAA78F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAs+F,GAAA,cAAAA,EAAAp+F,KAAAo+F,EAAAn+F,MAAA,UAA4BkE,EAA5Bg6F,EAAApuG,OAAA,QAAAiuB,IAAAmgF,EAAA,GAAAA,EAAA,GAAkD,KAAMF,EAAxDE,EAAApuG,OAAA,QAAAiuB,IAAAmgF,EAAA,GAAAA,EAAA,GAAgE,EAElFh6F,EAFkB,CAAAi6F,EAAAn+F,KAAA,WAGrBkE,EAAsB9Q,EAAK4oG,4BAA4BtqG,EAAYD,OAH9C,CAAA0sG,EAAAn+F,KAAA,eAAAm+F,EAAAltF,OAAA,SAKZ,MALY,UAUjB2Q,EAViB,uBAAA5vB,OAUsBN,EAAY8J,QAVlC,KAAAxJ,OAU6CsQ,EAV7C,KAAAtQ,OAUuDkS,KACxEoa,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAZnB,CAAAovG,EAAAn+F,KAAA,gBAAAm+F,EAAAltF,OAAA,SAad7d,EAAKgN,MAAMke,IAbG,eAAA6/E,EAAAn+F,KAAA,GAgBD5M,EAAKyP,gBAAgBnR,EAAY8J,QAAS8G,EAAQ,KAAM,MAAM,EAAO,KAAM,OAAQ,GAhBlF,aAgBnB0hE,EAhBmBm6B,EAAAr7F,QAiBNkhE,EAAUl0E,OAjBJ,CAAAquG,EAAAn+F,KAAA,cAkBrBgkE,EAAYA,EAAU3gE,QACJjQ,EAAKgN,MAAM4jE,EAAU9/D,IAAsBnV,QAnBxC,CAAAovG,EAAAn+F,KAAA,YAoBbsE,EAAiBlR,EAAKwQ,iBAAiBogE,EAAU9/D,GAAsB,IACxE9Q,EAAKgN,MAAMkE,GAAgBvV,QArBb,CAAAovG,EAAAn+F,KAAA,gBAAAm+F,EAAAltF,OAAA,SAsBV7d,EAAK8vB,8BAA8BtB,EAAetd,IAtBxC,eA2BjB2d,EAAiB,CACrBzmB,QAASpI,EAAKs0B,kBAAkB,OAAOsS,UAEnCyjE,EAAgB/rG,EAAYD,MAAQ2B,EAAK+Q,gBAAgB,CAAC,QAAS,SAAUzS,EAAYD,MAAM2S,gBAAkB1S,EA9BhGysG,EAAAn+F,KAAA,GA+BM5M,EAAKqvB,yBAAyBR,EAAgBw7E,GA/BpD,WA+BjBn5F,EA/BiB65F,EAAAr7F,KAgClB1P,EAAKgN,MAAMkE,GAAgBvV,QAhCT,CAAAovG,EAAAn+F,KAAA,gBAAAm+F,EAAAltF,OAAA,SAiCd7d,EAAK8vB,8BAA8BtB,EAAetd,IAjCpC,aAoCnB05F,EAAQ,GApCW,CAAAG,EAAAn+F,KAAA,gBAAAm+F,EAAAn+F,KAAA,GAqCR5M,EAAK4kF,uBAAuBtmF,EAAa4Q,EAAQ4B,EAAqB85F,EAAQ,GArCtE,eAAAG,EAAAltF,OAAA,SAAAktF,EAAAr7F,MAAA,eAAAq7F,EAAAltF,OAAA,SAwChB,MAxCgB,yBAAAktF,EAAAj9F,SAAA68F,EAAAxvG,SAjwQN,gBAAA6vG,EAAAC,GAAA,OAAAP,EAAA18F,MAAA7S,KAAA8S,YAAA,GAAA9S,KA4yQnB+vG,cA5yQmB,eAAAC,EAAA3uG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KA4yQH,SAAA++F,EAAO9sG,EAAa4Q,GAApB,IAAAsf,EAAAtD,EAAAqJ,EAAAg5B,EAAAzI,EAAAtR,EAAA63D,EAAAC,EAAA16B,EAAAhiD,EAAA28E,EAAA,OAAA39E,EAAA3wB,EAAAwP,KAAA,SAAA++F,GAAA,cAAAA,EAAA7+F,KAAA6+F,EAAA5+F,MAAA,UAER4hB,EAFQ,cAAA5vB,OAEsBN,EAAY8J,QAFlC,KAAAxJ,OAE6CsQ,KACrDgc,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJ5B,CAAA6vG,EAAA5+F,KAAA,eAAA4+F,EAAA3tF,OAAA,SAKL7d,EAAKgN,MAAMke,IALN,cAQRqJ,EAAYv0B,EAAK4wB,uBACjB28B,EAAUvtD,EAAK+Q,gBAAgB,CAAC,QAAS,UACzC+zC,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WACxCyiC,EAXQ,GAAA50C,OAWM2uD,EAAQ/Z,SAASjf,IAXvB31B,OAWoCN,EAAY8J,QAXhD,YAAAxJ,OAWkEsQ,EAXlE,uBAAAs8F,EAAA5+F,KAAA,GAeJsQ,QAAQqD,IAAI,CACpBvgB,EAAKouC,kBAAkBoF,EAAU+Z,EAAQ/zB,KAAK,GAAM,EAAOsrB,GAC3D9kD,EAAKgF,mBAAmB1G,GAAa,GAAO,KAjBhC,WAAA+sG,EAAAG,EAAA97F,KAAA47F,EAAA9uG,OAAA4yB,EAAA,EAAA5yB,CAAA6uG,EAAA,GAaZz6B,EAbY06B,EAAA,GAcZ18E,EAdY08E,EAAA,GAoBVC,EAAavrG,EAAKgN,MAAM,GAExB4hB,GACFpyB,OAAOC,KAAKmyB,EAAgB9pB,0BAA0BnI,QAAQ,SAAAwL,GAC5D,IAAM28E,EAAyB9kF,EAAKgN,MAAM4hB,EAAgB9pB,yBAAyBqD,IACnF,GAAI28E,EAAuBl0E,GAAG,MAAQ,CACpC,IAAI66F,EAAgB,KAEdzjG,EAAe4oE,GAAaA,EAAUl0E,OAAS,EAAIk0E,EAAU,GAAGkmB,cAAchsE,KAAK,SAAAluB,GAAC,OAAKA,EAAEuL,aAAaE,gBAAkBF,EAAaE,gBAAkB,KAM/J,GALIL,IACFyjG,EAAgBzrG,EAAKgN,MAAMhF,EAAa2vF,aAIrC8T,GAAiBzrG,EAAKgN,MAAMy+F,GAAe9vG,SAAWqE,EAAKgN,MAAMy+F,GAAel8E,IAAI,GAAI,CAC3F,IAAMnwB,EAAiBd,EAAYyJ,UAAU+iB,KAAK,SAAAluB,GAAC,OAAIA,EAAEwL,QAAQC,gBAAkBF,EAAaE,gBAC5FjJ,IACFqsG,EAAgBzrG,EAAKgN,MAAM5N,EAAeu4F,YAIzC8T,EAAc9vG,UACjB4vG,EAAaA,EAAW/9F,KAAKi+F,EAAcjjG,MAAMs8E,QAOpDymB,IAAcA,EAAW5vG,UAAW4vG,EAAWh8E,IAAI,GAjD1C,CAAAi8E,EAAA5+F,KAAA,gBAAA4+F,EAAA5+F,KAAA,GAkDO5M,EAAK0rG,iBAAiBptG,EAAa4Q,GAlD1C,QAkDZq8F,EAlDYC,EAAA97F,KAAA,eAAA87F,EAAA3tF,OAAA,SAqDP7d,EAAK8vB,8BAA8BtB,EAAe+8E,IArD3C,yBAAAC,EAAA19F,SAAAs9F,EAAAjwG,SA5yQG,gBAAAwwG,EAAAC,GAAA,OAAAT,EAAAn9F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu2QnBuwG,iBAv2QmB,eAAAG,EAAArvG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu2QA,SAAAy/F,EAAOxtG,EAAa4Q,GAApB,IAAAsf,EAAAtD,EAAAqJ,EAAAg5B,EAAAzI,EAAAtR,EAAAu4D,EAAAn7B,EAAA26B,EAAAp7F,EAAAqyC,EAAAtyC,EAAA,OAAA0d,EAAA3wB,EAAAwP,KAAA,SAAAu/F,GAAA,cAAAA,EAAAr/F,KAAAq/F,EAAAp/F,MAAA,UAEX4hB,EAFW,iBAAA5vB,OAEsBN,EAAY8J,QAFlC,KAAAxJ,OAE6CsQ,KACxDgc,EAAalrB,EAAK6vB,8BAA8BrB,KACnCxuB,EAAKgN,MAAMke,GAAYvvB,QAJzB,CAAAqwG,EAAAp/F,KAAA,eAAAo/F,EAAAnuF,OAAA,SAKR7d,EAAKgN,MAAMke,IALH,UAQXqJ,EAAYv0B,EAAK4wB,wBACjB28B,EAAUvtD,EAAK+Q,gBAAgB,CAAC,QAAS,YAElCyiC,SAASjf,GAXL,CAAAy3E,EAAAp/F,KAAA,eAAAo/F,EAAAnuF,OAAA,SAYR7d,EAAKgN,MAAM,IAZH,cAeX83C,EAAS9kD,EAAK+Q,gBAAgB,CAAC,QAAS,WACxCyiC,EAhBW,GAAA50C,OAgBG2uD,EAAQ/Z,SAASjf,IAhBpB31B,OAgBiCN,EAAY8J,QAhB7C,YAAAxJ,OAgB+DsQ,GAhB/D88F,EAAAp/F,KAAA,GAiBE5M,EAAKouC,kBAAkBoF,EAAU+Z,EAAQ/zB,KAAK,GAAM,EAAOsrB,GAjB7D,cAiBbinD,EAjBaC,EAAAt8F,OAmBHq8F,EAAOrvG,OAAS,GAnBb,CAAAsvG,EAAAp/F,KAAA,cAoBXgkE,EAAYm7B,EAAOjhF,KAAK,SAAAyI,GAAC,OAAIA,EAAEnrB,QAAQC,gBAAkB/J,EAAY8J,QAAQC,iBApBlE,CAAA2jG,EAAAp/F,KAAA,cAsBT2+F,EAAavrG,EAAKgN,MAAM4jE,EAAUymB,cACpBkU,EAAW36F,GAAG,GAvBnB,CAAAo7F,EAAAp/F,KAAA,gBAAAo/F,EAAAnuF,OAAA,SAyBJ7d,EAAKmrB,cAAcqD,EAAe+8E,IAzB9B,eA4BLp7F,EAAY9C,SAASe,KAAK04B,MAAQ,KAClC0b,EAAiBn1C,SAAS8C,GAAc,MA7BnC67F,EAAAp/F,KAAA,GA8BO5M,EAAKyP,gBAAgBnR,EAAY8J,QAAS8G,EAAQszC,EAAgB,MAAM,EAAM,KAAM,QA9B3F,WA8BXouB,EA9BWo7B,EAAAt8F,OAgCLQ,EAAoB0gE,EAAU9jE,OAAO,SAAAtH,GAAC,OAAKxF,EAAKgN,MAAMxH,EAAE6xF,WAAWzmF,GAAG,MACtDlU,OAjCX,CAAAsvG,EAAAp/F,KAAA,YAkCT2+F,EAAavrG,EAAKgN,MAAMkD,EAAkB,GAAGmnF,WACxCr3F,EAAKgN,MAAMu+F,GAAY5vG,QAnCnB,CAAAqwG,EAAAp/F,KAAA,gBAAAo/F,EAAAnuF,OAAA,SAoCA7d,EAAK8vB,8BAA8BtB,EAAe+8E,IApClD,eAAAS,EAAAnuF,OAAA,SA2CV7d,EAAKgN,MAAM,IA3CD,yBAAAg/F,EAAAl+F,SAAAg+F,EAAA3wG,SAv2QA,gBAAA8wG,EAAAC,GAAA,OAAAL,EAAA79F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAu5QnB6iC,aAv5QmB,eAAAmuE,EAAA3vG,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAu5QJ,SAAA+/F,EAAO9tG,GAAP,IAAAolE,EAAAgG,EAAA/rC,EAAApJ,EAAA/F,EAAAtD,EAAAmhF,EAAA75E,EAAA85E,EAAAC,EAAAt+F,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+/F,GAAA,cAAAA,EAAA7/F,KAAA6/F,EAAA5/F,MAAA,UAAA2/F,EAAA7vG,OAAA,QAAAiuB,IAAA4hF,EAAA,IAAAA,EAAA,GAA6C7oC,IAA7C6oC,EAAA7vG,OAAA,QAAAiuB,IAAA4hF,EAAA,KAAAA,EAAA,GAAkE7iC,EAAlE6iC,EAAA7vG,OAAA,QAAAiuB,IAAA4hF,EAAA,IAAAA,EAAA,GAEP5uE,EAAY,CAChB+wB,OAAQ1uD,EAAKgN,MAAM,GACnBkxB,OAAQl+B,EAAKgN,MAAM,IAGhB1O,EAAY4wB,KAPJ,CAAAs9E,EAAA5/F,KAAA,eAAA4/F,EAAA3uF,OAAA,SAQJ8f,GARI,UAWPpJ,EAAYv0B,EAAK4wB,uBAGjBpC,EAdO,aAAA5vB,OAcsB21B,EAdtB,KAAA31B,OAcmCN,EAAY4wB,KAAK9mB,QAdpD,KAAAxJ,OAc+D8kE,MACtEx4C,EAAalrB,EAAK6vB,8BAA8BrB,KAInCtD,EAAWwjC,QAAU1uD,EAAKgN,MAAMke,EAAWwjC,QAAQ99C,GAAG,IAAQsa,EAAWgT,QAAUl+B,EAAKgN,MAAMke,EAAWgT,QAAQttB,GAAG,IAnB1H,CAAA47F,EAAA5/F,KAAA,gBAAA4/F,EAAA3uF,OAAA,SAoBJ,CACL6wC,OAAQ1uD,EAAKgN,MAAMke,EAAWwjC,QAC9BxwB,OAAQl+B,EAAKgN,MAAMke,EAAWgT,UAtBrB,eAAAsuE,EAAA5/F,KAAA,GA0BY5M,EAAKkuB,oBAAoB5vB,EAAY4wB,KAAK7wB,MAAO,aA1B7D,WA0Bbs/B,EAAU+wB,OA1BG89C,EAAA98F,KA2BTiuB,EAAU+wB,SACZ/wB,EAAU+wB,OAAS1uD,EAAKwQ,iBAAiBmtB,EAAU+wB,OAAQ,MAKzD/wB,EAAU+wB,OAjCD,CAAA89C,EAAA5/F,KAAA,YAmCX+wB,EAAUO,OAASl+B,EAAKgnC,QAAQrJ,EAAU+wB,OAAOjvC,IAAI,MAAMjX,MAAM,KAG3D6jG,EAAsB3iC,GAAe1pE,EAAK+Q,gBAAgB,CAAC,YAAa,OAAQ,aAC1D/Q,EAAK+Q,gBAAgB,CAAC,YAAa,OAAQ,cAC5Cs7F,EAxChB,CAAAG,EAAA5/F,KAAA,gBAyCH4lB,EAAexyB,EAAKmuE,kBAzCjBq+B,EAAA5/F,KAAA,GA0Ca4lB,EAAanE,OAAO/vB,EAAYD,MAAOC,GA1CpD,SA0CHguG,EA1CGE,EAAA98F,QA4CPiuB,EAAU+wB,OAAS/wB,EAAU+wB,OAAOlhD,KAAK8+F,GACzC3uE,EAAUO,OAASP,EAAUO,OAAO1wB,KAAK8+F,IA7ClC,eAmDPtsG,EAAKgN,MAAM2wB,EAAUO,QAAQviC,UAC/BgiC,EAAUO,OAASl+B,EAAKgN,MAAM,IAE5BhN,EAAKgN,MAAM2wB,EAAU+wB,QAAQ/yD,UAC/BgiC,EAAU+wB,OAAS1uD,EAAKgN,MAAM,IAvDrBw/F,EAAA3uF,OAAA,SA4DJ7d,EAAK8vB,8BAA8BtB,EAAemP,IA5D9C,eAAA6uE,EAAA3uF,OAAA,SA+DN8f,GA/DM,yBAAA6uE,EAAA1+F,SAAAs+F,EAAAjxG,SAv5QI,gBAAAsxG,GAAA,OAAAN,EAAAn+F,MAAA7S,KAAA8S,YAAA,GAAA9S,KAw9QnBY,iBAAmB,SAACiK,GAMlB,IAN8E,IAArDhK,EAAqDiS,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAA1C,EAAGhS,EAAuCgS,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAxB,EAAG/R,EAAqB+R,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAN,EAElEy+F,EAAankG,WAAWvC,GAAS,EACnCk0C,EAAWl6C,EAAKgN,MAAMhH,GAAO8kD,MAE7B6hD,EAAY,EACTzyD,EAASqmB,IAAI,MAClBrmB,EAAWA,EAASz6B,IAAI,KACxBktF,IAMF,GAHA1wG,EAAekR,KAAKqE,IAAI,EAAGvV,GAGvB+J,GAAS,IAAM,CACjB,IAAM4mG,EAAc5wG,EAAWk+C,EAAS2yD,IAAI,GAAGpkG,QAAQxM,GAAcslB,OAAO,EAAGvlB,GAAY,KAC3Fk+C,EAAW7sC,SAAS6sC,GAAUx6B,YAAcktF,EAAc,IAAMA,EAAc,SAE9E1yD,EAAWA,EAASzxC,QAAQzM,GAI9B,GAAIk+C,GAAY,GAAMA,EAASx9C,OAAS,EAAKT,EAC3Ci+C,EAAW3xC,WAAW2xC,GAAU4yD,YAAY7wG,QACvC,GAAKi+C,EAASx9C,OAAS,EAAKR,EAAc,CAC/C,IAAM6wG,EAAa7wG,GAAgBg+C,EAASx9C,OAAS,GAErDw9C,GADel6C,EAAKgN,MAAMhH,GAAO8kD,MAAMprC,WAAWsV,QAAQ,IAAK,IAAIzT,OAAQ24B,EAASx9C,OAAS,EAAIqwG,GAWnG,OANIL,IACFxyD,EAAW,IAAMA,GAGnBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAK,KA+BhByyD,IA1/QrBxxG,KAAKC,SAASC,mEA8/QIsS,EAAS5E,EAAO/M,EAAUgxG,EAAQC,GAEpDjxG,EAAYL,MAAMK,GAAuB,EAAXA,EAC9BgxG,EAAUrxG,MAAMqxG,GAAmB,GAATA,EAC1BC,EAAuBtxG,MAAMsxG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNv/F,EAAUpF,WAAWpN,KAAK6R,MAAMW,IAAUlF,QAAQzM,IAE3B0jB,WAAWsV,QAAQ,IAAK,IAAIt4B,OAC/CwwG,EAASF,IACXhxG,EAAWmR,KAAKqE,IAAI,EAAGxV,GAAYkxG,EAASF,IAC5Cr/F,EAAUpF,WAAWpN,KAAK6R,MAAMW,IAAUlF,QAAQzM,IAGpD,IAAMmxG,EAAUhgG,KAAKgF,MAAMxE,GACvBy/F,GAAWz/F,EAAU,GAAGm/F,YAAY9wG,GAAUulB,OAAO,EAAGvlB,GAG5D,GAFAoxG,GAAWA,EAAW,IAAIC,OAAOrxG,IAAYulB,OAAO,EAAGvlB,GAEnDixG,EAAqB,CACvB,IAAMK,EAAiBF,EAAQ7rF,OAAO,EAAG0rF,GACzCG,EAAUA,EAAQ7rF,OAAO0rF,GACzB,IAAMM,EAAsBxpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWjhB,SAAU,OAAQE,MAAO,OAAQD,WAAY,WAAYqsG,EAApE,IAA8EG,GAC1G,OAAQ3xG,MAAMR,KAAKs3B,QAAQ9kB,IApBR,IAoBqB5J,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KAAGD,EAAmBxpG,EAAA9G,EAAAC,cAAA,SAAOuE,MAAO,CAAEZ,SAAU,QAAUusG,GAA1D,IAA2ErpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWjhB,SAAU,CAAC,EAAG,IAAKkI,IAEjJ,OAAQpN,MAAMR,KAAKs3B,QAAQ9kB,IAtBR,IAsBqB5J,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KAAGL,EAAQppG,EAAA9G,EAAAC,cAAA,iBAASkwG,GAA2B,MAAVrkG,EAAgB,IAAM,KAAMA,EAAQhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWjhB,SAAU,CAAC,EAAG,IAAKkI,GAAqB,eAK3JzN,gwsBC/iRTmyG,6MAGJvyG,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAWC,mEAClCtC,KAAKI,kJAGE,IAAAC,EAAAL,KACDuyG,EAAiBvyG,KAAKE,MAAM6D,eAC5B4X,EAAkD,oBAA3B3b,KAAKE,MAAM+E,YACxC,OACEpD,EAAAC,EAAAC,cAACywG,EAAA,EAADnxG,OAAAuB,OAAA,CACE0Y,UAAW,CACTlN,GAAG,EACHnN,MAAM,EACN+N,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,SAERrM,GAAI1C,KAAKE,MAAM2D,QACX7D,KAAKE,MAAMuyG,SARjB,CASE3pG,UAAW9I,KAAKE,MAAMgD,MACtByY,cAAeA,EACf1W,YAAa0W,EAAgB,SAAA5U,GAAC,OAAI1G,EAAKH,MAAM+E,YAAY5E,EAAKH,QAAS,OAEvE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEb,cAAe,MACfuB,GAAI1C,KAAKE,MAAMsD,OAGbxD,KAAKE,MAAM2C,KAAKI,IAAI,SAACyvG,EAAQC,GAC3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQpuG,QAAoBjE,EAAKH,MAAM4C,WAAiC,IAAnB4vG,EAAQpuG,SAAoBsuG,IAAqBvyG,EAAKH,MAAM4C,SAC1I,KAGPjB,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACEkB,IAAG,OAAAL,OAASkvG,IACRD,EAAQxyG,OAEZ2B,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACE3B,MAAO,EACPC,WAAY,SACZC,cAAe,OACXuxG,EAAQtyF,aAGVsyF,EAAQ1rD,OAAO/jD,IAAI,SAAC4sB,EAAUijF,GAC5B,IAAKjjF,IAAmC,IAAtBA,EAAUgjF,UAA2C,IAArBhjF,EAAUvrB,QAAoBjE,EAAKH,MAAM4C,SACzF,OAAO,KAET,IAAMivB,EAAkBlC,EAAU9rB,eAE9B0tB,EAAa5B,EAAU3vB,MAO3B,OAJI2vB,EAAUkjF,WAAa1xG,OAAOC,KAAKuuB,EAAUkjF,WAAWxxG,OAAO,IACjEkwB,EAAapxB,EAAKN,cAAcm6B,2BAA2BzI,EAAW5B,EAAUkjF,UAAU1yG,EAAKH,QAI/F2B,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACEyC,OAAQ,OACRlE,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZyuB,EAAUzP,YALhB,CAME9Z,MAAOupB,EAAUvpB,OAAS,CACxBE,SAAS,UAEXvF,MAAOyxG,EAAQ1rD,OAAOzlD,OAAO,EAAI,OAAS,EAC1CmB,GAAE,SAAAe,OAAWkvG,EAAX,KAAAlvG,OAAuBqvG,EAAvB,KAAArvG,OAAqCosB,EAAUpoB,MACjD3D,IAAG,SAAAL,OAAWkvG,EAAX,KAAAlvG,OAAuBqvG,EAAvB,KAAArvG,OAAqCosB,EAAUpoB,QAGhDsqB,EACElwB,EAAAC,EAAAC,cAACgwB,EAAD1wB,OAAAuB,OAAA,GACMvC,EAAKH,MACLuxB,IAGN5vB,EAAAC,EAAAC,cAACwwG,EAADlxG,OAAAuB,OAAA,GACMvC,EAAKH,MADX,CAEE2vB,UAAWA,EACXmjF,SAAUN,EAAQxyG,MAClBua,SAAQ,SAAAhX,OAAWkvG,EAAX,KAAAlvG,OAAuBqvG,EAAvB,KAAArvG,OAAqCosB,EAAUpoB,yBAlGlEvF,aAqHRowG,wHCrHTW,6MAEJ7wG,MAAQ,CACN8wG,WAAW,+EAGAA,GACXlzG,KAAKiI,SAAS,CACZirG,+CAIK,IAAA7yG,EAAAL,KACD8d,EAAa9d,KAAKE,MAAM4d,WACxBD,EAAW7d,KAAKE,MAAM2d,WAAaC,EACnCnC,EAAgB3b,KAAKE,MAAMyb,gBAAkBmC,EAC7CkD,EAA4C,qBAAzBhhB,KAAKE,MAAM8gB,WAA4BhhB,KAAKE,MAAM8gB,UACrEmyF,EAA4C,qBAAzBnzG,KAAKE,MAAMizG,WAA4BnzG,KAAKE,MAAMizG,UAErE73F,EAAY,CAChB7Z,EAAG,EACH2D,OAAQ,EACR+J,UAAW,EACXjI,aAAc,EACdmF,YAAa,KACb4B,SAAU,WACVshB,UAAW,UACXtgB,gBAAiB,UAIfjP,KAAKE,MAAMob,WAAaja,OAAOC,KAAKtB,KAAKE,MAAMob,WAAW/Z,QAC5DF,OAAOC,KAAKtB,KAAKE,MAAMob,WAAW9Z,QAAQ,SAAAC,GACxC6Z,EAAU7Z,GAAKpB,EAAKH,MAAMob,UAAU7Z,MAIpCoc,GAAalC,GAAiB3b,KAAKoC,MAAM8wG,aAC3C53F,EAAUlW,OAAS,EACnBkW,EAAUnM,UAAY,KACtBmM,EAAUrM,gBAAkB,eAG9B,IAAMnG,EAAY,CAChBC,IAAOqqG,eACPv1F,EAAW9U,IAAOsqG,OAAS,KAC1BryF,EAA4B,KAAhBjY,IAAOuqG,OACpBH,EAAYpqG,IAAOwqG,QAAU,KAC7Bz1F,EAAa/U,IAAO3B,SAAW,KAC/BuU,EAAgB5S,IAAOyqG,YAAc,MAOvC,OAJIxzG,KAAKE,MAAM4I,WAAaC,IAAO/I,KAAKE,MAAM4I,YAC5CA,EAAUyE,KAAKxE,IAAO/I,KAAKE,MAAM4I,YAIjC/D,EAAAjD,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,GACM0Y,EADN,CAEExS,UAAWA,EACXhD,QAAS9F,KAAKE,MAAM+E,YACpBwuG,WAAY,SAAC1sG,GAAD,OAAO1G,EAAKqzG,cAAa,IACrCC,YAAa,SAAC5sG,GAAD,OAAO1G,EAAKqzG,cAAa,MAGpC1zG,KAAKE,MAAM4nB,OAAS9nB,KAAKE,MAAM4nB,MAAMvmB,OAAS,GAC9CwD,EAAAjD,EAAAC,cAACC,EAAA,EAADX,OAAAuB,OAAA,CACEoZ,GAAI,CAAC,EAAG,GACRvW,GAAI,CAAC,EAAG,GACRvE,WAAY,SACZC,cAAe,OACXnB,KAAKE,MAAM0zG,kBAEf7uG,EAAAjD,EAAAC,cAACC,EAAA,EAAQqN,GAAThO,OAAAuB,OAAA,CACE+C,WAAY,EACZD,SAAU,CAAC,EAAG,GACdyI,UAAW,OACXvI,MAAO,YACPiuG,WAAY,WACR7zG,KAAKE,MAAM4zG,YAEd9zG,KAAKE,MAAM4nB,OAGZ9nB,KAAKE,MAAM6zG,aAAe/zG,KAAKE,MAAM6zG,YAAYxyG,OAAS,GAC1DwD,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACE+uB,UAAW,MACXC,QAAShxB,KAAKE,MAAM6zG,aAEpBhvG,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACEyD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,gBAOhB5F,KAAKE,MAAM2b,iBApGQ3Z,aA0Gb+wG,8weC9Gf9uG,EAAAC,QAAA,CAAkBgvG,eAAA,sCAAAE,OAAA,8BAAAE,YAAA,mCAAAD,QAAA,+BAAAnsG,SAAA,yZCeZ4sG,6MAEJ5xG,MAAQ,CACN6xG,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBzqG,cAAc/E,EAAK3E,MAAMo0G,YAkF3Bv0G,cAAgB,OA+ChBw0G,0DAAsB,SAAApjG,EAAOpK,EAAEwc,EAASixF,GAAlB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAhzG,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEdgjG,EAFc,eAAAxgG,EAAA5S,OAAA0zG,EAAA,EAAA1zG,CAAAyzG,EAAAhzG,EAAAoP,KAEF,SAAAuQ,EAAO7P,GAAP,OAAAkjG,EAAAhzG,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAEhBgU,OAAOuvF,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAAzxG,OAAUoB,EAAKzC,MAAMwH,cAArB,wBAChBurG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXzwG,EAAK3E,MAAMq1G,oBAVK,wBAAA5zF,EAAAhP,SAAA8O,EAAAzhB,SAFE,gBAAAwU,GAAA,OAAAP,EAAApB,MAAA7S,KAAA8S,YAAA,GAed4hG,EAfc,eAAA1yF,EAAA3gB,OAAA0zG,EAAA,EAAA1zG,CAAAyzG,EAAAhzG,EAAAoP,KAeJ,SAAAgR,EAAOnb,GAAP,OAAA+tG,EAAAhzG,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAAK,OAAA,UACP,GADO,wBAAAL,EAAA1P,SAAAuP,EAAAliB,SAfI,gBAAA40B,GAAA,OAAA5S,EAAAnP,MAAA7S,KAAA8S,YAAA,GAmBd6hG,EAAkBnnG,IAAcgoG,SAASjyE,UAAUhgB,GACnDqxF,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAc5wG,EAAK3E,MAAMsN,IAAcgnG,EAAUC,EAAUC,GAAW,KApBxInjG,EAAA4iB,GAuBZ5Q,EAvBYhS,EAAAE,KAAA,qBAyBsB,oBAA3BkjG,EAAgBe,SACnBb,EAAexzG,OAAOuB,OAAO,GAAGiC,EAAKzC,OAC3CuyG,EAAgBe,OAAOd,EAAW,KAAKC,EAAarnG,MA3BtC+D,EAAAmR,OAAA,sBAiChBlV,IAAckgD,UAAUC,OAAO/H,OAAO9xB,QAjCtB,CAAAviB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZ5M,EAAK9E,cAAc0f,yBAAyB,CAChDN,cAAe,MACfG,YAAa,kBACbF,WAAYmE,IArCI,QAwClB1e,EAAK8wG,WAAW5uG,GAxCEwK,EAAAE,KAAA,iBA0ClB5M,EAAK8wG,WAAW5uG,GA1CE,yBAAAwK,EAAAoB,SAAAxB,EAAAnR,qEA8CtB41G,OAAS,SAAC7uG,GACRA,EAAE6H,iBAEE/J,EAAKzC,MAAMgyG,iBACbvvG,EAAKoD,SAAS,CACZmsG,iBAAiB,OAEVvvG,EAAKzC,MAAM6xG,eACpBpvG,EAAKoD,SAAS,CACZgsG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEVvvG,EAAKzC,MAAMwH,cACpB/E,EAAKoD,SAAS,CACZgsG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBxqG,cAAc/E,EAAK3E,MAAMo0G,WAG3BzvG,EAAKgxG,gBAITA,WAAa,WACXhxG,EAAKoD,SAAS,CACZgsG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBzqG,cAAc/E,EAAK3E,MAAMo0G,WAG3BzvG,EAAKixG,wBAGPH,WAAa,SAAC5uG,GACZlC,EAAKgxG,aACAhxG,EAAK3E,MAAM61G,YAA+C,oBAA1BlxG,EAAK3E,MAAMy1G,YAC9C9wG,EAAK3E,MAAMy1G,gBAIfK,gBAAkB,SAACzyF,GACjB,IAAK/V,IAAcgoG,SAASjyE,UAAUhgB,GACpC,OAAO,EAET,IAAI0yF,EAAezoG,IAAcgoG,SAASjyE,UAAUhgB,GACpD,GAAoC,oBAAzB0yF,EAAaC,QAAuB,CAC7C,IAAMC,EAAkBF,EAAaC,QAAQrxG,EAAKzC,OAC9C+zG,GAAmB90G,OAAOC,KAAK60G,GAAiB50G,SAClD00G,EAAe50G,OAAOuB,OAAOqzG,EAAaE,IAG9C,OAAOF,KAGTG,0BAA4B,SAACnC,GAC3B,IAAMoC,EAAgBxxG,EAAKzC,MAAM8xG,iBAAiBD,GAClD,OAAIoC,GAAiBA,EAAcvnD,gBAC1BunD,EAAcvnD,gBAEhB,QAGTwnD,6BAA+B,SAACrC,EAAerqG,GAC7C,IAAMyqG,EAAqB,GAE3BhzG,OAAOC,KAAKkM,IAAcgoG,SAASjyE,WAAWtgC,IAAI,SAACsgB,EAASzW,GAC1D,IAAMmpG,EAAezoG,IAAcgoG,SAASjyE,UAAUhgB,GAChDgzF,GAAmF,IAA3DN,EAAaO,iBAAiB15F,QAAQm3F,GAC9DwC,EAAuB7sG,GAAyE,IAAzDqsG,EAAaS,gBAAgB55F,QAAQlT,IAA6F,IAApEqsG,EAAaS,gBAAgB55F,QAAQjY,EAAK3E,MAAM0J,iBAA4F,IAAnEqsG,EAAaS,gBAAgB55F,QAAQtP,IAAcywB,WAIvO,OAHIg4E,EAAaniF,SAAWyiF,GAAyBE,GACnDpC,EAAmB9mG,KAAKgW,GAEnBA,IAGT,IAAMozF,EAAyB9xG,EAAKuxG,0BAA0BnC,GAE9D,OAAI0C,GAA0B9xG,EAAKzC,MAAM8xG,iBAAiBD,GAAgB2C,kBAA2E,IAAxDvC,EAAmBv3F,QAAQ65F,GAC/G,CAACA,GAGHtC,KAGTwC,eAAiB,SAAC9vG,EAAEqtG,GAKlB,GAJIrtG,GACFA,EAAE6H,kBAGCwlG,IAAqB5mG,IAAcgoG,SAASjyE,UAAU6wE,GACzD,OAAOvvG,EAAKoD,SAAS,CACnBmsG,iBAAiB,OAIrB,IAAM6B,EAAezoG,IAAcgoG,SAASjyE,UAAU6wE,GACtD,GAAI6B,EAAa,CAEf,GAAIpxG,EAAKzC,MAAMwH,cAEb,YADA/E,EAAK0vG,oBAAoBxtG,EAAEqtG,EAAiBvvG,EAAKzC,OAInD,IAAM00G,GAAkF,IAAnEb,EAAaS,gBAAgB55F,QAAQtP,IAAcywB,WAClE84E,GAAqF,IAApEd,EAAaS,gBAAgB55F,QAAQjY,EAAK3E,MAAM0J,eAGjE4G,EAAkB,GACxB,KAAMsmG,GAAgBC,IAAoBA,GASxC,YADAlyG,EAAK0vG,oBAAoBxtG,EAAEqtG,EAAiBvvG,EAAKzC,OAP7C00G,GACFtmG,EAAgBjD,KAAKC,IAAcywB,WAEjC84E,GACFvmG,EAAgBjD,KAAK1I,EAAK3E,MAAM0J,eAOpC/E,EAAKoD,SAAS,CACZuI,kBACA4jG,yBAKN4C,aAAe,SAACjwG,EAAEktG,GAKhB,GAJIltG,GACFA,EAAE6H,kBAGsE,IAAtEvN,OAAOC,KAAKuD,EAAKzC,MAAM8xG,kBAAkBp3F,QAAQm3F,GAAuB,CAC1E,IAAMI,EAAqBxvG,EAAKyxG,6BAA6BrC,EAAepvG,EAAKzC,MAAMwH,eAGvF/E,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,gBACbF,WAAY60F,IAGdpvG,EAAKoD,SAAS,CACZosG,qBACAJ,uBAKNgD,YAAc,SAAClwG,EAAE6C,GACX7C,GACFA,EAAE6H,iBAIJ/J,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,eACbF,WAAYxV,IAGd/E,EAAKoD,SAAS,CAAE2B,iBAAhBvI,OAAA0zG,EAAA,EAAA1zG,CAAAyzG,EAAAhzG,EAAAoP,KAAiC,SAAAgD,IAAA,OAAA4gG,EAAAhzG,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,WAC3B5M,EAAKzC,MAAMgyG,iBADgB,CAAAhgG,EAAA3C,KAAA,eAAA2C,EAAAsO,OAAA,SAEtB7d,EAAK0vG,oBAAoBxtG,EAAElC,EAAKzC,MAAMgyG,iBAAiBvvG,EAAKzC,QAFtC,OAI7ByC,EAAKqyG,sBAJwB,wBAAA9iG,EAAAzB,SAAAuB,EAAAlU,aASnCm3G,oBAAsB,SAAAhD,GAGhB3mG,IAAckgD,UAAUC,OAAO/H,OAAO9xB,SAAWqgF,GACnDtvG,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,iBACbF,WAAY+0F,EAAgBtpG,QAIhChG,EAAKoD,SAAS,CACZksG,uBAIJiD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBAxyG,EAAKzC,MAAMiyG,mBAAmB7yG,QAAQ,SAAC+hB,EAASzW,GAC9C,IAAMmpG,EAAepxG,EAAKmxG,gBAAgBzyF,GACpCgzF,GAA8F,IAAtEN,EAAaO,iBAAiB15F,QAAQjY,EAAKzC,MAAM6xG,gBACzEwC,EAAuB5xG,EAAKzC,MAAMwH,eAAoF,IAApEqsG,EAAaS,gBAAgB55F,QAAQjY,EAAKzC,MAAMwH,gBAA6F,IAApEqsG,EAAaS,gBAAgB55F,QAAQjY,EAAK3E,MAAM0J,iBAA4F,IAAnEqsG,EAAaS,gBAAgB55F,QAAQtP,IAAcywB,WAGxPg4E,EAAaniF,SAAYyiF,GAA0BE,GAKxDR,EAAaqB,mBAAmB91G,QAAQ,SAAC+1G,EAAYznD,GAC9CunD,EAAmBE,KACtBF,EAAmBE,GAAe,CAChCh0E,UAAU,GACV31B,MAAMJ,IAAcgqG,UAAUD,GAC9B1sG,MAAM0sG,IAGVF,EAAmBE,GAAah0E,UAAUh2B,KAAKgW,OAI5CliB,OAAOqQ,OAAO2lG,+MAjYhBr3G,KAAKoC,MAAMwH,wDACP,UAITvI,OAAOC,KAAKkM,IAAcgoG,SAASjyE,WAAW/hC,QAAQ,SAAC+hB,EAASzW,GAE9D,IAAMmpG,EAAezoG,IAAcgoG,SAASjyE,UAAUhgB,GACtD,GAAI0yF,EAAaniF,SAAWmiF,EAAawB,mBAAwF,IAApExB,EAAaS,gBAAgB55F,QAAQzc,EAAK+B,MAAMwH,iBAA4F,IAAnEqsG,EAAaS,gBAAgB55F,QAAQtP,IAAcywB,YAAmB,CAE1M,IAAMw5E,EAAkBxB,EAAawB,gBAErCp2G,OAAOC,KAAKm2G,GAAiBj2G,QAAQ,SAAC85B,EAAIw0B,GAIxC,OAFqBx0B,EAAIqwB,MAAM,KAAK72C,MAAM5H,eAGxC,IAAK,KACH,IAAMwqG,EAAQ,UAAAj0G,OAAa8f,EAAb,KAAA9f,OAAyBqsD,EAAzB,KAAArsD,OAA8BpD,EAAK+B,MAAMwH,eAEvD,IAAKolB,SAASC,eAAeyoF,GAAU,CACrC,IAAM/3B,EAAS3wD,SAASjtB,cAAc,UAChC41G,EAAuBF,EAAgBn8E,GACvCtzB,EAAW2vG,GAAwBA,EAAqB3vG,SAAW2vG,EAAqB3vG,SAAW,KACnG4vG,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQv3G,EAAK+B,MAAMoL,IAAcyoG,GAG/BjuG,GAAgC,oBAAbA,IACjB23E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5B93E,MAIJ23E,EAAOI,OAAS/3E,GAIpB23E,EAAOj9E,GAAKg1G,EACZ/3B,EAAO72E,UAAP,UAAArF,OAA6B8f,GAC7Bo8D,EAAOtxE,IAAMitB,EACbqkD,EAAOyH,OAAQ,EAEXuwB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAc53B,YAAYN,GAE/C3wD,SAAS8oF,KAAK73B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAMo4B,EAAY,cAAAt0G,OAAiB8f,EAAjB,KAAA9f,OAA6BqsD,GAE/C,IAAK9gC,SAASC,eAAe8oF,GAAc,CACzC,IAAMzxG,EAAQ0oB,SAASjtB,cAAc,QAErCuE,EAAM5D,GAAKq1G,EACXzxG,EAAM0gB,IAAM,aACZ1gB,EAAM2gB,KAAOqU,EAEbtM,SAAS8oF,KAAK73B,YAAY35E,gJAclCtG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,sDAI1B,IAAAsK,EAAAxK,KACdk0G,EAAmB,IACIl0G,KAAKE,MAAMg0G,kBAAoBl0G,KAAKE,MAAMg0G,iBAAiB3yG,OAASvB,KAAKE,MAAMg0G,iBAAmB7yG,OAAOC,KAAKkM,IAAcgoG,SAAS57D,UAE7Ip4C,QAAQ,SAAA+7B,GAC3B,IAAM82E,EAAqB7pG,EAAK8rG,6BAA6B/4E,EAAO/yB,EAAKpI,MAAMwH,eAC/E,GAAIyqG,GAAsBA,EAAmB9yG,OAAO,EAAE,CACpD,IAAMy2G,EAAaxqG,IAAcgoG,SAAS57D,QAAQrc,GAClDy6E,EAAW3D,mBAAqBA,EAChCH,EAAiB32E,GAAUy6E,KAI/Bh4G,KAAKiI,SAAS,CACZisG,kEAKFl0G,KAAKI,YAELJ,KAAKi4G,uBACLj4G,KAAKk3G,0KAILl3G,KAAKI,iMAGkBiC,mEAEvBrC,KAAKI,YAEAJ,KAAKE,MAAMo0G,UAAYjyG,EAAUiyG,WAAat0G,KAAKE,MAAMo0G,UAC5Dt0G,KAAKi3G,YAAY,KAAKj3G,KAAKE,MAAMo0G,8IA4Q5B,IAAA4D,EAAAl4G,KAEH8nB,EAAQ,KACqB,OAA7B9nB,KAAKoC,MAAMwH,cACbke,EAAQ,aAERA,EAAQ,OAAO9nB,KAAKoC,MAAMwH,cACQ,OAA9B5J,KAAKoC,MAAM6xG,iBACbnsF,GAAS,MAAM9nB,KAAKoC,MAAM8xG,iBAAiBl0G,KAAKoC,MAAM6xG,gBAAgB/zG,MAAMi4G,UAIhF,IAAI3nG,EAAkBxQ,KAAKE,MAAMsQ,iBAAmBnP,OAAOC,KAAKtB,KAAKE,MAAMsQ,iBAAiBjP,OAAO,EAA7E,CAAkFiM,IAAcywB,WAAhGx6B,OAAApC,OAAA+2G,EAAA,EAAA/2G,CAA6GA,OAAOC,KAAKtB,KAAKE,MAAMsQ,mBAAoB,CAAChD,IAAcywB,WAGzLj+B,KAAKE,MAAMm4G,gBACb7nG,EAAkB,GAClBnP,OAAOC,KAAKkM,IAAcgoG,SAASjyE,WAAW/hC,QAAS,SAAA+hB,GACrD,IAAM0yF,EAAezoG,IAAcgoG,SAASjyE,UAAUhgB,GAClD0yF,EAAaS,iBACfT,EAAaS,gBAAgBl1G,QAAQ,SAAA0B,GAC9BsN,EAAgB0lB,SAAShzB,IAC5BsN,EAAgBjD,KAAKrK,QAO/B,IAAMo1G,EAAiB,SAAAp4G,GAAK,OAC1B2B,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3G,SAAW6wG,EAAKh4G,MAAM61G,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BmC,EAAK91G,MAAMwH,cACT/H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAKI,GAAI,GACPvM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEI,GAAI,CAAC,EAAE,GACPzI,WAAY,EACZwI,UAAW,SACXzI,SAAU,CAAC,EAAGwyG,EAAKh4G,MAAM61G,WAAa,EAAI,IAJ5C,mCAQAl0G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEI,GAAI,EACJ9H,MAAO,CACLiyG,SAAS,QAEXr3G,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzBqP,EAAgBvN,IAAI,SAACC,EAAM4J,GACzB,IAAM0rG,EAAWN,EAAKn4G,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,UAAzE,iBAAApS,OAAsGP,EAAtG,QACjB,OACErB,EAAAC,EAAAC,cAAC02G,EAAA,EAAD,CACEN,QAASj1G,EACTs1G,SAAUA,EACV10G,IAAG,SAAAL,OAAWP,GACdJ,SAAUo1G,EAAKh4G,MAAM4C,SACrBmC,YAAc,SAAA8B,GAAOmxG,EAAKjB,YAAYlwG,EAAE7D,IACxC+a,WAAai6F,EAAKh4G,MAAM4C,SAAW,CAACuC,OAAO,QAAU,CAAC5D,EAAE,CAAC,EAAE,GAAG4D,OAAO,QACrEF,YAAe+yG,EAAKh4G,MAAM4C,SAItB,KAJiC,CACnCwD,MAAM,CACJ4pB,KAAO,oBASW,OAA9BgoF,EAAK91G,MAAM6xG,eACbpyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACEnM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMI,GAAI,EAAGjN,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvEg3G,EAAKh4G,MAAM61G,YACVl0G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAO3I,OAAQ,EAAG+I,GAAI,EAAGC,IAAG,iBAAA5K,OAAmBy0G,EAAK91G,MAAMwH,cAA9B,UAG9BsuG,EAAKh4G,MAAM2b,SACTq8F,EAAKh4G,MAAM2b,SACXq8F,EAAKh4G,MAAMw4G,QACX72G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,IAAKD,SAAU,CAAC,EAAGwyG,EAAKh4G,MAAM61G,WAAa,EAAI,GAAI/5F,GAAI,EAAGzM,wBAAyB,CAACC,OAAO0oG,EAAKh4G,MAAMw4G,WAE7I72G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,IAAKD,SAAU,CAAC,EAAGwyG,EAAKh4G,MAAM61G,WAAa,EAAI,IAEjFmC,EAAKh4G,MAAM61G,YAAcmC,EAAKh4G,MAAMo0G,SAAajzG,OAAOC,KAAK42G,EAAK91G,MAAM8xG,kBAAkB3yG,OAAO,EAAhD,6BAAAkC,OAAiFy0G,EAAKh4G,MAAMo0G,SAA5F,gFAAA7wG,OAAqLy0G,EAAKh4G,MAAMo0G,SAAhM,oBAAjD,4BAAA7wG,OAA4Sy0G,EAAK91G,MAAMwH,cAAvT,OAMX/H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMI,GAAI8pG,EAAKh4G,MAAM61G,WAAa,EAAI,EAAG50G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GC,OAAOC,KAAK42G,EAAK91G,MAAM8xG,kBAAkBjxG,IAAI,SAACs6B,EAAOzwB,GACnD,IAAMkrG,EAAaE,EAAK91G,MAAM8xG,iBAAiB32E,GAC3Ctf,EAAa+5F,EAAW93G,OAAS83G,EAAW93G,MAAM+d,WAAa+5F,EAAW93G,MAAM+d,WAAa,GAC3F06F,EAAqBT,EAAKh4G,MAAM4C,SAAW,CAACuC,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFA4Y,EAAa5c,OAAOuB,OAAOqb,EAAW06F,GAGpC92G,EAAAC,EAAAC,cAAC02G,EAAA,EAADp3G,OAAAuB,OAAA,GACMo1G,EAAW93G,MADjB,CAEEiF,YAAa,CACXC,OAAO,GAETtB,IAAG,UAAAL,OAAY85B,GACftf,WAAaA,EACbnb,SAAWo1G,EAAKh4G,MAAM4C,SACtBmC,YAAc,SAAA8B,GAAC,OAAImxG,EAAKlB,aAAajwG,EAAEw2B,WAOnB,WAA9B26E,EAAK91G,MAAM6xG,eACTpyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAKgO,GAAI,EAAG5N,GAAI,GACdvM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAGoJ,GAAI,GACzDjN,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK/M,MAAO,QACRY,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMI,GAAI8pG,EAAKh4G,MAAM61G,WAAa,EAAI,EAAG50G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9G82G,EAAK91G,MAAMiyG,mBAAmB9yG,OAAS,EAEnCM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACEnM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAG0I,GAAI,CAAC,EAAE,IAA9D,2CAIE8pG,EAAK91G,MAAMiyG,mBAAmBpxG,IAAI,SAACsgB,EAASzW,GAC1C,IAAMmpG,EAAeiC,EAAKlC,gBAAgBzyF,GAC1C,OACE1hB,EAAAC,EAAAC,cAAC02G,EAAA,EAADp3G,OAAAuB,OAAA,CAAakB,IAAG,oBAAAL,OAAsB8f,IAAgB0yF,EAAtD,CAAoEhxG,YAAc,SAAA8B,GAAOmxG,EAAK3D,oBAAoBxtG,EAAEwc,EAAS20F,EAAK91G,cAO5IP,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAGoJ,GAAI,GAA3D,wEAUdjN,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE/M,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGb82G,EAAK91G,MAAMgyG,kBACZvyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEI,GAAI,EACJnN,MAAO,EACPsF,SAAU2xG,EAAKh4G,MAAM61G,WAAa,OAAS,YAGxCmC,EAAKh4G,MAAM61G,YACVl0G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAM7M,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEW,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAO3I,OAAQ,EAAG+I,GAAI,EAAGC,IAAG,iBAAA5K,OAAmBy0G,EAAK91G,MAAMwH,cAA9B,WAGlC/H,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAauyG,EAAKh4G,MAAM61G,WAAa,EAAI,EAAIrwG,SAAU,EAAG0I,GAAI,GAAzF,wBAGAvM,EAAAC,EAAAC,cAAC62G,EAAA,EAAD,CACEvoF,GAAI,UACJphB,gBAAiB,UACjBpE,MAAOqtG,EAAK91G,MAAM+xG,gBAClB0E,YAAa,sBACb17F,SAAU+6F,EAAKf,oBACfp8F,QAASm9F,EAAKd,wBACd7wG,SAAW2xG,EAAKh4G,MAAM61G,aAAemC,EAAKh4G,MAAM4C,SAAW,OAAS,OACpEg2G,iBAAmB,SAACC,GAAD,MAAgB,wCACnCjwG,UAAoC,UAAzBovG,EAAKh4G,MAAMqQ,UAAwBxH,IAAO4nB,OAAS5nB,IAAO6nB,cAI3E/uB,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAM7M,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAUquB,UAAW,UAErF2oF,EAAK91G,MAAMgyG,mBACqB,OAA/B8D,EAAK91G,MAAM+xG,gBACTtyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK/M,MAAO,QACVY,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAG0I,GAAI,CAAC,EAAE,IAA9D,2CAGAvM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMI,GAAI8pG,EAAKh4G,MAAM61G,WAAa,EAAI,EAAG50G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9G82G,EAAK91G,MAAM+xG,gBAAgB5wE,UAAUhiC,OAAS,EAC5C22G,EAAK91G,MAAM+xG,gBAAgB5wE,UAAUtgC,IAAI,SAACsgB,EAASzW,GACjD,IAAMmpG,EAAeiC,EAAKlC,gBAAgBzyF,GAC1C,OACE1hB,EAAAC,EAAAC,cAAC02G,EAAA,EAADp3G,OAAAuB,OAAA,CAAakB,IAAG,oBAAAL,OAAsB8f,IAAgB0yF,EAAtD,CAAoEhxG,YAAc,SAAA8B,GAAMmxG,EAAKrB,eAAe9vG,EAAEwc,SAIlH1hB,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAG0I,GAAI,GAA3D,sEAQNvM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMG,UAAW,SAAUxI,WAAY,EAAGD,SAAU,EAAG0I,GAAI,GAA3D,wDA8BZ8pG,EAAKh4G,MAAM61G,YAA2C,OAA7BmC,EAAK91G,MAAMwH,gBAAoD,OAAxBsuG,EAAKh4G,MAAMo0G,UAAmD,OAA9B4D,EAAK91G,MAAM6xG,iBACzGpyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE9M,WAAY,SACZE,eAAgB,UAEhBS,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEc,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACRtB,KAAM,SACNR,aAAc,EACdC,UAAW,OACXrB,QAAU,SAAAiB,GAAC,OAAImxG,EAAKtC,OAAO7uG,KAN7B,cAgBV,OAAI/G,KAAKE,MAAM61G,WAEXl0G,EAAAC,EAAAC,cAACu2G,EACKt4G,KAAKE,OAMb2B,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOgrG,OAAQh5G,KAAKE,MAAM84G,QACxBn3G,EAAAC,EAAAC,cAACk3G,EAAA,EAAD,CAAWC,UAAWl5G,KAAK21G,YACzB9zG,EAAAC,EAAAC,cAACk3G,EAAA,EAAUE,OAAX,CAAkBrxF,MAAOA,IAEzBjmB,EAAAC,EAAAC,cAACk3G,EAAA,EAAUG,KAAX,KACEv3G,EAAAC,EAAAC,cAACu2G,EAAD,OAEFz2G,EAAAC,EAAAC,cAACk3G,EAAA,EAAUI,OAAX,KACEx3G,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMgB,GAAI,CAAC,EAAE,GAAI7N,cAAe,CAAC,SAAU,OAAQF,MAAO,EAAGG,eAAgB,UAC3ES,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEc,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACR9B,aAAc,EACdC,UAAW,OACXrB,QAAU,SAAAiB,GAAC,OAAImxG,EAAKvC,WAAW5uG,IAC/BW,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UANxC,SAW+B,OAA7B9C,KAAKoC,MAAMwH,gBAAmD,OAAxB5J,KAAKE,MAAMo0G,UAAmD,OAA9Bt0G,KAAKoC,MAAM6xG,iBAC/EpyG,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEc,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACR9B,aAAc,EACdpB,QAAU,SAAAiB,GAAC,OAAImxG,EAAKtC,OAAO7uG,IAC3B+B,UAAWC,IAAO0nB,eAClB/oB,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UANxC,sBAtrBKw2G,IAAMp3G,WA0sBd8xG,gHCttBTuF,mLACK,IAAA10G,EAAA7E,KACP,OACEsH,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACEvG,MAAO,EACP+N,GAAI,CAAC,EAAE,GACPwqG,GAAI,CAAC,EAAE,GACPr4G,cAAe,OAGbnB,KAAKE,MAAM2C,KAAKI,IAAI,SAACyvG,EAAQC,GAE3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQpuG,QAAoBO,EAAK3E,MAAM4C,WAAiC,IAAnB4vG,EAAQpuG,SAAoBsuG,IAAqB/tG,EAAK3E,MAAM4C,SAC1I,KAGD4vG,EAAQ5qF,OAAS4qF,EAAQ5qF,MAAMvmB,OACrC+F,EAAAxF,EAAAC,cAAC03G,EAAA,EAADp4G,OAAAuB,OAAA,GACMiC,EAAK3E,MACLwyG,EAAQxyG,MAFd,CAGEw5G,KAAMhH,EAAQgH,KACd5xF,MAAO4qF,EAAQ5qF,MACfhkB,IAAG,cAAAL,OAAgBkvG,KAElBD,EAAQ5qF,OAGXxgB,EAAAxF,EAAAC,cAACyF,EAAA,EAADnG,OAAAuB,OAAA,CAAMkB,IAAG,cAAAL,OAAgBkvG,IAAgBD,EAAQxyG,kBA5BrCgC,aAqCXq3G,6MCpCTI,6MAGJ55G,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAUC,mEACjCtC,KAAKI,kJAKL,IAAIkb,EAAY,CACd7Z,EAAE,EACFR,MAAM,IACN24G,YAAY55G,KAAKE,MAAM05G,aAGrBj7F,EAAY,CACdjZ,SAAS,EACTC,WAAW,EACXwI,UAAU,SACVvI,MAAM5F,KAAKE,MAAM2d,SAAW,YAAc,YAM5C,OAHAvC,EAAYtb,KAAKD,cAAcg6B,kBAAkBze,EAAUtb,KAAKE,MAAMob,WACtEqD,EAAY3e,KAAKD,cAAcg6B,kBAAkBpb,EAAU3e,KAAKE,MAAMye,WAGpE9c,EAAAC,EAAAC,cAACywG,EAAA,EAAD,CACE72F,eAAe,EACfL,UAAWA,EACXuC,SAAU7d,KAAKE,MAAM2d,UAErBhc,EAAAC,EAAAC,cAACC,EAAA,EACK2c,EAEH3e,KAAKE,MAAMkhB,WAHd,aA7C0Blf,aAuDnBy3G,gqLC5Df,IAAAE,EAAAtyF,EAAA,KAAAuyF,EAAAvyF,EAAA,KAAAwyF,EAAAxyF,EAAA,KAAAyyF,EAAAzyF,EAAA,KAAA0yF,EAAA1yF,EAAA,MAKM/kB,EAAoB,CACxBuxB,KAAK,CACHmmF,IAAI,CACFh3G,MAAM,MACNrC,SAAS,GACTuC,SAAS,OACTihB,YAAY,SACZpX,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,uBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,6BAEPssG,YAAY,gOACZsG,SAAS,CACPrtF,SAAS,8JAEXrpB,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT25G,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,wCACLwF,QAAQ,6CACRsyB,eAAe,CACb,CACEr8B,MAAM,OACN4wB,SAAQ,EACR7mB,QAAQ,gDAIdW,MAAM,aACNyW,YAAY,SACZ5c,KAAK,kBACLvE,MAAM,kBACN+J,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT25G,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,wCACLwF,QAAQ,6CACRsyB,eAAe,CACb,CACEr8B,MAAM,OACN4wB,SAAQ,EACR7mB,QAAQ,gDAIdW,MAAM,aACNyW,YAAY,SACZ5c,KAAK,kBACLvE,MAAM,kBACN+J,QAAQ,+CAGZytG,IAAI,CACFx3G,MAAM,MACNrC,SAAS,GACTuC,SAAS,OACTihB,YAAY,SACZpX,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,uBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,6BAEP9D,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT25G,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,wCACLwF,QAAQ,6CACRsyB,eAAe,CACb,CACEr8B,MAAM,OACN4wB,SAAQ,EACR7mB,QAAQ,gDAIdW,MAAM,aACNyW,YAAY,SACZ5c,KAAK,kBACLvE,MAAM,kBACN+J,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,wCACLwF,QAAQ,8CAEVW,MAAM,aACNyW,YAAY,SACZ5c,KAAK,kBACLvE,MAAM,kBACN+J,QAAQ,gDAId0tG,KAAK,CACHC,MAAM,CACJ9xE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,QACNE,SAAS,OACTihB,YAAY,SACZpX,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,qBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,2BAEP4yG,SAAS,CACPQ,gBAAgB,4KAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNC,QAAQ,OACR55E,QAAQ,SACRm7C,MAAM,YACNrwD,QAAQ,YACRuB,SAAS,aACT0e,YAAY,aACZ5K,cAAc,YACd+J,aAAa,gBAEfhK,WAAW,CACThgC,SAAS,GACT25G,oBAAmB,EACnBj7E,eAAe,CACb,CACEr8B,MAAM,MACN4wB,SAAQ,EACR7mB,QAAQ,+CAGZ67B,IAAIgyE,EACJrzG,KAAK,sCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,gBACLvE,MAAM,gBACN0K,MAAM,gBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,sCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,gBACLvE,MAAM,gBACN0K,MAAM,gBACNX,QAAQ,gDAiFd8tG,OAAO,CACLC,SAAS,CACPlyE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,WACNE,SAAS,SACTihB,YAAY,SACZkjB,YAAY,CAAC,MAAM,OACnB4lC,aAAa,CAAC,MAAM,MAAM,QAC1BlgE,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,0BACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,gCAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,sLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,2CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,qBACLvE,MAAM,qBACN0K,MAAM,qBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,2CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,qBACLvE,MAAM,qBACN0K,MAAM,qBACNX,QAAQ,+CAGZguG,QAAQ,CACNnyE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,UACNE,SAAS,SACTihB,YAAY,SACZ8oD,aAAa,CAAC,MAAM,MAAM,OAC1B5lC,YAAY,CAAC,MAAM,MAAM,SACzBt6B,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,yBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,+BAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,mLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,0CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,oBACLvE,MAAM,oBACN0K,MAAM,oBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,0CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,oBACLvE,MAAM,oBACN0K,MAAM,oBACNX,QAAQ,+CAGZiuG,OAAO,CACLpyE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,SACNE,SAAS,SACTihB,YAAY,SACZkjB,YAAY,CAAC,MAAM,MAAM,OACzB4lC,aAAa,CAAC,MAAM,MAAM,SAC1BlgE,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,wBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,8BAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,sLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,sCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,mBACLvE,MAAM,mBACN0K,MAAM,mBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,sCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,mBACLvE,MAAM,mBACN0K,MAAM,mBACNX,QAAQ,+CAGZkuG,UAAU,CACRryE,IAAIq2C,EACJt+E,SAAS,GACTuC,SAAS,SACTF,MAAM,YACNmhB,YAAY,SACZkjB,YAAY,CAAC,MAAM,OACnBt6B,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,2BACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,iCAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,yLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,4CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,sBACLvE,MAAM,sBACN0K,MAAM,sBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,4CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,sBACLvE,MAAM,sBACN0K,MAAM,sBACNX,QAAQ,+CAGZmuG,OAAO,CACLtyE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,OACNE,SAAS,SACTihB,YAAY,SACZkjB,YAAY,CAAC,MAAM,MAAM,SACzBt6B,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,sBACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,4BAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,wLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,uCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,iBACLvE,MAAM,iBACN0K,MAAM,iBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,uCACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,iBACLvE,MAAM,iBACN0K,MAAM,iBACNX,QAAQ,+CAGZouG,SAAS,CACPvyE,IAAIq2C,EACJt+E,SAAS,GACTqC,MAAM,WACNE,SAAS,SACTihB,YAAY,SACZkjB,YAAY,CAAC,MAAM,OACnBt6B,QAAQ,6CACR45B,IAAI,CACFiC,IAAIqxE,EACJt5G,SAAS,GACT4G,KAAK,0BACLwF,QAAQ,8CAEV07B,SAAS,CACPG,IAAIsxE,EACJ3yG,KAAK,gCAEPssG,YAAY,0NACZsG,SAAS,CACPrtF,SAAS,6JACT6tF,gBAAgB,sLAElBl3G,GAAG,CACDmlC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,2CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,qBACLvE,MAAM,qBACN0K,MAAM,qBACNX,QAAQ,8CAEVrJ,GAAG,CACDklC,IAAIq2C,EACJt+E,SAAS,GACT0C,QAAQ,KACRm9B,UAAU,CACR45E,MAAM,QACNx+B,MAAM,QACNy+B,QAAQ,UACR9uF,QAAQ,YACRuB,SAAS,aACT8T,cAAc,eAEhBD,WAAW,CACThgC,SAAS,GACT0+B,eAAe,GACfi7E,oBAAmB,EACnB1xE,IAAI2xE,EACJhzG,KAAK,2CACLwF,QAAQ,8CAEVoX,YAAY,SACZ5c,KAAK,qBACLvE,MAAM,qBACN0K,MAAM,qBACNX,QAAQ,iDAMDzK,sKC1gBA84G,6MA5Qbl5G,MAAQ,CACNe,YAAY,KACZm3E,aAAa,KACb1wE,cAAc,KACd2xG,eAAe,KACf/qG,gBAAgB,QAIlBzQ,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAK6H,gMAGkBxF,EAAUC,8EACjCtC,KAAKI,cAEwBkC,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,sCAE5DzG,EAAcnD,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKoC,MAAMwH,eAC9D0wE,EAAen3E,EAAYm2B,kBAG3BvX,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAayxC,EAAa7yE,KAAK6yE,EAAartE,QAAQqtE,EAAaxxC,KAC5E9oC,KAAKE,MAAM2oC,aAAa7oC,KAAKoC,MAAMwH,cAAczG,EAAY8J,QAAQ9J,EAAY2lC,cAGnF9oC,KAAKiI,SAAS,CACZ9E,cACAm3E,kRAME9pE,EAAkBnP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiBy1B,OAAQ,SAAC3U,EAAOpuB,GACxF,IAAMC,EAAc9C,EAAKH,MAAMs7G,UAAUhrG,gBAAgBtN,GAOzD,OANIC,EAAY2wB,SACdxC,EAAO/jB,KAAPlM,OAAA84B,EAAA,EAAA94B,CAAA,CACEwJ,MAAM3H,GACHC,IAGAmuB,GACP,IAEIiqF,EAAiB/qG,EAAgB,GACjC5G,EAAgB2xG,EAAe1wG,MAErC7K,KAAKiI,SAAS,CACZ2B,gBACA2xG,iBACA/qG,0JAIQ5G,GACV5J,KAAKiI,SAAS,CACZ2B,mDAMF,IAsGM6xG,EAAoBz7G,KAAKoC,MAAMe,YAAcnD,KAAKoC,MAAMe,YAAYu4G,UAAY,KAEtF,OACE9yG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKoC,MAAMoO,gBAmBV5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKoC,MAAMoO,gBAAgBjP,OAU1BqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,iBAKAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEuH,KAAM,SACN2U,cAAc,EACdrB,QAAS/a,KAAKoC,MAAMoO,gBACpB2K,kBAtKM,SAAAjb,GACxB,IAAM0N,EAAQ1N,EAAM0N,MACdzK,EAAc,CAClB4K,KAAK7N,EAAMqK,KAAKwD,MAGlB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UAEZ0H,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHpd,MAAM,MACNoE,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBAoIAuX,SAAUnd,KAAKi3G,YAAYv2F,KAAK1gB,MAChCib,aAAcjb,KAAKoC,MAAMm5G,eACzBngG,qBA7HS,SAAAlb,GAE3B,IACMgc,GAA4D,IADlDhc,EAAMgc,YAAYnB,QACN+B,QAAQ5c,EAAMgc,YAAYrR,OAAgB3K,EAAMgc,YAAYrR,MAAQ,KAEhG,IAAKqR,EACH,OAAO,KAGT,IAAMtO,EAAQsO,EAAYtO,MACpBzK,EAAc,CAClB4K,KAAKmO,EAAYnO,MAGnB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACE0D,MAAO,CACL4pB,KAAK,KAEP9uB,eAAgB,iBACZlB,EAAMqb,YAEV3S,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEnB,EAAG,EACHR,MAAO,GACHf,EAAMqb,WAHZ,CAIEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAC8I,OAAO,WACfhO,eAAgB,eAEhBwH,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBAgFF61G,GACE7yG,EAAA9G,EAAAC,cAAC05G,EAADp6G,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiD,YAAanD,KAAKoC,MAAMe,YACxBm3E,aAAct6E,KAAKoC,MAAMk4E,aACzB1wE,cAAe5J,KAAKoC,MAAMwH,kBAxClChB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,UAJb,gCAzBNvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,+BA5MAtD,2DCsFP25G,6MAzFbz5G,MAAQ,CACN05G,aAAa,KACbC,gBAAgB,0FAGhB,IAAMA,EAAkB16G,OAAOC,KAAKtB,KAAKE,MAAM87G,WAAW,GAC1Dh8G,KAAKi8G,WAAWF,sCAEP12E,GACTrlC,KAAKiI,SAAS,SAAA7F,GAAK,OAAAf,OAAA84B,EAAA,EAAA94B,CAAA,GAASe,EAAT,CAAgB25G,gBAAiB12E,EAASy2E,aAAc,8CAEhE/0G,EAAE+F,GACb/F,EAAE6H,iBACF5O,KAAKiI,SAAS,SAAA7F,GAAK,OAAAf,OAAA84B,EAAA,EAAA94B,CAAA,GAASe,EAAT,CAAgB05G,aAAc15G,EAAM05G,eAAehvG,EAAI,KAAOA,uCAG1E,IAAAzM,EAAAL,KACDk8G,OAA2C1sF,IAA5BxvB,KAAKE,MAAMg8G,cAA8Bl8G,KAAKE,MAAMg8G,aACzE,OACEtzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd86G,GACEtzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPY,GAAI,CAAC,EAAE,GACP/N,MAAO,CAAC,EAAE,IACVE,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKE,MAAM87G,WAAW/4G,IAAK,SAACoiC,EAAQv4B,GAC9C,IAAMqvG,EAAa92E,IAAYhlC,EAAK+B,MAAM25G,gBAC1C,OACEnzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE/E,IAAG,WAAAL,OAAaqJ,GAChBqB,UAAW,SACX/M,eAAgB,SAChBH,MAAO,EAAEI,OAAOC,KAAKjB,EAAKH,MAAM87G,WAAWz6G,OAC3C66G,aAAeD,EAAa,oBAAsB,QAElDvzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJzI,WAAY,EACZD,SAAU,CAAC,EAAG,GACdyI,UAAW,SACXrI,QAAS,kBAAMzF,EAAK47G,WAAW52E,IAC/Bz/B,MAAOu2G,EAAa,OAAS,YAC7BrzG,UAAW,CAAC,UAAWqzG,EAAa,WAAa,KAEhD92E,OASjBz8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGLjB,KAAKE,MAAM87G,UAAUh8G,KAAKoC,MAAM25G,iBAAiB94G,IAAK,SAACqM,EAASxC,GAAV,OACpDlE,EAAA9G,EAAAC,cAAC2M,EAAA,EAAD,CACE5K,IAAG,UAAAL,OAAYqJ,GACf2C,OAAQH,EAASxN,EACjB8gB,GAAU,IAAN9V,EAAU,EAAI,GAClBwC,SAAUA,EAAS+sG,EACnBntG,SAAU7O,EAAK+B,MAAM05G,eAAiBhvG,EACtC7H,YAAc,SAAA8B,GAAC,OAAI1G,EAAKi8G,aAAav1G,EAAE+F,kBA/E/B5K,uECiFXq6G,cAjEb,SAAAA,EAAYr8G,GAAO,IAAA2E,EAAA,OAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAAu8G,IACjB13G,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAAk7G,GAAAziE,KAAA95C,KAAME,KAbRkC,MAAQ,GAYWyC,EATnB9E,cAAgB,KASG8E,EAKnB63G,mBALmBr7G,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAKE,SAAAuQ,IAAA,OAAAgR,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACnB5M,EAAKzE,YADc,wBAAAuhB,EAAAhP,SAAA8O,EAAAzhB,SALF6E,EASnB8wG,WATmBt0G,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KASN,SAAAgR,IAAA,OAAAuQ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OACX5M,EAAK3E,MAAMy1G,aADA,wBAAAtzF,EAAA1P,SAAAuP,EAAAliB,SAPX6E,EAAKzE,YAFYyE,2EAPb7E,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,yDAmB9C,OACE0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmwG,OAAQh5G,KAAKE,MAAM84G,QAEnBpwG,EAAA9G,EAAAC,cAAC46G,EAAA,EAAD,CACEp2G,SAAU,CAAC,QAAQ,SACnB2yG,UAAWl5G,KAAKE,MAAMy1G,YAEtB/sG,EAAA9G,EAAAC,cAAC46G,EAAA,EAAUxD,OAAX,CACEv2F,GAAI,EACJg6F,WAAY,OACZ90F,MAAO,gBACP/Z,KAAM,uBAGRnF,EAAA9G,EAAAC,cAAC46G,EAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVyI,UAAW,OACXvI,MAAO,aAHT,0CAK0C5F,KAAKE,MAAM+xD,MALrD,gFAQFrpD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ5N,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE53G,YAAajF,KAAK21G,WAClBxwG,YAAa,CACXlE,MAAM,CAAC,OAAO,SAHlB,qBA/DkBq4G,IAAMp3G,WC4rBvB46G,6MAtrBb16G,MAAQ,CACN26G,SAAS,KACTC,WAAW,KACXC,YAAY,KACZC,YAAY,KACZC,YAAY,KACZh6G,YAAY,KACZm3E,aAAa,KACbx6C,aAAa,KACbE,aAAa,KACbc,cAAc,KACds8E,eAAe,KACfC,eAAe,KACfC,gBAAe,EACfC,mBAAmB,KACnBC,eAAe,UACfC,uBAAsB,KAIxB19G,cAAgB,OAwMhB81G,WAAa,WACXhxG,EAAKoD,SAAS,CACZi1G,YAAa,mFAvMXl9G,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,gMAGkBxF,EAAUC,mEACjCtC,KAAKI,YAEkBJ,KAAKE,MAAMwQ,UAAYrO,EAAUqO,SAEtD1Q,KAAK6H,WAGsBvF,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,gBAEnEx9G,KAAK09G,+RAMF19G,KAAKE,MAAMwQ,iDACP,6BASCqR,QAAQqD,IAAI,CAEpBplB,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAMwQ,SACvE1Q,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAMwD,cAAc+D,KAAKzH,KAAKE,MAAMwQ,SAC5E1Q,KAAKD,cAAc6gC,wBAAwB5gC,KAAKE,MAAMwD,cAAcm9B,WAAWp5B,KAAKzH,KAAKE,MAAMwQ,QAAQ1Q,KAAKE,MAAMwD,cAAcm9B,WAAWhgC,SAASb,KAAKE,MAAMwD,cAAcg9B,UAAUI,eACvL9gC,KAAKD,cAAcmhC,oBAAoB,aAAa,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,SAClM1Q,KAAKD,cAAcmhC,oBAAoB,mBAAmB,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,8CAXxMsvB,OACAo9E,OACAt8E,OACA+8E,OACA/9E,OAUI29E,EAAwBL,GAAkBA,EAAe3nG,GAAG,IAC/C,GACC,EAIpBzV,KAAKiI,SAAS,CACZ41G,aACAb,YAPiB,EAQjBC,aAPkB,EAQlBj9E,eACAF,eACAgB,gBACAs8E,iBACAK,yBACC,WACDp9G,EAAKq9G,+JAKP,IACIP,EAAc,KACdh6G,EAAc,KACdm3E,EAAe,KACf+iC,EAAiB,KACjBC,GAAiB,EAEfQ,EAAiB99G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW5V,KAAKE,MAAM09G,kBAC7Eb,EAAWe,EAAe/J,YAAY/zG,KAAKoC,MAAMo7G,gBAErD,OAAQx9G,KAAKoC,MAAMo7G,gBACjB,IAAK,UACHH,GAAiB,EACjB/iC,EAAet6E,KAAKE,MAAM69G,UAC1B56G,EAAcnD,KAAKE,MAAMiD,YACzBg6G,EAAcn9G,KAAKoC,MAAM49B,aAC3B,MACA,IAAK,QACHq9E,GAAiB,EACjBl6G,EAAcnD,KAAKE,MAAMwD,cACzBy5G,EAAcn9G,KAAKoC,MAAMg7G,eACzB9iC,EAAet6E,KAAKE,MAAMwD,cAAcm9B,WAC1C,MACA,IAAK,UACHw8E,GAAiB,EACjBl6G,EAAcnD,KAAKE,MAAMwD,cACzB42E,EAAet6E,KAAKE,MAAMwD,cAAcm9B,WACxCs8E,EAAcn9G,KAAKoC,MAAM0+B,cACpB9gC,KAAKoC,MAAM46G,aACdM,GAAiB,EACjBP,EAAWe,EAAe/J,YAAYiK,aAE1C,MACA,IAAK,WACHX,GAAiB,EACjB/iC,EAAet6E,KAAKE,MAAM69G,UAE1B56G,EAAcnD,KAAKE,MAAMwD,cACzBy5G,EAAcn9G,KAAKoC,MAAMg7G,eAGpBp9G,KAAKoC,MAAM66G,cACdK,GAAiB,EACjBP,EAAWe,EAAe/J,YAAYkK,cAc5C,IAAMV,EAAkB,MAAA95G,OAASzD,KAAKoC,MAAMo7G,eAApB,kBAAA/5G,OAAmDN,EAAYD,MAA/D,2DAIxBlD,KAAKiI,SAAS,CACZi2G,QA9DY,KA+DZnB,WACA55G,cACAg6G,cACA7iC,eACAgjC,iBACAD,iBACAE,uKAYiB1rF,GACnB,IAAIxS,EAAa,KACbi5C,EAAe,KAcnB,OAZIt4D,KAAKE,MAAMwD,cAAcg9B,UAAU1gC,KAAKoC,MAAMo7G,kBAChDn+F,EAAarf,KAAKE,MAAMwD,cAAcg9B,UAAU1gC,KAAKoC,MAAMo7G,gBAM3DllD,EAAe,CAACzmC,IAGlBqH,QAAQ8a,IAAI,uBAAuB30B,EAAWi5C,GAEvC,CACLj5C,aACAi5C,2FAIazmC,gFACTssF,EAAen+G,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAMiD,YAAY8uD,gBAC9CjyD,KAAKD,cAAcmhC,oBAAnB,OAA8C,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,2BACtM2B,KAAKwf,GAAQpc,GAAG0oG,0BAC3Bn+G,KAAKiI,SAAS,CACZi1G,YAAY,6BAEP,oCAEF,qJAKP,OADAl9G,KAAK6H,WACG7H,KAAKoC,MAAMo7G,gBACjB,IAAK,QACL,IAAK,UACHx9G,KAAKiI,SAAS,CACZi1G,YAAY,qDAcFM,GAChBx9G,KAAKiI,SAAS,CACZu1G,oDAIK,IAAAhzG,EAAAxK,KACD89G,EAAiB99G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW5V,KAAKE,MAAM09G,kBAC3EQ,EAAkD,OAA/Bp+G,KAAKE,MAAM09G,gBAA2B,KAAO,KAChES,EAAsBr+G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAWwoG,IACrED,EAAen+G,KAAKD,cAAcW,YAAYV,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAMiD,YAAY8uD,OAAO,GAAG,IAAIjyD,KAAKE,MAAM0J,cACvH21B,EAAiBv/B,KAAKE,MAAMwD,cAAcm9B,WAAWtB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACzF,OACElrB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBmF,SAAU,CAAC,OAAO,UAGfvG,KAAKE,MAAMo+G,kBACV11G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1G,KAAM,QACNzG,MAAO,OACPs9G,cAAe,SACfxwG,KAAMswG,EAAoBtwG,KAC1B5G,UAAWk3G,EAAoBz4G,MAAM44G,IACrC14G,QAAS,SAAAiB,GAAC,OAAIyD,EAAKtK,MAAMu+G,kBAAkBJ,EAAoB1kC,SAPjE,aASa0kC,EAAoB52G,OAKvCmB,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACH5J,OAAO,OAMTwD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJprG,GAAI,EACJlN,WAAY,SACZC,cAAe,MACfi7G,aAAY,aAAA34G,OAAeq6G,EAAel4G,MAAM44G,MAEhD51G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJhQ,IAAKyvG,EAAe9/F,MACpBtW,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAENk4G,EAAer2G,OAGpBmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,UACLqoF,SAAS,OACT6D,aAAY,aAAA34G,OAAczD,KAAKE,MAAM0G,MAAMC,OAAOC,UAEpD5F,WAAY,aACZE,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJzI,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAJT,YAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpBnC,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAE5BkF,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJzI,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAJT,SAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpBnC,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAE5BkF,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,aAOAgD,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,kBAG9BkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACE9vB,UAAW,CACToN,GAAG,GAEL5I,KAAM,mBACNyrB,aAAc,CACZD,QAAQhxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,mBAG3DhN,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,cACL2Y,YAAY,CACVhf,eAAe,eAGnB8B,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,kBAG9BkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACE9vB,UAAW,CACToN,GAAG,GAEL5I,KAAM,kBACNyrB,aAAc,CACZD,QAAQhxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,sBAG3DhN,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,iBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,kBAG9BkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEtrB,KAAM,MACNyrB,aAAc,CACZD,QAAQhxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,mBAG3DhN,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,wBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAG1B67B,EAAeh+B,OAAO,GACpBqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,yBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,EACTC,WAAW,EACXkuG,WAAW,IACXjuG,MAAM,aAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAMpCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEtrB,KAAM,YACNyrB,aAAc,CACZD,QAAQhxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBAG3DhN,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,kBACLvH,MAAM,CACJyF,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,kBAG9BkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,UAOAgD,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJyF,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAI3B1D,KAAKE,MAAMiD,YAAYmpB,eAAiBtsB,KAAKE,MAAM4C,WAClD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,aAOAgD,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJW,SAAS,EACT8E,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAOlC1D,KAAKE,MAAMo+G,iBACP11G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPs9G,cAAe,SACfxwG,KAAM+vG,EAAe/vG,KACrB5G,UAAW22G,EAAel4G,MAAM44G,IAChC14G,QAAS,SAAAiB,GAAC,OAAIyD,EAAKtK,MAAMu+G,kBAAkBX,EAAenkC,SAGxD35E,KAAKE,MAAMiD,YAAX,SAAAM,OAAkCq6G,EAAer2G,MAAjD,cAAAhE,OAAwEq6G,EAAer2G,OAI7FmB,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTgb,GAAG,EACH7a,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,6BAKdoD,EAAA9G,EAAAC,cAAC48G,EAADt9G,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+xD,MAAOksD,EACPxI,WAAY31G,KAAK61G,WACjBmD,OAAmC,UAA3Bh5G,KAAKoC,MAAM86G,eAErBt0G,EAAA9G,EAAAC,cAAC68G,EAAA,EAAD,CACEC,iBAAiB,EACjB9wG,KAAI,mBACJ+Z,MAAK,mBACLpX,QAAS1Q,KAAKE,MAAMwQ,QACpBilG,WAAY31G,KAAK61G,WACjBvjF,UAAWtyB,KAAKE,MAAM0J,cACtBovG,OAAmC,UAA3Bh5G,KAAKoC,MAAM86G,YACnB13G,KAAI,+DAAA/B,OAAiEzD,KAAKoC,MAAMy7G,WAAa79G,KAAKoC,MAAMy7G,WAAWvwG,QAAQ,GAAK,OAA5H,mCAAA7J,OAAoKzD,KAAKE,MAAM0J,cAA/K,cACJk1G,MAAK,eAAAr7G,OAAiBzD,KAAKoC,MAAMy7G,WAAa79G,KAAKoC,MAAMy7G,WAAWvwG,QAAQ,GAAK,OAA5E,gBAAA7J,OAAiGzD,KAAKE,MAAM0J,cAA5G,uCAAAnG,OAA+JzD,KAAKD,cAAc6V,gBAAgB,CAAC,aAAnMnS,OAAiNzD,KAAKE,MAAM67G,gBAAgBpiC,MAA5O,2DAjrBcz3E,4FC8uBd68G,6MA3uBb38G,MAAQ,CACN0c,WAAW,CACTC,OAAO,KACPC,SAAQ,GAEV+5F,WAAW,KACX71D,aAAY,EACZ87D,eAAc,EACdC,eAAc,EACd5B,gBAAe,EACfC,gBAAe,EACf4B,kBAAiB,EACjBC,oBAAoB,QAItBp/G,cAAgB,OAkDhBq/G,iBAAmB,SAACr4G,GAAyB,IAAvBs4G,IAAuBvsG,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,GAErCimG,EAAahyG,EAAEggB,OAAOlc,MAAMtJ,SAAWf,MAAMuG,EAAEggB,OAAOlc,OAAShG,EAAK9E,cAAc8R,MAAM9K,EAAEggB,OAAOlc,OAAShG,EAAK9E,cAAc8R,MAAM,GACrIhN,EAAKzC,MAAM22G,aAAeA,GAC5Bl0G,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5By2G,aACAoG,oBALwB,OAMvB,WACGE,GAA2D,oBAAnCx6G,EAAK3E,MAAMo/G,qBACrCz6G,EAAK3E,MAAMo/G,oBAAoBz6G,EAAKzC,MAAM22G,iBAMlDwG,cAAgB,WACd,GAAuC,OAAnC16G,EAAKzC,MAAM+8G,oBACb,OAAO,EAET,IAAMK,EAAqB36G,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAM+8G,qBAAqB76F,IAAI,KAClFy0F,EAAal0G,EAAK3E,MAAM8/B,eAAiBn7B,EAAK9E,cAAc8R,MAAMhN,EAAK3E,MAAM8/B,cAAcx/B,QAAUqE,EAAK9E,cAAc8R,MAAMhN,EAAK3E,MAAM8/B,cAAc3yB,MAAMmyG,GAAsB,KAEzL36G,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5By2G,eACC,WAC6C,oBAAnCl0G,EAAK3E,MAAMo/G,qBACpBz6G,EAAK3E,MAAMo/G,oBAAoBz6G,EAAKzC,MAAM22G,iBAKhD0G,uBAAyB,WACvB,OAAuC,OAAnC56G,EAAKzC,MAAM+8G,qBAGRt6G,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAM+8G,qBAAqB76F,IAAI,QAetEo7F,uBAAyB,SAACP,GACxBt6G,EAAKoD,SAAS,CACZk3G,2BAIJQ,oBAAsB,WAAiB,IAAhB9tF,EAAgB/e,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACvB+e,IACHA,EAAShtB,EAAKzC,MAAM22G,YAGtB,IAAMuE,GADNzrF,EAAShtB,EAAK9E,cAAc8R,MAAMggB,IACJrxB,SAAWqxB,EAAOuC,IAAI,IAAMvC,EAAOpc,GAAG5Q,EAAK3E,MAAM8/B,cAC/En7B,EAAKoD,SAAS,CACZq1G,sBAIJsC,6BAAU,SAAAn+F,IAAA,IAAAo+F,EAAAC,EAAA,OAAArtF,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAAAkQ,EAAAlQ,KAAA,EAEuB5M,EAAKk7G,wBAF5B,OAAAp+F,EAAApN,KAiEN1P,EAAKoD,SAAS,CACZi3G,kBAAiB,KA5DbW,EAAkB,SAACjuG,EAAGqN,GAE1B,IAAMC,EAAY,CAChBI,YAAa,UACbH,cAAe,eACfC,WAAYxN,EAAKA,EAAGG,OAAS,MAGzBmxC,EAActxC,GAAoB,YAAdA,EAAGG,OAEzBkN,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAG9Cra,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B48G,iBAAkBh8D,EAClBpkC,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERC,OAAO,KACPC,SAAQ,OAI8B,oBAA/Bna,EAAK3E,MAAM2/G,iBAAkC38D,GACtDr+C,EAAK3E,MAAM2/G,gBAAgBjuG,IAIzBkuG,EAAyB,SAACluG,GAC9B,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERC,eAMFla,EAAK3E,MAAM8/G,sBAAwBn7G,EAAK9E,cAAc8R,MAAMhN,EAAK3E,MAAM8/G,qBAAqBx/G,QAC9FqE,EAAK9E,cAAcqmE,wBAAwBvhE,EAAK3E,MAAMiD,YAAYD,MAAM2B,EAAK3E,MAAMo6E,aAAartE,QAAQpI,EAAK3E,MAAM8/G,oBAAoBH,EAAgBC,GAEvJj7G,EAAK9E,cAAcsmE,YAAYxhE,EAAK3E,MAAMiD,YAAYD,MAAM2B,EAAK3E,MAAMo6E,aAAartE,QAAQ4yG,EAAgBC,GAG9Gj7G,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERC,OAAO,KACPC,SAAQ,IAEVkgG,kBAAiB,MA9Db,wBAAAv9F,EAAAhP,SAAA8O,EAAAzhB,WAuEVigH,+BAAY,SAAA/9F,IAAA,IAAA62F,EAAAmH,EAAAl4G,EAAA0X,EAAAE,EAAAL,EAAA2/F,EAAA7lD,EAAA8mD,EAAA9gG,EAAAi5C,EAAAztD,EAAA,OAAA4nB,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,UAEJsnG,EAAal0G,EAAKzC,MAAM22G,WAAal0G,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAM22G,YAAc,KAFnF,CAAA12F,EAAA5Q,KAAA,eAAA4Q,EAAAK,OAAA,UAID,GAJC,UAO2B,oBAA1B7d,EAAK3E,MAAMkgH,WAPZ,CAAA/9F,EAAA5Q,KAAA,eAAA4Q,EAAA5Q,KAAA,EAQiB5M,EAAK3E,MAAMkgH,WAAWrH,GARvC,UAAA12F,EAAA9N,KAAA,CAAA8N,EAAA5Q,KAAA,eAAA4Q,EAAAK,OAAA,UAUC,GAVD,cAcJw9F,EAAUr7G,EAAK9E,cAAcy0D,qBAAqBukD,EAAWl0G,EAAK3E,MAAMiD,YAAYtC,UAIpFmH,EAAW,SAAC4J,EAAGqN,GAEnB,IAAMikC,EAActxC,GAAoB,YAAdA,EAAGG,OAG7B,GAAIH,EAAG,CACL,IAAMsN,EAAY,CAChBE,WAAYxN,EAAGG,OACfoN,cAAa,eACbkhG,WAAYtH,EAAWzrG,UACvBgS,YAAaza,EAAK3E,MAAMiD,YAAYD,OAGlC+b,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAIhDra,EAAKoD,SAAS,CACZi7C,cACApkC,WAAY,CACVC,OAAO,KACPC,SAAQ,KAIRkkC,IAEFr+C,EAAKu6G,iBAAiB,CACpBr4F,OAAO,CACLlc,MAAM,KAER,GACFhG,EAAKoD,SAAS,CACZg3G,eAAc,IAGmB,oBAAxBp6G,EAAK3E,MAAM8H,UACpBnD,EAAK3E,MAAM8H,SAAS4J,EAAGsuG,EAAQtgG,KAK/BF,EAAkB,SAAC9N,GACvB,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERC,eAKFa,EAAS,KAGTL,EAAe1a,EAAK3E,MAAMo6E,aAAa7yE,KA/EjC4a,EAAA5Q,KAAA,GAgFqB5M,EAAKk7G,uBAAsB,GAhFhD,WAgFJb,EAhFI78F,EAAA9N,OAkFY1P,EAAK3E,MAAM8+G,eAAiBn6G,EAAKzC,MAAM48G,gBAAkBE,GAlFrE,CAAA78F,EAAA5Q,KAAA,gBAAA4Q,EAAA5Q,KAAA,GAoFuB5M,EAAK9E,cAAcshE,WAAWx8D,EAAK3E,MAAMiD,YAAYD,MAAO2B,EAAK3E,MAAMwQ,QAAS6O,GApFvG,SAoFF85C,EApFEh3C,EAAA9N,QAuFNqL,EAAS/a,EAAK3E,MAAMogH,2BAA2BJ,EAAQ7mD,IAvFjDh3C,EAAA5Q,KAAA,qBA0FJ5M,EAAK3E,MAAMqgH,2BA1FP,CAAAl+F,EAAA5Q,KAAA,gBAAA4Q,EAAA5Q,KAAA,GA2FS5M,EAAK3E,MAAMqgH,2BAA2BL,EAAQr7G,EAAKzC,MAAM+8G,qBA3FlE,QA2FNv/F,EA3FMyC,EAAA9N,KAAA8N,EAAA5Q,KAAA,iBA6FNmO,EAAS/a,EAAK3E,MAAM2f,qBAAqBqgG,EAAQr7G,EAAKzC,MAAM+8G,qBA7FtD,QAiGNv/F,GAEAP,GAFO8gG,EAILvgG,GAFFP,WACAi5C,EAHO6nD,EAGP7nD,aAGIztD,EAAQ+U,EAAO/U,OAAS,KAC9B0U,EAAeK,EAAOL,cAAgB1a,EAAK3E,MAAMo6E,aAAa7yE,KAI9D5C,EAAK3E,MAAM+f,0BAA0BV,EAAcF,EAAYi5C,EAAcztD,EAAO7C,EAAU0X,GAE9F7a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERE,SAAQ,QAIZna,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERE,SAAQ,OAxHJ,yBAAAqD,EAAA1P,SAAAuP,EAAAliB,WA8HZygB,uCAAoB,SAAAtP,IAAA,OAAAshB,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClB5M,EAAKoD,SAAS,CACZ6W,WAAY,CACVC,OAAO,KACPC,SAAQ,KAJM,wBAAAzN,EAAAoB,SAAAxB,EAAAnR,WA8CpBwgH,gBAAkB,WAChB37G,EAAKgD,uFAtWD7H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kRAICJ,KAAK6H,gMAGYxF,EAAUC,wFACjCtC,KAAKI,YAECqgH,EAAgBp+G,EAAUyP,SAAW9R,KAAKE,MAAM4R,OAChDuf,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDgwG,EAAsBr+G,EAAU29B,eAAiBhgC,KAAKE,MAAM8/B,aAC5D2gF,EAAuBr+G,EAAU08G,gBAAkBh/G,KAAKoC,MAAM48G,cAC9D4B,EAAwBv+G,EAAUg7G,iBAAmBr9G,KAAKE,MAAMm9G,eAChEwD,EAAkB5wG,KAAKC,UAAU7N,EAAUi4E,gBAAkBrqE,KAAKC,UAAUlQ,KAAKE,MAAMo6E,cACvFwmC,EAAqB7wG,KAAKC,UAAU7N,EAAUc,eAAiB8M,KAAKC,UAAUlQ,KAAKE,MAAMiD,eAC3Fs9G,GAAiBpvF,GAAkBqvF,GAAuBG,GAAmBD,GAAyBE,GAAsBH,qCACxH3gH,KAAK6H,mBAGmBvF,EAAU48G,mBAAqBl/G,KAAKoC,MAAM88G,kBAE7B,oBAAhCl/G,KAAKE,MAAMg/G,kBACpBl/G,KAAKE,MAAMg/G,iBAAiBl/G,KAAKoC,MAAM88G,mBAIRl/G,KAAKoC,MAAM+8G,sBAAwB78G,EAAU68G,qBAC9CsB,IAChCzgH,KAAKu/G,gBAGmBj9G,EAAUy2G,aAAe/4G,KAAKoC,MAAM22G,YAE5D/4G,KAAK2/G,oKA2CP3/G,KAAKiI,SAAS,CACZg3G,eAAc,gDAIED,GAClBh/G,KAAKiI,SAAS,CACZ+2G,uOAqOiBh/G,KAAKE,MAAM8+G,eAAiBh/G,KAAKoC,MAAM48G,yDACjD,kBAGyBxvF,IAA9BxvB,KAAKE,MAAMm9G,gBAAiCr9G,KAAKE,MAAMm9G,yDAClD,0BAGsBr9G,KAAKD,cAAc2kE,mBAAmB1kE,KAAKE,MAAMiD,YAAYD,MAAMlD,KAAKE,MAAMo6E,aAAartE,QAAQjN,KAAKE,MAAMwQ,uBAAvIwuG,2BAICA,+PAIDnG,EAAa,KACboG,EAAsB,KACtB9B,GAA+C,IAA9Br9G,KAAKE,MAAMm9G,gBAE9Br9G,KAAKE,MAAMo6E,6CACPt6E,KAAKE,MAAM2oC,aAAa7oC,KAAKE,MAAMo6E,aAAa7yE,KAAKzH,KAAKE,MAAMo6E,aAAartE,QAAQjN,KAAKE,MAAMo6E,aAAaxxC,4BAItF9oC,KAAK+/G,+BAA9Bb,SAENl/G,KAAKiI,SAAS,CACZ8wG,aACAsE,iBACA6B,mBACAC,4JAQK,IAAA9+G,EAAAL,KAED+gH,EAAwC,WAA7B/gH,KAAKE,MAAM8gH,cACtBlvG,EAAS9R,KAAKE,MAAM4R,OAAS9R,KAAKE,MAAM4R,OAAS,UAEvD,OACElJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGd2/G,EACEn4G,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,GAELjO,KAAM,aACNvI,KAAM,kGAELxF,KAAKE,MAAMwQ,QAIZ1Q,KAAKE,MAAMiD,cAAgBnD,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAM8/B,cAAcx/B,SAAWR,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAM8/B,cAAcvqB,GAAG,GAC/I7M,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGLjB,KAAKE,MAAMg+G,SACTt1G,EAAA9G,EAAAC,cAACgf,EAAA,EAAD1f,OAAAuB,OAAA,CACE0Y,UAAW,CACTlN,GAAG,IAEDpO,KAAKE,MAAMg+G,UAKnBl+G,KAAKE,MAAM+gH,OAASjhH,KAAKE,MAAM+gH,MAAM1/G,OAAO,GAC1CqH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFuN,GAAG,CAAC,EAAE,KAGRpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAGbnB,KAAKE,MAAM+gH,MAAMh+G,IAAK,SAACi+G,EAAKC,GAAN,OACpBv4G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACf2C,IAAG,QAAAL,OAAU09G,IAEbv4G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOy5G,EAAK/zF,UAAY,WAAa+zF,EAAKnzG,KAC1CnI,MAAQs7G,EAAK/zF,UAAY9sB,EAAKH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAGjF+zF,EAAKj7G,KACH2C,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACE37G,GAAI,EACJC,SAAU,EACVE,MAAO,OACPD,WAAY,EACZshB,KAAMi6F,EAAKj7G,KACXkI,UAAW,OACXtI,WAAY,QAEXq7G,EAAKnN,aAGRnrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVC,WAAY,EACZC,MAAO,WACPuI,UAAW,QAEV+yG,EAAKnN,kBAW1BnrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAGLjB,KAAKoC,MAAM68G,eAAiBj/G,KAAKE,MAAM8+G,cACrCp2G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHgN,GAAG,EACHtT,QAAQ,OACRxH,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,4IASFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJqd,UAAU,EACVgoF,QAASrhH,KAAKoC,MAAM48G,cACpBpxG,MAAK,8CACLuP,SAAW,SAAApW,GAAC,OAAI1G,EAAKihH,oBAAoBv6G,EAAEggB,OAAOs6F,cAGnDrhH,KAAKoC,MAAM68G,eAAiBj/G,KAAKE,MAAM8+G,eAC1Cp2G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,EACHua,GAAI,EACJ/a,MAAO,EACPiG,aAAc,EACdhG,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB6N,gBAAiB,gBACjB7J,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOiiB,UAE7ClgB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEsF,UAAW,SACXtI,WAAY,UACZC,QAAS9F,KAAKi/G,cAAcv+F,KAAK1gB,OAHnC,6CAOA4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,MACND,KAAM,UACN7B,MAAO,cAOf5F,KAAKoC,MAAMi7G,iBAAmBr9G,KAAKoC,MAAM88G,iBACvCl/G,KAAKoC,MAAM0c,WAAWE,QACpBpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE0gB,SAAQ,uBACR9Y,KAAM9H,KAAKoC,MAAM0c,WAAWC,OAC5B4B,WAAU,gCACVF,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,UAInD4I,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,SACXoB,wBAAyB,CACvBC,OAAOxP,KAAKE,MAAMq9G,sBAGtB30G,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAK4/G,QAAQl/F,KAAK1gB,OALjC,aAYNA,KAAKoC,MAAM0c,WAAWE,QACtBpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4H,KAAM9H,KAAKoC,MAAM0c,WAAWC,OAC5B4B,WAAU,cAAAld,OAAgBqO,EAAhB,eACV2O,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,MAC/C4gB,SAAQ,GAAAnd,OAAKzD,KAAKD,cAAc8N,WAAWiE,GAAnC,qBAIZlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJlN,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMqhH,oBAAsB,gBAAkB,YAGjEvhH,KAAKE,MAAMqhH,qBACT34G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPsF,SAAU,MACVrF,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZwI,UAAW,OACX7H,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfd,MAAO5F,KAAKE,MAAMqhH,oBAAoB37G,MAAQ5F,KAAKE,MAAMqhH,oBAAoB37G,MAAQ,aAEpF5F,KAAKE,MAAMqhH,oBAAoB/7G,QAMrCxF,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAM8/B,cAAcx/B,SACjDoI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPsF,SAAU,MACVrF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZC,MAAO,YACPuI,UAAW,QACXtI,WAAY,YACZC,QAAU,SAACiB,GAAD,OAAO1G,EAAKq/G,uBAAuB,MAC7Cp5G,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAXjB,YAcY1G,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAM8/B,cAAc1yB,QAAQtN,KAAKE,MAAM4C,SAAW,EAAI,GAdhG,IAcqG9C,KAAKE,MAAMiD,YAAYyK,OAAS5N,KAAKE,MAAMiD,YAAYD,SAMpK0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoJ,IAAK,EACLxR,KAAM,SACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZ0G,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACX0pG,YAAW,gBACX17F,SAAUnd,KAAKo/G,iBAAiB1+F,KAAK1gB,MACrCoF,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,SAC7C+D,MAAiC,OAA1B7K,KAAKoC,MAAM22G,WAAsB/4G,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM22G,YAAYzrG,UAAY,KAEtG1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6B,IAAK,SAAAme,GAAU,OAC5BxY,EAAA9G,EAAAC,cAAC43G,EAAA,EAAD,CACEv4F,WAAYA,EACZtd,IAAG,YAAAL,OAAc2d,GACjBw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuBt+F,IAC7CvD,SAAUxd,EAAK+B,MAAM+8G,sBAAwBjtG,SAASkP,QAK9DxY,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5a,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE53G,YAAajF,KAAKigH,UAAUv/F,KAAK1gB,MACjCmF,YAAa9D,OAAOuB,OAAO,CACzBoZ,GAAG,EACH/a,MAAM,CAAC,EAAE,IACTqF,MAAM,CACJk7G,cAAc,cAEhBp6G,SAASpH,KAAKoC,MAAMk7G,gBAAgBt9G,KAAKE,MAAMo9G,gBAC/Ct9G,KAAKE,MAAMiF,cAEZnF,KAAKE,MAAM4R,YAQxB9R,KAAKE,MAAM2b,SAlVbjT,EAAA9G,EAAAC,cAAC0/G,EAAA,EACKzhH,KAAKE,eArZSgC,sBCu1CjB46G,6MA70Cb16G,MAAQ,CACN26G,SAAS,KACT2E,SAAS,KACT7D,WAAW,KACXb,WAAW,KACXC,YAAY,KACZC,YAAY,KACZpkC,YAAY,KACZ6oC,YAAY,KACZxE,YAAY,KACZyE,YAAY,KACZz+G,YAAY,KACZm3E,aAAa,KACbx6C,aAAa,KACbE,aAAa,KACb6hF,cAAa,EACb/gF,cAAc,KACdghF,gBAAe,EACfC,eAAe,KACf3E,eAAe,KACf3zC,gBAAe,EACf4zC,eAAe,KACfC,gBAAe,EACfM,gBAAgB,KAChBp7G,kBAAkB,KAClB+6G,mBAAmB,KACnBC,eAAe,UACfwE,sBAAsB,KACtBC,oBAAoB,QACpBxE,uBAAsB,KAIxB19G,cAAgB,OA+RhB81G,WAAa,WACXhxG,EAAKoD,SAAS,CACZi1G,YAAa,mFA9RXl9G,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,gMAGkBxF,EAAUC,2EACjCtC,KAAKI,YAEkBJ,KAAKE,MAAMwQ,UAAYrO,EAAUqO,SAEtD1Q,KAAK6H,WAGDq6G,EAAwB5/G,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,eAChE2E,EAA6B7/G,EAAU2/G,sBAAwBjiH,KAAKoC,MAAM6/G,qBAC5EC,GAAyBC,IAC3BniH,KAAK09G,gUAeG37F,QAAQqD,IAAI,CAEpBplB,KAAKD,cAAcioC,sBAAsBhoC,KAAKE,MAAMiD,aACpDnD,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAMwQ,SACvE1Q,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAMwD,cAAc+D,KAAKzH,KAAKE,MAAMwQ,SAC5E1Q,KAAKD,cAAc6gC,wBAAwB5gC,KAAKE,MAAMwD,cAAcm9B,WAAWp5B,KAAKzH,KAAKE,MAAMwQ,QAAQ1Q,KAAKE,MAAMwD,cAAcm9B,WAAWhgC,SAASb,KAAKE,MAAMwD,cAAcg9B,UAAUI,eACvL9gC,KAAKD,cAAcmhC,oBAAoB,aAAa,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,SAClM1Q,KAAKD,cAAcmhC,oBAAoB,eAAe,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,SACpM1Q,KAAKD,cAAcmhC,oBAAoB,iBAAiB,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,8CAftMkxG,OACA5hF,OACAo9E,OACAt8E,OACA+8E,OACA/9E,OACAiiF,QAYiB,GACC,EAIdv/G,EAAoBnB,OAAOqQ,OAAO1R,KAAKD,cAAc6V,gBAAgB,CAAC,cAAc3S,IAAK,SAAAo+B,GAAW,MAAK,CAC7Gx2B,MAAMw2B,EAAY5gC,KAClBsN,KAAKszB,EAAYrjB,MACjBpQ,MAAMyzB,EAAY55B,KAClBlE,QAAQ89B,EAAY5gC,KACpBiD,cAAcrD,EAAKH,MAAMiD,YAAYk+B,EAAY5gC,SAG7Cg9G,EAAwBL,GAAkBA,EAAe3nG,GAAG,GAC5DusG,EAAwBx/G,EAAkBmtB,KAAM,SAAA0R,GAAW,OAAIA,EAAYx2B,QAAUxK,EAAKH,MAAM09G,kBAChGA,EAAkBoE,EAAsBn3G,MAExC00B,EAAiBv/B,KAAKE,MAAMwD,cAAcm9B,WAAWtB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACrF21C,EAAiBlqC,EAAeh+B,OAAO,EACrCsgH,EAAep4C,EACfq4C,EAAiBhhF,GAAiB9gC,KAAKD,cAAc8R,MAAMivB,GAAerrB,GAAG,IAI9Eg0D,GAAkBq4C,IACrBr4C,GAAiB,GAGfw4C,EAAsB,SACrBJ,GAAgBC,IACnBG,EAAsB,WAGxBjiH,KAAKiI,SAAS,CACZ41G,aACAb,YAnCiB,EAoCjBC,aAnCkB,EAoClB2E,cACA5hF,eACA6hF,eACA/hF,eACAgB,gBACAihF,iBACAt4C,iBACA2zC,iBACA0E,iBACAlE,kBACAp7G,oBACAy/G,sBACAD,wBACAvE,yBACC,WACDp9G,EAAKq9G,+JAKP,IACIP,EAAc,KACdh6G,EAAc,KACdm3E,EAAe,KACf+iC,EAAiB,KACjBC,GAAiB,EAEjBxkC,EAAc94E,KAAKoC,MAAMo7G,eACvBM,EAAiB99G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW5V,KAAKE,MAAM09G,kBAC7Eb,EAAW/8G,KAAKD,cAAckyB,aAAa,CAAC,WAAWjyB,KAAKoC,MAAMo7G,gBAAgBx9G,KAAKE,MAAMiD,cAAgB26G,EAAe/J,YAAY/zG,KAAKoC,MAAMo7G,gBAEvJ,OAAQx9G,KAAKoC,MAAMo7G,gBACjB,IAAK,UACHH,GAAiB,EACjB/iC,EAAet6E,KAAKE,MAAM69G,UAC1B56G,EAAcnD,KAAKE,MAAMiD,YACzBg6G,EAAcn9G,KAAKoC,MAAM49B,aAC3B,MACA,IAAK,QAEH,OADA84C,EAAc94E,KAAKoC,MAAM6/G,oBACjBjiH,KAAKoC,MAAM6/G,qBACjB,IAAK,QACH5E,GAAiB,EACjBl6G,EAAcnD,KAAKE,MAAMwD,cACzBy5G,EAAcn9G,KAAKoC,MAAMg7G,eACzB9iC,EAAet6E,KAAKE,MAAMwD,cAAcm9B,WAC1C,MACA,IAAK,UACHw8E,GAAiB,EACjBl6G,EAAcnD,KAAKE,MAAMwD,cACzB42E,EAAet6E,KAAKE,MAAMwD,cAAcm9B,WACxCs8E,EAAcn9G,KAAKoC,MAAM0+B,cACpB9gC,KAAKoC,MAAM46G,aACdM,GAAiB,EACjBP,EAAWe,EAAe/J,YAAYiK,aAO1CjB,EADE/8G,KAAKoC,MAAMqnE,eACFq0C,EAAe/J,YAAY/zG,KAAKoC,MAAM6/G,qBAEtC,KAEf,MACA,IAAK,WACH5E,GAAiB,EACjB/iC,EAAet6E,KAAKE,MAAM69G,UAI1B56G,EAAcnD,KAAKE,MAAMiD,YACzBg6G,EAAcn9G,KAAKoC,MAAMg7G,eAAe/vG,MAAMrN,KAAKoC,MAAM09B,cAIpD9/B,KAAKoC,MAAM66G,cACdK,GAAiB,EACjBP,EAAWe,EAAe/J,YAAYkK,cAc5C,IAAMV,EAAqBp6G,EAAW,MAAAM,OAASzD,KAAKoC,MAAMo7G,eAApB,kBAAA/5G,OAAmDN,EAAYD,MAA/D,2DAAgI,KAItKlD,KAAKiI,SAAS,CACZi2G,QA9EY,KA+EZnB,WACAjkC,cACA31E,cACAg6G,cACA7iC,eACAgjC,iBACAD,iBACAE,uKAYiB1rF,EAAO2tF,GAC1B,IAAIngG,EAAa,KACbi5C,EAAe,KAEnB,GAAIt4D,KAAKE,MAAMwD,cAAcg9B,UAAU1gC,KAAKoC,MAAMo7G,gBAGhD,GAFAn+F,EAAarf,KAAKE,MAAMwD,cAAcg9B,UAAU1gC,KAAKoC,MAAMo7G,gBAEzB,aAA9Bx9G,KAAKoC,MAAMo7G,eAA8B,CAC3C,IAAI4E,EAAuB,MAEzBA,EADE5C,EACqBx/G,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAMg7G,gBAAgB/vG,MAAMrN,KAAKD,cAAc8R,MAAM2tG,GAAoBl7F,IAAI,MAE3GtkB,KAAKD,cAAc8R,MAAMggB,GAAQvN,IAAItkB,KAAKD,cAAcy0D,qBAAqBx0D,KAAKoC,MAAM09B,aAAa,MAIrGrqB,GAAGzV,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAMg7G,mBAC9DgF,EAAuBpiH,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAMg7G,iBAM7D9kD,EAAe,CAFf8pD,EAAuBpiH,KAAKD,cAAcy0D,qBAAqB4tD,EAAsB,SAInD,UAA9BpiH,KAAKoC,MAAMo7G,iBACbn+F,EAAarf,KAAKE,MAAMwD,cAAcg9B,UAAU1gC,KAAKoC,MAAM6/G,sBAG7D3pD,EAAe,CAACzmC,GAMpB,MAAO,CACLxS,aACAi5C,2FAIazmC,8EACTssF,EAAen+G,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAMiD,YAAY8uD,QACpDx8C,GAAG,mCACKzV,KAAKD,cAAcmhC,oBAAnB,OAA8C,GAAGlhC,KAAKE,MAAMy9G,iBAAiB39G,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAM09G,gBAAgB59G,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwQ,2BACtM2B,KAAKwf,GAAQpc,GAAG0oG,0BAC3Bn+G,KAAKiI,SAAS,CACZi1G,YAAY,6BAEP,oCAGJ,qJAUP,OANAl9G,KAAK6H,WAE0C,oBAApC7H,KAAKE,MAAMmiH,sBACpBriH,KAAKE,MAAMmiH,uBAGLriH,KAAKoC,MAAMo7G,gBACjB,IAAK,QACL,IAAK,UACH,GAAkC,YAA9Bx9G,KAAKoC,MAAMo7G,gBAAmE,UAAnCx9G,KAAKoC,MAAM6/G,oBAAgC,CACxF,IAAMN,EAA4C,YAA9B3hH,KAAKoC,MAAMo7G,eAA+B,YAAc,SACtEkE,EAAyC,YAA9B1hH,KAAKoC,MAAMo7G,eAA+Bx9G,KAAKoC,MAAM2/G,eAAiB/hH,KAAKoC,MAAMy7G,WAClG79G,KAAKiI,SAAS,CACZy5G,WACAC,cACAzE,YAAY,sDAeJM,GAChBx9G,KAAKiI,SAAS,CACZu1G,0DAIWyE,GACbjiH,KAAKiI,SAAS,CACZg6G,8DAIU/9G,GAEZ,IAAM45G,EAAiB99G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW1R,IAClE45G,GACF99G,KAAKE,MAAMu+G,kBAAkBX,EAAenkC,wCAIvC,IAAAnvE,EAAAxK,KAEDsiH,EAAwC,UAA9BtiH,KAAKoC,MAAMo7G,eACrBx6G,EAA0C,YAA9BhD,KAAKoC,MAAMo7G,eACvB+E,EAA2C,aAA9BviH,KAAKoC,MAAMo7G,eAExBj+E,EAAiBv/B,KAAKE,MAAMwD,cAAcm9B,WAAWtB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACnFqqF,EAAen+G,KAAKD,cAAcW,YAAYV,KAAKD,cAAc8R,MAAM7R,KAAKE,MAAMiD,YAAY8uD,OAAO,GAAG,IAAIjyD,KAAKE,MAAM0J,cAuE7H,OACEhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKoC,MAAMI,kBAmBVoG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBmF,SAAU,CAAC,OAAO,SAElBqC,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,mBAKAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEuH,KAAM,WACN2U,cAAc,EACdjB,kBAnHY,SAAAjb,GACxB,IAAMq7G,EAAiBr7G,EAAM6a,QAAQ4U,KAAM,SAAA6yF,GAAM,OAAIA,EAAO33G,QAAU3K,EAAM2K,QAC5E,OAAK0wG,EAKH3yG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJhQ,IAAKktG,EAAextG,KACpBrG,KAAM8C,EAAKtK,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,GAEXzF,EAAM0N,SArBN,MAiHGmN,QAAS/a,KAAKoC,MAAMI,kBACpB2a,SAAUnd,KAAKyiH,cAAc/hG,KAAK1gB,MAClCob,qBAvFe,SAAAlb,GAC3B,IAAMgc,EAAchc,EAAMgc,YAAYnB,QAAQ4U,KAAM,SAAA6yF,GAAM,OAAIA,EAAO33G,QAAU3K,EAAMgc,YAAYrR,MAAMA,QAEvG,OAAKqR,EAIHtT,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACE0D,MAAO,CACL4pB,KAAK,KAEP9uB,eAAgB,iBACZlB,EAAMqb,YAEV3S,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEnB,EAAG,EACHR,MAAO,GACHf,EAAMqb,WAHZ,CAIEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAC8I,OAAO,WACfhO,eAAgB,eAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJhQ,IAAK6N,EAAYnO,KACjBrG,KAAM8C,EAAKtK,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,GAEXuW,EAAYtO,SA3BZ,MAoFGqN,aAAcjb,KAAKoC,MAAM4/G,0BAG7Bp5G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,oBAKAxF,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,GAELyP,UAAU,GAEVjV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPqF,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,UACLqoF,SAAS,QAEXp3G,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,YAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpBnC,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAE5BkF,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,SAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpBnC,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAE5BkF,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBzG,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,aAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEnS,UAAW,CACTjZ,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,mBACNwrB,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,kBAE1DhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEnS,UAAW,CACTjZ,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,kBACNwrB,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,qBAE1DhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,iBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEnS,UAAW,CACTjZ,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,MACNwrB,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,kBAE1DhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,wBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,iBAG1B67B,EAAeh+B,OAAO,GACpBqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,MACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,yBACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,EACTC,WAAW,EACXkuG,WAAW,IACXjuG,MAAM,aAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,oBAOtCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC+uB,EAAA,EAAD,CACEnS,UAAW,CACTjZ,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,YACNwrB,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,eAE1DhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,kBACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,UAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eAEPvE,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,mBAIhCkF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,aAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2vB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJW,SAAS,EACT6E,SAAS,CAAC,EAAE,GACZE,MAAM,cAGV1C,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAM09G,gBACpBz6G,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBj6G,cAAe1D,KAAKE,MAAMwD,oBAMhC1D,KAAKE,MAAMiD,YAAY4wG,aACrBnrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJxU,GAAI,EACJnN,MAAO,EACPE,cAAe,SACfuhH,UAAS,aAAAj/G,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,UAEhD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,wBAOAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,OACVyI,UAAW,WAEVnO,KAAKE,MAAMiD,YAAY4wG,cAI1B/zG,KAAKoC,MAAMw/G,aACTh5G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJ5G,GAAI,EACJ7a,cAAe,SACfD,WAAY,aACZwhH,UAAS,aAAAj/G,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,UAEhD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJ3Y,SAAU,OACVE,MAAO,WACPD,WAAY,CAAC,EAAE,IAJjB,sBAQAiD,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACEn6F,KAAMjnB,KAAKD,cAAcmnB,2BAA2BlnB,KAAKoC,MAAMw/G,YAAYjiG,kBAE3E/W,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,QAET1F,KAAKD,cAAciT,YAA6C,IAAjChT,KAAKoC,MAAMw/G,YAAY5sG,WAAgB6jE,MAAMziE,OAAO,qBAJtF,QAMAxN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,QACND,KAAM,YACN7B,MAAO,iBAKfgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJ3Y,SAAU,OACVE,MAAO,WACPD,WAAY,CAAC,EAAE,IAJjB,wBAQAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,QAET1F,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMw/G,YAAY/vF,OAAO7xB,KAAKE,MAAMiD,YAAYtC,UAAUyM,QAAQ,GAJ9G,IAImHtN,KAAKE,MAAMiD,YAAYD,YAW5J0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,kBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOpC,EAAY,EAAI,GAEzBm1G,QAAS,UACTl3G,MAAO,CAAC,EAAE,OACV6B,SAAU9C,KAAKE,MAAM4C,SACrB01G,SAAU,qBACVv6F,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAU7a,EACViC,YAAc,SAAA8B,GAAC,OAAIyD,EAAKo4G,kBAAkB,cAE5Ch6G,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOk9G,EAAU,EAAI,EACrBl7G,UAAUpH,KAAKoC,MAAMqnE,gBAEvBxoE,MAAO,CAAC,EAAE,OACVk3G,QAAS,kBACTK,SAAU,kBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUykG,EACVr9G,YAAc,SAAA8B,GAAC,OAAIyD,EAAKo4G,kBAAkB,YAE5Ch6G,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOm9G,EAAa,EAAI,GAE1BthH,MAAO,CAAC,EAAE,OACVk3G,QAAS,WACTK,SAAU,oBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAU0kG,EACVt9G,YAAc,SAAA8B,GAAC,OAAIyD,EAAKo4G,kBAAkB,iBAK9CN,GAAWtiH,KAAKoC,MAAMqnE,gBACpB7gE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,wBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEye,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEd4V,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,QACNuI,KAAM,SACNoQ,UAAW,UACXI,YAAa,UACbtZ,YAAc,SAAA8B,GAAC,OAAIyD,EAAKq4G,eAAe,UACvChlG,SAA8C,UAAnC7d,KAAKoC,MAAM6/G,uBAExBr5G,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEye,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEd4V,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,UACNuI,KAAM,cACNoQ,UAAW,SACXI,YAAa,UACbT,YAAc9d,KAAKoC,MAAM0/G,eACzBjkG,SAA8C,YAAnC7d,KAAKoC,MAAM6/G,oBACtBh9G,YAAc,SAAA8B,GAAC,OAAIyD,EAAKpI,MAAM0/G,eAAiBt3G,EAAKq4G,eAAe,WAAa,WAOxF7iH,KAAKoC,MAAM26G,UAAY/8G,KAAKE,MAAMwQ,SAChC9H,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACT7Z,EAAE,EACFua,GAAG,EACH5N,GAAG,EACHnN,MAAM,GAER4c,UAAU,EACVlC,eAAe,EACfyC,UAAW,CACT1W,KAAK,QACL9B,MAAM,cAER+Y,UAAW,CACThZ,WAAW,IACXC,MAAM,aACNuI,UAAU,SACVzI,SAAS,CAAC,OAAO,SAEnBqI,KAAM,mBACNvI,KAAMxF,KAAKoC,MAAM26G,WAIvBn0G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZkhH,IAAYtiH,KAAKoC,MAAMqnE,gBAAoB64C,GAA8C,UAAnCtiH,KAAKoC,MAAM6/G,sBAAoCjiH,KAAKoC,MAAMy/G,aAChHj5G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAG,EACHua,GAAI,IAGNpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,iBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,WACPuI,UAAW,UAHb,8CASFm0G,GAA8C,YAAnCtiH,KAAKoC,MAAM6/G,sBAAsCjiH,KAAKE,MAAMwD,cAAcm9B,WAAW25E,mBAClG5xG,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAG,EACH+3G,GAAI,EACJx9F,GAAI,IAGNpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,mBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbE,MAAO,WACPuI,UAAW,UALb,mBAOkBvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKoC,MAAM0+B,cAAcxzB,QAAQ,GAA1C,IAA+CtN,KAAKoC,MAAMe,YAAYyK,OAPxF,KASAhF,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEgd,OAAQ,IACJ5f,KAAKE,MAFX,CAGEgC,UAAW4gH,IACX1iG,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjB0f,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,EAAE,GACXiG,aAAa,EACb2D,MAAM,UACN1D,UAAU,UAEZ2K,OAAQ,UACRyN,aAAcvf,KAAKoC,MAAMk4E,aAAa7yE,KACtCO,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCqf,WAAYrf,KAAKE,MAAMwD,cAAcg9B,UAAU65E,aAKrD3xG,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,CACEqc,MAAO,MACHjf,KAAKE,MAFX,CAGEiF,YAAa,CACXlE,MAAM,CAAC,EAAE,MAEX+9G,eAAe,EACf77G,YAAanD,KAAKoC,MAAMe,YACxB68B,aAAchgC,KAAKoC,MAAM+6G,YACzB7iC,aAAct6E,KAAKoC,MAAMk4E,aACzB8lC,WAAYpgH,KAAKogH,WAAW1/F,KAAK1gB,MACjCq9G,eAAgBr9G,KAAKoC,MAAMi7G,eAC3BC,eAAgBt9G,KAAKoC,MAAMk7G,eAC3Bt1G,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAC/B+B,oBAAqBt/G,KAAKs/G,oBAAoB5+F,KAAK1gB,MACnDk/G,iBAAkBl/G,KAAKgjH,yBAAyBtiG,KAAK1gB,MACrD6f,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,MACrD8R,OAAQ9R,KAAKD,cAAc8N,WAAW7N,KAAKoC,MAAM02E,eAG/C91E,EACE4F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACiyG,EAAA,EAAD3yG,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE61G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUt0G,KAAKE,MAAM0J,gBAGnB5J,KAAKE,MAAMiD,YAAYk3G,UAAYr6G,KAAKE,MAAMiD,YAAYk3G,SAASQ,gBACjEjyG,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAG,EACHqN,GAAI,IAGNlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,WACPuI,UAAW,UAHb,sBAKqBvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKE,MAAM0J,eALzC,gBAOAhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,WACPuI,UAAW,SACXoB,wBAAyB,CAACC,OAAOxP,KAAKE,MAAMiD,YAAYk3G,SAASQ,qBAIrE,OAIRyH,EACF15G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAG,EACHqN,GAAI,IAGNlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,WACPuI,UAAW,UAHb,sBAKqBvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKoC,MAAMe,YAAYyK,OALrD,aAK+E5N,KAAKoC,MAAM6/G,oBAL1F,OASFM,GACF35G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAG,EACHqN,GAAI,IAGNlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,WACPuI,UAAW,UAHb,sBAKsBnO,KAAKE,MAAM0J,cALjC,gBAK4DhB,EAAA9G,EAAAC,cAAA,WAL5D,2BAK0F6G,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKoC,MAAMe,YAAYyK,OAL1H,2DAKkM5N,KAAKE,MAAM0J,cAL7M,SAehBhB,EAAA9G,EAAAC,cAAC48G,EAADt9G,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+xD,MAAOksD,EACPxI,WAAY31G,KAAK61G,WACjBmD,OAAmC,UAA3Bh5G,KAAKoC,MAAM86G,eAErBt0G,EAAA9G,EAAAC,cAAC68G,EAAA,EAAD,CACEC,iBAAiB,EACjB9wG,KAAI,mBACJ+Z,MAAK,mBACLpX,QAAS1Q,KAAKE,MAAMwQ,QACpBilG,WAAY31G,KAAK61G,WACjBvjF,UAAWtyB,KAAKE,MAAM0J,cACtBovG,OAAmC,UAA3Bh5G,KAAKoC,MAAM86G,YACnB13G,KAAI,yBAAA/B,OAA2BzD,KAAKoC,MAAMu/G,YAAtC,iCAAAl+G,OAAiFzD,KAAKoC,MAAMs/G,SAAW1hH,KAAKoC,MAAMs/G,SAASp0G,QAAQ,GAAK,OAAxI,mCAAA7J,OAAgLzD,KAAKE,MAAM0J,cAA3L,cACJk1G,MAAK,eAAAr7G,OAAiBzD,KAAKoC,MAAMs/G,SAAW1hH,KAAKoC,MAAMs/G,SAASp0G,QAAQ,GAAK,OAAxE,gBAAA7J,OAA6FzD,KAAKE,MAAM0J,cAAxG,uCAAAnG,OAA2JzD,KAAKD,cAAc6V,gBAAgB,CAAC,aAA/LnS,OAA6MzD,KAAKE,MAAM67G,gBAAgBpiC,MAAxO,oDAl5BT/wE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,iCAjcOtD,iDC6nBd+gH,6MAvoBb7gH,MAAQ,CACNuN,UAAU,KACVrG,UAAU,KACVC,WAAW,KACXqG,WAAW,KACXC,YAAY,QAId9P,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAK8P,qMAGkBzN,EAAWC,oFAClCtC,KAAKI,YAEC2P,EAA4B1N,EAAU2N,qBAAuBhQ,KAAKE,MAAM8P,oBACzDC,KAAKC,UAAU7N,EAAU8N,iBAAmBF,KAAKC,UAAUlQ,KAAKE,MAAMiQ,gBACvEJ,IAClB/P,KAAKiI,SAAS,CACZqB,UAAU,MACV,WACAjJ,EAAK+P,sBAIHC,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDwN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,WACxDF,GAAiBC,IACnBtQ,KAAK8P,uVAKHK,EAAgBnQ,KAAKE,MAAMiQ,gBAERA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKtB,KAAKE,MAAMsC,mBAAmByjC,OAAQ,SAAC91B,EAAc/M,GAO/E,OANe/B,OAAOC,KAAKkJ,EAAKtK,MAAMsC,kBAAkBY,IACjD5B,QAAS,SAAA0B,GACTiN,EAAc+lB,SAAShzB,IAC1BiN,EAAc5C,KAAKrK,KAGhBiN,GACP,KAGEqO,EAAexe,KAAKE,MAAMgjH,iBAE1B55G,EAAY,GACZwK,EAAa,GACflD,EAAgB,GAChBC,EAAmB,cAEjB7Q,KAAKD,cAAc+Q,aAAaX,EAAhC,eAAAY,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8C,SAAAgD,EAAOtK,GAAP,IAAAwH,EAAAC,EAAA,OAAAohB,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAElDb,EAAchH,GAAiB,KAEzBwH,EAAc/P,OAAOqQ,OAAO8M,GAAc7M,OAAO,SAAAC,GAAE,OAAKA,EAAG1O,QAAU0G,OACxDwH,EAAY7P,OALmB,CAAA6S,EAAA3C,KAAA,eAO5CJ,EAAa7G,EAAKzK,cAAc8R,MAAM,GAPMuC,EAAA3C,KAAA,EAS1CjH,EAAKzK,cAAc+Q,aAAaM,EAAhC,eAAA6C,EAAA5S,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA4C,SAAAC,EAAOS,EAAG5L,GAAV,IAAAmM,EAAAC,EAAAN,EAAAU,EAAAjP,EAAAH,EAAAihB,EAAAyb,EAAAmO,EAAA,OAAAxb,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAG3CG,EAAG9J,QAAS8J,EAAGG,QAAwB,YAAdH,EAAGG,QAHe,CAAAR,EAAAE,KAAA,eAAAF,EAAAmR,OAAA,UAIvC,GAJuC,OAOhD7R,EAAmBA,EAAmBmB,KAAKC,IAAIpB,EAAiBqB,SAASN,EAAGO,YAAcD,SAASN,EAAGO,WAEhGA,EAAYD,SAASN,EAAGO,WACxBC,EAAc5H,EAAKzK,cAAc8R,MAAMD,EAAGQ,aAVAb,EAAA4iB,GAYxCviB,EAAGE,OAZqCP,EAAAE,KAazC,YAbyCF,EAAA4iB,GAAA,EAgBzC,aAhByC5iB,EAAA4iB,GAAA,0BAc5C9iB,EAAaA,EAAWgB,KAAKD,GAdeb,EAAAmR,OAAA,2BAiB5CrR,EAAaA,EAAWiB,MAAMF,GAjBcb,EAAAmR,OAAA,2BAAAnR,EAAAmR,OAAA,oBAwB5CrR,EAAWkB,GAAG,KAChBlB,EAAa7G,EAAKzK,cAAc8R,MAAM,IAGlCC,EAASF,EAAGE,OACZU,EAAUnB,EACV9N,EAAUqO,EAAGrO,QACbH,EAAWwO,EAAGxO,SACdihB,EAAczS,EAAGyS,YACjByb,EAAet1B,EAAKzK,cAAc8R,MAAMD,EAAGkuB,cAC3CmO,EAAgBzjC,EAAKzK,cAAc8R,MAAMD,EAAGq8B,eAC7CnO,EAAat/B,SAAYytC,EAAcztC,UAC1CoQ,EAAchH,GAAe2D,KAAK,CAChCuE,SACAU,UACAjP,UACAH,WACA+O,YACAC,cACAiS,cACAyb,eACAmO,kBAGFr9B,EAAchH,GAAiBgH,EAAchH,GAAeyjC,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWhpB,SAASpQ,EAAEqQ,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,KAhDnF,yBAAAZ,EAAAoB,SAAAxB,EAAAnR,SAA5C,gBAAAwU,EAAAogB,GAAA,OAAA3gB,EAAApB,MAAA7S,KAAA8S,YAAA,IAT0C,wBAAAsB,EAAAzB,SAAAuB,EAAAlU,SAA9C,gBAAA4S,GAAA,OAAA7B,EAAA8B,MAAA7S,KAAA8S,YAAA,WAgEFnD,EAAY,KACVoD,EAAc/S,KAAKD,cAAciT,YAAY,IAAIC,WAE/CjT,KAAKE,MAAM8P,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAY,yCAIVyD,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,SAASlS,KAAKD,cAAciT,YAAYhT,KAAKD,cAAciT,cAAcoD,OAAO,cAAc,YAAY,uBAAuBklC,GAAGznC,UAAU,KAE9J8rB,EAAsB,GAEvB9uB,IACHA,EAAmB+C,aAMf5T,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKsP,GAA5C,eAAAoR,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2D,SAAA+R,EAAO/f,GAAP,IAAAigH,EAAAC,EAAAC,EAAAC,EAAA3tG,EAAAxS,EAAAs8B,EAAAC,EAAA6jF,EAAAC,EAAAC,EAAAh7D,EAAAi7D,EAAAC,EAAAC,EAAArtG,EAAApE,EAAA,OAAAsgB,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,WAC3Db,EAAc1N,GAAO3B,OADsC,CAAA4hB,EAAA1R,KAAA,gBAEvD0xG,EAAqBvyG,EAAc1N,GAAO,GAC1CkgH,EAAexyG,EAAc1N,GAAO,GACpCmgH,EAAiBzyG,EAAc1N,GAAOysB,KAAM,SAAA/d,GAAE,MAAiB,OAAbA,EAAGrO,WAAoB,KACzE+/G,EAAiB1yG,EAAc1N,GAAOysB,KAAM,SAAA/d,GAAE,MAAiB,OAAbA,EAAGrO,WAAoB,KAIzEoS,EAAsBnL,EAAKzK,cAAc0tG,4BAA4BvqG,GACrEC,EAAcqH,EAAKtK,MAAMsC,kBAAkB2gH,EAAmB//G,SAAS8J,eAAehK,GAV/BigB,EAAA1R,KAAA,EAenDsQ,QAAQqD,IAAI,CACpBi+F,EAAiB74G,EAAKzK,cAAcknD,uBAAuB9jD,EAAYQ,GAAGsJ,QAAQo2G,EAAelxG,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,GACvK0vG,EAAiB94G,EAAKzK,cAAcknD,uBAAuB9jD,EAAYS,GAAGqJ,QAAQq2G,EAAenxG,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,KAjB5G,UAAA6rB,EAAAtc,EAAA5O,KAAAmrB,EAAAr+B,OAAA4yB,EAAA,EAAA5yB,CAAAo+B,EAAA,GAa3D8jF,EAb2D7jF,EAAA,GAc3D8jF,EAd2D9jF,EAAA,GAoBvD+jF,EAAkBzxG,KAAKC,IAAIoxG,EAAiBA,EAAelxG,UAAYixG,EAAajxG,UAAUmxG,EAAiBA,EAAenxG,UAAYixG,EAAajxG,WAEvJs2C,EAAe86D,EAAe9/G,OAAO+/G,GAAgBn2E,KAAK,SAACvrC,EAAGo5B,GAAJ,OAAWhpB,SAASpQ,EAAEqQ,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,IAE1HuxG,EAA4B,IAC9B/tG,EAzByD,CAAAwN,EAAA1R,KAAA,SA4B3D,IAFMkyG,EAAmB,GACnBC,EAA4B,GA3ByBrtG,EAAA,SA4BlDpE,GACP,IAAMq2B,EAAYigB,EAAaxiB,OAAQ,SAACuC,EAAUnH,GAChD,IAAMwiF,EAAW7xG,KAAK29C,IAAIz9C,SAASmvB,EAAYlvB,WAAWD,SAASC,IAKnE,OAJ2B,OAAvBq2B,EAAUq7E,UAAqBA,EAASr7E,EAAUq7E,YACpDr7E,EAAUq7E,SAAWA,EACrBr7E,EAAUnH,YAAcA,GAEnBmH,GACP,CACAq7E,SAAS,KACTxiF,YAAY,OAGVmH,GAAaA,EAAUnH,cACpBsiF,EAAiBn7E,EAAUnH,YAAYhd,eAC1Cs/F,EAAiBn7E,EAAUnH,YAAYhd,aAAe,IAExDs/F,EAAiBn7E,EAAUnH,YAAYhd,aAAa9W,KAAKi7B,EAAUnH,YAAYlvB,WAC/EyxG,EAA0Bp7E,EAAUnH,YAAYhd,aAAe7Z,EAAKzK,cAAc0hC,8BAA8Bt+B,EAAYqlC,EAAUnH,YAAYhd,eAlB7IlS,EAAUsxG,EAAgBtxG,GAAWyB,EAAczB,GAAW3H,EAAKtK,MAAMoW,iBAAkBC,EAA3FpE,GA5BkD,OAAAgR,EAAA1R,KAAA,GAkD7BsQ,QAAQqD,IAAI/jB,OAAOqQ,OAAOkyG,IAlDG,QAAAzgG,EAAA5O,KAoD3C/S,QAAS,SAACuU,EAAe/P,GACvC,IAAMqe,EAAchjB,OAAOC,KAAKsiH,GAA2B59G,GAC3D29G,EAAiBt/F,GAAa7iB,QAAS,SAAA2Q,GACrC,IAAM6D,EAAaxL,EAAKzK,cAAciT,YAAsB,IAAVb,GAAgBiE,OAAO,cACzEstG,EAA0B1tG,GAAcD,MAxDe,QAgExDjC,EAAW5Q,KACd4Q,EAAW5Q,GAAS,IAGlBqgH,GACFA,EAAe/hH,QAAS,SAAC6/B,EAAYr7B,GACnC,IAAM89G,EAAc,CAClBvgH,QAAQ,KACR4O,UAAUkvB,EAAYlvB,UACtB2tB,aAAat1B,EAAKzK,cAAc8R,MAAMwvB,EAAY0oC,eAE9C/zD,EAAaxL,EAAKzK,cAAciT,YAAkC,IAAtBquB,EAAYlvB,WAAgBiE,OAAO,cACjFT,GAAuB+tG,EAA0B1tG,KACnD8tG,EAAYnuG,GAAuB+tG,EAA0B1tG,IAE/DlC,EAAW5Q,GAAOqK,KAAKu2G,KAIvBN,GACFA,EAAehiH,QAAS,SAAC6/B,EAAYr7B,GACnC,IAAM+9G,EAAc,CAClBxgH,QAAQ,KACR4O,UAAUkvB,EAAYlvB,UACtB2tB,aAAat1B,EAAKzK,cAAc8R,MAAMwvB,EAAY0oC,eAE9C/zD,EAAaxL,EAAKzK,cAAciT,YAAkC,IAAtBquB,EAAYlvB,WAAgBiE,OAAO,cACjFT,GAAuB+tG,EAA0B1tG,KACnD+tG,EAAYpuG,GAAuB+tG,EAA0B1tG,IAE/DlC,EAAW5Q,GAAOqK,KAAKw2G,KA9FkC,yBAAA5gG,EAAAxQ,SAAAsQ,EAAAjjB,SAA3D,gBAAAg1B,GAAA,OAAAhT,EAAAnP,MAAA7S,KAAA8S,YAAA,YA0GN,IAFMmsB,EAAWj/B,KAAKD,cAAc6V,gBAAgB,CAAC,2BAInD,IAAMlB,EAAgB,GAChBC,EAAiB,GAGnBxC,EAAYyB,IACdzB,EAAYyB,GAEdzB,EAAYD,SAAS1H,EAAKzK,cAAciT,YAAYxI,EAAKzK,cAAciT,YAAsB,IAAVb,GAAgBiE,OAAO,cAAc,YAAY,uBAAuBklC,GAAGznC,UAAU,KAGxKJ,EAAoBjJ,EAAKzK,cAAc8R,MAAM,GAI7CxQ,OAAOC,KAAKsP,GAAepP,QAAS,SAAA0B,GAE7BmQ,EAAanQ,KAChBmQ,EAAanQ,GAAS,IAEnBwR,EAAcxR,KACjBwR,EAAcxR,GAAS,IAEpByR,EAAezR,KAClByR,EAAezR,GAASsH,EAAKzK,cAAc8R,MAAM,IAE9C8tB,EAAoBz8B,KACvBy8B,EAAoBz8B,GAAS,IAG/B7B,OAAOC,KAAK29B,GAAUz9B,QAAS,SAAA+B,GAG7B,IAAMygH,EAA0BpzG,EAAc1N,GAAOyO,OAAO,SAAAC,GAAE,OAAKA,EAAGrO,UAAUA,IAChF,GAAKygH,GAA4BA,EAAwBziH,OAAzD,CAIA,IAAIqT,EAAgB,KACdC,EAA0Bf,EAAW5Q,GAAS7B,OAAOqQ,OAAOoC,EAAW5Q,GAAOyO,OAAQ,SAAAC,GAAE,OAAIA,EAAGrO,UAAUA,KAAWuR,MAAQ,KAC9HC,EAAoBjB,EAAW5Q,GAAS4Q,EAAW5Q,GAAOyO,OAAO,SAAAC,GAAE,OAAKA,EAAGrO,UAAUA,GAAWqO,EAAGO,WAAWmB,GAAiB1B,EAAGO,WAAWA,IAAc,KAC3J4C,GAAqBA,EAAkBxT,OACzCqT,EAAgBG,EAAkBD,OAElCF,EAAgBC,IACKD,EAAczC,UAAUA,IAC3CyC,EAAgB,MAIf+qB,EAAoBz8B,GAAOK,KAC9Bo8B,EAAoBz8B,GAAOK,GAAWiH,EAAKzK,cAAc8R,MAAM,IAG5DwB,EAAanQ,GAAOK,KACvB8P,EAAanQ,GAAOK,GAAW,MAG5BmR,EAAcxR,GAAOK,KACxBmR,EAAcxR,GAAOK,GAAW,MAGlC,IAAM0R,EAAgBzK,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,aAC3FX,EAAmBtE,EAAc1N,GAAOyO,OAAO,SAAAC,GAAE,OAAKA,EAAGrO,UAAUA,GAAWqO,EAAGO,WAAWA,KAAemB,GAAiB1B,EAAGO,UAAUmB,KAE7I,GAAK4B,EAAiB3T,OAkCpB2T,EAAiB1T,QAAQ,SAAAoQ,GACvB,OAAQA,EAAGE,QACT,IAAK,UACH6tB,EAAoBz8B,GAAOK,GAAWo8B,EAAoBz8B,GAAOK,GAAS8O,KAAKT,EAAGq8B,eACpF,MACA,QACEtO,EAAoBz8B,GAAOK,GAAWo8B,EAAoBz8B,GAAOK,GAAS+O,MAAMV,EAAGq8B,eAC/EtO,EAAoBz8B,GAAOK,GAASgP,GAAG,KACzCotB,EAAoBz8B,GAAOK,GAAWiH,EAAKzK,cAAc8R,MAAM,YAzCvE,GAAIwB,GAAgBA,EAAanQ,IAAUmQ,EAAanQ,GAAOK,GAAS,CACtE2R,EAAmB7B,EAAanQ,GAAOK,GACvC,IAAM4R,EAAiB9T,OAAOqQ,OAAOwD,GAAkBJ,MAIvD,GAHuB1H,WAAW+H,EAAe3C,SAG9B,GACjB,GAAIL,EAAUtB,GAAoB+D,EAAc,CAC9C,IAAMq5B,EAAgBtO,EAAoBz8B,GAAOK,GAC3Cu8B,EAAet1B,EAAKzK,cAAcsV,iBAAiBT,EAAckrB,aAAa7qB,GAChFK,EAAa24B,EAAc5gC,MAAMyyB,GAGrC3qB,EAAe3C,QAAU8C,EACzBH,EAAe2qB,aAAeA,EAC9B5qB,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQhI,EAAKzK,cAAc8R,MAAM,GACjCiuB,aAAat1B,EAAKzK,cAAc8R,MAAM,UAI1CqD,EAAmB,CAAC,CAClB1C,QAAQhI,EAAKzK,cAAc8R,MAAM,GACjCiuB,aAAat1B,EAAKzK,cAAc8R,MAAM,KAsB5C,IAAM0D,EAASlU,OAAOqQ,OAAOwD,GAAkBJ,MAC3CU,EAAgBmqB,EAAoBz8B,GAAOK,GAAS8J,MAAMkI,EAAOuqB,cACrE,GAAItqB,EAAcC,GAAG,GAAG,CAEtB,IAAME,EAAsBnL,EAAKzK,cAAc0tG,4BAA4BvqG,GAC3E,GAAkCyS,EAAoB,CACpD,IAAMD,EAAyBd,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KAChPD,GAA0BlL,EAAKzK,cAAc8R,MAAM6D,GAAwBD,GAAG,KAChFD,EAAgBA,EAAcnI,MAAMqI,IAIxCjC,EAAoBA,EAAkBpB,KAAKmD,GAC3Cb,EAAezR,GAASyR,EAAezR,GAAOmP,KAAKmD,GAOrDd,EAAcxR,GAAOK,GAAW2R,OApGiC/C,EAAA8xG,MAwGrE,IAAIjuG,EAAaxL,EAAKzK,cAAciT,YAAsB,IAAVb,GAEhD,GAAkB,OAAdxC,GAAuBqG,EAAWC,cAActG,IAAcqG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoBrG,WAAWA,WAAWqG,EAAkBnG,QAAQ,KAEpEqG,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OArKRvC,EAAUtB,EAAiBsB,GAAWyB,EAAczB,GAAWnS,KAAKE,MAAMoW,iBAAkB4tG,EAA5F/xG,GAiOT,IAzDMqE,EAAqBnV,OAAOC,KAAKoS,GAAwBzQ,IAAI,SAAAwT,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmBhV,QAAS,SAACsV,EAAK9Q,GAChC,IAAM+Q,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmBjV,OAAO,KAC/DiV,EAAmBxQ,GAAO+Q,QAAUA,EACpCF,MAwBIf,EAAa9V,KAAKE,MAAM4V,WAAa9V,KAAKE,MAAM4V,WAAWD,cAAgB,MAGjFvM,EAAUiE,KAAK,CACb7K,GAAGoT,EACHlQ,MAAO,OAAQ5F,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQlI,KAAK,KAAK,IACvHpD,KAAKiM,IAKHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACXrK,EAAE,EAAEA,GAHQ,EAGQA,IACrBsK,EAAahK,WAAWA,WAAWmG,EAAezG,EAAEoK,GAAY5J,QAAQ,IAC9E6J,EAAY5J,KAAK6J,GAGS,GACtBE,EAAYjW,OAAOqQ,OAAO0B,GAAM7R,OAChCgW,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItB/N,EAAa,CACjBkO,OAAO,CACLhX,KAAM,OACN2V,OAAQ,kBAEVsB,OAAO,CACLjX,KAAM,SACNkX,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAhN,GAAK,OAAIL,EAAKzK,cAAcW,YAAYmK,EAAMoM,IACtDa,WAAY9X,KAAKE,MAAM4C,SAAW,KAAO,CACvCiV,OAAQ,GACRC,SAAS,EACT5B,OAAQ,QACR6B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdE,eAAgB,SAChBD,WAAW,SAASb,EAAc,SAEpCJ,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUxY,KAAKE,MAAM4C,SAAW,KAAO,CACrCiV,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAzL,GAAC,OAAIH,EAAKzK,cAAca,iBAAiB+J,EAAE,KAErDZ,SAAQ,EACR2O,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBnS,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACdqT,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAE/M,KAAM,QAASE,UAAW,IACvC8M,YAAqC,UAAzBpZ,KAAKE,MAAMqQ,UAAwB,GAAM,GACrD3J,MAAM,CACJyS,KAAM,CACJC,MAAO,CACL9T,KAAM,CACJE,SAAS,GACTC,WAAW,IACX4T,KAAKvZ,KAAKE,MAAM0G,MAAMC,OAAOkR,OAC7B1M,WAAWrL,KAAKE,MAAM0G,MAAM0E,MAAMC,aAIxCiO,KAAM,CACJC,KAAM,CACJC,OAAQ1Z,KAAKE,MAAM0G,MAAMC,OAAO8S,gBAAiBC,gBAAiB,SAaxErN,OAAQvM,KAAKE,MAAM4C,SAAW,CAAE0J,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHkN,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACErR,EAAA9G,EAAAC,cAACoiH,EAAA,EAAD,CACEpqG,MAAOA,GAEPnR,EAAA9G,EAAAC,cAACqiH,EAAA,EAAD,CACEx+G,MAAOmU,EAAMnU,MACbgI,MAAOmM,EAAMK,QACbvP,MAAK,KAAApH,OAAOsW,EAAMxP,KAAK8P,cAGO,kBAAxBN,EAAMxP,KAAKqM,UAAyBvV,OAAOC,KAAKyY,EAAMxP,KAAKqM,UAAUrV,OAAO,GAClFF,OAAOC,KAAKyY,EAAMxP,KAAKqM,UAAU3T,IAAI,SAAAC,GACnC,GAAIA,IAAU6W,EAAMK,QAClB,OAAO,KAET,IAAMxU,EAAQ4E,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,QAAQ,QACzFrD,EAAUuH,EAAMxP,KAAKqM,SAAS1T,GAChCoX,EAAmB9P,EAAKzK,cAAcW,YAAY8R,EAAQ,GAC9D,OAAIpF,WAAWoF,IAAU,IAErB5J,EAAA9G,EAAAC,cAACqiH,EAAA,EAAD,CACEx2G,MAAO1K,EACP0C,MAAOA,EACP9B,IAAG,OAAAL,OAASP,GACZ2H,MAAK,KAAApH,OAAO6W,KAIX,UAQnBta,KAAKiI,SAAS,CACZqB,YACAC,mJAKF,OACEX,EAAA9G,EAAAC,cAAC4sB,EAAA,EAADttB,OAAAuB,OAAA,CACEnC,KAAM+Z,IACN/L,YAAY,GACRzO,KAAKoC,MAAMmH,WAHjB,CAIEgB,KAAMvK,KAAKoC,MAAMkH,UACjBmR,SAAUza,KAAKE,MAAMua,SACrBpV,OAAQrF,KAAKE,MAAM2P,YACnB6K,eAAgB1a,KAAKE,MAAMwa,yBAloBGxY,aCyjBvBmiH,6MAvjBbjiH,MAAQ,CAENkiH,iBAAiB,GACjBC,kBAAkB,KAClBC,qBAAqB,KACrBzlB,sBAAsB,KACtB0lB,sBAAsB,KACtBC,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7BC,6BAA6B,QAI/B9kH,cAAgB,OAChBs3B,aAAe,gFAGTr3B,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,OAG9CF,KAAKq3B,aAAer3B,KAAKD,cAAcizE,uKAIvChzE,KAAKI,gbA+IkBiC,EAAUC,mEACjCtC,KAAKI,kJAIL,IAAMm/B,EAAiBv/B,KAAKE,MAAMiD,aAAenD,KAAKE,MAAMgE,YAAclE,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMgE,aAAa28B,WAAWtB,eAAiB,GAC/IiqC,EAAwBjqC,EAAeh+B,OAASg+B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F21C,EAAiBD,GAAyBA,EAAsBjoE,OAAO,EACvEujH,EAAWr7C,EAAiB,EAAE,EAAI,GAExC,OACE7gE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAGbnB,KAAKoC,MAAMkiH,iBAAiB/iH,OAAO,GACjCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP4N,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdpB,KAAKoC,MAAMkiH,iBAAiBrhH,IAAI,SAAC0H,EAAEmC,GAAH,OAC9BlE,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,GACM+H,EAAE3J,UADR,CAEEG,cAAe,SACf2C,IAAG,mBAAAL,OAAqBqJ,KAExBlE,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,KAGRxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGduJ,EAAEzK,MAAM2b,SAAWlR,EAAEzK,MAAM2b,SACzBjT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEgrG,WAAY,EACZluG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPyF,WAAY,UACZ3F,SAAU,CAAC,EAAE,SACb6J,wBAAyB,CAAEC,OAAQ7E,EAAEzK,MAAM2K,SAKjDjC,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAEN+E,EAAEzK,MAAM4nB,OAGTnd,EAAEzK,MAAMw5G,MACN9wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,SACXC,QAASrmB,EAAEzK,MAAMw5G,MAEjB9wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,sBAYjCgD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTtM,GAAG,EACHD,GAAG,IAIH/O,KAAKE,MAAMgjH,kBAAoBljH,KAAKE,MAAMgjH,iBAAiB3hH,OAAO,GAChEqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPwE,GAAI,CAAC,EAAE,GACP/C,GAAI,kBAEJkG,EAAA9G,EAAAC,cAACgjH,EAAD1jH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2P,YAAa,IACb4K,SAAU,iBACV3E,WAAY9V,KAAKE,MAAM0J,cACvBuG,cAAe,CAACnQ,KAAKE,MAAM0J,eAC3B0M,iBAAkBtW,KAAKD,cAAc2zD,oBAAoB,MAAM,OAKvE9qD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,aAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,mBACLvH,MAAM,CACJW,SAAS,EACT8E,WAAW,IACX7E,aAAa,EACb4E,SAAS,CAAC,QAAQ,SAClBE,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,QAC9BjnB,UAAU,CACRI,eAAe,gBAOvBqoE,GACE7gE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,iBAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,gBACLvH,MAAM,CACJW,SAAS,EACT8E,WAAW,IACX7E,aAAa,EACb4E,SAAS,CAAC,QAAQ,SAClBE,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,QAC9BjnB,UAAU,CACRI,eAAe,gBAQ7BwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,cAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,8BACLvH,MAAM,CACJW,SAAS,EACTC,aAAa,EACbwF,MAAM,CACJX,WAAW,IACXC,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,QAC9BviB,SAAU1F,KAAKE,MAAM4C,SAAW,QAAU,SAE5C9B,UAAU,CACRI,eAAe,eAKvBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,OACJ5a,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,eACLvH,MAAM,CACJwF,SAAS,EACTC,WAAW,EACXC,MAAM,WACN5E,UAAU,CACRI,eAAe,iBAO3BwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,YAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,kBACLvH,MAAM,CACJW,SAAS,EACTC,aAAa,EACbwF,MAAM,CACJX,WAAW,IACXD,SAAS1F,KAAKE,MAAM4C,SAAW,QAAU,QACzC8C,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,SAEhCjnB,UAAU,CACRI,eAAe,eAMrBpB,KAAKoC,MAAMyiH,8BAAgC7kH,KAAKoC,MAAMyiH,6BAA6BtjH,OAAO,GACxFqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAMyiH,6BAA6B5hH,IAAI,SAAC89F,EAAgBwB,GAAjB,OAC1C35F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVmuG,WAAY,EACZluG,WAAY,EACZC,MAAO,WACPuI,UAAW,SACX6N,GAAIumF,EAAgB,EAAI,EACxBz+F,IAAG,YAAAL,OAAc8+F,IAEhBxB,OAQfn4F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,QAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJW,SAAS,EACTC,aAAa,EACbwF,MAAM,CACJX,WAAW,IACXD,SAAS1F,KAAKE,MAAM4C,SAAW,QAAU,QACzC8C,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,SAEhCjnB,UAAU,CACRI,eAAe,gBAMzBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE6jH,GACV5jH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbg2G,UAAWuJ,IAAQC,IAHrB,gBAOAt8G,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEoD,cAAc,EACdusB,UAAW,CACTpoB,KAAK,cACLvH,MAAM,CACJW,SAAS,EACT8E,WAAW,IACXD,SAAS,CAAC,QAAQ,SAClBE,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOohB,QAC9BjnB,UAAU,CACRI,eAAe,eAMrBpB,KAAKoC,MAAMuiH,2BACT/7G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVmuG,WAAY,EACZluG,WAAY,EACZC,MAAO,WACPuI,UAAW,UAEVnO,KAAKoC,MAAMuiH,0BAA0Br3G,QAAQ,GARhD,IAQqDtN,KAAKq3B,aAAa/E,UARvE,IAQmFtyB,KAAKq3B,aAAal0B,YAAYmzB,mCA5iBlGp0B,sBCkOpBijH,8MAjOb/iH,MAAQ,CACNm9B,eAAe,KACf6lF,mBAAmB,QAIrBrlH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKqlH,uMAGkBhjH,EAAUC,+EACjCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClD40G,EAAmBr1G,KAAKC,UAAU7N,EAAU28B,aAAe/uB,KAAKC,UAAUlQ,KAAKE,MAAM8+B,WACrFumF,EAAuBt1G,KAAKC,UAAU7N,EAAUqB,iBAAmBuM,KAAKC,UAAUlQ,KAAKE,MAAMwD,eAC7F8hH,EAAsBnjH,EAAUmc,cAAgBxe,KAAKE,MAAMse,cAAgBnd,OAAOqQ,OAAOrP,EAAUmc,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,SAAWF,OAAOqQ,OAAO1R,KAAKE,MAAMse,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,QAEjP8vB,GAAkBk0F,GAAwBD,GAAoBE,IAChExlH,KAAKqlH,uSAKFrlH,KAAKE,MAAMwQ,SAAY1Q,KAAKE,MAAMwD,eAAkB1D,KAAKE,MAAM8+B,oDAC3D,0BAQCjd,QAAQqD,IAAI,CACpBplB,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAMwD,cAAc+D,KAAKzH,KAAKE,MAAMwQ,SAAQ,GACpF1Q,KAAKD,cAAcmpC,2BAA2BlpC,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMwD,eAChF1D,KAAKD,cAAc0gC,yBAAyBzgC,KAAKE,MAAMwQ,QAAQ1Q,KAAKE,MAAMwD,cAAc1D,KAAKE,MAAMwD,cAAcg9B,UAAUC,SAC3H3gC,KAAKD,cAAc6gC,wBAAwB5gC,KAAKE,MAAMwD,cAAcm9B,WAAWp5B,KAAKzH,KAAKE,MAAMwQ,QAAQ1Q,KAAKE,MAAMwD,cAAcm9B,WAAWhgC,SAASb,KAAKE,MAAMwD,cAAcg9B,UAAUI,2DARvLs8E,OACAqI,OACAlmF,OACAmmF,OAQIC,EAAqB3lH,KAAKE,MAAM8+B,UAAUQ,gBAAgB7P,KAAM,SAAAluB,GAAC,OAAIA,EAAEyB,QAAU7C,EAAKH,MAAMgD,OAASzB,EAAE2B,WAAa/C,EAAKH,MAAMkD,UAAY3B,EAAE8B,UAAYlD,EAAKH,MAAMqD,UAEpK6hH,EAAqB,aACrBplH,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKi+B,GAA5C,eAAAvd,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6D,SAAAC,EAAO6vB,GAAP,IAAA79B,EAAAkqE,EAAArtC,EAAA5tB,EAAAo4B,EAAA,OAAA/X,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3DtO,EAAc9C,EAAKN,cAAc6V,gBAAgB,CAAC,QAAQ,SAASorB,EAAYnrB,gBAC/Ew3D,EAAkBo4C,EAAiBzkF,GAFwBzvB,EAAAE,KAAA,EAGtCpR,EAAKN,cAAc2yB,gBAAgBsO,EAAY3gC,EAAKH,MAAMwQ,SAHpB,OAG3DsvB,EAH2DzuB,EAAAgD,KAI3DnC,EAAe/R,EAAKN,cAAc8R,MAAM0tB,EAAeyB,IAAcxgC,QAAkEH,EAAKN,cAAc8R,MAAM,GAAjFxR,EAAKN,cAAc8R,MAAM0tB,EAAeyB,IAEzHwJ,EAAoB6iC,EAAkBA,EAAgB7iC,kBAAoB,KAC1Em7E,GAAsBn7E,IACxBA,EAAoBA,EAAkBn9B,MAAMs4G,EAAmBtlF,YAEjE+kF,EAAmB73G,KAAK,CACtBrK,MAAM89B,EACN4kF,OAAOF,EACPlzG,QAAQwtB,EAAa1yB,QAAQ,GAC7Bu4G,WAAWzzG,EAAY9E,QAAQ,GAC/B8vG,eAAe/8G,EAAKN,cAAcs0D,aAAa+oD,GAC/C0I,UAAU3iH,EAAY4K,MAAZ,iBAAAtK,OAAqCu9B,EAArC,QACVwJ,kBAAkBA,EAAoBA,EAAkBl9B,QAAQ,GAAG+/D,EAAgBnjC,sBAAwB7pC,EAAKN,cAAc8R,MAAM,GAAGvE,QAAQ,KAjBhF,wBAAAiE,EAAAoB,SAAAxB,EAAAnR,SAA7D,gBAAA4S,GAAA,OAAAoP,EAAAnP,MAAA7S,KAAA8S,YAAA,YAqBN9S,KAAKiI,SAAS,CACZm9G,gKAIUxzG,GACZ5R,KAAKqlH,wDAGOzzG,GACZ5R,KAAKqlH,mDAGE,IAAA76G,EAAAxK,KACP,OACEA,KAAKoC,MAAMgjH,mBACTx8G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,EACPE,cAAe,SACfuB,GAAI,4BAEJkG,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,mBACAlG,EAAA9G,EAAAC,cAACgkH,EAAA,EAAD1kH,OAAAuB,OAAA,CACE04F,KAAMt7F,KAAKoC,MAAMgjH,mBACjBviH,KAAM,CACJ,CACEilB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEvmD,KAAK,QACLP,MAAM,CACJme,GAAG,EACH3W,KAAK1H,KAAKE,MAAM4C,SAAW,QAAU,SAEvCiD,KAAK,CAAC,cAER,CACEtF,KAAK,OACLsF,KAAK,CAAC,YAIZ,CACEzB,QAAO,EACPwjB,MAAM,UACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,WACN7F,MAAM,CACJW,SAAUb,KAAKE,MAAM4C,SAAW,EAAI,MAK5C,CACEglB,MAAM,aACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,8BACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,cACN7F,MAAM,CACJW,SAAUb,KAAKE,MAAM4C,SAAW,EAAI,MAK5C,CACEglB,MAAM,eACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,0BACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,qBACN7F,MAAM,CACJW,SAAUb,KAAKE,MAAM4C,SAAW,EAAI,MAK5C,CACEglB,MAAM,GACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdmf,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACE+rD,UAAU,CACRjyF,eAAe,CACb1Z,SAAS,SAAClH,GAAD,QAAYsK,EAAKzK,cAAc8R,MAAM3R,EAAMi8F,IAAI0pB,YAAYzxF,IAAI,MAQ5ErwB,eAAe6a,IACf1e,MAAM,CACJ0f,OAAO,GACPQ,YAAY,CACVnf,MAAM,GAERiB,UAAU4gH,IACVhiG,eAAe,CACbxa,MAAM,CACJrF,MAAM,QAER4J,MAAM,QACN3D,aAAa,EACbC,UAAU,SACVO,KAAK1H,KAAKE,MAAM4C,SAAW,QAAU,UAEvC+H,MAAM,QACNiH,OAAO,QACP9J,SAAShI,KAAKgmH,cAActlG,KAAK1gB,MACjCqf,WAAWrf,KAAKE,MAAMwD,cAAcg9B,UAAUo7C,MAC9Cv8D,aAAavf,KAAKE,MAAMwD,cAAcm9B,WAAWp5B,WAMvDzH,KAAKE,SAGbF,KAAKE,MAAM2b,UAAY,YA9NK3Z,aC+ZrB+jH,8MAtZb7jH,MAAQ,CACNoc,aAAa,GACb0nG,cAAa,EACbz8C,gBAAe,EACf08C,iBAAgB,KAIlBpmH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,+aAMkBxF,EAAUC,2EACjCtC,KAAKI,YAEC0gH,EAAqB7wG,KAAKC,UAAU7N,EAAUc,eAAiB8M,KAAKC,UAAUlQ,KAAKE,MAAMiD,aACzFijH,EAAqB/jH,EAAU6B,cAAgBlE,KAAKE,MAAMgE,aACtClE,KAAKE,MAAM8+B,YAAc38B,EAAU28B,WAAc/uB,KAAKC,UAAUlQ,KAAKE,MAAM8+B,aAAe/uB,KAAKC,UAAU7N,EAAU28B,YACrH8hF,GAAsBsF,IAC5CpmH,KAAK6H,mJAIC,IAAAxH,EAAAL,KAEFwe,EAAexe,KAAKE,MAAM8+B,UAAYh/B,KAAKE,MAAM8+B,UAAUxgB,aAAa7M,OAAQ,SAAAspB,GAAC,OAAIA,EAAE73B,SAAS8J,gBAAkB7M,EAAKH,MAAMy9G,iBAAiBzwG,eAAiB+tB,EAAE/3B,MAAMgK,gBAAkB7M,EAAKH,MAAM0J,cAAcsD,iBAAmB7M,EAAKH,MAAMgE,aAAe+2B,EAAE13B,UAAYlD,EAAKH,MAAMgE,eAAiB,GACzSgiH,KAAelmH,KAAKE,MAAM8+B,YAAah/B,KAAKE,MAAM8+B,UAAUQ,gBAAgB7P,KAAM,SAAA02F,GAAW,OAAIA,EAAYjjH,SAAS8J,gBAAkB7M,EAAKH,MAAMy9G,iBAAiBzwG,eAAiBm5G,EAAYnjH,MAAMgK,gBAAkB7M,EAAKH,MAAM0J,cAAcsD,iBAAmB7M,EAAKH,MAAMgE,aAAemiH,EAAY9iH,QAAQ2J,gBAAkB7M,EAAKH,MAAMgE,YAAYgJ,kBAE5VqyB,EAAiBv/B,KAAKE,MAAMiD,aAAenD,KAAKE,MAAMgE,YAAclE,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMgE,aAAa28B,WAAWtB,eAAiB,GAC/IiqC,EAAwBjqC,EAAeh+B,OAASg+B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F21C,EAAiBD,GAAyBA,EAAsBjoE,OAAO,EAI7EvB,KAAKiI,SAAS,CACZuW,eACA0nG,eACAz8C,iBACA08C,iBAdsB,qCAkBjB,IAAA37G,EAAAxK,KACDsmH,EAAkBtmH,KAAKD,cAAc6V,gBAAgB,CAAC,aACtD2wG,EAAwBllH,OAAOC,KAAKglH,GAAiB30G,OAAQ,SAAAzN,GAAW,OAAKsG,EAAKtK,MAAMgE,aAAesG,EAAKtK,MAAMgE,cAAgBA,IACxI,OACE0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,GAEHpO,KAAKD,cAAc8N,WAAW7N,KAAKE,MAAMy9G,kBAH5C,MAGkE39G,KAAKE,MAAM0J,cAH7E,MAG+F5J,KAAKE,MAAM49G,eAAiB99G,KAAKE,MAAM49G,eAAer2G,KAAO,YAuDxJmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBC,eAAgBpB,KAAKE,MAAMgE,YAAc,SAAW,iBAGlDqiH,EAAsBtjH,IAAK,SAAAiB,GAAW,OACpC0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPlN,WAAY,SACZC,cAAe,SACf2C,IAAG,WAAAL,OAAaS,GAChBjD,MAAO,CAAC,EAAG,EAAEslH,EAAsBhlH,OAAQ,MAGzCiJ,EAAKtK,MAAMgE,YACT0E,EAAA9G,EAAAC,cAACykH,EAADnlH,OAAAuB,OAAA,GACM4H,EAAKtK,MADX,CAEE09G,gBAAiB15G,EACjB65G,UAAWvzG,EAAKtK,MAAMiD,YAAY0jC,IAClCy3E,kBAAmB9zG,EAAKtK,MAAMgE,YAC9Bm+G,qBAAsB73G,EAAKtK,MAAMumH,cACjChI,kBAAmBj0G,EAAKtK,MAAMu+G,kBAC9B/6G,cAAe8G,EAAKtK,MAAMiD,YAAYe,MAGxC0E,EAAA9G,EAAAC,cAAC2kH,EAADrlH,OAAAuB,OAAA,GACM4H,EAAKtK,MADX,CAEE09G,gBAAiB15G,EACjB65G,UAAWvzG,EAAKtK,MAAMiD,YAAY0jC,IAClCy3E,kBAAmB9zG,EAAKtK,MAAMgE,YAC9Bu6G,kBAAmBj0G,EAAKtK,MAAMu+G,kBAC9B/6G,cAAe8G,EAAKtK,MAAMiD,YAAYe,UAatDlE,KAAKoC,MAAM+jH,iBAAmBnmH,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAM8jH,cAAgBlmH,KAAKE,MAAMgE,aACxF0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACPjN,cAAe,SACfuB,GAAI,4BAEJkG,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,kBACAlG,EAAA9G,EAAAC,cAAC4kH,EAADtlH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEgD,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAMgE,YACpBf,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBuF,iBAAkBljH,KAAKoC,MAAMoc,aAC7B9a,cAAe1D,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMgE,iBAKvDlE,KAAKoC,MAAM+jH,iBAAmBnmH,KAAKoC,MAAMqnE,gBAAkBzpE,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAM8jH,cAAgBlmH,KAAKE,MAAMgE,aACrH0E,EAAA9G,EAAAC,cAAC6kH,GAADvlH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEgD,MAAOlD,KAAKE,MAAM0J,cAClBrG,QAASvD,KAAKE,MAAMgE,YACpBf,YAAanD,KAAKE,MAAMiD,YACxBC,SAAUpD,KAAKE,MAAMy9G,iBACrBuF,iBAAkBljH,KAAKoC,MAAMoc,aAC7B9a,cAAe1D,KAAKE,MAAMiD,YAAYnD,KAAKE,MAAMgE,gBAkBrDlE,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAMoc,cAAgBxe,KAAKoC,MAAMoc,aAAajd,OAAO,GAC9EqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP1L,GAAI,eACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,gBACAlG,EAAA9G,EAAAC,cAAC8kH,EAAA,EAADxlH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAe,CAACnQ,KAAKE,MAAM0J,eAC3Bs5G,iBAAkBljH,KAAKoC,MAAMoc,aAC7BsoG,iBAAkB9mH,KAAKoC,MAAMoc,aAAaynB,OAAQ,SAAC6gF,EAAiB7rF,GAElE,OADA6rF,EAAiB7rF,EAAEnpB,OAAO5E,eAAiB+tB,EAAEnpB,OACtCg1G,GACP,IACFjkH,KAAM,CACJ,CACEilB,MAAO9nB,KAAKE,MAAM4C,SAAW,GAAK,OAClC5C,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE5W,KAAK,OACLnD,QAAO,KAIb,CACEwjB,MAAM,SACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,KAER+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,UAIX,CACEnD,QAAO,EACPwjB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,aACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE/Z,QAAO,EACPmD,KAAK,YAIX,CACEqgB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEvmD,KAAK,QACLgH,KAAK,SACL1B,KAAK,CAAC,gBACN7F,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACE5E,KAAK,OACL6D,QAAO,EACPmD,KAAK,SACL1B,KAAK,CAAC,eAIZ,CACE+hB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,GACNhZ,OAAO,CAAC,QAAQ,SAGpB,CACEf,QAAO,EACPmD,KAAK,oBASnBzH,KAAKE,MAAMgE,aACT0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPyB,GAAI,OACJxB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACEl2G,GAAI,GADN,8BAKAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,IACVC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACglH,EAAD,CACE7K,cAAc,EACdF,UAAW,CACTgL,GAAG,CACD,CACE3K,EAAG,6BACHv6G,EAAC,oZAEH,CACEu6G,EAAG,6BACHv6G,EAAC,ulBAAA2B,OAAylBzD,KAAKE,MAAM0G,MAAMC,OAAOZ,KAAjnB,0BAEH,CACEo2G,EAAG,gCACHv6G,EAAC,wdAEH,CACEu6G,EAAG,0BACHv6G,EAAC,mLAEH,CACEu6G,EAAG,4BACHv6G,EAAC,yOA1YCI,8CC+NX+kH,8MAnOblnH,cAAgB,OAEhBqC,MAAQ,CACNc,MAAM,KACNE,SAAS,KACTD,YAAY,iFAIRnD,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,gMAGkBxF,EAAWC,mEAClCtC,KAAKI,YACwBJ,KAAKE,MAAMgnH,sBAAwB7kH,EAAU6kH,uBAAyBlnH,KAAKE,MAAMgnH,sBAE5GlnH,KAAK6H,gRAKH3E,EAAM,KACNE,EAAS,cAEiBpD,KAAKD,cAAc8oD,eAAe7oD,KAAKE,MAAM49G,eAAer9G,KAAK,oBAAzF0mH,WAEJjkH,EAAQikH,EAAgBjkH,MACxBE,EAAW+jH,EAAgB/jH,WAErBorE,EAAexuE,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa,aACtE1S,EAAQsrE,EAAatrE,MACrBE,EAAWorE,EAAaprE,UAGpBD,EAAcnD,KAAKE,MAAMsC,kBAAkBY,GAAUF,qBAEpDlD,KAAKiI,SAAS,CACnB/E,QACAE,WACAD,oJAIK,IAAA9C,EAAAL,KACD89G,EAAiB99G,KAAKE,MAAM49G,eAC5B36G,EAAcnD,KAAKE,MAAMiD,aAAenD,KAAKoC,MAAMe,YAEzD,OACEyF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,CAAC,EAAG,GACRK,UAAW,EACXjI,aAAc,EACdjG,MAAO,CAAC,EAAG,MAEX2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,EACHuH,GAAI,EACJ5D,OAAQ,IACRC,OAAQ,OACR6B,aAAc,EACdV,SAAU,SACVrF,cAAe,SACf8N,gBAAiB,SACjB5C,YAAa,cACbjL,eAAgB,CAAC,SAAiC,OAAxB08G,EAAer9G,KAAgB,OAAS,UAElEmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPm7G,aAAY,aAAA34G,OAAezD,KAAKE,MAAM0G,MAAMC,OAAO2kB,WAEnD5iB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJxwG,GAAI,EACJ8F,GAAI,EACJ3N,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMmT,GAAI,EAAG9a,WAAY,UACvB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJ4Y,GAAI,EACJ+oG,IAAKtJ,EAAer2G,KACpB4G,IAAKyvG,EAAe9/F,MACpBtW,KAAM1H,KAAKE,MAAM4C,SAAW,MAAQ,UAEtC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMG,GAAI,GACRJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,CAAC,EAAG,GACRE,WAAY,EACZD,SAAU,CAAC,EAAG,GACdmuG,WAAY,GAEXiK,EAAer2G,QAItBmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJ4Y,GAAI,EACJrC,GAAI,EACJ9a,WAAY,aACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJld,cAAe,MACfD,WAAY,YAEZ0H,EAAA9G,EAAAC,cAACiC,EAAA,EAAD3C,OAAAuB,OAAA,CACEitB,UAAW,CACTw3F,aAAa,EACb5/G,KAAI,GAAAhE,OAAKq6G,EAAewJ,SAApB,OACJpnH,MAAO,CACLW,SAAU,EACV8E,WAAY,EACZkuG,WAAY,IACZnuG,SAAU,CAAC,EAAG,GACdyI,UAAW,SACXnN,UAAW,CACTumH,aAAc,YAEhB3hH,MAAO5F,KAAKE,MAAM49G,eAAel4G,MAAM44G,OAGvCx+G,KAAKE,MAhBX,CAiBEgD,MAAOlD,KAAKoC,MAAMc,MAClBC,YAAaA,EACbI,QAASvD,KAAKE,MAAMqD,QACpBH,SAAUpD,KAAKoC,MAAMgB,YAEvBwF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJrJ,GAAI,CAAC,EAAG,GACRC,SAAU,EACVmuG,WAAY,IACZ1lG,UAAW,OACXvI,MAAO,YANT,mBAQmB5F,KAAKoC,MAAMc,QAGhC0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJrW,WAAY,EACZD,SAAU,CAAC,EAAG,GACdyI,UAAW,OACX0lG,WAAY,MACZjuG,MAAO,aAENk4G,EAAe/J,YAAYyT,SAKpC5+G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExD,OAAQ,OACRgrB,GAAI,iBACJlvB,cAAe,SACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJlN,GAAI,EACJzI,GAAI,EACJpF,MAAO,GAEN68G,EAAe2J,SAASxkH,IAAI,SAACykH,EAAS1hH,GAAV,OAC3B4C,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJU,GAAI,EACJE,GAAI,EACJgN,GAAI,CAAC,EAAG,GACR9a,WAAY,SACZC,cAAe,MACf2C,IAAG,WAAAL,OAAauC,IAEhB4C,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJ5Y,GAAI,EACJgC,KAAM,OACN7B,MAAO,OACP8B,KAAMrH,EAAKH,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,CAAC,EAAG,GAAIC,SAAU,CAAC,EAAG,GAAIC,WAAY,OAC7C+hH,OAKT9+G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPoE,OAAQ,OACRnE,WAAY,WACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX2J,GAAI,EACJ7N,MAAO,IACPyE,SAAU,EACV64G,cAAe,QACfp3G,UAAW22G,EAAel4G,MAAM44G,KAElCv5G,YAAa,SAAA8B,GAAC,OACZ1G,EAAKH,MAAMu+G,kBAAkBX,EAAenkC,SAG7C35E,KAAKE,MAAMiD,YAAX,SAAAM,OACYq6G,EAAer2G,MAD3B,aAAAhE,OAEgBq6G,EAAer2G,kBA3N7BvF,aC8JJylH,8MA9Jb5nH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAWC,mEAClCtC,KAAKI,kJAGE,IAAAC,EAAAL,KACD4nH,EAAY5nH,KAAKD,cAAc6V,gBAAgB,CAAC,gBACtD,OACEhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+H,GAAI,EACJ7H,cAAe,CAAC,SAAU,OAC1BC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMG,GAAI,EAAG8F,GAAI,CAAC,EAAG,GAAI7N,MAAO,CAAC,EAAG,IAAME,cAAe,UACvDyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,OAAQ0N,GAAI,EAAG7N,MAAO,CAAC,EAAG,KAC9C2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEg/G,KAAM,OACNliH,WAAY,EACZkuG,WAAY,EACZjuG,MAAO,QACPF,SAAU,CAAC,EAAG,GACdyI,UAAW,QAEVy5G,EAAUE,WAGfl/G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPmN,GAAI,CAAC,EAAG,GACRhN,eAAgB,QAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,QACPuI,UAAW,OACXxI,WAAY,EACZD,SAAU,GAETkiH,EAAUlO,OAGf9wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPE,cAAe,UAGbymH,EAAU5L,UAAU/4G,IAAK,SAACqM,EAAStJ,GAAV,OACvB4C,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJhL,IAAG,YAAAL,OAAcuC,GACjB9E,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZkjB,QAAS,MACTjjB,MAAO,QACPuI,UAAW,OACXrI,QAAS,SAAAiB,GAAC,OACR1G,EAAKH,MAAM6nH,iBAAiBz4G,EAASoqG,KAAMpqG,EAAS04G,OAGtDp/G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,MACfD,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJhQ,IAAKu5G,EAAUK,aAEhB34G,EAASoqG,YAQxB9wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GACPqyG,OAAQtzG,KAAKE,MAAM4C,SAAW,EAAI,EAClC5B,WAAY,cAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOyqG,OAAQtzG,KAAKE,MAAM4C,SAAW,EAAI,EAAGuL,IAAKu5G,EAAUM,UAE7Dt/G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGqJ,GAAI,CAAC,EAAG,GAAI7N,MAAO,CAAC,EAAG,IAAME,cAAe,UACvDyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,CAAC,EAAG,GAAI3N,cAAe,MAAOD,WAAY,cAClD0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,CAAC,EAAG,GACR7N,MAAO,CAAC,QAAS,SACjBoN,IAAKrO,KAAKD,cAAc6V,gBAAgB,CACtC,WACA,KACA,aAGJhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAG,GACRhT,GAAI,EACJoF,GAAI,CAAC,EAAG,GACRxI,MAAO,QACPuI,UAAW,OACXxI,WAAY,EACZD,SAAU,EACV6J,wBAAyB,CACvBC,OAAQo4G,EAAUO,eAIxBv/G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,CAAC,EAAG,GAAI3N,cAAe,MAAOD,WAAY,cAClD0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,CAAC,EAAG,GACRrJ,GAAI,CAAC,EAAG,GACRxE,MAAO,CAAC,QAAS,SACjBoN,IAAKrO,KAAKD,cAAc6V,gBAAgB,CACtC,WACA,KACA,aAGJhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAG,GACRhT,GAAI,EACJoF,GAAI,CAAC,EAAG,GACRxI,MAAO,QACPuI,UAAW,OACXxI,WAAY,EACZD,SAAU,EACV6J,wBAAyB,CACvBC,OAAQo4G,EAAUQ,wBApJPlmH,uBCoHZmmH,8MA9GbtoH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAWC,mEAClCtC,KAAKI,kJAGE,IAAAC,EAAAL,KACDsmH,EAAkBtmH,KAAKD,cAAc6V,gBAAgB,CAAC,aAC5D,OACEhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACumH,GAAA,EAADjnH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEc,UAAW,CACToN,GAAG,CAAC,EAAE,IAERm6G,YAAa,WACbT,SAAU,iCACVU,sBAAuBxoH,KAAKD,cAAcooG,6BAE5Cv/F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPsF,SAAU,EACVrF,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEdpB,KAAKE,MAAMiD,YAmBXyF,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,EACJzI,WAAY,EACZD,SAAU,CAAC,EAAG,GACdE,MAAO,YACPuI,UAAW,UALb,iCAlBAvF,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KACEzpG,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACEt/G,SAAU,CAAC,EAAE,IADf,4BAKAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACP5W,OAAQ,EACR8B,aAAc,EACdmF,YAAa,cACb4C,gBAAiB,UACjBnG,UAAW,CAACC,KAAO1E,aAAarE,KAAKE,MAAM4C,SAAWiG,KAAOzE,OAAS,OAEtEsE,EAAA9G,EAAAC,cAAC0mH,GAAiBzoH,KAAKE,SAc7B0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,EAAG9F,GAAI,EAAG5H,eAAgB,UAClCwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,CAAC,SAAU,OAC1BC,eAAgB,iBAEfC,OAAOC,KAAKglH,GAAiBrjH,IAAI,SAACiB,EAAa8B,GAAd,OAChC4C,EAAA9G,EAAAC,cAAC2mH,GAADrnH,OAAAuB,OAAA,GACMvC,EAAKH,MADX,CAEEqD,QAASW,EACTJ,IAAG,WAAAL,OAAauC,GAChB7C,YAAa9C,EAAKH,MAAMiD,YACxB26G,eAAgBwI,EAAgBpiH,UAKxC0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACP+N,GAAI,CAAC,EAAE,GACP5N,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,UAHb,2EAK0EvF,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CAAS17G,SAAU,CAAC,EAAE,GAAIuhB,KAAMjnB,KAAKD,cAAc6V,gBAAgB,CAAC,cAApE,SAL1E,KAK6KhN,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CAAS17G,SAAU,CAAC,EAAE,GAAIuhB,KAAMjnB,KAAKD,cAAc6V,gBAAgB,CAAC,gBAApE,WAL7K,KAKoRhN,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CAAS17G,SAAU,CAAC,EAAE,GAAIuhB,KAAMjnB,KAAKD,cAAc6V,gBAAgB,CAAC,iBAApE,YALpR,OAK+XhN,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CAAS17G,SAAU,CAAC,EAAE,GAAIuhB,KAAMjnB,KAAKD,cAAc6V,gBAAgB,CAAC,gBAApE,WAL/X,IAKqehN,EAAA9G,EAAAC,cAAA,WALre,gEAlGiBG,iCC2OdymH,8MA7ObvmH,MAAQ,CACNmH,WAAW,KACXC,cAAc,QAIhBzJ,cAAgB,OAChB6H,oBAAqB,6EAGf5H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,6JAILJ,KAAK4H,oBAAqB,sJAI1B5H,KAAK6H,gMAGkBxF,EAAUC,8EACjCtC,KAAKI,YAEiBiC,EAAUS,WAAa9C,KAAKE,MAAM4C,UAEtD9C,KAAKsI,aAAa,CAChBiB,WAAW,KACXC,cAAc,MACd,WACAnJ,EAAKwH,+LAKQE,wFAASC,iCAAS,KAC9BhI,KAAK4H,4DACD5H,KAAKiI,SAASF,EAASC,oCAEzB,iQAKDuB,EAAa,CACjBO,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBvD,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACd0E,aAAa,SAACC,EAAMxD,GAClByD,EAAKlC,aAAa,CAChBkB,cAAce,KAGlBE,aAAa,SAACF,EAAMxD,GAClByD,EAAKlC,aAAa,CAChBkB,cAAc,QAGlBkB,cAAe1K,KAAKE,MAAMwK,cAAgB1K,KAAKE,MAAMwK,cAAiB,SAAAC,GAAC,OAAIA,GAC3EC,WAAY5K,KAAKE,MAAM0K,WACvBE,YAAa,SAAAT,GACX,OAAO,MAETzD,MAAM,CACJmE,QAAS,CACPC,UAAWhL,KAAKE,MAAM+K,OAAS,CAC7BC,WAAYlL,KAAKE,MAAM0G,MAAMC,OAAOsE,QAClC,CACFzC,QAAS,SAGb0C,OAAO,CACL5F,KAAK,CACHG,WAAW,IACXD,SAAS1F,KAAKE,MAAM4C,SAAW,GAAK,GACpCuI,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAMC,YAGvCC,QAAQ,CACNhG,KAAK,CACHE,SAAS,GACTC,WAAW,IACX0F,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBlM,KAAKE,MAAM+K,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BG,OAAQvM,KAAKE,MAAMqM,QAAU,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,GAC1DN,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,OAGpDtM,KAAKE,MAAM0oH,aACbr/G,EAAWiC,QAAU,CACnBnK,OAAOuB,OAAO,CACZimH,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,YAAa,SACbC,WAAYnpH,KAAKE,MAAM4C,SAAW,GAAK,GACvCsmH,cAAeppH,KAAKE,MAAM0G,MAAMC,OAAOkR,OACvCsxG,QAAS,CACP,CACE5vD,GAAI,QACJnzD,MAAO,CACL8iH,cAAe,WAIrBppH,KAAKE,MAAMopH,eAIjBtpH,KAAKsI,aAAa,CAChBiB,kJAMF,OACEX,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPgN,SAAU,WACV/M,WAAY,SACZE,eAAgB,UAGdpB,KAAKoC,MAAMmH,aAAevJ,KAAKE,MAAM+K,QACnCrC,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEqF,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACXjN,WAAY,SACZ+M,SAAU,WACVhN,MAAO,CAAC,MAAM,OACdoE,OAAQ,CAAC,MAAM,OACflE,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAMoH,cACTZ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,QAAQ,OAChBoE,OAAQ,CAAC,QAAQ,OACjBgJ,IAAKrO,KAAKoC,MAAMoH,cAAcwU,QAEhCpV,EAAA9G,EAAAC,cAACjC,GAAA,EAADuB,OAAAuB,OAAA,CACE/B,SAAU,EACV8E,WAAY,EACZD,SAAU,CAAC,EAAE,GACb5E,aAAc,EACdP,OAAQP,KAAKoC,MAAMoH,cAAc+/G,YAAcvpH,KAAKoC,MAAMoH,cAAcqB,OACpE7K,KAAKoC,MAAMoH,cAAcggH,kBAE/B5gH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,aAEN5F,KAAKoC,MAAMoH,cAAcoE,QAI9BhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ/I,OAAQ,QACRgJ,IAAKrO,KAAKE,MAAMupH,eAElB7gH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEd3F,KAAKE,MAAM+a,cAEdrS,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAEN5F,KAAKE,MAAMwpH,gBAO1B9gH,EAAA9G,EAAAC,cAAC4sB,EAAA,EAADttB,OAAAuB,OAAA,CACEnC,KAAM+N,KACNC,YAAY,GACRzO,KAAKE,MACLF,KAAKoC,MAAMmH,WAJjB,CAKEgB,KAAMvK,KAAKE,MAAMoJ,qBAvOGpH,kCC8GfynH,8MA9GbvnH,MAAQ,CACNwnH,WAAW,KACXC,aAAa,QAIf9pH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK8pH,yMAGkBznH,EAAUC,sFACjCtC,KAAKI,YACC8mH,EAAuB7kH,EAAU6kH,uBAAyBlnH,KAAKE,MAAMgnH,uBACvC7kH,EAAUmzB,qBAAuBvlB,KAAKC,UAAU7N,EAAUmzB,uBAAyBvlB,KAAKC,UAAUlQ,KAAKE,MAAMs1B,sBAC/G0xF,IAChClnH,KAAK8pH,oBAGDz5G,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDwN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,WACvCN,KAAKC,UAAU7N,EAAU0nH,gBAAkB95G,KAAKC,UAAUlQ,KAAKE,MAAM6pH,eACtEz5G,GAAoBD,KAChC25G,EAAW3oH,OAAOuB,OAAO,GAAG5C,KAAKoC,OACvCpC,KAAKiI,SAAS,CACZ2hH,WAAW,KACXC,aAAa,MACb,WACAxpH,EAAK4H,SAAS+hH,8QAObhqH,KAAKE,MAAMs1B,qBAAwBx1B,KAAKE,MAAMgnH,+DAC1C,aAGH12G,EAAkBxQ,KAAKE,MAAMsQ,iBAAmB,QACpCxQ,KAAKE,MAAM8+B,+CAAmBh/B,KAAKD,cAAc2hC,oBAAoBlxB,EAAgBxQ,KAAKE,MAAMwQ,mCAA5GsuB,OAGA6qF,EAAe7qF,EAAUG,aACzByqF,EAAaC,EAAax3G,KAAKw3G,EAAax8G,MAAM2xB,EAAUE,OAAO5a,IAAI,OAE7EtkB,KAAKiI,SAAS,CACZ2hH,aACAC,qJAIK,IAAAr/G,EAAAxK,KAED+pH,EAAe,CACnBlW,WAAW,EACXjuG,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOyV,UAC9BjR,WAAWrL,KAAKE,MAAM0G,MAAM0E,MAAM2c,QAClCtiB,WAAY3F,KAAKE,MAAM4C,SAAW,IAAM,IACxC4C,SAAS1F,KAAKE,MAAM4C,SAAW,OAAS,SAItC9C,KAAKE,MAAM6pH,cAAgB1oH,OAAOC,KAAKtB,KAAKE,MAAM6pH,cAAcxoH,QAClEF,OAAOC,KAAKtB,KAAKE,MAAM6pH,cAAcvoH,QAAQ,SAAAC,GAC3CsoH,EAAatoH,GAAK+I,EAAKtK,MAAM6pH,aAAatoH,KAI9C,IAAMZ,EAAWb,KAAKE,MAAMW,UAAY,EAExC,OAAOb,KAAKoC,MAAMynH,cAAgB7pH,KAAKoC,MAAMwnH,WAC3ChhH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAACkoH,GAAAnoH,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXvpH,SAAUA,EACV85B,SAAU,QACVi2B,IAAKxjD,WAAWpN,KAAKoC,MAAMwnH,YAC3BhvF,MAAOxtB,WAAWpN,KAAKoC,MAAMynH,cAC7BQ,aAAe,SAAA7yF,GAAC,MAAI,KAAKhtB,EAAKzK,cAAcW,YAAY82B,EAAE32B,KAEzD,SAAAkQ,GAAA,IAAGu5G,EAAHv5G,EAAGu5G,WAAHv5G,EAAe6pB,MAAf,OACChyB,EAAA9G,EAAAC,cAAA,QACEwoH,IAAKD,EACLhkH,MAAOyjH,OAMfnhH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAM,gBA3GcxF,aC+GnBsoH,8MA7GbpoH,MAAQ,CACN6oE,YAAY,KACZH,cAAc,QAIhB/qE,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK8pH,yMAGkBznH,EAAUC,sFACjCtC,KAAKI,YACC8mH,EAAuB7kH,EAAU6kH,uBAAyBlnH,KAAKE,MAAMgnH,uBACvC7kH,EAAUmzB,qBAAuBvlB,KAAKC,UAAU7N,EAAUmzB,uBAAyBvlB,KAAKC,UAAUlQ,KAAKE,MAAMs1B,sBAC/G0xF,IAChClnH,KAAK8pH,oBAGDz5G,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDwN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,WACvCN,KAAKC,UAAU7N,EAAU0nH,gBAAkB95G,KAAKC,UAAUlQ,KAAKE,MAAM6pH,eACtEz5G,GAAoBD,KAChC25G,EAAW3oH,OAAOuB,OAAO,GAAG5C,KAAKoC,OACvCpC,KAAKiI,SAAS,CACZgjE,YAAY,KACZH,cAAc,MACd,WACAzqE,EAAK4H,SAAS+hH,8QAObhqH,KAAKE,MAAMs1B,qBAAwBx1B,KAAKE,MAAMgnH,+DAC1C,aAGH12G,EAAkBxQ,KAAKE,MAAMsQ,iBAAmB,QACpCxQ,KAAKE,MAAM8+B,+CAAmBh/B,KAAKD,cAAc2hC,oBAAoBlxB,EAAgBxQ,KAAKE,MAAMwQ,mCAA5GsuB,OAEA8rC,EAAgB9rC,EAAUI,cAC1B6rC,EAAcH,EAAcz4D,KAAK2sB,EAAUK,gBAAgBhyB,MAAM2xB,EAAUE,OAAO5a,IAAI,OAE5FtkB,KAAKiI,SAAS,CACZgjE,cACAH,sJAIK,IAAAtgE,EAAAxK,KAED+pH,EAAe,CACnBlW,WAAW,EACXjuG,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAOyV,UAC9BjR,WAAWrL,KAAKE,MAAM0G,MAAM0E,MAAM2c,QAClCtiB,WAAY3F,KAAKE,MAAM4C,SAAW,IAAM,IACxC4C,SAAS1F,KAAKE,MAAM4C,SAAW,OAAS,SAItC9C,KAAKE,MAAM6pH,cAAgB1oH,OAAOC,KAAKtB,KAAKE,MAAM6pH,cAAcxoH,QAClEF,OAAOC,KAAKtB,KAAKE,MAAM6pH,cAAcvoH,QAAQ,SAAAC,GAC3CsoH,EAAatoH,GAAK+I,EAAKtK,MAAM6pH,aAAatoH,KAI9C,IAAME,EAAO3B,KAAKE,MAAMyB,MAAQ,KAC1Bd,EAAWb,KAAKE,MAAMW,UAAY,EAExC,OAAOb,KAAKoC,MAAM0oE,eAAiB9qE,KAAKoC,MAAM6oE,YAC5CriE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KAEED,EAAA9G,EAAAC,cAACkoH,GAAAnoH,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXvpH,SAAUA,EACV85B,SAAU,QACVi2B,IAAKxjD,WAAWpN,KAAKoC,MAAM6oE,aAC3BrwC,MAAOxtB,WAAWpN,KAAKoC,MAAM0oE,eAC7Bu/C,aAAe,SAAA7yF,GAAC,OAAI71B,EAAK6I,EAAKzK,cAAcW,YAAY82B,EAAE32B,KAEzD,SAAAkQ,GAAA,IAAGu5G,EAAHv5G,EAAGu5G,WAAHv5G,EAAe6pB,MAAf,OACChyB,EAAA9G,EAAAC,cAAA,QACEwoH,IAAKD,EACLhkH,MAAOyjH,OAMfnhH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAM,gBA1GexF,aC0+CpBuoH,8MA39CbroH,MAAQ,CACN48B,UAAU,KACVxgB,aAAa,GACbrb,YAAY,KACZe,YAAY,KACZwmH,aAAa,KACb9gH,cAAc,KACds8G,cAAa,EACbzjH,gBAAgB,GAChBkoH,gBAAgB,GAChB7M,eAAe,KACf8M,gBAAe,EACfC,kBAAkB,GAClBC,kBAAkB,GAClBC,iBAAgB,EAChB5E,iBAAgB,EAChBxI,iBAAiB,KACjBqN,oBAAoB,KACpBC,8BAA8B,UAIhClrH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YAELJ,KAAKymH,gBAAgByE,KAAM,WACzB,IACMR,EAAerqH,EAAKH,MAAMirH,UAAUC,OACpC9E,EAAkBjmH,EAAKN,cAAc6V,gBAAgB,CAAC,aACtDkoG,EAAiBz8G,OAAOqQ,OAAO40G,GAAiB32F,KAAM,SAAAsL,GAAC,OAAIA,EAAE0+C,QAAU+wC,IAE7E,QAAuBl7F,IAAnBsuF,EAA8B,CAChC,IAAM55G,EAAc45G,EAAer9G,KAC7BmqH,GAAkBvqH,EAAK+B,MAAM8jH,aAC7Bt8G,EAAgBvJ,EAAKH,MAAMirH,UAAUE,OACrC1N,EAAmBt9G,EAAKH,MAAMirH,UAAUG,OACxCnoH,EAAcw6G,GAAoBt9G,EAAKH,MAAMsC,kBAAkBm7G,IAAqBt9G,EAAKH,MAAMsC,kBAAkBm7G,GAAkB/zG,GAAiBvJ,EAAKH,MAAMsC,kBAAkBm7G,GAAkB/zG,GAAyB,KAElO,GAAIvJ,EAAK+B,MAAM8jH,eAAiB/iH,EAC9B,OAAO9C,EAAKH,MAAM8G,YAAY3G,EAAKH,MAAM67G,gBAAgBpiC,OAG3Dt5E,EAAK4H,SAAS,CACZ/D,cACAf,cACAunH,eACA9gH,gBACAk0G,iBACA8M,iBACAjN,yBAEG,CACL,IAAM/zG,EAAgBvJ,EAAKH,MAAMirH,UAAUG,OACrC3N,EAAmBt9G,EAAKH,MAAMirH,UAAUC,OACxCjoH,EAAc9C,EAAKH,MAAMsC,kBAAkBm7G,IAAqBt9G,EAAKH,MAAMsC,kBAAkBm7G,GAAkB/zG,GAAiBvJ,EAAKH,MAAMsC,kBAAkBm7G,GAAkB/zG,GAAiB,KAClMzG,GACF9C,EAAK4H,SAAS,CACZ9E,cACAyG,gBACA+zG,qBAKNt9G,EAAK4H,SAAS,CACZk+G,iBAvCsB,0aA+CH9jH,EAAWC,kFAClCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClD66G,EAA2Bt7G,KAAKC,UAAU7N,EAAUG,qBAAuByN,KAAKC,UAAUlQ,KAAKE,MAAMsC,oBACvG6uB,GAAkBk6F,IACpBvrH,KAAKiI,SAAS,CACZ8iH,iBAAgB,GAChB,WACAvgH,EAAKi8G,2SAMJzmH,KAAKE,MAAMwQ,+BACO,GACG,EACxB1Q,KAAKiI,SAAS,CACZi+G,cAHmB,EAInB6E,iBAHsB,uBAKjB,0BAGe/qH,KAAKD,cAAcg/B,4BAA4B/+B,KAAKE,MAAMsC,kBAAkBxC,KAAKE,MAAMwQ,iBAAzGsuB,YAGEwsF,EAAiB,GACjBC,EAAmB,GAEnBZ,EAAoB,GACpBC,EAAoB,IACF,EAClBY,EAAiB1rH,KAAKD,cAAc6V,gBAAgB,CAAC,aAE3DopB,EAAUQ,gBAAgBh+B,QAAS,SAAA6/B,GAC5BoqF,EAAiBpqF,EAAY99B,WAChCkoH,EAAiBpqF,EAAY99B,SAAW,CACtCooH,OAAOzT,EAAKn4G,cAAc8R,MAAM,GAChCW,QAAQ0lG,EAAKn4G,cAAc8R,MAAM,KAIrC45G,EAAiBpqF,EAAY99B,SAASooH,OAASF,EAAiBpqF,EAAY99B,SAASooH,OAAOt5G,KAAKgvB,EAAYC,eAC7GmqF,EAAiBpqF,EAAY99B,SAASiP,QAAUi5G,EAAiBpqF,EAAY99B,SAASiP,QAAQH,KAAKgvB,EAAYrB,cAE1GwrF,EAAenqF,EAAYn+B,SAC9BsoH,EAAenqF,EAAYn+B,OAASg1G,EAAKn4G,cAAc8R,MAAM,IAE/D25G,EAAenqF,EAAYn+B,OAASsoH,EAAenqF,EAAYn+B,OAAOmP,KAAKgvB,EAAYrB,gBAGnFv9B,EAAkBpB,OAAOC,KAAKkqH,GAEpCnqH,OAAOC,KAAKtB,KAAKE,MAAMsC,mBAAmBhB,QAAQ,SAAA4B,GAChD/B,OAAOC,KAAK42G,EAAKh4G,MAAMsC,kBAAkBY,IAAW5B,QAAS,SAAA+B,GACxDd,EAAgByzB,SAAS3yB,IACpBsnH,EAAkBznH,KACpBynH,EAAkBznH,GAAU,IAE9BynH,EAAkBznH,GAAUG,GAAS,GACrCsnH,EAAkBznH,GAAUG,GAAS20G,EAAKh4G,MAAMsC,kBAAkBY,GAAUG,KAG1EunH,EAAkB1nH,KACpB0nH,EAAkB1nH,GAAU,IAE9B0nH,EAAkB1nH,GAAUG,GAAS,GACrCunH,EAAkB1nH,GAAUG,GAAS20G,EAAKh4G,MAAMsC,kBAAkBY,GAAUG,QAK5EqoH,EAAqBvqH,OAAOC,KAAKkqH,GAAgBvoH,IAAK,SAAAC,GAC1D,IAAM2oH,EAAez+G,WAAWo+G,EAAetoH,GAAOoK,QAAQ,IACxDw+G,EAAkBN,EAAetoH,GAAOohB,IAAI0a,EAAUG,cAAc9xB,MAAM,KAC1ElK,EAAc+0G,EAAKn4G,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,gBAC/E,MAAO,CACLnT,GAAGQ,EACHuE,KAAKvE,EACL0K,MAAM1K,EACNsmH,gBAAgB,CACd7nH,KAAK,IACLC,QAAQ,OACRK,UAAU,CACRoc,GAAG,EACH1Y,WAAW,EACXD,SAAS,CAAC,EAAE,KAGhB6jH,WAAWsC,EACXhhH,MAAMmH,KAAKswD,MAAMwpD,GACjB/X,YAAW,KAAAtwG,OAAOooH,EAAP,QAAApoH,OAA0BP,GACrC0C,MAAM,OAAOzC,EAAYyC,MAAM8H,IAAIC,KAAK,KAAK,IAC7CqQ,MAAM7a,GAAeA,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAsEP,EAAM2S,cAA5E,WAKVxU,OAAOC,KAAK09B,EAAUO,gBAAgB/9B,QAAS,SAAA0B,GAC7C,IAAM2oH,EAAez+G,WAAW4xB,EAAUO,eAAer8B,GAAO+9B,qBAAqB3zB,QAAQ,IACvFw+G,EAAkB9sF,EAAUO,eAAer8B,GAAO+9B,qBAAqB3c,IAAI0a,EAAUG,cAAc9xB,MAAM,KACzGlK,EAAc+0G,EAAKn4G,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,gBACxDqiG,EAAKn4G,cAAc6V,gBAAgB,CAAC,YAAY1S,IACpD+sB,aACjB27F,EAAmBr+G,KAAK,CACtB7K,GAAGQ,EACHuE,KAAKvE,EACL0K,MAAM1K,EACNsmH,gBAAgB,CACd7nH,KAAK,IACLC,QAAQ,OACRK,UAAU,CACRoc,GAAG,EACH1Y,WAAW,EACXD,SAAS,CAAC,EAAE,KAGhB6jH,WAAWsC,EACXhhH,MAAMmH,KAAKswD,MAAMwpD,GACjB/X,YAAW,KAAAtwG,OAAOooH,EAAP,QAAApoH,OAA0BP,GACrC0C,MAAM,OAAOzC,EAAYyC,MAAM8H,IAAIC,KAAK,KAAK,IAC7CqQ,MAAM7a,GAAeA,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAsEP,EAAM2S,cAA5E,YAKNm1G,EAAsB3pH,OAAOC,KAAKmqH,GAAkBxoH,IAAI,SAAC8oH,EAAYj/G,GACzE,IAAMpJ,EAAgBgoH,EAAeK,GAC/B1F,EAAcoF,EAAiBM,GAErC,MAAO,CACLrpH,GAAGqpH,EACHtkH,KAAKskH,EACLlhH,MAJkBuC,WAAWi5G,EAAYsF,OAAOt+G,MAAM,KAAKC,QAAQ,IAKnEM,MAAOlK,EAAc+D,KACrB7B,MAAM,OAAOlC,EAAckC,MAAM8H,IAAIC,KAAK,KAAK,IAC/ComG,YAAW,KAAAtwG,OAAO4iH,EAAY7zG,QAAQlF,QAAQ,GAAnC,QAAA7J,OAA4CC,EAAc+D,SAMnE+W,EAAewgB,EAAUxgB,aACzB0nG,EAAelnF,GAAah/B,KAAKD,cAAc8R,MAAMmtB,EAAUG,cAAc1pB,GAAG,GAItFzV,KAAKiI,SAAS,CACZ+2B,YACAknF,eACA1nG,eACAusG,iBAxHsB,EAyHtBtoH,kBACAooH,oBACAC,oBACAc,qBACAZ,qKAKYN,GAChB,IAAI/wC,EAAK,GAAAl2E,OAAMzD,KAAKE,MAAM67G,gBAAgBpiC,MAAjC,KAAAl2E,OAA0CinH,IAC/B1qH,KAAKE,MAAMsC,kBAAkBxC,KAAKoC,MAAMu7G,mBAAqB39G,KAAKE,MAAMsC,kBAAkBxC,KAAKoC,MAAMu7G,kBAAkB39G,KAAKoC,MAAMwH,eAAiB5J,KAAKE,MAAMsC,kBAAkBxC,KAAKoC,MAAMu7G,kBAAkB39G,KAAKoC,MAAMwH,eAAiB,QAE3P+vE,GAAK,IAAAl2E,OAAQzD,KAAKoC,MAAMu7G,iBAAnB,KAAAl6G,OAAuCzD,KAAKoC,MAAMwH,gBAEzD5J,KAAKE,MAAM8G,YAAY2yE,gDAEJl5E,EAAK2C,EAASF,GACjC,IAAIwnH,EAAa,KAEhBA,EADU,OAAPjqH,EACU,SAEE,SAChB,IAAIk5E,EAAK,GAAAl2E,OAAMzD,KAAKE,MAAM67G,gBAAgBpiC,MAAjC,KAAAl2E,OAA0CinH,IAC/B1qH,KAAKE,MAAMsC,kBAAkBY,IAAapD,KAAKE,MAAMsC,kBAAkBY,GAAUF,GAASlD,KAAKE,MAAMsC,kBAAkBY,GAAUF,GAAS,QAE5Jy2E,GAAK,IAAAl2E,OAAQL,EAAR,KAAAK,OAAoBP,IAE3BlD,KAAKE,MAAM8G,YAAY2yE,yCAGXv2E,EAASF,GAErB,GADoBlD,KAAKE,MAAMsC,kBAAkBY,IAAapD,KAAKE,MAAMsC,kBAAkBY,GAAUF,GAASlD,KAAKE,MAAMsC,kBAAkBY,GAAUF,GAAS,KAC9I,CACd,IAAIy2E,EAAK,GAAAl2E,OAAMzD,KAAKE,MAAM67G,gBAAgBpiC,OACtC35E,KAAKoC,MAAMsoH,eACb/wC,GAAK,IAAAl2E,OAAQzD,KAAKoC,MAAMsoH,eAE1B/wC,GAAK,IAAAl2E,OAAQL,EAAR,KAAAK,OAAoBP,GAEzBlD,KAAKE,MAAM8G,YAAY2yE,6DAIMsxC,GAC/BjrH,KAAKiI,SAAS,CACZgjH,mEAKEjrH,KAAKoC,MAAMe,aAAenD,KAAKoC,MAAM8B,YAClClE,KAAKoC,MAAM8jH,aAGdlmH,KAAKE,MAAM8G,YAAYhH,KAAKE,MAAM67G,gBAAgBpiC,MAAM,IAAI35E,KAAKoC,MAAMu7G,iBAAiB,IAAI39G,KAAKoC,MAAMwH,eAFvG5J,KAAKE,MAAM8G,YAAYhH,KAAKE,MAAM67G,gBAAgBpiC,MAAM,IAAI35E,KAAKoC,MAAM07G,eAAenkC,OAOxF35E,KAAKE,MAAM8G,YAAYhH,KAAKE,MAAM67G,gBAAgBpiC,wCAI7C,IAAAqyC,EAAAhsH,KAEDkG,EAAW,GACX+lH,EAAiB,GAkBvB,OAjBIjsH,KAAKoC,MAAM8B,cACb+nH,EAAe1+G,KAAKvN,KAAKD,cAAc8N,WAAW7N,KAAKoC,MAAM07G,eAAewJ,WACxEtnH,KAAKoC,MAAMe,cACRnD,KAAKoC,MAAM8jH,aAELlmH,KAAKoC,MAAMe,aACpB+C,EAASqH,KAAKvN,KAAKE,MAAM67G,gBAAgBpiC,MAAM,IAAI35E,KAAKoC,MAAMu7G,iBAAiB,IAAI39G,KAAKoC,MAAMwH,eAF9F1D,EAASqH,KAAKvN,KAAKE,MAAM67G,gBAAgBpiC,MAAM,IAAI35E,KAAKoC,MAAM07G,eAAenkC,SAM/E35E,KAAKoC,MAAMu7G,kBACbsO,EAAe1+G,KAAKvN,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,YAAY5V,KAAKoC,MAAMu7G,iBAAiB,WAEtG39G,KAAKoC,MAAMwH,eACbqiH,EAAe1+G,KAAKvN,KAAKoC,MAAMwH,eAI/BhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGLgrH,EAAe1qH,OAAO,GACpBqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACPlN,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IAEP2H,EAAA9G,EAAAC,cAAC6C,EAAA,EAADvD,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEsF,KAAM,WACNU,SAAUA,EACVH,KAAMkmH,EACNnpH,SAAU9C,KAAKE,MAAM4C,SACrBmC,YAAajF,KAAK41G,OAAOl1F,KAAK1gB,UAGlC4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GACPG,eAAgB,cAQrBpB,KAAKoC,MAAM+jH,gBAiBRnmH,KAAKoC,MAAMe,YACbyF,EAAA9G,EAAAC,cAACmqH,GAAD7qH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE8+B,UAAWh/B,KAAKoC,MAAM48B,UACtB96B,YAAalE,KAAKoC,MAAM8B,YACxBf,YAAanD,KAAKoC,MAAMe,YACxB+iH,aAAclmH,KAAKoC,MAAM8jH,aACzBt8G,cAAe5J,KAAKoC,MAAMwH,cAC1Bk0G,eAAgB99G,KAAKoC,MAAM07G,eAC3B2I,cAAezmH,KAAKymH,cAAc/lG,KAAK1gB,MACvC29G,iBAAkB39G,KAAKoC,MAAMu7G,iBAC7Bn7G,kBAAmBxC,KAAKE,MAAMsC,kBAC9Bi8G,kBAAmBz+G,KAAKy+G,kBAAkB/9F,KAAK1gB,SAE9CA,KAAKoC,MAAM8B,aAAgBlE,KAAKoC,MAAM8jH,aAMzCt9G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAENjB,KAAKoC,MAAMwoH,eACVhiH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAACumH,GAAA,EAADjnH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEc,UAAW,CACToN,GAAG,CAAC,EAAE,IAERm6G,YAAa,WACbT,SAAU,iCACVU,sBAAuBxoH,KAAKD,cAAcooG,6BAE5Cv/F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJhQ,IAAKrO,KAAKoC,MAAM07G,eAAe9/F,MAC/BtW,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,KAEGhlH,KAAKD,cAAc8N,WAAW7N,KAAKoC,MAAM07G,eAAewJ,UAF3D,cAKF1+G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJpF,GAAI,OACJ/H,MAAO,CAAC,EAAE,IACVkrH,UAAW,SACX/qH,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyI,UAAW,UAEVnO,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW5V,KAAKoC,MAAM8B,YAAY,cAAc,YAK3F0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAACumH,GAAA,EAADjnH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEc,UAAW,CACToN,GAAG,CAAC,EAAE,IAERm6G,YAAa,WACbT,SAAU,iCACVU,sBAAuBxoH,KAAKD,cAAcooG,6BAE5Cv/F,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,GADN,6BAQFpO,KAAKoC,MAAM2oH,iBAAmB/qH,KAAKoC,MAAM8jH,cACvCt9G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACPnrH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM48B,UAAUE,OACnBt2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEgrG,WAAY,EACZluG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPyF,WAAY,UACZ3F,SAAU,CAAC,EAAE,SACb6J,wBAAyB,CAAEC,OAAQxP,KAAKoC,MAAM48B,UAAUE,OAAO5xB,QAAQ,GAAG,sBAI5E1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,WAOAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,SACXC,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,aAExDhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,mBAOnBgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACPnrH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM48B,UACTp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACsqH,GAADhrH,OAAAuB,OAAA,CACE/B,SAAU,GACNb,KAAKE,MAFX,CAGE8+B,UAAWh/B,KAAKoC,MAAM48B,aAExBp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IACPC,WAAY,SACZE,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ0F,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAM2c,QACnCriB,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAJrD,IAMIntB,KAAKoC,MAAM48B,UAAUM,kBAAkBhyB,QAAQ,GANnD,MASF1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEG,GAAI,EACJtD,SAAU,EACVC,WAAY,EACZ0F,WAAYrL,KAAKE,MAAM0G,MAAM0E,MAAM2c,QACnCriB,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WALrD,KAOAvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IACPC,WAAY,SACZE,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACuqH,GAADjrH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEyB,KAAM,KACNd,SAAU,EACVkpH,aAAc,CACZrkH,SAAS,GACTC,WAAW,IACXC,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD6R,UAAWh/B,KAAKoC,MAAM48B,gBAM9Bp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,qBA4BRgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM4oH,oBACTpiH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZwB,GAAI,kBACJ2C,OAAQ,CAAC,OAAO,QAChBlE,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACwqH,GAADlrH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+K,QAAQ,EACRwD,YAAY,EACZ/D,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzB5J,MAAQjB,KAAKE,MAAM4C,SAAW,GAAK,GACnCuC,OAASrF,KAAKE,MAAM4C,SAAW,GAAK,GACpCwG,UAAWtJ,KAAKoC,MAAM4oH,wBAI1BpiH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,+BA2BVgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPyB,GAAI,mBACJtB,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE,MACVE,cAAe,SACfuB,GAAI,yBAEJkG,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACEnrF,MAAO,cACPgsF,WAAc9zG,KAAKE,MAAM4C,SAIrB,KAJgC,CAClCwD,MAAM,CACJipB,UAAU,UAId3mB,EAAA9G,EAAAC,cAACwqH,GAADlrH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE0oH,YAAY,EACZn6G,YAAY,EACZ66G,YAAa,CACXT,UAAU,GACV2D,aAAa,GAEf9hH,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtB++G,aAAc,cACd9+G,WAAY,SAAAP,GACV,OAAI+C,WAAW/C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGX4P,SAAU,wBACVnR,UAAWtJ,KAAKoC,MAAMwpH,mBACtBnC,aAAczpH,KAAKE,MAAM67G,gBAAgB/9F,MACzC/C,aAAY,KAAAxX,OAAOzD,KAAKD,cAAcW,YAAY0M,WAAWpN,KAAKoC,MAAM48B,UAAUG,cAAc,IAChG5yB,OAAQvM,KAAKE,MAAM4C,SAAW,CAAE0J,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,SAI3H/D,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,MACVE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,KACErqG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,CAAC,EAAE,GACP5T,GAAI,CAAC,EAAE,GACPm9G,UAAW,SACXhrH,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACEr/G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyI,UAAW,QAHb,gBAQFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACP/a,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC4Y,EAAA,EAAD,CACEY,WAAY,CACV9Z,EAAE,EACFuN,GAAG,GAELiM,aACE,CAACpQ,MAAM,OAAO+C,MAAM,MAEtBnG,KAAM,mBACNsT,QAAS,CACP,CAAClQ,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErBuP,SAAW,SAAAxS,GAAC,OAAIqhH,EAAKS,iCAAiC9hH,QAI5D/B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,CAAC,EAAE,GACP0mH,UAAW,SACX/qH,eAAgB,SAChBsB,GAAI,yBAEJkG,EAAA9G,EAAAC,cAACgjH,EAAD1jH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAe,GACfsK,SAAU,wBACVC,eAAgB,wBAChBwoG,iBAAkBljH,KAAKoC,MAAMoc,aAC7BxO,mBAAoBhQ,KAAKoC,MAAM6oH,8BAC/B30G,iBAAkBtW,KAAKD,cAAc2zD,oBAAoB,MAAM,WAU7E1zD,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAChCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP1L,GAAI,iBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,uBAOFiD,EAAA9G,EAAAC,cAACI,GAAA,EAADd,OAAAuB,OAAA,CACEL,iBAAkB,GAClB2B,YAAalE,KAAKoC,MAAM8B,YACxBe,YAAa,SAAC/E,GAAD,OAAW8rH,EAAKvJ,cAAcviH,EAAMkD,SAASlD,EAAMgD,QAChEH,UAAW,CACT2C,SAAS,CAAC,OAAO,SAEnB7C,KAAM,CACJ,CACEilB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKoC,MAAMwoH,eAAiB,IAAO,MAElD5jE,OAAO,CACL,CACEv/C,KAAK,eACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACEoC,KAAK,gBAEP,CACEnD,QAAO,EACPmD,KAAK,oBACLvH,MAAM,CACJuF,GAAG,EACHJ,OAAO,YAKf,CACEyiB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACEf,QAAO,EACPmD,KAAK,eA4BX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKoC,MAAMwoH,eAAiB,GAAM,MAEjD5jE,OAAO,CACL,CACEv/C,KAAKzH,KAAKoC,MAAMwoH,eAAX,GAAAnnH,OAA+BzD,KAAKoC,MAAM07G,eAAewJ,SAAzD,eAAiF,OACtFpnH,MAAM,CACJa,aAAa,EACbF,SAASb,KAAKE,MAAM4C,SAAW,EAAI,MAK3C,CACEglB,MAAM9nB,KAAKoC,MAAMwoH,eAAiB,MAAQ,aAC1ClR,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpDi9F,SAAS7yG,KAAKoC,MAAMwoH,gBAA6C,OAA3B5qH,KAAKoC,MAAM8B,YACjDhE,MAAM,CACJe,MAAM,CAACjB,KAAKoC,MAAMwoH,eAAiB,IAAO,IAAK5qH,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEpFxqG,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,YACL4/G,aAAY,KAIlB,CACEv/F,MAAM9nB,KAAKoC,MAAMwoH,eAAiB,MAAQ,aAC1ClR,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpDi9F,SAAS7yG,KAAKoC,MAAMwoH,gBAA6C,OAA3B5qH,KAAKoC,MAAM8B,YACjDhE,MAAM,CACJe,MAAM,CAACjB,KAAKoC,MAAMwoH,eAAiB,IAAO,IAAK5qH,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEpFxqG,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJc,UAAU,CACRqd,GAAG,IAGPgpG,aAAY,KAIlB,CACE/iH,QAAO,EACPwjB,MAAM,YACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,aACpD1V,MAAM,CACJe,MAAM,CAAC,IAAM,KAEf+lD,OAAO,CACL,CACEv/C,KAAK,uBACLvH,MAAM,CACJc,UAAU,CACRqd,GAAG,GAELhZ,OAAO,CAAC,QAAQ,WAMxB,CACEf,QAAO,EACPwjB,MAAM,mBACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,iBAIX,CACEnD,QAAO,EACPwjB,MAAM,kBACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,mBACpD1V,MAAM,CACJe,MAAM,CAAC,IAAKjB,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEjD5jE,OAAO,CACL,CACEv/C,KAAK,oBAkBX,CACEqgB,MAAM,GACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfmf,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAO,SACP1N,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVhI,UAAU,SACVO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAW8rH,EAAKvJ,cAAcviH,EAAMkD,SAASlD,EAAMgD,cAMrElD,KAAKE,MA7NX,CA8NEsC,kBAAmBxC,KAAKoC,MAAMyoH,uBAKpCxpH,OAAOC,KAAKtB,KAAKoC,MAAM0oH,mBAAmBvpH,OAAO,IAAMvB,KAAKE,MAAMwQ,UAClE9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP1L,GAAI,iBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,uBAOFiD,EAAA9G,EAAAC,cAACI,GAAA,EAADd,OAAAuB,OAAA,CACEL,iBAAkB,GAClB2B,YAAalE,KAAKoC,MAAM8B,YACxBe,YAAa,SAAC/E,GAAD,OAAW8rH,EAAKvJ,cAAcviH,EAAMkD,SAASlD,EAAMgD,QAChEH,UAAW,CACT2C,SAAS,CAAC,OAAO,SAEnB7C,KAAM,CACJ,CACEilB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKoC,MAAMwoH,eAAiB,IAAO,MAElD5jE,OAAO,CACL,CACEv/C,KAAK,eACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACEoC,KAAK,gBAEP,CACEnD,QAAO,EACPmD,KAAK,oBACLvH,MAAM,CACJuF,GAAG,EACHJ,OAAO,YAKf,CACEyiB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACEf,QAAO,EACPmD,KAAK,eA4BX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKoC,MAAMwoH,eAAiB,GAAM,MAEjD5jE,OAAO,CACL,CACEv/C,KAAKzH,KAAKoC,MAAMwoH,eAAX,GAAAnnH,OAA+BzD,KAAKoC,MAAM07G,eAAewJ,SAAzD,eAAiF,OACtFpnH,MAAM,CACJa,aAAa,EACbF,SAASb,KAAKE,MAAM4C,SAAW,EAAI,MAK3C,CACEglB,MAAM9nB,KAAKoC,MAAMwoH,eAAiB,MAAQ,aAC1ClR,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpDi9F,SAAS7yG,KAAKoC,MAAMwoH,gBAA6C,OAA3B5qH,KAAKoC,MAAM8B,YACjDhE,MAAM,CACJe,MAAM,CAACjB,KAAKoC,MAAMwoH,eAAiB,IAAO,IAAK5qH,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEpFxqG,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,YACL4/G,aAAY,KAIlB,CACEv/F,MAAM9nB,KAAKoC,MAAMwoH,eAAiB,MAAQ,aAC1ClR,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpDi9F,SAAS7yG,KAAKoC,MAAMwoH,gBAA6C,OAA3B5qH,KAAKoC,MAAM8B,YACjDhE,MAAM,CACJe,MAAM,CAACjB,KAAKoC,MAAMwoH,eAAiB,IAAO,IAAK5qH,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEpFxqG,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJc,UAAU,CACRqd,GAAG,IAGPgpG,aAAY,KAIlB,CACE/iH,QAAO,EACPwjB,MAAM,YACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,aACpD1V,MAAM,CACJe,MAAM,CAAC,IAAM,KAEf+lD,OAAO,CACL,CACEv/C,KAAK,uBACLvH,MAAM,CACJc,UAAU,CACRqd,GAAG,GAELhZ,OAAO,CAAC,QAAQ,WAMxB,CACEf,QAAO,EACPwjB,MAAM,mBACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,gBACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,iBAIX,CACEnD,QAAO,EACPwjB,MAAM,kBACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,mBACpD1V,MAAM,CACJe,MAAM,CAAC,IAAKjB,KAAKoC,MAAMwoH,eAAiB,IAAO,MAEjD5jE,OAAO,CACL,CACEv/C,KAAK,oBAkBX,CACEqgB,MAAM,GACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfmf,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAO,UACP1N,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVhI,UAAU,UACVO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAW8rH,EAAKvJ,cAAcviH,EAAMkD,SAASlD,EAAMgD,cAMrElD,KAAKE,MA7NX,CA8NEsC,kBAAmBxC,KAAKE,MAAMwQ,QAAQ1Q,KAAKoC,MAAM0oH,kBAAkB9qH,KAAKE,MAAMsC,sBAOlFxC,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAM8jH,cAC/Bt9G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,EACPyB,GAAI,eACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAO52G,GAAI,CAAC,EAAE,IAAd,gBACAxF,EAAA9G,EAAAC,cAAC8kH,EAAA,EAADxlH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAenQ,KAAKoC,MAAMK,gBAC1BygH,iBAAkBljH,KAAKoC,MAAMoc,aAC7BsoG,iBAAkB9mH,KAAKoC,MAAMoc,aAAaynB,OAAQ,SAAC6gF,EAAiB7rF,GAElE,OADA6rF,EAAiB7rF,EAAEnpB,OAAO5E,eAAiB+tB,EAAEnpB,OACtCg1G,GACP,IACFjkH,KAAM,CACJ,CACEilB,MAAO9nB,KAAKE,MAAM4C,SAAW,GAAK,OAClC5C,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE5W,KAAK,OACLnD,QAAO,KAIb,CACEwjB,MAAM,SACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,KAER+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,UAIX,CACEnD,QAAO,EACPwjB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,aACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE/Z,QAAO,EACPmD,KAAK,YAIX,CACEqgB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEvmD,KAAK,QACLgH,KAAK,SACL1B,KAAK,CAAC,gBACN7F,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,SAGpB,CACE5E,KAAK,OACL6D,QAAO,EACPmD,KAAK,SACL1B,KAAK,CAAC,eAIZ,CACE+hB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,GACNhZ,OAAO,CAAC,QAAQ,SAGpB,CACEf,QAAO,EACPmD,KAAK,qBAtkCvBmB,EAAA9G,EAAAC,cAAC2qH,GAADrrH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEu+G,kBAAmBz+G,KAAKy+G,kBAAkB/9F,KAAK1gB,SAjCjD4I,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACEj9F,UAAW,CACTguG,SAAS,EACThnH,WAAW,GAEb+gB,YAAa,CACXtY,GAAG,EACH1G,KAAK,QAEP1G,UAAW,CACT8N,GAAG,EACHygB,UAAU,OACVpuB,cAAc,UAEhBqE,KAAM,iCAtXGtD,yECkQR0qH,8MA7QbxqH,MAAQ,CACNe,YAAY,KACZ0pH,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7BhtH,cAAgB,OA4HhBitH,sDAAkB,SAAAvrG,EAAOorG,GAAP,IAAAC,EAAAC,EAAA9uF,EAAA,OAAAxL,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACZq7G,EAAoB,KAClBC,EAA6B,GACXloH,EAAK9E,cAAc6V,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/EpU,QAAS,SAAA0B,GACnBA,IAAU2pH,IACPC,IACHA,EAAoB5pH,GAEtB6pH,EAA2B7pH,GAAS,CAClCA,aAKA+6B,EAAYp5B,EAAK9E,cAAc6V,gBAAgB,CAAC,iBACpCi3G,IAChBE,EAA2B9uF,GAAa,CACtC/6B,MAAM+6B,IAIVp5B,EAAKoD,SAAS,CACZ4kH,oBACAE,8BACA,WACAloH,EAAKooH,gBAAgBH,KA3BP,wBAAAnrG,EAAAhP,SAAA8O,EAAAzhB,iEA+BlBitH,sDAAkB,SAAA/qG,EAAO4qG,GAAP,OAAAr6F,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OAChB5M,EAAKoD,SAAS,CACZ6kH,sBAFc,wBAAAzqG,EAAA1P,SAAAuP,EAAAliB,iEAMlBysB,KAAO,WACL,IAAMjf,EAAgB3I,EAAK9E,cAAc6rD,mBACnC+oD,EAAkB9vG,EAAKzC,MAAM6zG,aAC7BiX,EAAY,CAChBjvF,UAAUp5B,EAAKzC,MAAMyqH,kBACrBjjH,cAAc/E,EAAKzC,MAAM0qH,kBACzBK,SAAQ,iBAAA1pH,OAAkBoB,EAAKzC,MAAMyqH,kBAA7B,KAAAppH,OAAkDoB,EAAKzC,MAAM0qH,oBAEjElY,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAcyX,EAAU1/G,GAAiB,KAGzF,oBAA3BmnG,EAAgBe,QACzBf,EAAgBe,OAAOd,EAAW,KAAKsY,GAIzCroH,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,YACbF,WAAU,GAAA3b,OAAKoB,EAAKzC,MAAMyqH,kBAAhB,KAAAppH,OAAqCoB,EAAKzC,MAAM0qH,iGAjLxD9sH,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,6KAMzCF,KAAKoC,MAAMyqH,mBAAsB7sH,KAAKoC,MAAM0qH,4DACxC,UAGQ,aACX7W,EAAej2G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,YADnD,eAEAke,SAAWmiF,EAAawB,kBAEjCjqG,EAAgBxN,KAAKD,cAAc6rD,mBACnC6rD,EAAkBxB,EAAawB,gBAErCp2G,OAAOC,KAAKm2G,GAAiBj2G,QAAQ,SAAC85B,EAAIw0B,GAIxC,OAFqBx0B,EAAIqwB,MAAM,KAAK72C,MAAM5H,eAGxC,IAAK,KACH,IAAMwqG,EAAQ,UAAAj0G,OAbL,YAaK,KAAAA,OAAyBqsD,EAAzB,KAAArsD,OAA8BpD,EAAK+B,MAAMyqH,kBAAzC,KAAAppH,OAA8DpD,EAAK+B,MAAM0qH,mBAEvF,IAAK99F,SAASC,eAAeyoF,GAAU,CACrC,IAAM/3B,EAAS3wD,SAASjtB,cAAc,UAChC41G,EAAuBF,EAAgBn8E,GACvCtzB,EAAW2vG,GAAwBA,EAAqB3vG,SAAW2vG,EAAqB3vG,SAAW,KACnG4vG,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnB35E,UAAU59B,EAAK+B,MAAMyqH,kBACrBjjH,cAAcvJ,EAAK+B,MAAM0qH,kBACzBK,SAAQ,iBAAA1pH,OAAkBpD,EAAK+B,MAAMyqH,kBAA7B,KAAAppH,OAAkDpD,EAAK+B,MAAM0qH,oBAElDt/G,EAAcyoG,GAGjCjuG,GAAgC,oBAAbA,IACjB23E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5B93E,MAIJ23E,EAAOI,OAAS/3E,GAIpB23E,EAAOj9E,GAAKg1G,EACZ/3B,EAAO72E,UAAP,UAAArF,OA5CO,aA6CPk8E,EAAOtxE,IAAMitB,EACbqkD,EAAOyH,OAAQ,EAEXuwB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAc53B,YAAYN,GAE/C3wD,SAAS8oF,KAAK73B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAMo4B,EAAY,cAAAt0G,OAxDT,YAwDS,KAAAA,OAA6BqsD,GAE/C,IAAK9gC,SAASC,eAAe8oF,GAAc,CACzC,IAAMzxG,EAAQ0oB,SAASjtB,cAAc,QAErCuE,EAAM5D,GAAKq1G,EACXzxG,EAAM0gB,IAAM,aACZ1gB,EAAM2gB,KAAOqU,EAEbtM,SAAS8oF,KAAK73B,YAAY35E,QASpCtG,KAAKiI,SAAS,CACZguG,+QAKFj2G,KAAKI,qBACCJ,KAAKotH,gRAILP,EAAoBxrH,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiB,YAEtExQ,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAjE,eAAAwR,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAkF,SAAA+R,EAAO/f,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,UAChFtO,EAAcqH,EAAKtK,MAAMs7G,UAAUhrG,gBAAgBtN,GACnCsH,EAAKzK,cAAco5B,kBAAkBh2B,EAAYD,SACjDC,EAAY2lC,IAHoD,CAAA3lB,EAAA1R,KAAA,eAAA0R,EAAA1R,KAAA,EAI9EjH,EAAKtK,MAAM2oC,aAAa1lC,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,KAJI,wBAAA3lB,EAAAxQ,SAAAsQ,EAAAjjB,SAAlF,gBAAA4S,GAAA,OAAAoP,EAAAnP,MAAA7S,KAAA8S,YAAA,WAQN9S,KAAKgtH,gBAAgBH,wLAGExqH,EAAUC,2EACjCtC,KAAKI,YAECitH,EAAmB/qH,EAAUuqH,oBAAsB7sH,KAAKoC,MAAMyqH,kBAC9DS,EAAmBhrH,EAAUwqH,oBAAsB9sH,KAAKoC,MAAM0qH,mBAC/DO,GAAqBC,IAAqBttH,KAAKoC,MAAMyqH,mBAAqB7sH,KAAKoC,MAAM0qH,mBACxF9sH,KAAKutH,wJAgEA,IAAArV,EAAAl4G,KAEP,OAAKA,KAAKoC,MAAMyqH,kBAKdjkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,yBAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+vB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKgtH,gBACfpjH,cAAe5J,KAAKoC,MAAMyqH,kBAC1Br8G,gBAAiBxQ,KAAKE,MAAMs7G,UAAUhrG,oBAIxCxQ,KAAKoC,MAAM2qH,4BAA8B/sH,KAAKoC,MAAM0qH,mBAClDlkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,6BAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+vB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKitH,gBACfrjH,cAAe5J,KAAKoC,MAAM0qH,kBAC1Bt8G,gBAAiBxQ,KAAKoC,MAAM2qH,+BAIpCnkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPG,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACRtB,KAAM,SACNR,aAAc,EACdC,UAAW,OACXrB,QAAU,SAAAiB,GAAC,OAAImxG,EAAKzrF,KAAK1lB,IACzBK,UAAYpH,KAAKoC,MAAMyqH,oBAAsB7sH,KAAKoC,MAAM0qH,mBAP1D,kBAxDC,YArMW5qH,wBCkyBTsrH,8MA5xBbprH,MAAQ,CACNqL,MAAM,GACNwzG,MAAM,KACN/C,QAAQ,KACRuP,YAAY,GACZ1U,WAAW,KACXhF,YAAY,KACZ5wG,YAAY,KACZg6G,YAAY,KACZuQ,aAAY,EACZ1tF,aAAa,KACbs6C,aAAa,KACbqzC,cAAa,EACb7sF,cAAc,KACdl3B,cAAc,KACdgkH,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACftQ,eAAe,KACfjC,eAAe,KACfwS,eAAe,KACf/O,eAAc,EACdj0B,eAAe,KACfv6E,gBAAgB,KAChB6sG,gBAAe,EACf2Q,iBAAiB,KACjB9O,kBAAiB,EACjB+O,kBAAkB,KAClBzjF,kBAAkB,KAClB+yE,mBAAmB,KACnBgE,oBAAoB,KACpBc,sBAAqB,EACrB6L,yBAAwB,KAI1BnuH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YACLJ,KAAKiI,SAAS,CACZu1G,eAAe,SACf,WACAn9G,EAAK8tH,mbAOgB9rH,EAAUC,sFACjCtC,KAAKI,YAEC8hH,EAAwB5/G,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,eAChE4Q,EAA0B9rH,EAAU48G,mBAAqBl/G,KAAKoC,MAAM88G,iBACpE4B,EAAqB7wG,KAAKC,UAAU7N,EAAUc,eAAiB8M,KAAKC,UAAUlQ,KAAKE,MAAMiD,aACzFkrH,EAAsBp+G,KAAKC,UAAU7N,EAAUi4E,gBAAkBrqE,KAAKC,UAAUlQ,KAAKE,MAAMo6E,eAC7F4nC,GAAyBkM,GAA2BtN,IACtD9gH,KAAKiI,SAAS,CACZgmH,kBAAkB,KAClBC,yBAAwB,GACxB,WACA1jH,EAAK2jH,WAAWjM,KAIhBmM,GACFruH,KAAKs/G,0TAIiBvG,iCAAW,KAE/BmF,EAAU,MAEVnF,IAAc/4G,KAAKD,cAAc8R,MAAMknG,GAAYtjG,GAAG,oBACxDsjG,EAAa/4G,KAAKD,cAAc8R,MAAMknG,QAC9B/4G,KAAKoC,MAAMo7G,sBACZ,iBAmBA,4CAlBG8Q,EAAoBtuH,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAM0+B,cAAc9gC,KAAKE,MAAMiD,YAAYtC,UAAUwR,KAAK0mG,GACvHwV,EAAqBvuH,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMosH,mBAAmBxuH,KAAKE,MAAMo6E,aAAaz5E,UAAUwR,KAAK0mG,GAC9H0V,EAAwBH,EAAkBhqG,IAAIiqG,GAC9CG,EAAgB1uH,KAAKoC,MAAMooC,kBAAkBn9B,MAAM,OAAOA,MAAMohH,GAEhEE,EAAmBL,EAAkBjhH,MAAMrN,KAAKoC,MAAM2oF,gBACtD6jC,EAAoBF,EAAcrhH,MAAM,KAAKA,MAAMrN,KAAKoC,MAAM4rH,kBAC9DjiF,EAAM4iF,EAAiBl5G,GAAG,GAAKm5G,EAAkBtqG,IAAIqqG,GAAkBthH,MAAM,KAAOrN,KAAKD,cAAc8R,MAAM,GAGnHqsG,EAAU,CACRnwG,KAAK,eACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,sBAAA/B,OAAuBs1G,EAAWzrG,QAAQ,GAA1C,KAAA7J,OAAgDzD,KAAKE,MAAMiD,YAAYD,MAAvE,mCAAAO,OAA8GirH,EAAcphH,QAAQ,GAApI,KAAA7J,OAA0IzD,KAAKE,MAAMo6E,aAAat5C,YAAlK,mDAAAv9B,OAA+NsoC,EAAIz+B,QAAQ,GAA3O,sJAIAuhH,EAAuB7uH,KAAKD,cAAcy0D,qBAAqBukD,EAAW/4G,KAAKE,MAAMiD,YAAYtC,oBAC5Eb,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,eAAe,CAAConH,GAAsB,CAACziH,KAAKpM,KAAKE,MAAMwQ,yBAAlJo+G,SACJA,EAAiB9uH,KAAKD,cAAcW,YAAYV,KAAKD,cAAcsV,iBAAiBy5G,EAAe9uH,KAAKE,MAAMiD,YAAYtC,WAC1Hq9G,EAAU,CACRnwG,KAAK,aACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wBAAA/B,OAAyBs1G,EAAWzrG,QAAQ,GAA5C,KAAA7J,OAAkDzD,KAAKE,MAAMiD,YAAYD,MAAzE,mCAAAO,OAAgHqrH,EAAhH,KAAArrH,OAAkIzD,KAAKE,MAAMo6E,aAAat5C,YAA1J,+EAQZhhC,KAAKiI,SAAS,CACZi2G,4JAIiBrsF,GACnB,IAAIxS,EAAa,KACbi5C,EAAe,GAEnB,OADAzmC,EAAS7xB,KAAKD,cAAcw3B,KAAK1F,GACzB7xB,KAAKoC,MAAMo7G,gBACjB,IAAK,QACHn+F,EAAa,eACbi5C,EAAe,CAACzmC,GAClB,MACA,IAAK,WACHxS,EAAa,mBACbi5C,EAAe,CAACzmC,GAKpB,MAAO,CACLxS,aACAi5C,mEAIuBzmC,EAAOwnC,GAChC,IAAIh6C,EAAa,KACbi5C,EAAe,GACXyJ,EAAoB1I,EAApB0I,OAAQrkB,EAAY2b,EAAZ3b,EAAGtlB,EAASihC,EAATjhC,EAAGztB,EAAM0uD,EAAN1uD,EAEtB,OADAknB,EAAS7xB,KAAKD,cAAcw3B,KAAK1F,GACzB7xB,KAAKoC,MAAMo7G,gBACjB,IAAK,QACHn+F,EAAa,8BACbi5C,EAAe,CAACzmC,EAAQkwC,EAAQp3D,EAAG+yC,EAAGtlB,GACxC,MACA,IAAK,WACH/Y,EAAa,mBACbi5C,EAAe,CAACzmC,GAKpB,MAAO,CACLxS,aACAi5C,4OAKI7qD,EAAQ,YASJsU,QAAQqD,IAAI,CACpBplB,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,eACpEzH,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,iBACpEzH,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,sBACpEzH,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,uBACpEzH,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,mBAAmB,GAAG,CAAC2E,KAAKpM,KAAKE,MAAMwQ,UAC3G1Q,KAAKoC,MAAM0+B,cAAcrrB,GAAG,GAAKzV,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,eAAe,CAACzH,KAAKD,cAAcs0D,aAAar0D,KAAKoC,MAAM0+B,gBAAgB,CAAC10B,KAAKpM,KAAKE,MAAMwQ,UAAY1Q,KAAKD,cAAc8R,MAAM,YAIxO,gCAhBEk9G,OACAC,OACAR,OACAS,OACApB,OACAqB,OAUIC,EAA0B,GACvBriH,EAAI,EAAGA,EAAImiH,EAAsBniH,IACxCqiH,EAAwB5hH,KAAKvN,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,kBAAkB,CAACqF,sBAGxFiV,QAAQqD,IAAI+pG,WAApCC,SAEAC,EAAervH,KAAKD,cAAcsV,iBAAiBrV,KAAKD,cAAc8R,MAAMk9G,GAAa18G,KAAKrS,KAAKD,cAAc8R,MAAMm9G,IAAgBhvH,KAAKE,MAAMiD,YAAYtC,UACpK4M,EAAMF,KAAK,CACTua,MAAM,gBACNjd,MAAM7K,KAAKD,cAAcW,YAAY0M,WAAWiiH,IAAe,IAAIrvH,KAAKE,MAAMo6E,aAAat5C,cAGvFsuF,EAAgBtvH,KAAKD,cAAcsV,iBAAiBm5G,EAAmBxuH,KAAKE,MAAMo6E,aAAaz5E,UACrG4M,EAAMF,KAAK,CACTua,MAAM,iBACNjd,MAAM7K,KAAKD,cAAcW,YAAY0M,WAAWkiH,IAAgB,IAAItvH,KAAKE,MAAMiD,YAAYD,QAGvFqsH,EAAgBvvH,KAAKD,cAAcsV,iBAAiB05G,EAAY/uH,KAAKE,MAAMiD,YAAYtC,UAC7F4M,EAAMF,KAAK,CACTua,MAAM,iBACNjd,MAAM7K,KAAKD,cAAcW,YAAY0M,WAAWmiH,IAAgB,IAAIvvH,KAAKE,MAAMo6E,aAAat5C,cAGxFwuF,EAAkBxvH,KAAKD,cAAcsV,iBAAiB25G,EAAchvH,KAAKE,MAAMiD,YAAYtC,UACjG4M,EAAMF,KAAK,CACTua,MAAM,mBACNjd,MAAM7K,KAAKD,cAAcW,YAAY0M,WAAWoiH,IAAkB,IAAIxvH,KAAKE,MAAMo6E,aAAat5C,cAG1FyuF,EAAiBL,EAAgB7tH,OAAO,EAAI6tH,EAAgBnpF,OAAQ,SAACypF,EAAQt3F,GAEjF,OADAs3F,EAAU19G,KAAKqE,IAAI+hB,EAAEu3F,SAASD,IAE9B,GAAK,KAED5B,EAAiB2B,EAAc,GAAAhsH,OAAMzD,KAAKD,cAAciT,YAA2B,IAAfy8G,GAAqB52C,MAAMziE,OAAO,wBAAvE,QAAuG,OAC5I3I,EAAMF,KAAK,CACTua,MAAM,mBACNjd,MAAMijH,IAGFH,EAAe8B,GAAiC,IAAfA,GAAqBx8G,KAAK04B,MAE3DnB,EAAoB4kF,EAAgBnpF,OAAQ,SAACuE,EAAkBpS,GACnE,GAAI8/E,EAAKn4G,cAAc8R,MAAMumB,EAAEw3F,qBAAqBn6G,GAAG,IAAMyiG,EAAKn4G,cAAc8R,MAAMumB,EAAEy3F,aAAap6G,GAAG,GAAG,CACzG,IAAM60B,EAAkB4tE,EAAKn4G,cAAcsV,iBAAiB+iB,EAAEw3F,oBAAoB1X,EAAKh4G,MAAMo6E,aAAaz5E,UAAUyjB,IAAI8T,EAAEy3F,aACrHvlF,EAAgB9pC,UACnBgqC,EAAoBA,EAAkBn4B,KAAKi4B,IAG/C,OAAOE,GACPxqC,KAAKD,cAAc8R,MAAM,IAE3BpE,EAAMF,KAAK,CACTua,MAAM,qBACNjd,MAAM7K,KAAKD,cAAcW,YAAY8pC,EAAkBn9B,MAAM,QAAQ,IAAIrN,KAAKE,MAAMo6E,aAAat5C,YAAY,WAGzGysF,EAAc,GAEd3sF,EAAgB9gC,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAM0+B,cAAc9gC,KAAKE,MAAMiD,YAAYtC,UACpGivH,EAAehvF,EAAcxc,IAAIgrG,GAEjC1B,EAAmBC,GAAkB7tH,KAAKD,cAAc8R,MAAMg8G,EAAe,IAAIp4G,GAAG,GAAKzV,KAAKD,cAAc8R,MAAMG,KAAKqE,IAAI,EAAEjJ,WAAWpN,KAAKD,cAAc8R,MAAMq9G,GAAkB5qG,IAAItkB,KAAKD,cAAc8R,MAAMg8G,EAAe,KAAKxgH,MAAMrN,KAAKE,MAAMo6E,aAAay1C,kBAAoB/vH,KAAKD,cAAc8R,MAAM,GAE/Sm+G,EAA8BhwH,KAAKD,cAAc8R,MAAM,GAAGyS,IAAItkB,KAAKE,MAAMo6E,aAAay1C,eAAe1iH,MAAMugH,GAC3GqC,EAAwBzlF,EAAkBn9B,MAAMyiH,GAAcziH,MAAM2iH,GACpEtB,EAAgBuB,EAAsB5iH,MAAM,OAU5CshH,EAAmB7tF,EAAczzB,MAAMrN,KAAKoC,MAAM2oF,gBAClD6jC,EAAoBF,EAAcrhH,MAAM,KAAKA,MAAMrN,KAAKoC,MAAM4rH,kBAC9DjiF,EAAM4iF,EAAiBl5G,GAAG,GAAKm5G,EAAkBtqG,IAAIqqG,GAAkBthH,MAAM,KAAOrN,KAAKD,cAAc8R,MAAM,GAInH47G,EAAYlgH,KAAK,CACfua,MAAM,MACNjd,MAAK,GAAApH,OAAIsoC,EAAIz+B,QAAQ,GAAhB,KACLymG,YAAY,wDAGd0Z,EAAYlgH,KAAK,CACfua,MAAM,QACNjd,MAAK,GAAApH,OAAIqsH,EAAaziH,MAAM,KAAKC,QAAQ,GAApC,KACLymG,YAAY,qCAGd0Z,EAAYlgH,KAAK,CACfua,MAAM,aACNjd,MAAK,GAAApH,OAAImqH,EAAiBtgH,QAAQ,GAA7B,KACLymG,YAAW,gCAAAtwG,OAAiCzD,KAAKE,MAAMo6E,aAAa41C,aAAzD,uBAAAzsH,OAA2FzD,KAAKE,MAAMo6E,aAAay1C,cAAnH,yBAGPI,EAAiBnwH,KAAKD,cAAcW,YAAYV,KAAKD,cAAcsV,iBAAiB65G,EAAiBlvH,KAAKE,MAAMiD,YAAYtC,WAClI4sH,EAAYlgH,KAAK,CACfua,MAAM,UACNjd,MAAMslH,EAAe,IAAInwH,KAAKE,MAAMo6E,aAAat5C,YACjD+yE,YAAY,yGAKM,EAEpB/zG,KAAKiI,SAAS,CACZwF,QACAigH,aAJkB,EAKlBD,cACAqC,eACAnC,eACA0B,eACAvB,iBACAD,iBACAD,mBACApjF,oBACAgkF,qBACAyB,wBACAD,oNAImB9Q,mEACrBl/G,KAAKiI,SAAS,CACZi3G,0JAIM1B,GACRx9G,KAAKiI,SAAS,CACZu1G,wGAIuB5rG,EAAGigB,EAAOjS,8FAE/Bs+F,EAAU,UACNl+G,KAAKoC,MAAMo7G,sBACZ,iBAWA,2CAVG4S,EAAkBx+G,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8+G,EAAK9rH,MAAMiD,YAAY8J,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMo6E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9emjH,EAAeD,EAAkBpwH,KAAKD,cAAcsV,iBAAiBnD,SAASk+G,EAAgB7lH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GACzKqsG,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wCAAA/B,OAAyC4sH,EAAa/iH,QAAQ,GAA9D,KAAA7J,OAAoEzD,KAAKE,MAAM0J,cAA/E,iDAIA0mH,EAAoB1+G,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8+G,EAAK9rH,MAAMiD,YAAY8J,QAAQC,gBAAkB,KACtKqjH,EAAiBD,EAAoBtwH,KAAKD,cAAcsV,iBAAiBnD,SAASo+G,EAAkB/lH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GACzK0vB,EAAoB,CACxBt0B,QAAQjN,KAAKD,cAAco5B,kBAAkBn5B,KAAKE,MAAMo6E,aAAat5C,aAAayK,UAE9E+kF,EAAqB5+G,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAKA,EAAI/mC,QAAQC,gBAAkBq0B,EAAkBt0B,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,mBAAsB,KAC3QujH,EAAkBD,EAAqBxwH,KAAKD,cAAcsV,iBAAiBnD,SAASs+G,EAAmBjmH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAClLqsG,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,2CAAA/B,OAA4C8sH,EAAejjH,QAAQ,GAAnE,KAAA7J,OAAyEzD,KAAKE,MAAM0J,cAApF,mCAAAnG,OAAmIgtH,EAAgBnjH,QAAQ,GAA3J,KAAA7J,OAAiKzD,KAAKE,MAAMo6E,aAAat5C,YAAzL,gFAOmB,EAE7BhhC,KAAKiI,SAAS,CACZi2G,UACAmE,sBAJ2B,GAK3B,WACA2J,EAAKmC,sTAIQjM,kCACTn6G,EAAW,GAEX2rB,EAAiB,CACrBzmB,QAAQjN,KAAKD,cAAco5B,kBAAkB,OAAOsS,UAEhDlK,EAAoB,CACxBt0B,QAAQjN,KAAKD,cAAco5B,kBAAkBn5B,KAAKE,MAAMo6E,aAAat5C,aAAayK,mBAQ1E1pB,QAAQqD,IAAI,CACpBplB,KAAKD,cAAc+pF,2BAA2B9pF,KAAKE,MAAM0J,eACzD5J,KAAKD,cAAckrF,2BAA2Bv3D,EAAe6N,GAC7DvhC,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAMwQ,SACvE1Q,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,iBAAiB,CAACzH,KAAKE,MAAMwQ,+CARjGq6E,OACAijC,OACAhuF,OACAc,OAQF/4B,EAASo1G,YAAcn9G,KAAKD,cAAc8R,MAAM,GAChD9J,EAASi4B,aAAgBhgC,KAAKD,cAAc8R,MAAMmuB,GAAcx/B,QAAmDR,KAAKD,cAAc8R,MAAM,GAAlE7R,KAAKD,cAAc8R,MAAMmuB,GACnGj4B,EAAS+4B,cAAiB9gC,KAAKD,cAAc8R,MAAMivB,GAAetgC,QAAoDR,KAAKD,cAAc8R,MAAM,GAAnE7R,KAAKD,cAAc8R,MAAMivB,GACrG/4B,EAASgjF,eAAkB/qF,KAAKD,cAAc8R,MAAMk5E,GAAgBvqF,QAAqDR,KAAKD,cAAc8R,MAAM,GAApE7R,KAAKD,cAAc8R,MAAMk5E,GACvGhjF,EAASimH,iBAAoBhuH,KAAKD,cAAc8R,MAAMm8G,GAAkBxtH,QAAuDR,KAAKD,cAAc8R,MAAM,GAAtE7R,KAAKD,cAAc8R,MAAMm8G,QAEnGhuH,KAAKoC,MAAMo7G,sBACZ,kBAkBA,6CAjBHz1G,EAASi3G,eAAgB,EACzBj3G,EAASs1G,gBAAiB,EAC1Bt1G,EAASo1G,YAAcp1G,EAASi4B,aAChCj4B,EAASw1G,mBAAqB,uDAC9Bx1G,EAASkmH,kBAAoB,CAC3ByC,cAAc,CACZjpH,KAAK,MACLvE,MAAM,MACNrC,SAAS,GACT8vH,WAAW,WAEbC,aAAavvH,OAAA84B,EAAA,EAAA94B,CAAA,CACXwvH,aAAa,YACV7wH,KAAKE,MAAMiD,kDAKlB4E,EAASi3G,eAAgB,EACzBj3G,EAASs1G,gBAAiB,EAC1Bt1G,EAASw1G,mBAAqB,GAC9Bx1G,EAASo1G,YAAcn9G,KAAKD,cAAcsV,iBAAiBtN,EAAS+4B,cAAc9gC,KAAKE,MAAMiD,YAAYtC,UACzGkH,EAASkmH,kBAAoB,CAC3ByC,cAAc,CACZjpH,KAAK,MACLvE,MAAM,MACNrC,SAAS,GACT8vH,WAAW,WAEbC,aAAavvH,OAAA84B,EAAA,EAAA94B,CAAA,CACXwvH,aAAa,YACV7wH,KAAKE,MAAMiD,+EAQlB4E,EAASo1G,YAAY/oF,IAAI,KAC3BrsB,EAASmmH,yBAA0B,GAGjChM,IACFn6G,EAASm2G,QAAU,KACnBn2G,EAASs6G,sBAAuB,GAGlCriH,KAAKiI,SAASF,EAAS,WACrB+oH,EAAKC,kJAIA,IAAAC,EAAAhxH,KAEDixH,EAAY,SAAA/wH,GAChB,IAAMob,EAASja,OAAA84B,EAAA,EAAA94B,CAAA,CACbI,EAAE,EACF2M,GAAG,EACHnN,MAAM,OACHf,EAAMob,WAEX,OACE1S,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACEnrF,MAAO5nB,EAAM4nB,MACbxM,UAAWA,EACXw4F,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbiuG,iBAAkB,CAChB53F,GAAG,EACHvW,GAAG,GAELsuG,YAAa7zG,EAAM6zG,aAEnBnrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEoZ,GAAI,EACJtW,SAAU,CAAC,EAAE,GACbE,MAAO,aACH1F,EAAMye,WAETze,EAAM2K,SAMTy3G,EAAwC,UAA9BtiH,KAAKoC,MAAMo7G,eACrB0T,EAA0C,aAA9BlxH,KAAKoC,MAAMo7G,eACvB2T,EAAwC,UAA9BnxH,KAAKoC,MAAMo7G,eACrB4T,EAAWpxH,KAAKoC,MAAMo7G,eAE5B,OACE50G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGPjB,KAAKE,MAAMiD,aAAenD,KAAKE,MAAMiD,YAAYkuH,UAC/CzoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,cAKAxF,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACEplG,GAAI,EACJpW,MAAO,OACPC,WAAY,OACZohB,KAAMjnB,KAAKE,MAAMiD,YAAYkuH,UAE7BzoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,OACPU,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGd1G,KAAKE,MAAMiD,YAAYkuH,YAOhCrxH,KAAKoC,MAAM0+B,eAAiB9gC,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM0+B,eAAerrB,GAAG,IAAMzV,KAAKoC,MAAMqrH,YAAYlsH,OAAO,GACpHqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,eAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdpB,KAAKoC,MAAMqrH,YAAYxqH,IAAK,SAACquH,EAAStrH,GAAV,OAC1B4C,EAAA9G,EAAAC,cAACkvH,EAAD5vH,OAAAuB,OAAA,CACEkB,IAAG,eAAAL,OAAiBuC,GACpBsV,UAAW,CACTlN,GAAG,CAAC,EAAE,GACNiQ,GAAG,CAAC,EAAErY,EAAMgrH,EAAK5uH,MAAMqrH,YAAYlsH,OAAO,EAAI,EAAI,GAClDN,MAAM,CAAC,EAAE,SAEX0d,UAAW,CACTjZ,SAAS,CAAC,EAAE,KAEV4rH,QAShBtxH,KAAKE,MAAM0J,eACThB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,kBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOk9G,EAAU,EAAI,GAEvBrhH,MAAO,CAAC,EAAE,OACVk3G,QAAS,QACTK,SAAU,kBACV11G,SAAU9C,KAAKE,MAAM4C,SAErBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUykG,EACVr9G,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,YAEpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAO8rH,EAAY,EAAI,GAEzBjwH,MAAO,CAAC,EAAE,OACVk3G,QAAS,WACTK,SAAU,oBACV11G,SAAU9C,KAAKE,MAAM4C,SAErBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUqzG,EACVjsH,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,eAEpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAO+rH,EAAU,EAAI,GAEvBlwH,MAAO,CAAC,EAAE,OACVk3G,QAAS,QACTK,SAAU,mBAEV11G,SAAU9C,KAAKE,MAAM4C,SACrBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUszG,EACVlsH,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,aAInCjP,GAAW4O,EACV5O,GAAWtiH,KAAKoC,MAAMurH,aACpB/kH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,UACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,OAMOnO,KAAKE,MAAM0J,cANlB,6BAM2D5J,KAAKoC,MAAM0rH,eANtE,OAUD9tH,KAAKE,MAAMiD,aAAenD,KAAKoC,MAAM+6G,aAAen9G,KAAKoC,MAAMsrH,aAAe1tH,KAAKE,MAAMo6E,aAC5F1xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPmN,GAAI,CAAC,EAAE,IAEPxF,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,CACEqc,MAAO,MACHjf,KAAKE,MAFX,CAGE4R,OAAQs/G,EACRnQ,MAAOjhH,KAAKoC,MAAM6+G,MAClB/C,QAASl+G,KAAKoC,MAAM87G,QACpB/6G,YAAanD,KAAKE,MAAMiD,YACxB68B,aAAchgC,KAAKoC,MAAM+6G,YACzB7iC,aAAct6E,KAAKE,MAAMo6E,aACzB0kC,cAAeh/G,KAAKoC,MAAM48G,cAC1B3B,eAAgBr9G,KAAKoC,MAAMi7G,eAC3Br1G,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAC/B2B,iBAAkBl/G,KAAKk/G,iBAAiBx+F,KAAK1gB,MAC7CuhH,oBAAqBvhH,KAAKoC,MAAMm/G,oBAChCjC,oBAAqBt/G,KAAKs/G,oBAAoB5+F,KAAK1gB,MACnD6f,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,MACrDsgH,2BAA4BtgH,KAAKsgH,2BAA2B5/F,KAAK1gB,QAEjE4I,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGTm0G,EAAO,sBAAA7+G,OACiBzD,KAAKE,MAAM0J,cAD5B,oBAEHsnH,GAAS,6BAAAztH,OACkBzD,KAAKE,MAAM0J,cAD7B,sBAUzBhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,qBAIV2rH,GACFvoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPqF,MAAO,CACLiyG,SAAS,QAEXn3G,eAAgB,iBAGZpB,KAAKoC,MAAMqL,OAAUzN,KAAKoC,MAAMqL,MAAMlM,OAmBpCvB,KAAKoC,MAAMqL,MAAMxK,IAAK,SAACquH,EAAStrH,GAAV,OACxB4C,EAAA9G,EAAAC,cAACkvH,EAAD5vH,OAAAuB,OAAA,CACEkB,IAAG,SAAAL,OAAWuC,GACdsV,UAAW,CACTra,MAAM,CAAC,EAAE,SAEPqwH,MAxBN1oH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,gCAtwBRtD,gHCwDT+kH,8MAzDblnH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAUC,mEACjCtC,KAAKI,kJAIL,IAAMkb,EAASja,OAAA84B,EAAA,EAAA94B,CAAA,CACbI,EAAE,EACF2M,GAAG,EACHnN,MAAM,OACHjB,KAAKE,MAAMob,WAGhB,OACE1S,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAWA,EACXwM,MAAO9nB,KAAKE,MAAM4nB,MAClBgsF,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbiuG,iBAAkB,CAChB53F,GAAG,EACHvW,GAAG,GAELsuG,YAAa/zG,KAAKE,MAAM6zG,aAGtB/zG,KAAKE,MAAM2K,MACTjC,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEoZ,GAAI,EACJtW,SAAU,CAAC,EAAE,GACbE,MAAO,aACH5F,KAAKE,MAAMye,WAEd3e,KAAKE,MAAM2K,OAEX7K,KAAKE,MAAM2b,UAAY,aArDnB3Z,aCgKJsvH,8MA9JbpvH,MAAQ,CACNqvH,qBAAoB,EACpBpP,sBAAqB,KAIvBtiH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kQAILJ,KAAK6H,gMAGkBxF,EAAUC,+EACjCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDghH,EAAyBzhH,KAAKC,UAAU7N,EAAUke,QAAQ8Y,YAAcppB,KAAKC,UAAUlQ,KAAKE,MAAMqgB,QAAQ8Y,UAC1Gs4F,EAAqB3xH,KAAKE,MAAMyxH,oBAAsBtvH,EAAUsvH,qBAAuB3xH,KAAKE,MAAMyxH,mBAClGzK,EAAuBlnH,KAAKE,MAAMgnH,sBAAwB7kH,EAAU6kH,uBAAyBlnH,KAAKE,MAAMgnH,sBAC1GwK,GAA0BrgG,GAAkBsgG,GAAsBzK,IACpElnH,KAAK6H,kRAMF7H,KAAKE,MAAMwQ,SAAY1Q,KAAKE,MAAMgnH,+DAC9B,iBAGH0K,EAAsB5xH,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa,QAAQ,cAC/Ei8G,EAAgB7xH,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,sBAErGmM,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAagpF,EAAcpqH,KAAKoqH,EAAc5kH,QAAQ4kH,EAAc/oF,8BAOvE/mB,QAAQqD,IAAI,CACpBplB,KAAKD,cAAc2yB,gBAAgBm/F,EAAcpqH,KAAKzH,KAAKE,MAAMwQ,SACjE1Q,KAAKD,cAAc2yB,gBAAgBk/F,EAAoB5xH,KAAKE,MAAMwQ,SAClE1Q,KAAKD,cAAcolE,aAAaysD,EAAoBC,EAAc5kH,QAAQjN,KAAKE,MAAMwQ,qDANrFohH,OACAC,OACAC,OAOFD,EAAc/xH,KAAKD,cAAc8R,MAAMkgH,GACvCD,EAAiB9xH,KAAKD,cAAc8R,MAAMigH,GACpCL,EAAsBM,EAAYt8G,GAAG,IAAMzV,KAAKD,cAAc8R,MAAMmgH,GAAev8G,GAAGs8G,IAAgBD,EAAer8G,GAAG,qBAEvHzV,KAAKiI,SAAS,CACnBwpH,iNAIuB7/G,mEACzB5R,KAAKiI,SAAS,CACZo6G,sBAAqB,wIAKvB,IAAMtB,EAAwC,WAA7B/gH,KAAKE,MAAM8gH,cACtB6Q,EAAgB7xH,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,aAC3G,OAAQmrG,IAAa/gH,KAAKoC,MAAMqvH,sBAAuBzxH,KAAKoC,MAAMigH,qBA6E9D,KA5EFz5G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,EACHqN,GAAI,EACJ7N,MAAO,EACPmE,OAAQ,EACR8B,aAAc,EACdhG,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB6N,gBAAiB,eAEjBrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAMigH,qBACTz5G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAGrDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO,YAIbgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJzI,WAAY,IACZD,SAAU,OACVE,MAAO,aACPuI,UAAW,UAGTnO,KAAKoC,MAAMigH,qBACT,uEAEA,4JAIHriH,KAAKoC,MAAMigH,sBACVz5G,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEgC,UAAW4gH,IACX1iG,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjB0f,eAAgB,CACdnb,WAAW,EACX+B,KAAK,QACLzG,MAAM,OACNqF,MAAM,CACJZ,SAAS,QAEXyB,UAAU,OACV0D,MAAM,oBAER0U,aAAc,OACdF,WAAY,UACZvN,OAAQ,mBACR9J,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzC4f,OAAQ,CAACiyG,EAAc5kH,QAAQjN,KAAKE,MAAMogB,KAAKmX,MAAM0uC,iBAAiB,kBAtJlDjkE,aCknDrB+vH,8MAtmDb7vH,MAAQ,CACNqL,MAAM,GACNwzG,MAAM,KACNiR,OAAO,KACPhU,QAAQ,KACRuP,YAAY,GACZ0E,YAAY,CACV,CACEtnH,MAAM,GACNpK,KAAK,MACLmN,MAAM,WAER,CACE/C,MAAM,EACNpK,KAAK,QACLmN,MAAM,WAER,CACE/C,MAAM,EACNpK,KAAK,OACLmN,MAAM,UAER,CACE/C,MAAM,EACNpK,KAAK,OACLmN,MAAM,YAGVwkH,UAAU,KACVrZ,WAAW,KACXhF,YAAY,KACZ5wG,YAAY,KACZg6G,YAAY,KACZkV,QAAQ,SACRC,aAAY,EACZ5E,aAAY,EACZ1tF,aAAa,KACbs6C,aAAa,KACbx5C,cAAc,KACdl3B,cAAc,KACdgkH,iBAAiB,EACjB2E,eAAe,KACf1E,eAAe,KACf2E,eAAe,KACfhV,eAAe,KACfjC,eAAe,KACfwS,eAAe,KACf/O,eAAc,EACdj0B,eAAe,KACf0nC,gBAAgB,KAChBnV,gBAAe,EACfoV,gBAAgB,KAChBliH,gBAAgB,KAChB6sG,gBAAe,EACf2Q,iBAAiB,KACjB9O,kBAAiB,EACjB+O,kBAAkB,KAClBzjF,kBAAkB,KAClBmoF,mBAAmB,KACnBC,mBAAmB,KACnBrV,mBAAmB,KACnByC,oBAAoB,KACpBuB,oBAAoB,KACpBsR,oBAAoB,KACpBxQ,sBAAqB,EACrB6L,yBAAwB,EACxB4E,yBAAwB,KAI1B/yH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YACLJ,KAAKiI,SAAS,CACZu1G,eAAe,QACf,WACAn9G,EAAK8tH,kRAKDj6D,EAAuBl0D,KAAKE,MAAMiD,YAAY4vH,wBAC9C/yH,KAAKE,MAAM2oC,aAAaqrB,EAAqBzsD,KAAKysD,EAAqBjnD,QAAQinD,EAAqBprB,0LAGnFzmC,EAAUC,8FACjCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDwxG,EAAwB5/G,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,eAChE4Q,EAA0B9rH,EAAU48G,mBAAqBl/G,KAAKoC,MAAM88G,iBACpE4B,EAAqB7wG,KAAKC,UAAU7N,EAAUc,eAAiB8M,KAAKC,UAAUlQ,KAAKE,MAAMiD,aACzFkrH,EAAsBp+G,KAAKC,UAAU7N,EAAUi4E,gBAAkBrqE,KAAKC,UAAUlQ,KAAKE,MAAMo6E,eAC7F4nC,GAAyB7wF,GAAkB+8F,GAA2BtN,KAClE0R,EAAiBtQ,EAAwB,KAAOliH,KAAKoC,MAAMowH,eACjExyH,KAAKiI,SAAS,CACZuqH,iBACAvE,kBAAkB,KAClBC,yBAAwB,GACxB,WACA1jH,EAAK2jH,WAAWjM,MAIhBmM,GACFruH,KAAKs/G,sBAGD0T,EAAoB1wH,EAAUuwH,sBAAwB7yH,KAAKoC,MAAMywH,oBACjEI,EAAwB3wH,EAAUkwH,iBAAmBxyH,KAAKoC,MAAMowH,gBAClEQ,GAAqBC,GAAyB/Q,KAC5C+Q,EACFjzH,KAAKiI,SAAS,CACZyqH,gBAAgB,OAETM,GACThzH,KAAKkzH,yBAEPlzH,KAAK2/G,2KAKP,IAAIrC,GAAiB,EACf6V,EAAgBnzH,KAAKoC,MAAM+vH,YAAY,GACvCiB,EAAgB/xH,OAAOuB,OAAO,GAAG5C,KAAKoC,MAAM+vH,aAAar9G,MAE3Du+G,EAAUrzH,KAAKoC,MAAMgwH,UAAYpyH,KAAKD,cAAciT,YAAiC,IAArBhT,KAAKoC,MAAMgwH,WAAgBkB,IAAIH,EAActoH,MAAMsoH,EAAc1yH,MAAQT,KAAKD,cAAciT,cAAcsgH,IAAIH,EAActoH,MAAMsoH,EAAc1yH,MACpN4yH,EAAUrzH,KAAKD,cAAciT,YAAYqgH,EAAQj9G,OAAO,cAAc,cAEtE,IAAMm9G,EAAQvzH,KAAKD,cAAciT,YAAYhT,KAAKoC,MAAMqwH,gBAAgB,IAAIzyH,KAAKD,cAAciT,cAAcoD,OAAO,YAAY,uBAC1Ho9G,EAAUxzH,KAAKD,cAAciT,cAAcsgH,IAAIF,EAAcvoH,MAAMuoH,EAAc3yH,MACvF,OAAQT,KAAKoC,MAAMo7G,gBACjB,QACA,IAAK,OACHF,EAAiBiW,EAAME,QAAQD,IAAYD,EAAMr9G,eAAem9G,GAClE,MACA,IAAK,gBAC+B,SAA9BrzH,KAAKoC,MAAMowH,iBACblV,EAAiBiW,EAAME,QAAQD,IAAYD,EAAMr9G,eAAem9G,IAKtErzH,KAAKiI,SAAS,CACZq1G,kMAIsBvE,iCAAW,KACnCA,EAAa/4G,KAAKD,cAAc8R,MAAMknG,GACtC/4G,KAAKiI,SAAS,CACZ8wG,cACA,WACAb,EAAKgb,4SAKiBlzH,KAAKD,cAAcgpC,6BAArCP,SACFxzB,EAAY9C,SAASe,KAAK04B,MAAM,KAChCnD,IACFxzB,EAAYwzB,EAAUxzB,WAExBA,GAAahV,KAAKoC,MAAMiwH,0BACjBr9G,yRAIH09G,EAAkB,MAClB1yH,KAAKoC,MAAM22G,aAAc/4G,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM22G,YAAYtjG,GAAG,IAAyC,OAAnCzV,KAAKoC,MAAMywH,0CACvF7yH,KAAKoC,MAAMo7G,sBACZ,uCACGh2D,EAAWt1C,SAASe,KAAK04B,MAAM,cACL3rC,KAAK0zH,qCAA/BC,SACAH,EAAUxzH,KAAKD,cAAciT,YAA8B,IAAlB2gH,IAC3CC,EAAU5zH,KAAKD,cAAciT,YAA2C,IAA/BhT,KAAKoC,MAAMywH,sBAC5CY,QAAQD,KAClBI,EAAUJ,GAENK,EAAc3hH,SAAS0hH,EAAQt4E,GAAGznC,UAAU,KAAM2zC,EAClDssE,EAAc5hH,SAASshH,EAAQl4E,GAAGznC,UAAU,KAAM2zC,EAClDusE,EAAgB/zH,KAAKoC,MAAM22G,WAAW1rG,MAAMwmH,GAAavvG,IAAIwvG,GAE7D1yG,EAAa2yG,EAAczvG,IAAItkB,KAAKoC,MAAM22G,YAAY1rG,MAAM,KAI9D7H,+BAA6BxF,KAAKoC,MAAM22G,WAAWzrG,QAAQ,eAAMtN,KAAKE,MAAM0J,iDAAwCgqH,EAAQ/6C,MAAMziE,OAAO,uEAA8D29G,EAAczmH,QAAQ,eAAMtN,KAAKE,MAAMiD,YAAYm2B,SAAS7xB,2BAAkBuK,KAAKwF,KAAK4J,2BAC/RpP,KAAKwF,KAAK4J,GAAY,MACxB5b,GAAI,4FAENA,GAAI,4BAAA/B,OAAgCzD,KAAKE,MAAM0G,MAAMC,OAAO+jB,MAAxD,qDAAAnnB,OAAiHzD,KAAKE,MAAM0J,cAA5H,sFACJ8oH,EAAkB,CAChBltH,OACAuI,KAAK,cACLqQ,UAAU,CACRxY,MAAM,8EAQhB5F,KAAKiI,SAAS,CACZyqH,uKAOF,MAAO,CAFcxgH,SAASlS,KAAKoC,MAAMywH,mEAKtBhhG,GACnB,IAAIxS,EAAa,KACbi5C,EAAe,GACb07D,EAASh0H,KAAKD,cAAcw3B,KAAK1F,GACnCoiG,EAAe/hH,SAASlS,KAAKoC,MAAMywH,qBACvC,OAAQ7yH,KAAKoC,MAAMo7G,gBACjB,IAAK,OACHn+F,EAAa,cACbi5C,EAAe,CAAC07D,EAAOC,GACzB,MACA,IAAK,gBACH50G,EAAa,kBACbi5C,EAAe,CAAC07D,GAKpB,MAAO,CACL30G,aACAi5C,0PAMI7qD,EAAQ,GACRggH,EAAc,GACdC,GAAc,WAaV3rG,QAAQqD,IAAI,CACpBplB,KAAKD,cAAcg0D,2BACnB/zD,KAAKD,cAAc6rC,0BAA0B5rC,KAAKE,MAAMo6E,aAAa7yE,KAAK,UAC1EzH,KAAKD,cAAc6rC,0BAA0B5rC,KAAKE,MAAMo6E,aAAa7yE,KAAM,eAC3EzH,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAMo6E,aAAat5C,YAAYhhC,KAAKE,MAAMiD,YAAY4vH,eAAe9lH,SAC7GjN,KAAKE,MAAMwQ,QAAU1Q,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,SAAS,CAACzH,KAAKE,MAAMwQ,UAAY,KAC1H1Q,KAAKE,MAAMwQ,QAAU1Q,KAAKD,cAAcwgC,mBAAmBvgC,KAAKE,MAAMo6E,aAAa7yE,KAAKzH,KAAKE,MAAMwQ,SAAW1Q,KAAKD,cAAc8R,MAAM,GACvI7R,KAAKE,MAAMwQ,QAAU1Q,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMiD,YAAY4vH,eAAetrH,KAAK,QAAQ,CAACzH,KAAKE,MAAMwQ,UAAY1Q,KAAKD,cAAc8R,MAAM,GAChK7R,KAAKD,cAAc+mC,kBAAkB9mC,KAAKE,MAAMiD,YAAY4vH,eAAetrH,KAAK,UAAUzH,KAAKE,MAAMiD,YAAY4vH,eAAe/6D,UAAU,UAE1Ih4D,KAAKE,MAAMwQ,QAAU1Q,KAAKD,cAAc+mC,kBAAkB9mC,KAAKE,MAAMo6E,aAAa7yE,KAAK,UAAUzH,KAAKE,MAAMo6E,aAAatiB,UAAU,SAAS,CAACrmD,OAAO,CAAC4R,SAASvjB,KAAKE,MAAMwQ,WAAa,2CApBtLwjH,OACApqD,OACAqqD,OACAC,OACAC,OACAC,OACAC,OACAC,OAEAC,OAcIlzF,EAAoBvhC,KAAKD,cAAc6V,gBAAgB,CAAC,YAAY5V,KAAKE,MAAMo6E,aAAat5C,cAE9F2xF,EAAqB,GACrBtD,EAAervH,KAAKD,cAAc8R,MAAM,GACxC6iH,EAAmB10H,KAAKD,cAAc8R,MAAM,GAE5CqiH,GAAuBA,EAAoB3yH,SAC7CmzH,EAAmB1iH,KAAK29C,IAAIukE,EAAoB,GAAG/hH,UAAU+hH,EAAoBA,EAAoB3yH,OAAO,GAAG4Q,WAAW,MAC1HwgH,EAAqBuB,EAAoBjxH,IAAK,SAAA2O,GAC5C,IAAMigB,EAASm6F,EAAKjsH,cAAcsV,iBAAiBzD,EAAG/G,MAAM02B,EAAkB1gC,UAE9E,OADAwuH,EAAeA,EAAah9G,KAAKwf,GAC1B,CACLA,SACA/pB,KAAK8J,EAAG9J,KACRqK,UAAUP,EAAGO,UACbmgB,UAAU1gB,EAAG2f,YACb9a,KAAKu1G,EAAKjsH,cAAciT,YAAmC,IAAvBd,SAASN,EAAGO,YAAiB0mE,MAAMziE,OAAO,oBAAoB,WAKlGm8G,EAAiB,GACnBoC,EAAmB30H,KAAKD,cAAc8R,MAAM,IAC5C2iH,oCACIx0H,KAAKD,cAAc+Q,aAAa0jH,EAAhC,eAAAxyG,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA6C,SAAAyT,EAAO5d,GAAP,IAAAyhC,EAAA4yC,EAAA,OAAA3oD,EAAA3wB,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,YAC7Cu6G,EAAK9rH,MAAMwQ,SAAW3J,EAAEiiC,cAAgBjiC,EAAEiiC,aAAa4rF,WAAa7tH,EAAEiiC,aAAa4rF,UAAU1nH,gBAAkB8+G,EAAK9rH,MAAMwQ,QAAQxD,eADrF,CAAA8X,EAAAvT,KAAA,eAAAuT,EAAAvT,KAAA,EAEvBu6G,EAAKjsH,cAAcgpC,aAAahiC,EAAEsd,aAFX,QAEzCmkB,EAFyCxjB,EAAAzQ,QAIvC6mE,EAAgB4wC,EAAKjsH,cAAcsV,iBAAiBtO,EAAEiiC,aAAanX,OAAO0P,EAAkB1gC,UAClG8zH,EAAmBA,EAAiBtiH,KAAK+oE,GACzCm3C,EAAehlH,KAAK,CAClBskB,OAAOupD,EACPtzE,KAAKf,EAAE4Y,gBACP2S,UAAU05F,EAAK9rH,MAAMo6E,aAAat5C,YAClCvqB,KAAKu1G,EAAKjsH,cAAciT,YAA0C,IAA9Bd,SAASs2B,EAAUxzB,YAAiB6jE,MAAMziE,OAAO,oBAAoB,UAV9D,wBAAA4O,EAAArS,SAAAgS,EAAA3kB,SAA7C,gBAAA4S,GAAA,OAAAoP,EAAAnP,MAAA7S,KAAA8S,YAAA,YAiBRwhH,EAAmBt0H,KAAKD,cAAcsV,iBAAiBi/G,EAAiBt0H,KAAKE,MAAMo6E,aAAaz5E,UAE1FkjC,EAAiB+lC,EAAc9pE,KAAKD,cAAcsV,iBAAiBy0D,EAAY9pE,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAC3IgjH,EAAmB/qD,EAAc9pE,KAAKD,cAAcW,YAAYqjC,EAAe,GAAG,IAAI/jC,KAAKE,MAAM0J,cAAiB5J,KAAKoC,MAAMqL,MAAMlM,OAASvB,KAAKoC,MAAMqL,MAAM,GAAG5C,MAAQ7K,KAAKD,cAAcW,YAAYqjC,EAAe,GAAG,IAAI/jC,KAAKE,MAAM0J,cAC9O6D,EAAMF,KAAK,CACTua,MAAM,qBACNjd,MAAMgqH,IAGRV,EAAmBA,EAAmBn0H,KAAKD,cAAcsV,iBAAiB8+G,EAAiBn0H,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GACjJijH,EAAsBX,EAAmBn0H,KAAKD,cAAcW,YAAYyzH,EAAiB,GAAG,IAAIn0H,KAAKE,MAAMo6E,aAAa7yE,KAAQzH,KAAKoC,MAAMqL,MAAMlM,OAASvB,KAAKoC,MAAMqL,MAAM,GAAG5C,MAAQ7K,KAAKD,cAAcW,YAAYyzH,EAAiB,GAAG,IAAIn0H,KAAKE,MAAMo6E,aAAa7yE,KAC3QgG,EAAMF,KAAK,CACTua,MAAK,GAAArkB,OAAIzD,KAAKE,MAAMo6E,aAAa7yE,KAA5B,iBACLoD,MAAMiqH,IAGFC,EAA4BX,EAAmBp0H,KAAKD,cAAcW,YAAY0zH,EAAiB,GAAG,IAAIp0H,KAAKE,MAAMo6E,aAAat5C,YAAehhC,KAAKoC,MAAMqL,MAAMlM,OAASvB,KAAKoC,MAAMqL,MAAM,GAAG5C,MAAQ7K,KAAKD,cAAcW,YAAY0zH,EAAiB,GAAG,IAAIp0H,KAAKE,MAAMo6E,aAAat5C,YACxRvzB,EAAMF,KAAK,CACTua,MAAM,oBACNjd,MAAMkqH,IASFC,EAAwBh1H,KAAKD,cAAcW,YAAY2uH,EAAa,GAAG,IAAIrvH,KAAKE,MAAMo6E,aAAat5C,YACzGvzB,EAAMF,KAAK,CACTua,MAAM,gBACNjd,MAAMmqH,IAGF9C,EAAS7C,EAAa/qG,IAAI6vG,GAAkB9mH,MAAM,UAAUiX,IAAIowG,GACtEjnH,EAAMF,KAAK,CACTua,MAAM,uBACNjd,MAAMqnH,EAAO5tG,IAAI,GAAGjX,MAAM,KAAKC,QAAQ,GAAG,MAE5CG,EAAMF,KAAK,CACTua,MAAM,wBACNjd,MAAMqnH,EAAO7kH,MAAM,KAAKC,QAAQ,GAAG,MAG/BwzB,EAAgBuzF,GAAcA,EAAWxiG,OAAS7xB,KAAKD,cAAcsV,iBAAiBg/G,EAAWxiG,OAAO7xB,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GACpKojH,EAAgBj1H,KAAKD,cAAcW,YAAYogC,EAAc,GACnE2sF,EAAYlgH,KAAK,CACfua,MAAM,kBACNisF,YAAY,8BACZlpG,MAAMoqH,EAAc,IAAIj1H,KAAKE,MAAMo6E,aAAat5C,cAG5C8uF,EAAewE,EAAiBhwG,IAAI6vG,GAC1C1G,EAAYlgH,KAAK,CACfua,MAAM,QACNjd,MAAK,GAAApH,OAAIqsH,EAAaziH,MAAM,KAAKC,QAAQ,GAApC,KACLymG,YAAY,qCAGd0Z,EAAYlgH,KAAK,CACfua,MAAK,GAAArkB,OAAIzD,KAAKE,MAAMo6E,aAAa7yE,KAA5B,YACLoD,MAAK,GAAApH,OAAIzD,KAAKD,cAAcW,YAAY4zH,EAAiB,GAApD,KAAA7wH,OAA0DzD,KAAKE,MAAMo6E,aAAa7yE,QAGzF8sH,EAAYA,EAAYv0H,KAAKD,cAAcsV,iBAAiBk/G,EAAUv0H,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAC5Hs+G,EAAiBnwH,KAAKD,cAAcW,YAAY6zH,EAAU,GAChE9G,EAAYlgH,KAAK,CACfua,MAAM,oBACNjd,MAAK,GAAApH,OAAI0sH,EAAJ,KAAA1sH,OAAsBzD,KAAKE,MAAMo6E,aAAat5C,eAI/Ck0F,EAAwBX,EAAUliH,KAAKsiH,GAEzCQ,EAAiBV,EAAgBA,EAAcxuF,OAAQ,SAACmvF,EAAWC,GACrE,IAAMtlD,EAAmBi8C,EAAKjsH,cAAc8R,MAAMwjH,EAAMrsF,aAAassF,IAC/DC,EAAevJ,EAAKjsH,cAAcsV,iBAAiBggH,EAAMrsF,aAAan+B,MAAMmhH,EAAK9rH,MAAMiD,YAAYtC,UAKzG,OAJI00H,EAAa9/G,GAAG,KAClB2/G,EAAaA,EAAW/iH,KAAKkjH,EAAaloH,MAAM0iE,KAG3CqlD,GACPp1H,KAAKD,cAAc8R,MAAM,IAAM7R,KAAKD,cAAc8R,MAAM,GAI1DsjH,EAAiBr0F,EAAcrrB,GAAG,GAAKzD,KAAKwF,KAAK29G,EAAe7wG,IAAIwc,IAAkB,EAKhF0mB,EAAWt1C,SAASe,KAAK04B,MAAM,KAC/B6pF,EAAcx1H,KAAKD,cAAc8R,MAAM21C,GAAUl1C,MAAM6iH,GACvDM,EAAgB30F,EAAcrrB,GAAG,GAAKy/G,EAAsB5wG,IAAIwc,GAAiB9gC,KAAKD,cAAc8R,MAAM,GAC3F,MACE,OACjB6jH,EAAmB1jH,KAAKqE,IAAI,EAAErE,KAAKgF,MAAMw+G,EAAYlxG,IADpC,UAEjBwnB,EAAM0pF,EAAY//G,GAAG,GAAKggH,EAAcpoH,MAHzB,OAG6CiX,IAAIoxG,GAAkBroH,MAAM,KAAOrN,KAAKD,cAAc8R,MAAM,GAI9H47G,EAAYlgH,KAAK,CACfua,MAAM,MACNjd,MAAK,GAAApH,OAAIqoC,EAAIx+B,QAAQ,GAAhB,KACLymG,YAAY,+DAGR4hB,EAAc31H,KAAKoC,MAAMgwH,UAAYpyH,KAAKD,cAAciT,YAAiC,IAArBhT,KAAKoC,MAAMgwH,WAAgBv5C,MAAMziE,OAAO,oBAAsB,GACxIq3G,EAAYlgH,KAAK,CACf1C,MAAM8qH,EACN7tG,MAAM,sBACNisF,YAAY,6BAGd/zG,KAAKiI,SAAS,CACZwF,QACAykH,SACAqC,YACA9G,cACAC,cACA5sF,gBACAyxF,iBACAI,mNAI2BzT,mEAC7Bl/G,KAAKiI,SAAS,CACZi3G,0JAIM1B,GACRx9G,KAAKiI,SAAS,CACZu1G,6DAIcgV,GAChBxyH,KAAKiI,SAAS,CACZuqH,yGAIwBzrH,6FACpB6rH,EAAqB,KACrBH,EAAkB1rH,EAAEggB,OAAOlc,MAC3B+qH,EAAW51H,KAAKD,cAAciT,gBAC9BugH,EAAQvzH,KAAKD,cAAciT,YAAYy/G,EAAgB,IAAImD,EAASx/G,OAAO,YAAY,uBAAuBk9G,IAAI,EAAE,WAChHuC,kCACJhD,EAAsB3gH,SAASqhH,EAAMj4E,GAAGznC,UAAU,cAEtB7T,KAAK0zH,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxB3zH,KAAKiI,SAAS,CACZwqH,kBACAG,qBACAC,uBACA,WACA/B,EAAKnR,6MAKYiT,wFACfS,EAAUrzH,KAAKoC,MAAMgwH,UAAYpyH,KAAKD,cAAciT,YAAiC,IAArBhT,KAAKoC,MAAMgwH,WAAkBpyH,KAAKD,cAAciT,cAChHugH,EAAQF,EAAQC,IAAIV,EAAmB/nH,MAAM+nH,EAAmBnyH,MAAM6yH,IAAI,EAAE,UAE5Eb,EAAkBc,EAAMn9G,OAAO,cACjCy8G,EAAsB3gH,SAASqhH,EAAMj4E,GAAGznC,UAAU,cAGtB7T,KAAK0zH,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxB3zH,KAAKiI,SAAS,CACZwqH,kBACAG,qBACAC,gNAIuBjhH,EAAGigB,EAAOjS,oGAE/Bs+F,EAAU,KACVwU,EAAkB,UACd1yH,KAAKoC,MAAMo7G,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGsY,EAAkBlkH,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8jH,EAAK9wH,MAAMiD,YAAY8J,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS86F,EAAK9wH,MAAMo6E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS86F,EAAK9wH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9e6oH,EAAeD,EAAkB91H,KAAKD,cAAcsV,iBAAiBnD,SAAS4jH,EAAgBvrH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GACzK6gH,EAAkB,CAChB3kH,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wCAAA/B,OAAyCsyH,EAAazoH,QAAQ,GAA9D,KAAA7J,OAAoEzD,KAAKE,MAAM0J,cAA/E,+CAIE5J,KAAKoC,MAAMowH,sBACZ,iBASA,2CARHE,EAAkB,CAChB3kH,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,0DAAA/B,OAA2DzD,KAAKD,cAAciT,YAA2C,IAA/BhT,KAAKoC,MAAMywH,qBAA0Bh6C,MAAMziE,OAAO,oBAA5I,sDAIA4/G,EAA0BpkH,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8jH,EAAK9wH,MAAMiD,YAAY8J,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS86F,EAAK9wH,MAAMo6E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS86F,EAAK9wH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KACtf+oH,EAAiBD,EAA0Bh2H,KAAKD,cAAcsV,iBAAiBnD,SAAS8jH,EAAwBzrH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAC3L6gH,EAAkB,CAChB3kH,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,uDAAA/B,OAAwDwyH,EAAe3oH,QAAQ,GAA/E,KAAA7J,OAAqFzD,KAAKE,MAAM0J,cAAhG,0HAQJ0mH,EAAoB1+G,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8jH,EAAK9wH,MAAMiD,YAAY8J,QAAQC,gBAAkB,KACtKqjH,EAAiBD,EAAoBtwH,KAAKD,cAAcsV,iBAAiBnD,SAASo+G,EAAkB/lH,KAAK,IAAIvK,KAAKE,MAAMiD,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAC/K6gH,EAAkB,CAChB3kH,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,2CAAA/B,OAA4C8sH,EAAejjH,QAAQ,GAAnE,KAAA7J,OAAyEzD,KAAKE,MAAM0J,cAApF,kDAIA23B,EAAoBvhC,KAAKD,cAAc6V,gBAAgB,CAAC,YAAY5V,KAAKE,MAAMo6E,aAAat5C,cAC5FwvF,EAAqB5+G,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAKA,EAAI/mC,QAAQC,gBAAkBq0B,EAAkBt0B,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS86F,EAAK9wH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,mBAAsB,KAC3QujH,EAAkBD,EAAqBxwH,KAAKD,cAAcsV,iBAAiBnD,SAASs+G,EAAmBjmH,KAAK,IAAIg3B,EAAkB1gC,UAAYb,KAAKD,cAAc8R,MAAM,GAC7K6gH,EAAkB,CAChB3kH,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,yCAAA/B,OAA0CgtH,EAAgBnjH,QAAQ,GAAlE,KAAA7J,OAAwEzD,KAAKE,MAAMo6E,aAAat5C,YAAhG,gFAOU,GACS,EAE7BhhC,KAAKiI,SAAS,CACZi2G,UACAwP,aALkB,EAMlBgF,kBACArQ,sBAN2B,GAO3B,WACA2O,EAAK7C,oTAIQjM,kCACTn6G,EAAW,YAIPga,QAAQqD,IAAI,CACpBplB,KAAKD,cAAc2yB,gBAAgB1yB,KAAKE,MAAM0J,cAAc5J,KAAKE,MAAMwQ,SACvE1Q,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,cAAc,CAACzH,KAAKE,MAAMwQ,+CAJ9FsvB,OACAoyF,OAMFrqH,EAASqqH,UAAYA,GAAalgH,SAASkgH,GAAW,EAAIlgH,SAASkgH,GAAa,KAChFrqH,EAASuqH,YAAcvqH,EAASqqH,WAAarqH,EAASqqH,WAAWlgH,SAASe,KAAK04B,MAAM,KACrF5jC,EAASi4B,aAAgBhgC,KAAKD,cAAc8R,MAAMmuB,GAAcx/B,QAAmDR,KAAKD,cAAc8R,MAAM,GAAlE7R,KAAKD,cAAc8R,MAAMmuB,GAI9E,cAFjBw9E,EAAiBx9G,KAAKoC,MAAMo7G,iBAEIz1G,EAASuqH,cAC3C9U,EAAiB,OACjBz1G,EAASy1G,eAAiBA,GAIxBz1G,EAASqqH,WAA8B,SAAjB5U,GACxBA,EAAiB,gBACjBz1G,EAASyqH,eAAiB,OAC1BzqH,EAASy1G,eAAiBA,GACA,kBAAjBA,GAAqCz1G,EAASyqH,gBAAmBxyH,KAAKoC,MAAMowH,iBACrFzqH,EAASyqH,eAAiB,QAIP,kBAAjBhV,GAAoCz1G,EAASuqH,cAC/C9U,EAAiB,WACjBz1G,EAASy1G,eAAiBA,QAGpBA,SACD,iBAOA,0BASA,6CAfHz1G,EAASi3G,eAAgB,EACzBj3G,EAASs1G,gBAAiB,EAC1Bt1G,EAASo1G,YAAcp1G,EAASi4B,aAChCj4B,EAASw1G,mBAAT,8CAAA95G,OAA4EzD,KAAKE,MAAM0J,cAAvF,WACA7B,EAASi4G,oBAAsBhgH,KAAKD,cAAcy0D,qBAAqBzsD,EAASi4B,aAAahgC,KAAKE,MAAMiD,YAAYtC,8CAGpHkH,EAASi3G,eAAgB,EACzBj3G,EAASw1G,mBAAqB,GAC9Bx1G,EAASo1G,YAAcp1G,EAASi4B,aAChCj4B,EAASs1G,eAA+C,WAA9Br9G,KAAKoC,MAAMowH,eACrCzqH,EAAS0qH,gBAAkBzyH,KAAKD,cAAciT,YAA+B,IAAnBjL,EAASqqH,WAAgBh8G,OAAO,cAC1FrO,EAASw1G,mBAAT,8CAAA95G,OAA4EzD,KAAKE,MAAM0J,cAAvF,WACA7B,EAASi4G,oBAAsBhgH,KAAKD,cAAcy0D,qBAAqBzsD,EAASi4B,aAAahgC,KAAKE,MAAMiD,YAAYtC,8CAGpHkH,EAASi3G,eAAgB,EACzBj3G,EAASs1G,gBAAiB,EAC1Bt1G,EAASw1G,mBAAqB,GAC9Bx1G,EAASo1G,YAAcn9G,KAAKD,cAAcsV,iBAAiBtN,EAAS+4B,cAAc9gC,KAAKE,MAAMiD,YAAYtC,kFAMzGqhH,IACFn6G,EAASm2G,QAAU,KACnBn2G,EAAS2qH,gBAAkB,KAC3B3qH,EAASs6G,sBAAuB,aAGHriH,KAAK0zH,+BAA9BwC,SACA1C,EAAUxzH,KAAKD,cAAciT,YAA6B,IAAjBkjH,GAAuB9/G,OAAO,cAC7ErO,EAAS+qH,0BAA0B/qH,EAASqqH,WAAYpyH,KAAKD,cAAciT,YAA+B,IAAnBjL,EAASqqH,WAAgBh8G,OAAO,gBAAgBo9G,EAIvIxzH,KAAKiI,SAASF,EAAS,WACrBouH,EAAKpF,kJAIA,IAAAqF,EAAAp2H,KAEDq2H,EAAuC,SAA9Br2H,KAAKoC,MAAMo7G,eACpB2T,EAAwC,UAA9BnxH,KAAKoC,MAAMo7G,eACrB8Y,EAAwC,UAA9Bt2H,KAAKoC,MAAMo7G,eACrB0T,EAA0C,aAA9BlxH,KAAKoC,MAAMo7G,eACvB+Y,EAA2C,kBAA9Bv2H,KAAKoC,MAAMo7G,eACxB4T,EAAWpxH,KAAKoC,MAAMo7G,eACtBgZ,GAAex2H,KAAKoC,MAAMkwH,YAEhC,OACE1pH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGPjB,KAAKE,MAAM8c,aACTpU,EAAA9G,EAAAC,cAAC00H,GACKz2H,KAAKE,OAKbF,KAAKE,MAAMiD,aAAenD,KAAKE,MAAMiD,YAAYkuH,UAC/CzoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,eAKAxF,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACEplG,GAAI,EACJpW,MAAO,OACPC,WAAY,OACZohB,KAAMjnB,KAAKE,MAAMiD,YAAYkuH,UAE7BzoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,OACPU,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGd1G,KAAKE,MAAMiD,YAAYkuH,YAOhCrxH,KAAKoC,MAAM0+B,eAAiB9gC,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM0+B,eAAerrB,GAAG,IAAMzV,KAAKoC,MAAMqrH,YAAYlsH,OAAO,GACpHqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,eAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPqF,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,UACLqoF,SAAS,QAEXn3G,eAAgB,iBAGdpB,KAAKoC,MAAMqrH,YAAYxqH,IAAK,SAACquH,EAAStrH,GAAV,OAC1B4C,EAAA9G,EAAAC,cAAC20H,GAADr1H,OAAAuB,OAAA,CACEkB,IAAG,eAAAL,OAAiBuC,GACpBsV,UAAW,CACTlN,GAAG,EACHnN,MAAM,CAAC,MAAM,QAGf0d,UAAW,CACTjZ,SAAS,CAAC,EAAE,KAEV4rH,QAShBtxH,KAAKE,MAAM0J,eACThB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,kBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGW,OAAzBpB,KAAKoC,MAAMgwH,UACTxpH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOixH,EAAS,EAAI,GAEtBle,QAAS,OACTl3G,MAAO,CAAC,EAAE,OACVu3G,SAAU,kBACV11G,SAAU9C,KAAKE,MAAM4C,SAErBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUw4G,EACVpxH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAK7E,UAAU,WAEjCvxH,KAAKoC,MAAMkwH,YAkBd1pH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAO8rH,EAAY,EAAI,GAEzBjwH,MAAO,CAAC,EAAE,OACVk3G,QAAS,WACTK,SAAU,oBACV11G,SAAU9C,KAAKE,MAAM4C,SAErBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUqzG,EACVjsH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAK7E,UAAU,eAhCpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOmxH,EAAa,EAAI,GAE1Bt1H,MAAO,CAAC,EAAE,OACV4c,SAAU04G,EACVpe,QAAS,gBACTK,SAAU,kBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExCmC,YAAc,SAAA8B,GAAC,OAAIqvH,EAAK7E,UAAU,oBAsBxC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOkxH,EAAU,EAAI,GAEvBr1H,MAAO,CAAC,EAAE,OACVk3G,QAAS,QACTK,SAAU,oBACV11G,SAAU9C,KAAKE,MAAM4C,SAErBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUy4G,EACVrxH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAK7E,UAAU,YAEpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAO+rH,EAAU,EAAI,GAEvBlwH,MAAO,CAAC,EAAE,OACVk3G,QAAS,QACTK,SAAU,mBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBmb,WAAY,CACV7P,GAAG,CAAC,EAAE,GACN/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUszG,EACVlsH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAK7E,UAAU,aAIpCvxH,KAAKoC,MAAMswH,iBACT9pH,EAAA9G,EAAAC,cAACgf,EAAA,EAAD1f,OAAAuB,OAAA,CACE0Y,UAAW,CACTU,GAAG,EACH5N,GAAG,IAEDpO,KAAKoC,MAAMswH,kBAKnBvB,EACEvoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,EACPqF,MAAO,CACLiyG,SAAS,QAEXn3G,eAAgB,iBAGZpB,KAAKoC,MAAMqL,OAAUzN,KAAKoC,MAAMqL,MAAMlM,OAmBpCvB,KAAKoC,MAAMqL,MAAMxK,IAAK,SAACquH,EAAStrH,GAAV,OACxB4C,EAAA9G,EAAAC,cAAC20H,GAADr1H,OAAAuB,OAAA,CACEkB,IAAG,SAAAL,OAAWuC,GACdsV,UAAW,CACTra,MAAM,CAAC,EAAE,SAEPqwH,MAxBN1oH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,sBAadoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,wBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPG,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTsH,GAAG,EACH42F,GAAG,EACHxqG,GAAG,EACH/N,MAAM,EACNyH,QAAQ,OACRtH,eAAe,UAEjByc,UAAU,EACVlC,eAAe,GAGb3b,KAAKoC,MAAMuwH,oBAAsB3yH,KAAKoC,MAAMuwH,mBAAmBpxH,OAC7DqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJ42F,GAAI,EACJv4G,MAAO,EACPE,cAAe,MACfi7G,aAAY,aAAA34G,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,UAEnD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ1E,MAAOjB,KAAKE,MAAM4C,SAAW,IAAO,IAHtC,QAOA8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ1E,MAAOjB,KAAKE,MAAM4C,SAAW,GAAM,GACnCqL,UAAWnO,KAAKE,MAAM4C,SAAW,QAAU,QAJ7C,UAQA8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ1E,MAAOjB,KAAKE,MAAM4C,SAAW,IAAO,IAElC9C,KAAKE,MAAM4C,SAAW,GAAK,SAGjC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfD,WAAY,aACZsF,SAAU,CAAC,UAAU,UACrBmwH,UAAW,CAAC,UAAU,UAGpB32H,KAAKoC,MAAMuwH,mBAAmB1vH,IAAK,SAAC2zH,EAAO5wH,GAAR,OACjC4C,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP8N,GAAI,CAAC,EAAE,GACP5N,cAAe,MACf2C,IAAG,WAAAL,OAAauC,GAChBo2G,aAAY,aAAA34G,OAAe2yH,EAAKl2H,MAAM0G,MAAMC,OAAOC,UAEnD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZC,MAAO,YACPF,SAAU0wH,EAAKl2H,MAAM4C,SAAW,EAAI,EACpC7B,MAAOm1H,EAAKl2H,MAAM4C,SAAW,IAAO,IAEnC8zH,EAAOngH,MAEV7N,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZC,MAAO,YACPF,SAAU0wH,EAAKl2H,MAAM4C,SAAW,EAAI,EACpC7B,MAAOm1H,EAAKl2H,MAAM4C,SAAW,GAAM,GACnCqL,UAAWioH,EAAKl2H,MAAM4C,SAAW,QAAU,QAE1C8zH,EAAO/kG,OAAOvkB,QAAQ,GAPzB,IAO8BspH,EAAOtkG,WAErC1pB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAOm1H,EAAKl2H,MAAM4C,SAAW,IAAO,IACpC1B,eAAgBg1H,EAAKl2H,MAAM4C,SAAW,WAAa,cAEnD8F,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACEx7G,MAAO,OACPC,WAAY,OACZohB,KAAMmvG,EAAKr2H,cAAcmnB,2BAA2B0vG,EAAO9uH,OAE3Dc,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,QAGZi1H,EAAKl2H,MAAM4C,UACV8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZC,MAAO,QAENwwH,EAAKr2H,cAAcoI,YAAYyuH,EAAO9uH,OAI7Cc,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJG,MAAO,OACP6B,KAAM,YACNC,KAAM0uH,EAAKl2H,MAAM4C,SAAW,QAAU,kBAWxD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,aAFT,iCAWP5F,KAAKE,MAAMwQ,SAAW1Q,KAAKE,MAAMiD,aAAenD,KAAKoC,MAAM+6G,aAAen9G,KAAKoC,MAAMsrH,aAAe1tH,KAAKE,MAAMo6E,aAClH1xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPmN,GAAI,CAAC,EAAE,IAGJmoH,GAAcC,GACb5tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,0BAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEye,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEd4V,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAER8M,KAAM,aACNoQ,UAAW,UACXI,YAAa,UACbV,SAAyC,SAA9B7d,KAAKoC,MAAMowH,eACtBvtH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAKS,kBAAkB,SAC1CrxH,KAAMxF,KAAKE,MAAM4C,SAAW,OAAS,mBAEvC8F,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEye,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEd4V,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAER8M,KAAM,cACNoQ,UAAW,SACXI,YAAa,UACbV,SAAyC,WAA9B7d,KAAKoC,MAAMowH,eACtBvtH,YAAc,SAAA8B,GAAC,OAAIqvH,EAAKS,kBAAkB,WAC1CrxH,KAAMxF,KAAKE,MAAM4C,SAAW,SAAW,wBAO7CuzH,GAAUr2H,KAAKoC,MAAM+6G,aAAen9G,KAAKoC,MAAM88G,kBAAoBl/G,KAAKoC,MAAM+6G,YAAY1nG,GAAG,IAAQ8gH,GAAcC,IACnH5tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IAGJo1H,GAAwC,SAA9Br2H,KAAKoC,MAAMowH,iBACpB5pH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,uBAIGpO,KAAKoC,MAAM0wH,wBAuFVlqH,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,EACH5N,GAAG,GAELL,KAAM,UACNqQ,UAAW,CACTxY,MAAM,YAERJ,KAAI,2DA/FNoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChBD,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPR,KAAM,OACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZ0G,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXtE,MAAO7K,KAAKoC,MAAMqwH,iBAAmB,GACrCt1G,SAAUnd,KAAK82H,sBAAsBp2G,KAAK1gB,MAC1CoF,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,WAE/C8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdpB,KAAKoC,MAAM+vH,YAAYlvH,IAAK,SAACxB,EAAEuE,GAC7B,IAAM6X,IAAWu4G,EAAKh0H,MAAMwwH,qBAAqBwD,EAAKh0H,MAAMwwH,mBAAmB/nH,QAAQpJ,EAAEoJ,OAASurH,EAAKh0H,MAAMwwH,mBAAmBnyH,OAASgB,EAAEhB,MAC3I,OACEmI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAM,KAER4c,SAAUA,EACVlC,eAAe,EACf7X,IAAG,cAAAL,OAAgBuC,GACnBf,YAAa,SAAA8B,GAAC,OAAIqvH,EAAKW,iBAAiBt1H,KAExCmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyI,UAAW,SACXvI,MAAOiY,EAAW,YAAc,YAE/Bpc,EAAEmM,WAQb2oH,GACE3tH,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEgd,OAAQ,IACJ5f,KAAKE,MAFX,CAGEkgB,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW4gH,IACXhiG,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,IACTiG,aAAa,EACbC,UAAU,UACV0D,MAAM,gBACNzD,SAASpH,KAAKoC,MAAMk7G,gBAEtBxrG,OAAQ,gBACRuN,WAAY,uBACZE,aAAcvf,KAAKE,MAAMo6E,aAAa7yE,KACtCO,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzC6f,qBAAsB7f,KAAKg3H,sBAAsBt2G,KAAK1gB,YA0B3Eq2H,GAAsC,WAA5Br2H,KAAKoC,MAAMowH,eACpB5pH,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,CACEqc,MAAO,MACHjf,KAAKE,MAFX,CAGE4R,OAAQs/G,EACRnQ,MAAOjhH,KAAKoC,MAAM6+G,MAClB/C,QAASl+G,KAAKoC,MAAM87G,QACpB/6G,YAAanD,KAAKE,MAAMiD,YACxB68B,aAAchgC,KAAKoC,MAAM+6G,YACzB7iC,aAAct6E,KAAKE,MAAMo6E,aACzB0kC,cAAeh/G,KAAKoC,MAAM48G,cAC1B1B,eAAgBt9G,KAAKoC,MAAMk7G,eAC3BD,eAAgBr9G,KAAKoC,MAAMi7G,eAC3Br1G,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAC/ByC,oBAAqBhgH,KAAKoC,MAAM49G,oBAChCuB,oBAAqBvhH,KAAKoC,MAAMm/G,oBAChCjC,oBAAqBt/G,KAAKs/G,oBAAoB5+F,KAAK1gB,MACnDk/G,iBAAkBl/G,KAAKgjH,yBAAyBtiG,KAAK1gB,MACrD6f,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,QAErD4I,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGRkoH,GAAUE,EAAX,sBAAA9yH,OACwBzD,KAAKE,MAAM0J,cADnC,oBAEIsnH,GAAS,6BAAAztH,OACkBzD,KAAKE,MAAM0J,cAD7B,qBAQpB2sH,IAAeC,EAClB5tH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,2DAUF+iH,EACFtoH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAIFzB,KAAKoC,MAAMkwH,YACT1pH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJ1I,SAAU,EACVE,MAAO,WACPuI,UAAW,UALb,+CAO+CnO,KAAKE,MAAM0J,cAP1D,KASAhB,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEgd,OAAQ,IACJ5f,KAAKE,MAFX,CAGEgC,UAAW4gH,IACX1iG,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjB0f,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,IACTiG,aAAa,EACbC,UAAU,SACV0D,MAAM,YAERiH,OAAQ,WACRuN,WAAY,WACZE,aAAcvf,KAAKE,MAAMo6E,aAAa7yE,KACtCO,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,UAI7C4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,kDAMkDnO,KAAKD,cAAciT,YAAiC,IAArBhT,KAAKoC,MAAMgwH,WAAgBv5C,MAAMziE,OAAO,oBANzH,yBAMoKpW,KAAKE,MAAM0J,cAN/K,OAYN0sH,GACF1tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACF2M,GAAG,IAIFpO,KAAKoC,MAAMmyH,WAAav0H,KAAKoC,MAAMmyH,UAAU9+G,GAAG,GAC/C7M,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,WACP6B,KAAM,iBACNC,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbE,MAAO,WACPuI,UAAW,UALb,iBAOgBvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKoC,MAAMmyH,UAAUjnH,QAAQ,GAAtC,IAA2CtN,KAAKE,MAAMo6E,aAAat5C,aAPnF,KASAp4B,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEgd,OAAQ,IACJ5f,KAAKE,MAFX,CAGEgC,UAAW4gH,IACX1iG,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjB0f,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,EAAE,GACX4J,MAAM,QACN3D,aAAa,EACbC,UAAU,UAEZ2K,OAAQ,QACRuN,WAAY,QACZrX,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCuf,aAAcvf,KAAKE,MAAMiD,YAAY4vH,eAAetrH,SAIxDmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,0CAYRvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,oBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTsH,GAAG,EACH42F,GAAG,EACHxqG,GAAG,EACH/N,MAAM,EACNyH,QAAQ,OACRxH,WAAW,SACXE,eAAe,UAEjByc,UAAU,EACVlC,eAAe,GAGb3b,KAAKoC,MAAMmwH,gBAAkBvyH,KAAKoC,MAAMmwH,eAAehxH,OACrDqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJ42F,GAAI,EACJv4G,MAAO,EACPE,cAAe,MACfi7G,aAAY,aAAA34G,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,UAEnD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ1E,MAAOjB,KAAKE,MAAM4C,SAAW,GAAM,IAHrC,QAOA8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZ1E,MAAOjB,KAAKE,MAAM4C,SAAW,GAAM,GACnCqL,UAAWnO,KAAKE,MAAM4C,SAAW,QAAU,QAJ7C,WASG9C,KAAKE,MAAM4C,UACV8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GACPyE,SAAU,EACVC,WAAY,GAHd,SAWJ3F,KAAKoC,MAAMmwH,eAAetvH,IAAK,SAAC64E,EAAM91E,GAAP,OAC7B4C,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkG,GAAI,EACJ9N,MAAO,EACPE,cAAe,MACf2C,IAAG,SAAAL,OAAWuC,GACdo2G,aAAY,aAAA34G,OAAe2yH,EAAKl2H,MAAM0G,MAAMC,OAAOC,UAEnD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZC,MAAO,YACPF,SAAU0wH,EAAKl2H,MAAM4C,SAAW,EAAI,EACpC7B,MAAOm1H,EAAKl2H,MAAM4C,SAAW,GAAM,IAElCg5E,EAAMrlE,MAET7N,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZC,MAAO,YACPF,SAAU0wH,EAAKl2H,MAAM4C,SAAW,EAAI,EACpC7B,MAAOm1H,EAAKl2H,MAAM4C,SAAW,GAAM,GACnCqL,UAAWioH,EAAKl2H,MAAM4C,SAAW,QAAU,QAE1Cg5E,EAAMjqD,OAAOvkB,QAAQ,GAPxB,IAO6BwuE,EAAMxpD,YAGhC8jG,EAAKl2H,MAAM4C,UACV8F,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACEngH,MAAO,GACP2E,MAAO,OACPC,WAAY,OACZohB,KAAMmvG,EAAKr2H,cAAcmnB,2BAA2B40D,EAAMh0E,OAE1Dc,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZC,MAAO,QAENwwH,EAAKr2H,cAAcoI,YAAY2zE,EAAMh0E,OAExCc,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,QACN9B,MAAO,OACP6B,KAAM,oBAWxBmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,aAFT,8BAcb5F,KAAKE,MAAMwQ,QAQd9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,qBAtBVoD,EAAA9G,EAAAC,cAAC0/G,EAAA,EAADpgH,OAAAuB,OAAA,CACE0Y,UAAW,CACTU,GAAG,IAEDhc,KAAKE,iBAzkDDgC,mCCorCX+0H,8MAlrCb70H,MAAQ,CACN8+G,KAAK,EACLgW,MAAM,KACNjW,MAAM,CACJkW,EAAE,YACFC,EAAE,aAEJC,cAAc,CACZC,GAAG,CACD1pH,MAAM,OAER2pH,GAAG,CACD3pH,MAAM,OAER4pH,GAAG,CACD5pH,MAAM,OAER6pH,IAAI,CACF7pH,MAAM,OAGV+sE,QAAQ,KACRpB,QAAQ,KACRm+C,SAAS,KACT14G,SAAQ,EACR24G,UAAU,KACVC,YAAY,GACZC,YAAY,GACZC,WAAW,KACXC,YAAY,KACZC,aAAY,EACZC,aAAY,EACZ90H,YAAY,KACZ68B,aAAa,KACbp2B,cAAc,KACdsuH,gBAAgB,GAChBC,eAAc,EACdC,eAAe,KACfC,gBAAgB,KAChBt4G,kBAAkB,GAClBu4G,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnBhb,eAAe,UACfib,oBAAmB,EACnBC,qBAAoB,EACpBC,qBAAqB,KACrBC,sBAAsB,KACtBC,yBAAyB,QAI3B94H,cAAgB,OAuIhB+4H,aAAe,SAAC/xH,GACd,IAAM6wH,EAAc7wH,EAAEggB,OAAOlc,MAAMtJ,SAAWf,MAAMuG,EAAEggB,OAAOlc,OAASmH,KAAKgF,MAAMjQ,EAAEggB,OAAOlc,OAAS,GAC7FmtH,EAAcnzH,EAAK9E,cAAc8R,MAAM+lH,GAAaniH,GAAG,IAAM5Q,EAAK9E,cAAc8R,MAAM+lH,GAAaxjG,IAAIvvB,EAAKzC,MAAM21H,aACxHlzH,EAAKoD,SAAS,CACZ2vH,cACAI,mBAIJe,aAAe,SAAChyH,GACd,IAAM8wH,EAAc9wH,EAAEggB,OAAOlc,MAAMtJ,SAAWf,MAAMuG,EAAEggB,OAAOlc,OAAS9D,EAAEggB,OAAOlc,MAAQ,GACjFotH,EAAc/lH,SAAS2lH,IAAc,IAAM3lH,SAAS2lH,IAAc,IACxEhzH,EAAKoD,SAAS,CACZ4vH,cACAI,cACAG,eAAe,UAInBY,aAAe,SAACZ,GACdvzH,EAAKk0H,aAAa,CAChBhyG,OAAO,CACLlc,MAAMutH,QAqFZa,iBAAmB,SAACrnH,GAElB/M,EAAKoD,SAAS,CACZkwH,eAFoB,OAMxBe,2BAA6B,SAACtnH,GAE5B/M,EAAKoD,SAAS,CACZwwH,oBAFyB,OAM7BU,iBAAmB,SAACtnG,GAClB,IAAMunG,EAAmBv0H,EAAK9E,cAAcy0D,qBAAqB3iC,EAAOhtB,EAAKzC,MAAMe,YAAYtC,UACzF63H,EAAsB7zH,EAAK9E,cAAc8R,MAAMggB,GAAQuC,IAAI,IAAMvvB,EAAK9E,cAAc8R,MAAMunH,GAAkB3jH,GAAG5Q,EAAKzC,MAAMu2H,qBAAqBj9C,oBACrJ72E,EAAKoD,SAAS,CACZywH,2BAIJW,0BAA4B,SAAC39C,GAC3B,MAAO,CACLr8D,WAAW,cACXi5C,aAAa,CAACzzD,EAAKzC,MAAMu2H,qBAAqB9tH,MAAMhG,EAAKzC,MAAMu2H,qBAAqBr/C,SAAS52E,GAAGg5E,EAAmB72E,EAAKzC,MAAMe,YAAYm2H,iBAI9IC,0BAA4B,SAAC3nH,GAK3B/M,EAAK20H,mBAGPC,6BAA+B,SAAC7nH,GAC9B,IAAM+oE,EAAU91E,EAAK9E,cAAc6V,gBAAgB,CAAC,YAAY,SAAS,cAAc,eAAe,WAAWhE,GACjH/M,EAAKoD,SAAS,CACZ0yE,wFAvRE36E,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKw5H,kSAICtB,EAAkB,YACWl4H,KAAKD,cAAci5E,wBAAwBh5E,KAAKE,MAAMwQ,uBACpElP,QAAS,SAAA22E,GACxBA,EAASmB,UACX4+C,EAAgB3qH,KAAK4qE,KAInBuhD,EAA+B15H,KAAKE,MAAMirH,UAAUE,OAAS6M,EAAgBvoG,KAAM,SAAA+qD,GAAK,OAAIxoE,SAASwoE,EAAM7vE,SAAWqH,SAAS7R,EAAKH,MAAMirH,UAAUE,UAAY,KAEhKuN,EAAwBV,EAAgB32H,OAAO,EAAI22H,EAAgB,GAAK,KACxES,EAAuBe,IAA8Dd,GAAyB,MAEpH54H,KAAKiI,SAAS,CACZiwH,kBACAS,uBACAC,0BAGIpb,EAAiB,CAAC,UAAU,SAAStnF,SAASl2B,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMirH,UAAUG,OAAStrH,KAAKoC,MAAMo7G,eACtHmc,EAAoB35H,KAAKE,MAAMirH,UAAUE,QAAUhqH,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiB0lB,SAASl2B,KAAKE,MAAMirH,UAAUE,QACnIzhH,EAAgB+vH,EAAoB35H,KAAKE,MAAMirH,UAAUE,OAAShqH,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiB,GAE1HxQ,KAAK4iH,kBAAkBpF,GACvBx9G,KAAK45H,oBAAoBhwH,sLAIL4uH,EAAmBr1H,wFACjCigC,EAAkBpjC,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,oBAChEwgC,EAAep2C,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAYwtB,aAC5EpjC,KAAKD,cAAcs3C,YAAnB,GAAA5zC,OAAkC2yC,EAAlC,cAAA3yC,OAA2DN,EAAY8J,QAAvE,0BAAjBy1D,YACUA,EAASn4D,4BACjBmtH,EAAWh1D,EAASn4D,KAEpBwtH,EAAcL,GAAYA,EAAQ,WAAAj0H,OAAY+0H,IAAwBx4H,KAAKD,cAAcsV,iBAAiBqiH,EAAQ,WAAAj0H,OAAY+0H,IAAsBr1H,EAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,qBACpMkmH,oCAEF,4LAGgB11H,EAAUC,2EACjCtC,KAAKI,YAECya,EAAuBvY,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,cAC9DiwH,EAA4Bv3H,EAAUk2H,qBAAuBx4H,KAAKoC,MAAMo2H,oBAC1E39G,GAAwBg/G,IAC1B75H,KAAK85H,kSAMDC,EAAqC,QAA7B/5H,KAAKoC,MAAMwH,cACnBivH,EAA2B74H,KAAKoC,MAAMe,YAAYi5E,WAAWp8E,KAAKoC,MAAMo2H,6BAGxEz2G,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAa7oC,KAAKoC,MAAMe,YAAYD,MAAOlD,KAAKoC,MAAMe,YAAYm2H,YAAat5H,KAAKoC,MAAMe,YAAY2lC,KACjH9oC,KAAKE,MAAM2oC,aAAagwF,EAAyBpxH,KAAMoxH,EAAyB5rH,QAAS4rH,EAAyB/vF,8BAS1G/mB,QAAQqD,IAAI,CACpBplB,KAAKg6H,gBAAgBh6H,KAAKoC,MAAMo2H,mBAAmBx4H,KAAKoC,MAAMe,aAC9DnD,KAAKD,cAAc2yB,gBAAgB1yB,KAAKoC,MAAMe,YAAYD,MAAMlD,KAAKE,MAAMwQ,SAC3E1Q,KAAKD,cAAc2kE,mBAAmB1kE,KAAKoC,MAAMwH,cAAc5J,KAAKE,MAAMo6E,aAAartE,QAAQjN,KAAKE,MAAMwQ,SAC1G1Q,KAAKD,cAAc2kE,mBAAmBm0D,EAAyBpxH,KAAKzH,KAAKE,MAAMo6E,aAAartE,QAAQjN,KAAKE,MAAMwQ,SAC/GqpH,EAAQ/5H,KAAKD,cAAcu+E,cAAct+E,KAAKE,MAAMwQ,SAAQ,GAAS1Q,KAAKD,cAAc2yB,gBAAgBmmG,EAAyBpxH,KAAKzH,KAAKE,MAAMwQ,SAAQ,wCAVzJqnH,OACAQ,OACAE,OACAN,OAUFn4F,GATEA,SAS6BhgC,KAAKD,cAAc8R,MAAM,GACxD0mH,EAAoBA,GAAqBv4H,KAAKD,cAAc8R,MAAM,GAElE7R,KAAKiI,SAAS,CACZ8vH,cACA/3F,eACAm4F,gBACAI,oBACAE,qBACAI,oNAIsBjvH,2EACJ,GACA,GACdzG,EAAcnD,KAAKE,MAAMs7G,UAAUhrG,gBAAgB5G,GACnD4uH,EAAqBn3H,OAAOC,KAAK6B,EAAYi5E,YAAY,GAE/Dp8E,KAAKiI,SAAS,CACZ2vH,YALkB,GAMlBC,YAPkB,GAQlB10H,cACAyG,gBACA4uH,2KAIqBA,GACvBx4H,KAAKiI,SAAS,CACZuwH,mEAKF,IAAMZ,EAAc53H,KAAKoC,MAAM21H,YAAYzqH,UAC3CtN,KAAK84H,aAAa,CAChB/xG,OAAO,CACLlc,MAAM+sH,6LAkCV53H,KAAKiI,SAAS,CACZ+W,SAAQ,IAIJi7G,EAAY,CAChBC,OAAQl6H,KAAKoC,MAAMy1H,YACnBsC,YAAan6H,KAAKoC,MAAMw1H,YACxBwC,SAAUp6H,KAAKoC,MAAMo2H,mBACrBl8F,gBAAiBt8B,KAAKoC,MAAMe,YAAY8J,QACxCotH,MAAOr6H,KAAKoC,MAAMe,YAAYi5E,WAAWp8E,KAAKoC,MAAMo2H,oBAAoBvrH,SAKpEm2B,EAAkBpjC,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,oBAChEwgC,EAAep2C,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAYwtB,IAC7Fk3F,YAAclkF,+BAAiC6jF,EAAUE,iCAAwBF,EAAUG,4BAAmBH,EAAUC,mCAA0BD,EAAU39F,0BAE3It8B,KAAKD,cAAcs3C,YAAYijF,aAAhD53D,SAEAw0D,EAAQx0D,GAAYA,EAASn4D,KAAOm4D,EAASn4D,KAAO,6BAGxDvK,KAAKiI,SAAS,CACZ+W,SAAQ,uBAEH,kBAIHzU,EAAOvK,KAAKE,MAAMogB,KAAKgC,IAAIwmB,IAAIyxF,iBACnC,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAAW,WACrD,CAACrD,EAAM9yF,MAAO8yF,EAAMsD,WAAYtD,EAAMuD,UAAWvD,EAAMwD,YAAaxD,EAAMvsH,EAAGusH,EAAMx5E,EAAGw5E,EAAM9+F,IAGxFuiG,EAAa36H,KAAKD,cAAcw3B,KAAK,aACfv3B,KAAKD,cAAcgzB,oBAAoB/yB,KAAKE,MAAMo6E,aAAa7yE,KAAK,yBAA1Fo9F,SACA+1B,EAAY56H,KAAKD,cAAcw3B,KAAK2/F,EAAM9yF,OAC1Cy2F,EAAeD,EAAUE,IAAI96H,KAAKD,cAAcw3B,KAAKstE,IAAgBk2B,KAAK,KAAOzH,IAAIsH,GACrFI,EAAch7H,KAAKD,cAAc+3B,MAAMmiG,EAAUE,YAAY51G,YAC7D8zG,EAAkBwC,EAClBlD,EAAY33H,KAAKD,cAAcsV,iBAAiBgjH,EAAgBr4H,KAAKoC,MAAMe,YAAYtC,UACvFi3H,EAAaH,EAAUrzG,IAAItkB,KAAKoC,MAAMw1H,aAAavqH,MAAM,KAAKiX,IAAItkB,KAAKoC,MAAMy1H,aAAaxqH,MAAM,KAIhG0S,EAAoB,CACxBk6G,EAAU39F,gBACV29F,EAAUI,MACVW,EACAf,EAAUC,OACVS,EACAtC,EACA9tH,GAGI+tH,EAAqD,QAAlCt4H,KAAKoC,MAAMo2H,mBAA+BqC,EAAe,KAMrE,GACG,EAEhB76H,KAAKiI,SAAS,CACZi5G,KAJW,EAKXgW,QACAl4G,SALc,EAMd24G,YACAG,aACAO,kBACAC,mBACAv4G,mKAgDcy9F,GACZA,IAAmBx9G,KAAKoC,MAAMo7G,gBAChCx9G,KAAKiI,SAAS,CACZu1G,8DAKa7iC,GACjB,IAAMg+C,EAAuB34H,KAAKoC,MAAMu2H,qBAAuB34H,KAAKoC,MAAM81H,gBAAgBvoG,KAAM,SAAA+qD,GAAK,OAAIxoE,SAASwoE,EAAM7vE,SAAW8vE,IAAY,KAE/I36E,KAAKiI,SAAS,CACZ0wH,yDAWF34H,KAAKiI,SAAS,CACZi5G,KAPW,EAQXgW,MAPY,KAQZv8C,QAPc,KAQdk9C,YAPkB,GAQlBD,YAPkB,GAQlB73G,kBAPwB,sCAWnB,IAAAvV,EAAAxK,KACP,OACE4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,CAAC,EAAE,KACVE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,kBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAER0d,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEdqI,KAAM,WACNoQ,UAAW,UACX3Y,KAAM,eACN+Y,YAAa,UACbV,SAAyC,YAA9B7d,KAAKoC,MAAMo7G,eACtBv4G,YAAc,SAAA8B,GAAC,OAAIyD,EAAKo4G,kBAAkB,eAE5Ch6G,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAER0d,UAAW,CACTjZ,SAAS,CAAC,EAAE,IAEdqI,KAAM,aACNoQ,UAAW,SACX3Y,KAAM,eACN+Y,YAAa,UACbV,SAAyC,UAA9B7d,KAAKoC,MAAMo7G,eACtBv4G,YAAc,SAAA8B,GAAC,OAAIyD,EAAKo4G,kBAAkB,eAKhB,YAA9B5iH,KAAKoC,MAAMo7G,gBACT50G,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHF,GAAG,EACH7N,MAAM,GAER4c,UAAU,EACVlC,eAAe,EACf5N,KAAM,mBACNqQ,UAAW,CACTxY,MAAM,cAER+Y,UAAW,CACT/Y,MAAM,cAERJ,KAAI,yJAEJoD,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACE37G,GAAI,EACJE,WAAY,IACZC,MAAO,UACPF,SAAU,OACVG,WAAY,UACZohB,KAAM,wDAENre,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,UAHlB,YAMEwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,QACN9B,MAAO,UACP6B,KAAM,cAVV,OAkBwB,YAA9BzH,KAAKoC,MAAMo7G,eACT50G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPE,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKoC,MAAM6+G,OAAOh+G,IAAK,SAAAk+G,GAAS,OAC1Cv4G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,UACL+qG,eAAe,OACf7rH,OAAO5E,EAAKpI,MAAM8+G,MAAMC,EAAY,UAAY,WAElDz7G,SAAU,EACVyI,UAAW,SACXrK,IAAG,QAAAL,OAAU09G,GACbv7G,MAAQ4E,EAAKpI,MAAM8+G,MAAMC,EAAY,UAAY,WACjDt7G,WAAa2E,EAAKpI,MAAM8+G,MAAMC,EAAY,UAAY,WACtD+Z,YAAc1wH,EAAKpI,MAAM8+G,MAAMC,EAAY,UAAY,YAEtD32G,EAAKpI,MAAM6+G,MAAME,OAK1Bv4G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNoE,OAAO,QAETwF,MAAQ,EAAExJ,OAAOC,KAAKtB,KAAKoC,MAAM6+G,OAAO1/G,OAAQvB,KAAKoC,MAAM8+G,QAI5DlhH,KAAKoC,MAAMwH,eAAkB5J,KAAKoC,MAAM49B,aAcrChgC,KAAKoC,MAAMu4E,QACb/xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,GAELjO,KAAM,UACNqQ,UAAW,CACTxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,qEAAA/B,OAAuEzD,KAAKoC,MAAMu4E,QAAlF,eAEN/xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,OACPC,WAAY,UACZC,QAAS9F,KAAKm7H,MAAMz6G,KAAK1gB,OAJ3B,kBASCA,KAAKoC,MAAM80H,MA4NdtuH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAJT,kBAQAgD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHX,GAAG,EACHY,GAAG,GAEL6O,UAAU,EACVlC,eAAe,GAEf/S,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,aAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAJT,gBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN5F,KAAKoC,MAAMwH,eAEdhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,iBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN5F,KAAKoC,MAAMw1H,YANd,IAM4B53H,KAAKoC,MAAMo2H,oBAEvC5vH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,iBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN5F,KAAKoC,MAAMy1H,YANd,SAQAjvH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN5F,KAAKoC,MAAMu1H,UAAUrqH,QAAQ,GANhC,IAMqCtN,KAAKoC,MAAMo2H,oBAEhD5vH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN5F,KAAKoC,MAAM01H,WAAWxqH,QAAQ,GANjC,MASF1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM49B,cAAcztB,GAAGvS,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM80H,MAAM9yF,QAC7Fx7B,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACF2M,GAAG,IAGLxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,MACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,yBAMyBnO,KAAKoC,MAAMo2H,mBANpC,oBAQA5vH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,OACPC,WAAY,UACZC,QAAS9F,KAAKm7H,MAAMz6G,KAAK1gB,OAJ3B,mBAUDA,KAAKoC,MAAM+1H,cA4DdvvH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEkgB,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW4gH,IACXhiG,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,IACTiG,aAAa,EACbC,UAAU,UACV0D,MAAM,eACNzD,SAASpH,KAAKoC,MAAMk7G,gBAEtBxrG,OAAQ,eACRuN,WAAY,WACZxU,MAAO7K,KAAKoC,MAAMk2H,iBAClB14G,OAAQ5f,KAAKoC,MAAM2d,kBACnBR,aAAcvf,KAAKE,MAAMo6E,aAAa7yE,KACtCO,SAAUhI,KAAKy5H,6BAA6B/4G,KAAK1gB,SAEnD4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,OACPC,WAAY,UACZC,QAAS9F,KAAKm7H,MAAMz6G,KAAK1gB,OAJ3B,kBA1FF4I,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACF2M,GAAG,IAGLxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,MACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,+DAQAvF,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEkgB,YAAa,CACXnf,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW4gH,IACXhiG,eAAgB,CACdpb,SAAS,EACTC,WAAW,EACX+B,KAAK,SACLzG,MAAM,CAAC,EAAE,IACTiG,aAAa,EACb2D,MAAM,UACN1D,UAAU,WAEZ2K,OAAQ,UACRuN,WAAY,UACZrX,SAAUhI,KAAKi5H,iBAAiBv4G,KAAK1gB,MACrCuf,aAAcvf,KAAKoC,MAAMy2H,yBAAyBpxH,KAClDmY,OAAQ,CAAC5f,KAAKE,MAAMo6E,aAAartE,QAAQjN,KAAKE,MAAMogB,KAAKmX,MAAM0uC,iBAAiB,UAElFv9D,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,OACPC,WAAY,UACZC,QAAS9F,KAAKm7H,MAAMz6G,KAAK1gB,OAJ3B,qBAhbZ4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,0BAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwC,GAAI,aACJutB,aAAa,EACb7T,cAAc,EACdxS,cAAe5J,KAAKoC,MAAMwH,cAC1BuT,SAAUnd,KAAK45H,oBAAoBl5G,KAAK1gB,MACxCwQ,gBAAiBxQ,KAAKE,MAAMs7G,UAAUhrG,oBAG1C5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJlN,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,8BAGAD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,MACXC,QAAO,kFAEPpoB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,MACND,KAAM,OACN7B,MAAO,gBAIbgD,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+vB,aAAa,EACbrmB,cAAe5J,KAAKoC,MAAMo2H,mBAC1Br7G,SAAUnd,KAAKo7H,yBAAyB16G,KAAK1gB,MAC7CwQ,gBAAiBxQ,KAAKoC,MAAMe,YAAYi5E,eAI1Cp8E,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM21H,aAAatiH,GAAG,GAClD7M,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,kCAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoJ,IAAK,EACLivG,KAAM,EACNjgH,MAAO,OACPR,KAAM,SACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZ0G,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXtE,MAAO7K,KAAKoC,MAAMw1H,YAClBz6G,SAAUnd,KAAK84H,aAAap4G,KAAK1gB,MACjCoF,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,SAC7C+xG,YAAW,UAAAp1G,OAAYzD,KAAKoC,MAAMo2H,mBAAmB3iH,cAA1C,aAEbjN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPsF,SAAU,OACVrF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVC,WAAY,EACZC,MAAO,YACPuI,UAAW,QACXtI,WAAY,YACZC,QAAU,SAACiB,GAAD,OAAOyD,EAAK6wH,qBACtB/0H,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAZjB,kBAekB1G,KAAKoC,MAAM21H,YAAYzqH,QAAQtN,KAAKE,MAAM4C,SAAW,EAAI,GAf3E,IAegF9C,KAAKoC,MAAMo2H,sBAI/F5vH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,sBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoJ,IAAK,EACLhR,MAAO,OACPR,KAAM,SACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZqE,YAAa,MACbsxH,YAAa,QACbrsH,gBAAiB,SACjBE,UAAW,kBACXtE,MAAO7K,KAAKoC,MAAMy1H,YAClBhf,YAAa,0BACb17F,SAAUnd,KAAK+4H,aAAar4G,KAAK1gB,MACjCqM,YAAarM,KAAKoC,MAAM61H,YAAc,aAAe,SAGpDj4H,KAAKoC,MAAM61H,aACVrvH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJpJ,SAAU,EACVE,MAAO,OAHT,2CASJgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ9a,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKoC,MAAMi1H,eAAep0H,IAAK,SAAAi3H,GACzC,IAAMqB,EAAa/wH,EAAKpI,MAAMi1H,cAAc6C,GACtCr8G,EAAWrT,EAAKpI,MAAMg2H,iBAAiB8B,EACvCj5H,EAAS,EAAEI,OAAOC,KAAKkJ,EAAKpI,MAAMi1H,eAAe91H,OAAQ,IAC/D,OACEqH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAMA,GAER4c,SAAUA,EACVlC,eAAe,EACf7X,IAAG,eAAAL,OAAiBy2H,GACpBj1H,YAAa,SAAA8B,GAAC,OAAIyD,EAAKwuH,aAAakB,KAEpCtxH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZwI,UAAW,SACXvI,MAAO4E,EAAKtK,MAAM2d,SAAW,YAAc,UAE1C09G,EAAW3tH,YAQ1BhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPG,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACkH,GAAA,EAAD,CACE9D,YAAa,CACX2J,GAAG,EACH9F,GAAG,CAAC,EAAG,GACPtB,KAAK,SACLR,aAAa,EACbC,UAAU,OACVC,UAAWpH,KAAKoC,MAAM41H,cAAgBh4H,KAAKoC,MAAMo2H,qBAAuBx4H,KAAKoC,MAAMy1H,cAAgB73H,KAAKoC,MAAM61H,aAEhH7uH,WAAY,YACZF,UAAWlJ,KAAKoC,MAAM4c,QACtB/Z,YAAc,SAAA8B,GAAC,OAAIyD,EAAKgxH,SAASz0H,QAKvC6B,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,GAELjO,KAAM,WACNqQ,UAAW,CACTxY,MAAM,YAERJ,KAAI,gBAAA/B,OAAkBzD,KAAKoC,MAAMwH,cAA7B,uCA7PZhB,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTgb,GAAG,EACH7a,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,uBAugBkB,UAA9BxF,KAAKoC,MAAMo7G,gBACb50G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGLjB,KAAKoC,MAAM81H,gBAAgB32H,OAAO,EAChCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,iBAGAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEkc,cAAc,EACd3U,KAAM,mBACNsT,QAAS/a,KAAKoC,MAAM81H,gBACpB/6G,SAAUnd,KAAKy7H,mBAAmB/6G,KAAK1gB,MACvCib,aAAcjb,KAAKoC,MAAMw2H,yBAGzB54H,KAAKoC,MAAMu2H,qBAAqBp/C,QAC9B3wE,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,GAELjO,KAAM,UACNqQ,UAAW,CACTxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,uCAAA/B,OAAyCzD,KAAKoC,MAAMu2H,qBAAqBv9C,cAAc9tE,QAAQ,GAA/F,KAAA7J,OAAqGzD,KAAKoC,MAAMu2H,qBAAqBr8C,WAArI,+BAGN1zE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,EACH5N,GAAG,IAGLxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,MACN9B,MAAO,WACP6B,KAAM,eAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,WACPuI,UAAW,UAHb,uBAKsBvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKoC,MAAMu2H,qBAAqBp9C,gBAAgBjuE,QAAQ,GAAjE,IAAsEtN,KAAKoC,MAAMu2H,qBAAqBr8C,YAL5H,oBAOA1zE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,QACPuI,UAAW,UAHb,yFASJvF,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,CACEqc,MAAO,MACHjf,KAAKE,MAFX,CAGE8+G,eAAe,EACf3B,gBAAgB,EAChBvrG,OAAQ,cACR3O,YAAanD,KAAKoC,MAAMe,YACxBm3E,aAAct6E,KAAKE,MAAMo6E,aACzBgjC,eAAgBt9G,KAAKoC,MAAMs2H,oBAC3B1wH,SAAUhI,KAAKu5H,0BAA0B74G,KAAK1gB,MAC9Cs/G,oBAAqBt/G,KAAKm5H,iBAAiBz4G,KAAK1gB,MAChDk/G,iBAAkBl/G,KAAKk5H,2BAA2Bx4G,KAAK1gB,MACvD6f,qBAAsB7f,KAAKq5H,0BAA0B34G,KAAK1gB,MAC1Du9G,mBAAoB,+DACpBv9E,aAAchgC,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAMm2H,mBAAmB9iH,GAAGzV,KAAKoC,MAAMu2H,qBAAqBl9C,kBAAoBz7E,KAAKoC,MAAMu2H,qBAAqBl9C,iBAAmBz7E,KAAKoC,MAAMm2H,oBAE1L3vH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMwH,cANjC,yBAgBdhB,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,GAELjO,KAAM,UACNqQ,UAAW,CACTxY,MAAM,YAERJ,KAAI,2DAvqCAtD,8CCyYXw5H,8MA7Ybt5H,MAAQ,CACN0P,OAAO,KACPosG,QAAQ,KACRyd,YAAY,KACZx4H,YAAY,KACZy4H,aAAa,KACb57F,aAAa,KACbs6C,aAAa,KACb1wE,cAAc,KACdyzG,gBAAe,EACfE,mBAAmB,KACnB2Q,yBAAwB,KAI1BnuH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,gMAGkBxF,EAAUC,6EACjCtC,KAAKI,YAECqgH,EAAiBn+G,EAAUwP,SAAW9R,KAAKoC,MAAM0P,QAAY9R,KAAKE,MAAM4R,SAAWzP,EAAUyP,OAC7F+pH,EAAuB5rH,KAAKC,UAAUlQ,KAAKE,MAAMwwH,iBAAmBzgH,KAAKC,UAAU7N,EAAUquH,eAC7FoL,EAAsB7rH,KAAKC,UAAUlQ,KAAKE,MAAM0wH,gBAAkB3gH,KAAKC,UAAU7N,EAAUuuH,eAC7FnQ,GAAiBob,GAAwBC,IAC3C97H,KAAK6H,wQAKDiK,EAAS9R,KAAKE,MAAM4R,QAAU9R,KAAKoC,MAAM0P,QAAU,OACzD9R,KAAKiI,SAAS,CACZ6J,UACA,WACAzR,EAAK07H,cACL17H,EAAK27H,uMAIa1hD,4EAEfA,4CACI,UAGLt6C,EAAe,UACXs6C,EAAa7yE,YACd,+CACkBzH,KAAKD,cAAcu+E,cAAct+E,KAAKE,MAAMwQ,uBAAjEsvB,uDAIMhgC,KAAKE,MAAM2oC,aAAayxC,EAAa7yE,KAAK6yE,EAAartE,QAAQqtE,EAAaxxC,8BAC7D9oC,KAAKD,cAAc2yB,gBAAgB4nD,EAAa7yE,KAAKzH,KAAKE,MAAMwQ,wBAArFsvB,6CAIJA,EAAeA,GAAgBhgC,KAAKD,cAAc8R,MAAM,qBAEjDmuB,sQAKFhgC,KAAKE,MAAMs7G,UAAUkV,eAAkB1wH,KAAKE,MAAMs7G,UAAUoV,uDACxD,0BAOC7uG,QAAQqD,IAAI,CACpBplB,KAAK0yB,gBAAgB1yB,KAAKE,MAAMs7G,UAAUoV,cAC1C5wH,KAAK0yB,gBAAgB1yB,KAAKE,MAAMs7G,UAAUkV,oDAJ1CiL,OACAC,OAMI57F,EAAqC,SAAtBhgC,KAAKoC,MAAM0P,OAAoB8pH,EAAeD,EAGnE37H,KAAKiI,SAAS,CACZ0zH,cACAC,eACA57F,+JAIc,IAAAx1B,EAAAxK,KACZk+G,EAAU,KACV/6G,EAAc,KACd68B,EAAe,KACfp2B,EAAgB,KAChByzG,GAAiB,EACjBE,EAAqB,KAEzB,OAAQv9G,KAAKoC,MAAM0P,QACjB,IAAK,OACHurG,GAAiB,EACjBr9E,EAAehgC,KAAKoC,MAAMw5H,aAC1Bz4H,EAAcnD,KAAKE,MAAMs7G,UAAUkV,cACnC9mH,EAAgB5J,KAAKE,MAAMs7G,UAAUkV,cAAcjpH,KACnD81G,EAAkB,eAAA95G,OAAkBzD,KAAKE,MAAMs7G,UAAUoV,aAAanpH,KAApD,iDAClBy2G,EAAU,CACRnwG,KAAK,eAILvI,KAAI,aAAA/B,OAAczD,KAAKE,MAAMs7G,UAAUkV,cAAcjpH,KAAjD,aAAAhE,OAAiEzD,KAAKE,MAAMs7G,UAAUoV,aAAanpH,OAE3G,MACA,IAAK,SACHmC,EAAgB5J,KAAKE,MAAMs7G,UAAUoV,aAAanpH,KAClD41G,GAAiB,EACjBr9E,EAAehgC,KAAKoC,MAAMu5H,YAC1Bx4H,EAAcnD,KAAKE,MAAMs7G,UAAUoV,aACnCrT,EAAkB,oBAAA95G,OAAuBzD,KAAKE,MAAMs7G,UAAUkV,cAAcjpH,KAA1D,iDAClBy2G,EAAU,CACRnwG,KAAK,aAILvI,KAAI,eAAA/B,OAAgBzD,KAAKE,MAAMs7G,UAAUoV,aAAanpH,KAAlD,kBAAAhE,OAAuEzD,KAAKE,MAAMs7G,UAAUkV,cAAcjpH,OAOpHzH,KAAKiI,SAAS,CACZi2G,UACA/6G,cACA68B,eACAp2B,gBACAyzG,iBACAE,sBACA,WACA/yG,EAAKuxH,kDAICjqH,GACR9R,KAAKiI,SAAS,CACZ6J,wDAIiBF,EAAGigB,EAAOjS,GAAO,IAAAs4F,EAAAl4G,KAChCk+G,EAAU,KAEd,OAAQl+G,KAAKoC,MAAM0P,QACjB,IAAK,OACH,IAAMmqH,EAAUrqH,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkBgrG,EAAKh4G,MAAMs7G,UAAUoV,aAAa3jH,QAAQC,gBAAkB,KACzKgvH,EAAeD,EAAU/pH,SAAS+pH,EAAQ1xH,KAAK,IAAMsnB,EACzDqqG,EAAel8H,KAAKD,cAAcsV,iBAAiB6mH,EAAal8H,KAAKoC,MAAMe,YAAYtC,UACvFq9G,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,6BAAA/B,OAA8By4H,EAAa5uH,QAAQ,GAAnD,KAAA7J,OAAyDzD,KAAKE,MAAMs7G,UAAUoV,aAAanpH,KAA3F,cAER,MACA,IAAK,SACH,IAAM00H,EAAcvqH,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkBgrG,EAAKh4G,MAAMs7G,UAAUoV,aAAa3jH,QAAQC,gBAAkB,KAC7KkvH,EAAkBD,EAAcjqH,SAASiqH,EAAY5xH,KAAK,IAAMsnB,EACpEuqG,EAAkBp8H,KAAKD,cAAcsV,iBAAiB+mH,EAAgBp8H,KAAKoC,MAAMe,YAAYtC,UAC7Fq9G,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,6BAAA/B,OAA8B24H,EAAgB9uH,QAAQ,GAAtD,KAAA7J,OAA4DzD,KAAKE,MAAMs7G,UAAUkV,cAAcjpH,KAA/F,cAQVzH,KAAK+7H,cAEL/7H,KAAKiI,SAAS,CACZi2G,yDAIiBrsF,GACnB,IAAMjS,EAAS,GACf,OAAQ5f,KAAKoC,MAAM0P,QACjB,IAAK,OACH8N,EAAO/U,MAAQgnB,EACfjS,EAAO04C,aAAe,GACtB14C,EAAOP,WAAarf,KAAKE,MAAMs7G,UAAUkV,cAAcC,WACzD,MACA,IAAK,SACH/wG,EAAO/U,MAAQ,KACf+U,EAAO04C,aAAe,CAACzmC,GACvBjS,EAAOP,WAAarf,KAAKE,MAAMs7G,UAAUoV,aAAaC,aAK1D,OAAOjxG,mCAGA,IAAAosG,EAAAhsH,KAEDq8H,IAAcr8H,KAAKE,MAAMm8H,UAE/B,OACEzzH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB4a,GAAI,CAAC,EAAEqgH,EAAY,EAAI,IAEvBzzH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBH,MAAO,CAAC,EAAEo7H,EAAY,EAAI,MAGvBr8H,KAAKE,MAAMwQ,QAoCV9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IAGJjB,KAAKE,MAAM4R,QACVlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,sBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,OACN2Y,UAAW,UACXpQ,KAAM,gBACNwQ,YAAa,UACbV,SAAiC,SAAtB7d,KAAKoC,MAAM0P,OACtB7M,YAAc,SAAA8B,GAAC,OAAIilH,EAAKuF,UAAU,YAEpC3oH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,SACN2Y,UAAW,SACXpQ,KAAM,cACNwQ,YAAa,UACbV,SAAiC,WAAtB7d,KAAKoC,MAAM0P,OACtB7M,YAAc,SAAA8B,GAAC,OAAIilH,EAAKuF,UAAU,gBAO5C3oH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP6N,GAAIutH,EAAY,EAAI,GAGQ,OAA1Br8H,KAAKoC,MAAM49B,aACTp3B,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEm9G,gBAAgB,EAChBvrG,OAAQ9R,KAAKoC,MAAM0P,OACnBosG,QAASl+G,KAAKoC,MAAM87G,QACpB/6G,YAAanD,KAAKoC,MAAMe,YACxB68B,aAAchgC,KAAKoC,MAAM49B,aACzBs6C,aAAct6E,KAAKE,MAAMs7G,UAAUoV,aACnC5oH,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAE/B19F,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,QAErD4I,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMwH,cANjC,OAMoD5J,KAAKoC,MAAM0P,OAN/D,uBAYNlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,0BAjJlBoD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC2E,KAAM,QACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,uDAQAvF,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAKE,MAAMo8H,2BAL1B,sBAtQSp6H,iEC6RZq6H,8MA5Rbn6H,MAAQ,CACNkH,UAAU,KACVkzH,WAAW,KACXC,YAAY,KACZ7yH,cAAc,KACdwmE,oBAAoB,QAItBrwE,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,gNAQLJ,KAAKymH,qMAGkBpkH,EAAWC,mEAClCtC,KAAKI,6RAKC4+B,EAAY,GACdw9F,EAAax8H,KAAKD,cAAc8R,MAAM,GACpCkC,EAAyC,SAAhC/T,KAAKE,MAAM8T,0BAEpBhU,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKtB,KAAKE,MAAMsQ,iBAAvD,eAAAO,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAwE,SAAAC,EAAOjO,GAAP,IAAAC,EAAAsR,EAAAhC,EAAAutB,EAAA,OAAAvN,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtEtO,EAAc9C,EAAKH,MAAMsQ,gBAAgBtN,GAD6BqO,EAAAE,KAAA,EAE7CpR,EAAKN,cAAc2yB,gBAAgBvvB,EAAY4wB,KAAK7wB,MAAM7C,EAAKH,MAAMwQ,SAFxB,YAEtE+D,EAFsElD,EAAAgD,MAAA,CAAAhD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjDpR,EAAKN,cAAcuiC,kBAAkBn/B,GALY,cAKpEsP,EALoElB,EAAAgD,KAAAhD,EAAAE,KAAA,GAM/CpR,EAAKN,cAAcs0B,oBAAoB5f,EAAiBpH,MAAMoF,GAAYvP,EAAMC,EAAY4Q,GAN7C,SAMpEisB,EANoEzuB,EAAAgD,MAQzDkB,GAAG,KAClBupB,EAAU97B,GAAS88B,EAGnBw8F,EAAaA,EAAWnqH,KAAK2tB,IAZ2C,yBAAAzuB,EAAAoB,SAAAxB,EAAAnR,SAAxE,gBAAA4S,GAAA,OAAA7B,EAAA8B,MAAA7S,KAAA8S,YAAA,2BAkB8B9S,KAAKD,cAAc8hG,yBAAyB7hG,KAAKE,MAAMwQ,QAAQ1Q,KAAKE,MAAMsQ,gBAAgB,MAAM,MAAK,WAAnIixF,WAEJpgG,OAAOC,KAAKmgG,GAAuBjgG,QAAS,SAAAmsE,GAC1C,IAAMozB,EAAkB1gG,EAAKN,cAAc8R,MAAM4vF,EAAsB9zB,IACvE3uC,EAAU2uC,GAAYozB,EACtBy7B,EAAaA,EAAWnqH,KAAK0uF,KAI3Bz3F,EAAY,GAElBjI,OAAOC,KAAK09B,GAAWx9B,QAAQ,SAAA0B,GAC7B,IAAM88B,EAAehB,EAAU97B,GAC/B,GAAI88B,EAAavqB,GAAG,GAAG,CACrB,IAAMq2G,EAAkB9rF,EAAa1b,IAAIk4G,GAAYnvH,MAAM,KACvDqvH,EAAgBr8H,EAAKN,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,QAAQ,QACrG6mH,EAAgBA,EAAgBA,EAAc/uH,KAAK,KAAO,UAC1DrE,EAAUiE,KAAK,CACb7K,GAAGQ,EACH0C,MAAM,OAAO82H,EAAc,IAC3B7xH,MAAMmH,KAAKswD,MAAMwpD,GACjBl+G,MAAM1K,EAAMkjB,OAAO,EAAE,GAAGvQ,cAAc3S,EAAMkjB,OAAO,QAKzDpmB,KAAKiI,SAAS,CACZ+2B,YACA11B,YACAkzH,mJAIK,IAAAhyH,EAAAxK,KAEDuJ,EAAa,CACjBO,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChBvD,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACd8E,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GACV,OAAI+C,WAAW/C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXC,YAAa,SAAAT,GACX,OAAO,MAETzD,MAAM,CACJmE,QAAS,CACPC,UAAW,CACTtC,QAAS,SAGb0C,OAAO,CACL5F,KAAK,CACHE,SAAS,GACTC,WAAW,IACX0F,WAAYzE,KAAM0E,MAAMC,YAG5BC,QAAQ,CACNhG,KAAK,CACHE,SAAS,GACTC,WAAW,IACX0F,WAAYzE,KAAM0E,MAAMC,aAI9BE,sBAAsB,EACtBC,sBAAsB,GACtBE,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9BuwH,wBAAwBzqH,SAAgC,GAAvBlS,KAAKoC,MAAMq6H,aAC5ClwH,OAAQvM,KAAKE,MAAM4C,SAAW,CAAE0J,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHrC,aAAa,SAACC,EAAMxD,GAClB,IAAM6C,EAAgBW,EAAK7H,GACrB0tE,EAAsBxmE,EAAgBY,EAAKtK,MAAMsQ,gBAAgB5G,IAAkBY,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAShM,EAAciM,gBAAkB,KAC9KrL,EAAKvC,SAAS,CACZ2B,gBACAwmE,yBAGJ3lE,aAAa,SAACF,EAAMxD,GAClByD,EAAKvC,SAAS,CACZ2B,cAAc,KACdwmE,oBAAoB,QAGxB5kE,QAAQ,CACN,CACEq9G,UAAW,GACXC,WAAY,GACZK,WAAYnpH,KAAKE,MAAM4C,SAAW,GAAK,GACvCimH,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXG,cAAexiH,KAAMC,OAAOkR,OAC5BmxG,YAAa,SACbG,QAAS,CACP,CACE5vD,GAAI,QACJnzD,MAAO,CACL8iH,cAAe,aAQrBx/G,IAA6C,OAA7B5J,KAAKoC,MAAMwH,gBAA0B5J,KAAKoC,MAAM48B,UAAUh/B,KAAKoC,MAAMwH,iBAAiB5J,KAAKoC,MAAM48B,UAAUh/B,KAAKoC,MAAMwH,eACtIgzH,EAAe58H,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAM8T,iBAAiB,SAC5F+oF,IAAe/8F,KAAKoC,MAAMwH,eAAgB5J,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS5V,KAAKoC,MAAMwH,cAAciM,cAAc,wBAE5I,OACEjN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,IAGJjB,KAAKoC,MAAMo6H,YAAc5yH,IACxBhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEqF,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACXjN,WAAY,SACZD,MAAO,CAAC,MAAM,OACdgN,SAAU,WACV5I,OAAQ,CAAC,MAAM,OACflE,cAAe,SACfC,eAAgB,UAGdwI,EACEhB,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KACEzpG,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACE9rF,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJkO,GAAG,EACH/I,OAAO,UAGXnC,MAAOlD,KAAKoC,MAAMwH,cAClBzG,YAAanD,KAAKoC,MAAMguE,sBAE1BxnE,EAAA9G,EAAAC,cAACjC,GAAA,EAAD,CACEmC,UAAW,CACTwD,GAAG,EACHC,SAAS,EACTC,WAAW,GAEb9E,SAAU,EACV6E,SAAU,CAAC,EAAE,GACb5E,aAAc,EACd6E,WAAY,CAAC,EAAE,GACfhE,KAAOo7F,EAAe,IAAM,KAC5Bx8F,OAAQP,KAAKoC,MAAM48B,UAAUh/B,KAAKoC,MAAMwH,iBAE1ChB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAEN5F,KAAKoC,MAAMwH,gBAIhBhB,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KACEzpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ/I,OAAQ,QACRgJ,IAAKuuH,IAEPh0H,EAAA9G,EAAAC,cAACjC,GAAA,EAAD,CACE6B,KAAM,IACNM,UAAW,CACTwD,GAAG,EACHC,SAAS,EACTC,WAAW,GAEb9E,SAAU,EACV6E,SAAU,CAAC,EAAE,GACb5E,aAAc,EACd6E,WAAY,CAAC,EAAE,GACfpF,OAAQP,KAAKoC,MAAMo6H,aAErB5zH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAHT,iBAYZgD,EAAA9G,EAAAC,cAAC4sB,EAAA,EAADttB,OAAAuB,OAAA,CACEnC,KAAM+N,MACFjF,EAFN,CAGEkF,YAAY,EACZlE,KAAMvK,KAAKoC,MAAMkH,UACjBmR,SAAUza,KAAKE,MAAMua,SACrBC,eAAgB1a,KAAKE,MAAMua,oBAtRRvY,wBC6dd26H,8MA7dbz6H,MAAQ,CACN06H,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACPp8H,MAAM,EAAE,GAEVq8H,WAAW,CACTD,KAAK,EAAE,EACPp8H,MAAM,EAAE,GAEVs8H,WAAW,CACTF,KAAK,IACLp8H,MAAM,EAAE,EACRu8H,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACLp8H,MAAM,KAERy8H,WAAW,CACTL,KAAK,EAAE,GACPp8H,MAAM,EAAE,IAEV08H,KAAO,CACLN,KAAK,EACLp8H,MAAM,EAAE,GACRu8H,WAAW,OAGfhG,GAAG,CACDmG,KAAO,CACLN,KAAK,EACLp8H,MAAM,EAAE,GAEV28H,UAAU,CACRP,KAAK,EACLp8H,MAAM,EAAE,GAEV48H,UAAU,CACRR,KAAK,EACLp8H,MAAM,GACNu8H,WAAW,WAOnBz9H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK89H,oMAGkBz7H,EAAUC,mEACjCtC,KAAKI,gKAGgB28H,GACrB/8H,KAAKiI,SAAS,CACZ80H,2MAKEgB,EAAa,GACbjB,EAAiB,GAGf/oH,EAAyC,SAAhC/T,KAAKE,MAAM8T,iBAEpBgqH,EAAqB,CACzBC,SAASj+H,KAAKD,cAAc8R,MAAM,GAClCR,WAAWrR,KAAKD,cAAc8R,MAAM,GACpCqsH,aAAal+H,KAAKD,cAAc8R,MAAM,aAGlC7R,KAAKD,cAAc+Q,aAAa9Q,KAAKE,MAAMiQ,cAA3C,eAAAY,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAyD,SAAAC,EAAOjO,GAAP,IAAAC,EAAAm9B,EAAArsB,EAAA+N,EAAA3Q,EAAAozB,EAAAotD,EAAArlB,EAAAyxD,EAAAC,EAAAz7F,EAAAD,EAAA27F,EAAAC,EAAAC,EAAA,OAAA5rG,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvDtO,EAAc9C,EAAKH,MAAMsQ,gBAAgBtN,GADcqO,EAAAE,KAAA,EAE/BpR,EAAKN,cAAc+iC,mBAAmB3/B,EAAY9C,EAAKH,MAAMwQ,SAF9B,cAEvD4vB,EAFuD/uB,EAAAgD,KAAAhD,EAAAE,KAAA,EAIPsQ,QAAQqD,IAAI,CAChE/kB,EAAKN,cAAcs0B,oBAAoBiM,EAAgBp9B,EAAMC,EAAY4Q,GACzE1T,EAAKN,cAAc6kC,eAAe,CAAC1hC,GAAO7C,EAAKH,MAAMwQ,SACrDrQ,EAAKN,cAAcuiC,kBAAkBn/B,KAPsB,cAAA8Q,EAAA1C,EAAAgD,KAAAyN,EAAA3gB,OAAA4yB,EAAA,EAAA5yB,CAAA4S,EAAA,GAItD5C,EAJsD2Q,EAAA,GAI3CyiB,EAJ2CziB,EAAA,GAI/B6vE,EAJ+B7vE,EAAA,GAUvDwqD,EAAeqlB,EAAevtE,IAAImgB,EAAYvhC,IAAQoP,MAAM,GAC5D2rH,EAAW5sH,EAAWhE,MAAMm/D,GAE9B0xD,EAAe,EACfz7F,EAAW,EAd8ClxB,EAAAE,KAAA,GAerCpR,EAAKN,cAAc8iC,aAAa1/B,GAfK,SAevDq/B,EAfuDjxB,EAAAgD,OAgBvB,OAArBiuB,EAAU+wB,SACzB9wB,EAAWD,EAAUO,OACrBm7F,EAAe7sH,EAAWhE,MAAMo1B,EAASne,IAAI,OAGzC65G,EAAmBnsH,KAAKgF,MAAMinH,EAAS35G,IAAI45G,GAAc7wH,MAAM,MAE/D+wH,EAAgB/8H,OAAOC,KAAKjB,EAAK+B,MAAM86H,iBAAiBvrH,OAAO,SAAA0rH,GAAI,OAAIA,GAAMc,IAC7EE,EAAkBnsH,SAASksH,EAActpH,OAE/CipH,EAAWM,GAAmBN,EAAWM,GAAmBN,EAAWM,GAAiB,EAAI,EAEvFh+H,EAAKN,cAAc8R,MAAMR,GAAY7Q,SAAYH,EAAKN,cAAc8R,MAAMggF,GAAgBrxF,SAAYH,EAAKN,cAAc8R,MAAMosH,GAAUz9H,SAAYH,EAAKN,cAAc8R,MAAMqsH,GAAc19H,UAC/Ls8H,EAAe55H,GAAS,CACtB+6H,WACA5sH,aACA6sH,eACArsC,kBAOFmsC,EAAmBC,SAAWD,EAAmBC,SAAS5rH,KAAK4rH,GAC/DD,EAAmB3sH,WAAa2sH,EAAmB3sH,WAAWgB,KAAKhB,GACnE2sH,EAAmBE,aAAeF,EAAmBE,aAAa7rH,KAAK6rH,IA1CZ,yBAAA3sH,EAAAoB,SAAAxB,EAAAnR,SAAzD,gBAAA4S,GAAA,OAAA7B,EAAA8B,MAAA7S,KAAA8S,YAAA,WA8CAwrH,EAAej9H,OAAOC,KAAKy8H,GAAY93F,OAAQ,SAACq4F,EAAapd,GACjE,IAAMzR,EAAQsuB,EAAW7c,GAKzB,OAJIzR,EAAM6uB,EAAa7uB,QACrB6uB,EAAapd,KAAOhvG,SAASgvG,GAC7Bod,EAAa7uB,MAAQv9F,SAASu9F,IAEzB6uB,GACP,CACApd,KAAK,EACLzR,MAAM,IAGFstB,EAAsBuB,EAAapd,MAAQhvG,SAAS7Q,OAAOC,KAAKtB,KAAKoC,MAAM86H,iBAAiB,IAE5FqB,EAAwB,GAC9Bv+H,KAAKE,MAAMiQ,cAAc3O,QAAS,SAAA0B,GAC5B45H,EAAe55H,KACjBq7H,EAAsBr7H,GAAS45H,EAAe55H,MAIlD45H,EAAiByB,EAGbl9H,OAAOC,KAAKw7H,GAAgBv7H,OAAO,IACrCu7H,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyB37H,OAAOC,KAAKtB,KAAKoC,MAAM86H,iBAAiBj6H,IAAK,SAAAi+G,GAC1E,IAAMsd,EAAiBn9H,OAAOqQ,OAAOrR,EAAK+B,MAAM86H,gBAAgBhc,IAAOpsG,MACjElH,EAAQ4wH,EAAehB,WAAagB,EAAehB,WAAan8H,OAAOC,KAAKjB,EAAK+B,MAAM86H,gBAAgBhc,IAAOpsG,MAC9GjK,EAAQqH,SAASgvG,GACjBsB,EAAS,CAAE33G,QAAO+C,SAKxB,OAHI/C,IAAUkyH,IACZE,EAA+Bza,GAE1BA,IAGTxiH,KAAKiI,SAAS,CACZ60H,iBACAC,sBACAC,yBACAC,qKAIK,IAAAzyH,EAAAxK,KAEP,IAAKA,KAAKoC,MAAM06H,eACd,OACEl0H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,MACdouB,UAAUvvB,KAAKE,MAAMmF,QAEvBqhB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,2BAKZ,IAAM03H,EAAkBl9H,KAAKoC,MAAM86H,gBAAgBl9H,KAAKoC,MAAM26H,qBAAuB/8H,KAAKoC,MAAM86H,gBAAgBl9H,KAAKoC,MAAM26H,qBAAuB/8H,KAAKoC,MAAM86H,gBAAgB,GAE7K,OACEt0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,EACJt9G,GAAI,EACJ7N,MAAO,EACP+N,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPI,UAAW,EACXjI,aAAc,EACdmF,YAAa,aACb4C,gBAAiB,UAEjBrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJF,OAAQ,KACR9M,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEqF,OAAQ,KACRjN,MAAO,CAAC,EAAE,IACVE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC4Y,EAAA,EAAD,CACEY,WAAY,CACV9Z,EAAE,EACFuN,GAAG,GAELvH,KAAM,kBACNsT,QAAS/a,KAAKoC,MAAM46H,uBACpB7/G,SAAW,SAAAxS,GAAC,OAAIH,EAAKi0H,uBAAuB9zH,IAC5CsQ,aAAcjb,KAAKoC,MAAM66H,iCAK7B57H,OAAOC,KAAKtB,KAAKoC,MAAM06H,gBAAgB75H,IAAI,SAACC,EAAMw7H,GAChD,IAAMv7H,EAAcqH,EAAKtK,MAAMsQ,gBAAgBtN,GACzC0/B,EAAgBp4B,EAAKpI,MAAM06H,eAAe55H,GAC1Cy7H,EAAqBn0H,EAAKzK,cAAc8R,MAAMxQ,OAAOqQ,OAAOwrH,GAAiBpoH,MAAMuoH,MACnFuB,EAAgBh8F,EAAcs7F,aAAa7wH,MAAMsxH,GACjDE,EAAaD,EAAcnpH,GAAG,GAAKzD,KAAKC,IAAI,EAAE7E,WAAWw1B,EAAcq7F,SAAS35G,IAAIs6G,KAAmB,EACvG9Y,EAAY3iH,GAAeA,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAqEP,EAArE,QACZ47H,EAAgBt0H,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,QAAQ,QAAQlI,KAAK,KAEpH,OACE/E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnG,GAAE,SAAAe,OAAWP,GACb/B,cAAe,MACf2C,IAAG,SAAAL,OAAWP,GACdw/G,UAAsB,QAAVx/G,EAAA,aAAAO,OAA+B+G,EAAKtK,MAAM0G,MAAMC,OAAOC,SAAY,MAE/E8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVgN,SAAU,YAEVrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPoE,OAAQ,OACR4I,SAAU,WACV/M,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,IAAK,MAGf2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,IAAK,IACboE,OAAQ,OACRlE,cAAe,OAGbE,OAAOC,KAAK47H,GAAiBj6H,IAAI,SAAC2K,EAAMmxH,GACtC,IAAMP,EAAiBtB,EAAgBtvH,GACjCoxH,EAAyBp8F,EAAcs7F,aAAa7wH,MAAM7C,EAAKzK,cAAc8R,MAAM2sH,EAAenB,OACpG4B,EAAkCz0H,EAAKzK,cAAcW,YAAYs+H,EAAuBx0H,EAAKtK,MAAM4C,SAAW,EAAIk8H,EAAuBzsH,GAAG,GAAK,EAAI,GAKzJ,OAJ4B/H,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS1S,EAAM2S,cAAc,0BAEnGopH,EAAkC,KAAKA,GAGvCr2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,EACJhrH,eAAgB,WAChBH,MAAOu9H,EAAev9H,MACtB2hB,GAAe,QAAV1f,EAAkB,EAAI,KAC3BY,IAAG,kBAAAL,OAAoBP,EAApB,KAAAO,OAA6Bs7H,GAChCG,YAAW,aAAAz7H,OAAe+G,EAAKtK,MAAM0G,MAAMC,OAAOC,WAGrC,QAAV5D,GAAoB67H,IAAkB19H,OAAOC,KAAK47H,GAAiB37H,OAAO,IACzEqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,OACbY,MAAO,CACL64H,UAAU,aAEZv5H,MAAOg9B,EAAcq7F,SAAS74D,IAAI45D,GAA0B,YAAc,UAEzEC,QASnBr2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPiN,OAAQ,EACRhN,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBwhB,GAAe,QAAV1f,EAAkB,CAAC,MAAM,SAAW,QACzCs2G,GAAKklB,EAAWr9H,OAAOC,KAAKkJ,EAAKpI,MAAM06H,gBAAgBv7H,OAAO,EAAI,MAAQ,GAE1EqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,IAAK,IACbG,eAAgB,CAAC,aAAa,aAE9BwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACP1mH,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEdzC,IAGL0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,IAAK,IACbC,WAAY,SACZC,cAAe,MACfkE,OAAQ,CAAC,OAAO,QAChBjE,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExD,OAAQ,OACRpE,MAAO49H,EACP5vH,gBAAiB,UAEjBrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExD,OAAQ,OACRpE,MAAO,OACPiG,aAAc,CAAC,gBAAgB,iBAC/BZ,MAAO,CAAC4E,WAAU,+BAAAzH,OAAgCq7H,EAAhC,iBAAAr7H,OAA6Dq7H,EAA7D,oBAAAr7H,OAA6Fq7H,EAA7F,iBAGtBl2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExC,GAAI,EACJpF,MAAO,OACPoE,OAAQ,OACRnE,WAAY,SACZE,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOwF,IAAKy3G,EAAWzgH,OAAQ,CAAC,QAAQ,YAGxCuD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExC,GAAI,EACJnF,WAAY,UAGA,QAAVgC,EACE0F,EAAA9G,EAAAC,cAAC45G,EAAA,EAADt6G,OAAAuB,OAAA,GACM4H,EAAKtK,MADX,CAEEgD,MAAOA,EACPC,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,kBACLvH,MAAM,CACJW,SAAS2J,EAAKtK,MAAM4C,SAAW,EAAI,EACnChC,aAAa0J,EAAKtK,MAAM4C,SAAW,EAAI,GACvCwD,MAAM,CACJV,MAAM4E,EAAKtK,MAAM0G,MAAMC,OAAOyV,UAC9B3W,WAAW6E,EAAKtK,MAAM4C,SAAW,IAAM,IACvC4C,SAAS8E,EAAKtK,MAAM4C,SAAW,OAAS,aAMhD8F,EAAA9G,EAAAC,cAACuqH,GAADjrH,OAAAuB,OAAA,GACM4H,EAAKtK,MADX,CAEEW,SAAU2J,EAAKtK,MAAM4C,SAAW,EAAI,EACpChC,aAAc0J,EAAKtK,MAAM4C,SAAW,EAAI,GACxCinH,aAAc,CACZnkH,MAAM4E,EAAKtK,MAAM0G,MAAMC,OAAOyV,UAC9B3W,WAAW6E,EAAKtK,MAAM4C,SAAW,IAAM,IACvCuI,WAAWb,EAAKtK,MAAM0G,MAAM0E,MAAMC,UAClC7F,SAAS8E,EAAKtK,MAAM4C,SAAW,OAAS,gBAWvD0H,EAAKtK,MAAM4C,UACV8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,IAAMC,WAAY,aAAcE,eAAgB,gBAOzEwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVgN,SAAU,YAEVrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,CAAC,IAAK,MACnB2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,IAAK,IACbE,cAAe,OAGbE,OAAOC,KAAK47H,GAAiBj6H,IAAI,SAACm8H,EAAgBL,GAChD,IAAMP,EAAiBtB,EAAgBkC,GACvC,OACEx2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJwpG,GAAI,CAAC,EAAE,GACPhrH,eAAgB,WAChBH,MAAOu9H,EAAev9H,MACtB6C,IAAG,kBAAAL,OAAoBs7H,GACvBG,YAAW,aAAAz7H,OAAe+G,EAAKtK,MAAM0G,MAAMC,OAAOC,UAElD8B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,UAENw5H,UAUdp/H,KAAKE,MAAM4C,UACV8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,IAAMC,WAAY,aAAcE,eAAgB,UAC3DwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,EAAGD,SAAU,cArddxD,aCuFlBm9H,8MAvFbt/H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAUC,mEACjCtC,KAAKI,kJAIL,OACEwI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT8wG,GAAG,EACHr9G,GAAG,CAAC,EAAE,GACN1I,GAAG,CAAC,EAAE,IAERwX,UAAU,EACVlC,eAAe,EACf1W,YAAajF,KAAKE,MAAM+E,aAExB2D,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExD,OAAQ,OACRnE,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmG,GAAI,CAAC,EAAE,IAGLhP,KAAKE,MAAM6N,KACTnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAMzH,KAAKE,MAAM6N,KACjBrG,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,MACtC8C,MAAO5F,KAAKE,MAAMie,UAAYne,KAAKE,MAAMie,UAAY,WAErDne,KAAKE,MAAM8d,OACbpV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwF,IAAKrO,KAAKE,MAAM8d,MAChB/c,MAAOjB,KAAKE,MAAM4C,SAAW,QAAU,QACvCuC,OAAQrF,KAAKE,MAAM4C,SAAW,QAAU,WAKhD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,CAAC,EAAE,GACPtE,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,IAEZ1F,KAAKE,MAAM4nB,OAEdlf,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAEN5F,KAAKE,MAAMsF,OAGhBoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkV,MAAO,SACPnY,MAAO,WACP6B,KAAM,qBACNC,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,mBAlFhBZ,aCuRnBo9H,8MApRbl9H,MAAQ,CACNm9H,QAAO,EACPC,eAAc,EACdC,oBAAoB,KACpBC,mCAAmC,QAIrC3/H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kQAILJ,KAAK6H,gMAGkBxF,EAAUC,2EACjCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDivH,EAAwBt9H,EAAUszC,iBAAmB31C,KAAKE,MAAMy1C,gBAClEtkB,GAAkBsuG,IACpB3/H,KAAK6H,mRAKF7H,KAAKE,MAAMwQ,SAAY1Q,KAAKE,MAAMy1C,yDAC9B,aAGL+pF,EAAqC,KACnCr5G,EAAiBrmB,KAAKD,cAAcujB,qBACpCs8G,EAAsB5/H,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,kBAClE4pH,EAAgBI,EAAoB9rG,SAAW8rG,EAAoB/xE,kBAAkB33B,SAAS7P,EAAe3jB,6CAG1G1C,KAAKiI,SAAS,CACnBs3H,QAAO,EACPC,2CAI8Bx/H,KAAKD,cAAc4wC,oBAAoB3wC,KAAKE,MAAMwQ,kBAA9E+uH,WAIqBA,EAAoBl+H,OAAO,IACpDm+H,EAAqCD,EAAoBx8H,IAAK,SAAC2O,GAC7D,IAAMzO,EAAc9C,EAAKN,cAAc6V,gBAAgB,CAAC,QAAQ,gBAAgB,QAAQ,kBAAkBhE,EAAG2f,cACzGsuG,EAAa,KACjB,OAAQjuH,EAAGE,QACT,QACA,IAAK,UACH+tH,EAAa,gBACf,MACA,IAAK,WACHA,EAAa,cACf,MACA,IAAK,OACHA,EAAa,OAuBjB,MApBoB,CAClBA,aACAhuG,OAAOjgB,EAAG/G,MACV3H,MAAM0O,EAAG2f,YACTzf,OAAOF,EAAGE,OAAO+D,cACjBg+B,WAAWjiC,EAAGiiC,WAAWh+B,cACzB9D,OAAOH,EAAGuiC,SAAW,YAAc,UACnCrsC,KAAKzH,EAAKN,cAAcoI,YAAYyJ,EAAG9J,MACvCg4H,WAAWluH,EAAGuiC,SAAW,OAAS,YAClC4rF,gBAAgB,CACdn6H,MAAMvF,EAAKH,MAAM0G,MAAMC,OAAO2X,aAAa1M,OAAOF,EAAGE,OAAO5E,eAC5DskB,QAAQnxB,EAAKH,MAAM0G,MAAMC,OAAO2X,aAAaC,SAAS7M,EAAGE,OAAO5E,gBAElEouB,IAAIj7B,EAAKN,cAAcmnB,2BAA2BtV,EAAG9J,KAAK8J,EAAGwnB,WAC7D3iB,KAAKpW,EAAKN,cAAciT,YAAmC,IAAvBd,SAASN,EAAGO,YAAiBiE,OAAO,gBACxE4pH,gBAAgB,CACdp6H,MAAMgM,EAAGuiC,SAAW9zC,EAAKH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY9sB,EAAKH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOqb,SAE1H04F,UAAU3iH,EAAY4K,MAAQ1N,EAAKN,cAAc6V,gBAAgB,CAAC,QAAQ,SAAShE,EAAG2f,YAAY1b,cAAc,UAAtG,iBAAApS,OAAmImO,EAAG2f,YAAtI,YAQhBvxB,KAAKiI,SAAS,CACZs3H,QAAO,EACPC,gBACAC,sBACAC,2KAIK,IAAAl1H,EAAAxK,KAEP,OAAKA,KAAKoC,MAAMm9H,QAAWv/H,KAAKoC,MAAMo9H,cAKpC52H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKE,MAAM4nB,QAAW9nB,KAAKoC,MAAMs9H,oCAAsC1/H,KAAKoC,MAAMs9H,mCAAmCn+H,OAAO,GAAMvB,KAAKE,MAAM2b,WAC3IjT,EAAA9G,EAAAC,cAACijH,EAAA,EACKhlH,KAAKE,MAAM4zG,WAEd9zG,KAAKE,MAAM4nB,OAKhB9nB,KAAKoC,MAAMs9H,oCAAsC1/H,KAAKoC,MAAMs9H,mCAAmCn+H,OAAO,EACpGqH,EAAA9G,EAAAC,cAACgkH,EAAA,EAAD1kH,OAAAuB,OAAA,CACEq9H,mBAAmB,EACnBh7H,YAAa,SAAC/E,GAAD,OAAWsK,EAAKzK,cAAcw3E,WAAWr3E,EAAMi8F,IAAI7gE,MAChEz4B,KAAM,CACJ,CACEilB,MAAM,OACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,SACLsF,KAAK,CAAC,eAER,CACEtF,KAAK,OACLsF,KAAK,CAAC,QACN7F,MAAM,CACJuF,GAAG,CAAC,EAAE,OAKd,CACEqiB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,aAIZ,CACE+hB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,WAIZ,CACE+hB,MAAM,SACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACLsF,KAAK,CAAC,iBAIZ,CACE+hB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACL6D,QAAO,EACPyB,KAAK,CAAC,cACN7F,MAAM,CACJme,GAAG,EACH3W,KAAK1H,KAAKE,MAAM4C,SAAW,QAAU,UAGzC,CACE2E,KAAK,SACL1B,KAAK,CAAC,UACN7F,MAAM,CACJoG,MAAM,CACJk7G,cAAc,kBAMxB,CACEl9G,QAAO,EACPwjB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEvmD,KAAK,SACLsF,KAAK,CAAC,UACN7F,MAAM,CACJW,SAAU,IAGd,CACE4G,KAAK,YACLvH,MAAM,CACJuF,GAAG,MAKX,CACEqiB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEvmD,KAAK,QACLsF,KAAK,CAAC,aACN7F,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACE5E,KAAK,OACLsF,KAAK,CAAC,cAKV/F,KAAKE,MAvIX,CAwIEo7F,KAAMt7F,KAAKoC,MAAMs9H,sCAEjB1/H,KAAKE,MAAM2b,UA/JZ,YAhH2B3Z,aCorDzBg+H,8MAnqDb99H,MAAQ,CACN48B,UAAU,KACVv8B,gBAAgB,GAChBo/B,gBAAgB,GAChByiF,iBAAiB,GACjBqG,gBAAgB,KAChBxtC,gBAAgB,KAChB4tC,iBAAgB,EAChBoV,kBAAiB,EACjBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/BrV,8BAA8B,UAIhClrH,cAAgB,OAChB6H,oBAAqB,6EAGf5H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,2DAILJ,KAAK4H,oBAAqB,sKAIpB5H,KAAKymH,qMAGYpkH,EAAWC,kFAClCtC,KAAKI,YAECixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClD6vH,EAAyBtwH,KAAKC,UAAU7N,EAAUmO,mBAAqBP,KAAKC,UAAUlQ,KAAKE,MAAMsQ,kBACnG6gB,GAAkBkvG,IACpBvgI,KAAKsI,aAAa,CAChByiH,iBAAgB,GAChB,WACA1qH,EAAKomH,oMAKQ1+G,wFAASC,iCAAS,KAC9BhI,KAAK4H,mDACK5H,KAAKiI,SAASF,EAASC,2EAE/B,kKAGwBijH,GAC/BjrH,KAAKsI,aAAa,CAChB2iH,8NAKIz6G,EAAkBxQ,KAAKE,MAAMsQ,iBAAmB,IAGlDxQ,KAAKoC,MAAM2oH,kBAAmB/qH,KAAKoC,MAAM+9H,2DACpC,0BAGHngI,KAAKsI,aAAa,CACtB63H,kBAAiB,eAIfngI,KAAKE,MAAMwQ,gCACP3I,EAAW,GACX0vC,EAAmBz3C,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,qBAGvE5V,KAAKD,cAAc0Q,gBAAgBzQ,KAAKE,MAAMwQ,QAAQ+mC,EAAiB,SAASp2C,OAAOC,KAAKkP,cAMlFuR,QAAQqD,IAAI,CAEpB,GAEAplB,KAAKD,cAAc2hC,oBAAoBlxB,EAAgBxQ,KAAKE,MAAMwQ,kDANlEysE,OACAn+C,OAQFj3B,EAASi3B,UAAYA,EAErBj3B,EAASo1E,gBAAkBA,GAAmB97E,OAAOC,KAAK67E,GAAiB57E,OAAO,EAAI47E,EAAkB,KAEpGp1E,EAASo1E,kBACXp1E,EAASu4H,+BAAiCj/H,OAAOC,KAAKyG,EAASo1E,iBAAiBl3C,OAAQ,SAACq6F,EAA+Bp9H,GACtH,IAAMs9H,EAAYz4H,EAASo1E,gBAAgBj6E,GACrCC,EAAcqH,EAAKzK,cAAc6V,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkB1S,IACzG,GAAIC,EAAYk/B,WAAa73B,EAAKtK,MAAM8T,iBAAiB,CACvD,OAAQwsH,EAAUzuH,QAChB,IAAK,UACH5O,EAAY28H,WAAa,YACzB38H,EAAY68H,gBAAkB,CAC5Bp6H,MAAM4E,EAAKtK,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOqb,SAEtD,MACA,IAAK,WACHjqB,EAAY28H,WAAa,OACzB38H,EAAY68H,gBAAkB,CAC5Bp6H,MAAM4E,EAAKtK,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAMxDhqB,EAAYD,MAAQA,EACpBC,EAAY4O,OAASyuH,EAAUzuH,OAC/B5O,EAAYohC,UAAYi8F,EAAUtiD,cAClC/6E,EAAYs9H,WAAaD,EAAUviD,aACnCqiD,EAA+Bn9H,EAAY86B,WAAa96B,EAE1D,OAAOm9H,GACP,KAGJv4H,EAAStF,gBAAkB,GAC3BsF,EAAS85B,gBAAkB,IAEvB7C,0BACIv8B,EAAkBpB,OAAOC,KAAK09B,EAAUpuB,eAAee,OAAO,SAAAzO,GAAK,OAAMsH,EAAKzK,cAAc8R,MAAMmtB,EAAUpuB,cAAc1N,GAAOuR,kBAAkBgB,GAAG,KAE5J1N,EAAStF,gBAAkBA,EAErBsR,EAAyC,SAAhC/T,KAAKE,MAAM8T,iBAEtBkrB,EAASl/B,KAAKD,cAAc8R,MAAM,GAElCwtB,EAAkBr/B,KAAKD,cAAc8R,MAAM,aAGzC7R,KAAKD,cAAc+Q,aAAarO,EAAhC,eAAAuf,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAgD,SAAAgD,EAAOhR,GAAP,IAAAC,EAAAs8B,EAAAC,EAAA8C,EAAAnxB,EAAAsxB,EAAA3C,EAAA0C,EAAAD,EAAA,OAAAhQ,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAC9CtO,EAAcqN,EAAgBtN,GADgBkR,EAAA3C,KAAA,EAO1CsQ,QAAQqD,IAAI,CACpB5a,EAAKzK,cAAc8iC,aAAa1/B,GAEhCqH,EAAKzK,cAAc+iC,mBAAmB3/B,EAAYqH,EAAKtK,MAAMwQ,WAVX,cAAA+uB,EAAArrB,EAAAG,KAAAmrB,EAAAr+B,OAAA4yB,EAAA,EAAA5yB,CAAAo+B,EAAA,GAIlD+C,EAJkD9C,EAAA,GAMlDruB,EANkDquB,EAAA,GAAAtrB,EAAA3C,KAAA,EAatBjH,EAAKzK,cAAcs0B,oBAAoBhjB,EAAWnO,EAAMC,EAAY4Q,GAb9C,OAa9C4uB,EAb8CvuB,EAAAG,KAe9CyrB,EAAehB,EAAUpuB,cAAc1N,GAAO88B,aAC9C0C,EAAc1C,EAAa1b,IAAI0a,EAAUG,eACzCsD,EAAWD,EAAUO,SAAWv4B,EAAKzK,cAAc8R,MAAM2wB,EAAUO,QAAQviC,QAAUgK,EAAKzK,cAAc8R,MAAM2wB,EAAUO,QAAUv4B,EAAKzK,cAAc8R,MAAM,IAEnJrR,UACZ0+B,EAASA,EAAO7sB,KAAKowB,EAASp1B,MAAMq1B,KAQlCC,IACFtD,EAAkBA,EAAgBhtB,KAAKswB,IA7BW,yBAAAvuB,EAAAzB,SAAAuB,EAAAlU,SAAhD,gBAAAwU,GAAA,OAAAwN,EAAAnP,MAAA7S,KAAA8S,YAAA,6BAwC8B9S,KAAKD,cAAcg0E,6BAA6B/zE,KAAKE,MAAMwQ,QAAQF,EAAgB,sBAAjHi0G,mBAC6BzkH,KAAKD,cAAc8hG,yBAAyB7hG,KAAKE,MAAMwQ,QAAQF,EAAgB,cAA5Gg0G,SACAK,EAA+BL,EAAuBnjH,OAAOC,KAAKkjH,GAAsBvhH,IAAK,SAAA0qE,GACjG,IAAMn7D,EAAUgyG,EAAqB72C,GACrC,OAAIn7D,EAAQiD,GAAG,GACb,IAAAhS,OAAW+O,EAAQlF,QAAQ,GAA3B,KAAA7J,OAAiCkqE,GAE1B,OAERh8D,OAAO,SAAAhH,GAAC,OAAW,OAANA,IAAe,KAE/B5C,EAASm3B,OAASA,EAElBn3B,EAAS85B,gBAAkB7C,EAAU6C,gBACrC95B,EAAS08G,sBAAwBA,EACjC18G,EAAS88G,6BAA+BA,UAG1C98G,EAASgjH,iBAAkB,EAC3BhjH,EAASo4H,kBAAmB,EAEtBxV,EAAkBtpH,OAAOC,KAAKkP,GAAiBmB,OAAO,SAAAzO,GAAK,OAAM6E,EAAStF,gBAAgByzB,SAAShzB,KAAW7B,OAAOC,KAAKyG,EAAS85B,iBAAiB3L,SAAShzB,KACnK6E,EAAS4iH,gBAAkBA,EAG3B3qH,KAAKsI,aAAaP,2BAGlB/H,KAAKsI,aAAa,CAChBu5B,gBAAgB,GAChBp/B,gBAAgB,GAChBsoH,iBAAgB,EAChBoV,kBAAiB,EACjBxV,gBAAgBtpH,OAAOC,KAAKkP,yIAK1B,IAAA0nG,EAAAl4G,KACA+gH,EAAwC,WAA7B/gH,KAAKE,MAAM8gH,cACtB36F,EAAiBrmB,KAAKD,cAAcujB,qBACpCypD,EAAY/sE,KAAKD,cAAc6V,gBAAgB,CAAC,cAChD8qH,EAAU1gI,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,YACzD+qH,EAAe3gI,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,iBAC9DsnE,EAAqBl9E,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,iBAEjEgqH,EAAsB5/H,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,kBAClEgrH,EAAe5gI,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAM8T,iBAAiB,UAC5F6sH,EAAc,CAAC,WAAW,cAAc,aAAalvH,OAAQ,SAAAmvH,GACjE,IAAMC,EAAa7oB,EAAKn4G,cAAc6V,gBAAgB,CAAC,QAAQkrH,IAC/D,OAAOC,EAAWjtG,WAAaitG,EAAWlzE,kBAAkBtsD,QAAUw/H,EAAWlzE,kBAAkB33B,SAAShkB,SAASmU,EAAe3jB,QAGtI,OACEkG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACE52G,GAAI,GAEHwyH,EAHH,aAqDG5gI,KAAKoC,MAAM2oH,gBAiBVniH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGLjB,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAMK,gBAAgBlB,OAAO,EACtDqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACPnrH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM88B,OACTt2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEgrG,WAAY,EACZluG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPyF,WAAY,UACZ3F,SAAU,CAAC,EAAE,SACb6J,wBAAyB,CAAEC,OAAQxP,KAAKoC,MAAM88B,OAAO5xB,QAAQ,GAAG,sBAIlE1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,WAOAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,SACXC,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,aAExDhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,mBAOnBgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACPnrH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM48B,UACTp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACsqH,GAADhrH,OAAAuB,OAAA,CACE/B,SAAU,GACNb,KAAKE,MAFX,CAGE8+B,UAAWh/B,KAAKoC,MAAM48B,aAExBp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UA2BhBwH,EAAA9G,EAAAC,cAACuqH,GAADjrH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEyB,KAAM,KACNd,SAAU,EACVkpH,aAAc,CACZrkH,SAAS,GACTC,WAAW,IACXC,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD6R,UAAWh/B,KAAKoC,MAAM48B,eAK5Bp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,iBAQE5F,KAAKoC,MAAMqiH,uBACT77G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,SACXC,QAAS,8DAA8DhxB,KAAKoC,MAAMqiH,uBAAyBzkH,KAAKoC,MAAMqiH,sBAAsBhvG,GAAG,GAAxE,KAAAhS,OAAkFzD,KAAKoC,MAAMyiH,6BAA6Bl3G,KAAK,OAA/H,KAA2I,KAElN/E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,mBASvBgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN1F,QAAQ,OACRxH,WAAW,SACXmE,OAAO,CAAC,OAAO,SACfjE,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAM48B,UACTp2B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEgrG,WAAY,EACZluG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPyF,WAAY,UACZ3F,SAAU,CAAC,EAAE,SACb6J,wBAAyB,CAAEC,OAAQ,mBAAmBxP,KAAKoC,MAAM48B,UAAUM,kBAAkBhyB,QAAQ,GAAG,sBAI1G1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SAGjBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,gBAOAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,SACXC,QAAShxB,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,qBAExDhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,oBAQrBgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPyB,GAAI,mBACJtB,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,CAAC,EAAE,MACVE,cAAe,SACfuB,GAAI,yBAEJkG,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACEnrF,MAAO,cACPgsF,WAAc9zG,KAAKE,MAAM4C,SAIrB,KAJgC,CAClCwD,MAAM,CACJipB,UAAU,UAId3mB,EAAA9G,EAAAC,cAACi/H,GAAD3/H,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEua,SAAU,6BAIhB7R,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,MACVE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,KACErqG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,CAAC,EAAE,GACP5T,GAAI,CAAC,EAAE,GACPm9G,UAAW,SACXhrH,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CACEr/G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyI,UAAW,QAHb,gBAQFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACP/a,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC4Y,EAAA,EAAD,CACEY,WAAY,CACV9Z,EAAE,EACFuN,GAAG,GAELiM,aACE,CAACpQ,MAAM,OAAO+C,MAAM,MAEtBnG,KAAM,mBACNsT,QAAS,CACP,CAAClQ,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErBuP,SAAW,SAAAxS,GAAC,OAAIutG,EAAKuU,iCAAiC9hH,QAI5D/B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,CAAC,EAAE,GACP0mH,UAAW,SACX/qH,eAAgB,SAChBsB,GAAI,yBAEJkG,EAAA9G,EAAAC,cAAC2N,GAAA,EAADrO,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAe,GACfsK,SAAU,wBACVC,eAAgB,wBAChB1K,mBAAoBhQ,KAAKoC,MAAM6oH,8BAC/B30G,iBAAkBtW,KAAKD,cAAc2zD,oBAAoB,MAAM,WAQ3E9qD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJpF,GAAI,OACJ/H,MAAO,CAAC,EAAE,IACVkrH,UAAW,SACX/qH,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyI,UAAW,UAGTnO,KAAKE,MAAM4C,SACT9C,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAM8T,iBAAiB,cAE7EhU,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAM8T,iBAAiB,gBAOtF+sG,GAAY/gH,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAAKvB,KAAKE,MAAMwQ,SAAWmwH,EAAYt/H,QAAQ,GAC5FqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPyB,GAAI,QACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,UAOFiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,cAAc,aAAa8B,IAAK,SAAC69H,EAASG,GACpD,IAAMF,EAAa7oB,EAAKn4G,cAAc6V,gBAAgB,CAAC,QAAQkrH,IAC/D,OACEl4H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE/E,IAAG,QAAAL,OAAUw9H,GACb7yH,GAAI6yH,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1B7U,GAAI6U,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BhgI,MAAO,CAAC,EAAE,EAAE4/H,EAAYt/H,SAExBqH,EAAA9G,EAAAC,cAACm/H,GAAD7/H,OAAAuB,OAAA,GACMs1G,EAAKh4G,MADX,CAEE6N,KAAMgzH,EAAWhzH,KACjBvI,KAAMu7H,EAAWrnB,KACjB17F,MAAO+iH,EAAW/iH,MAClB8J,MAAOi5G,EAAWnzH,MAClB3I,YAAc,SAAA8B,GAAC,OAAImxG,EAAKh4G,MAAM8G,YAAX,SAAAvD,OAAgCs9H,EAAWpnD,iBA8B9E35E,KAAKoC,MAAM+6E,iBACTv0E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP1L,GAAI,mBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,oBACAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACo/H,GAAA,EAAD9/H,OAAAuB,OAAA,CACEuN,cAAe9O,OAAOC,KAAKtB,KAAKoC,MAAMk+H,gCACtCz9H,KAAM,CACJ,CACEilB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,GAAI,KAEb+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACEoC,KAAK,eAIX,CACEnD,QAAO,EACPwjB,MAAM,YACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,SACLhH,KAAK,SACLsF,KAAK,CAAC,aACN7F,MAAM,CACJW,SAAU,IAGd,CACE4G,KAAK,YACLvH,MAAM,CACJuF,GAAG,MAKX,CACEqiB,MAAM,aACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,SACLhH,KAAK,SACLsF,KAAK,CAAC,cACN7F,MAAM,CACJW,SAAU,IAGd,CACEJ,KAAK,OACLgH,KAAK,SACL1B,KAAK,CAAC,SACN7F,MAAM,CACJuF,GAAG,MAKX,CACEqiB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEvmD,KAAK,OACL6D,QAAO,EACPmD,KAAK,SACL1B,KAAK,CAAC,cACN7F,MAAM,CACJme,GAAG,EACH3W,KAAK1H,KAAKE,MAAM4C,SAAW,QAAU,UAGzC,CACE2E,KAAK,SACL1B,KAAK,CAAC,UACN7F,MAAM,CACJoG,MAAM,CACJk7G,cAAc,kBAMxB,CACE15F,MAAM,GACN8qF,kBAAiB,EACjBtuG,OAA8B,OAAvBtE,KAAKE,MAAMwQ,QAClBxQ,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdmf,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAM,QACNmlG,UAAU,CACR3rG,SAAS,SAAClH,GAAD,MAAyC,YAA7BA,EAAMiD,YAAY4O,SAEzC7R,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVhI,UAAU,UACVO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAM8G,YAAX,SAAAvD,OAAgCy5E,EAAmBvD,MAAnD,KAAAl2E,OAA4DvD,EAAMiD,YAAYD,eAM3GlD,KAAKE,MAjIX,CAkIEsQ,gBAAiBxQ,KAAKoC,MAAMk+H,oCAMtC13H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPyB,GAAI,mBACJvB,cAAe,SACfiN,GAAKpO,KAAKoC,MAAMK,gBAAgBlB,OAAa,EAAJ,IAGtCvB,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAAKF,OAAOC,KAAKtB,KAAKoC,MAAMy/B,iBAAiBtgC,OAAO,GAAKvB,KAAKoC,MAAMuoH,gBAAgBppH,OAAO,IAC5HqH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,oBAEJlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,EAAGE,cAAe,UAE3BE,OAAOC,KAAKtB,KAAKoC,MAAMy/B,iBAAiBtgC,OAAO,GAC/CqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP1L,GAAI,iBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,sBAOFiD,EAAA9G,EAAAC,cAACo/H,GAAA,EAAD9/H,OAAAuB,OAAA,CACEuN,cAAe9O,OAAOC,KAAKtB,KAAKoC,MAAMy/B,iBACtC58B,YAAa,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,QACrDL,KAAM,CACJ,CACEilB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACEoC,KAAK,eAIX,CACEqgB,MAAM,OACN8qF,kBAAiB,EACjBtuG,OAA8B,OAAvBtE,KAAKE,MAAMwQ,QAClBxQ,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJW,SAAS,MAKjB,CACEinB,MAAM,MACN4xF,KAAKgnB,EACLxgI,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdmf,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,MACL4/G,aAAY,GAEd,CACE54G,YAAW,EACXhH,KAAK,mBACLvH,MAAM,CACJW,SAASb,KAAKE,MAAM4C,SAAW,EAAI,EACnC4C,SAAS1F,KAAKE,MAAM4C,SAAW,MAAQ,GAEzC+vG,QAAkC,WAA1BxsF,EAAe9C,YAI7B,CACEuE,MAAM,UACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,UACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdmf,YAAY,CACVnf,MAAM,EACNmrH,GAAG,CAAC,EAAE,IAERplE,OAAO,CACL,CACEv/C,KAAK,qBAIX,CACEnD,QAAO,EACPwjB,MAAM,UACN4xF,KAAKinB,EACLzgI,MAAM,CACJe,MAAM,CAAC,IAAK,KACZkN,UAAU,UAEZ64C,OAAO,CACL,CACEv/C,KAAK,eAIX,CACEqgB,MAAM,GACN8qF,kBAAiB,EACjBtuG,OAA8B,OAAvBtE,KAAKE,MAAMwQ,QAClBxQ,MAAM,CACJe,MAAM,CAAyB,OAAvBjB,KAAKE,MAAMwQ,QAAmB,IAAO,EAAG,MAElD0P,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAO,UACP1N,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVhI,UAAU,UACVO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,cAM1DlD,KAAKE,SAKfF,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAChCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAKpO,KAAKoC,MAAMuoH,gBAAgBppH,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDN,MAAO,EACPyB,GAAI,mBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOFiD,EAAA9G,EAAAC,cAACo/H,GAAA,EAAD9/H,OAAAuB,OAAA,CACEuN,cAAenQ,KAAKoC,MAAMK,gBAC1BwC,YAAa,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,QACrDL,KAAM,CACJ,CACEilB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACEoC,KAAK,eAIX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJW,SAAS,MAKjB,CACEinB,MAAM,MACN4xF,KAAKgnB,EACLxgI,MAAM,CACJe,MAAM,CAAC,GAAK,MAEdmf,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,MACL4/G,aAAY,GAEd,CACE5/G,KAAK,mBACLgH,YAAW,EACXvO,MAAM,CACJW,SAASb,KAAKE,MAAM4C,SAAW,EAAI,EACnC4C,SAAS1F,KAAKE,MAAM4C,SAAW,MAAQ,GAEzC+vG,QAAkC,WAA1BxsF,EAAe9C,YAI7B,CACEuE,MAAM,YACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,gBAIX,CACEnD,QAAO,EACPwjB,MAAM,UACN4xF,KAAKinB,EACLzgI,MAAM,CACJe,MAAM,CAAC,IAAK,KACZkN,UAAU,UAEZ64C,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJW,SAAS,MAKjB,CACEyD,QAAO,EACPwjB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZkN,UAAU,UAEZiS,YAAY,CACVlf,WAAW,SACXC,cAAc,UAEhB6lD,OAAO,CACL,CACEv/C,KAAK,WACLvH,MAAM,CACJW,SAAS,IAGb,CACE4G,KAAK,eACLgH,YAAW,EACX2yH,eAAc,EACdlhI,MAAM,CACJwF,SAAS,EACT7E,SAAS,MAkBjB,CACEinB,MAAM,GACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,KAERmf,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAM,SACN1N,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVhI,UAAU,SACVO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,cAM1DlD,KAAKE,SAKbF,KAAKoC,MAAMuoH,gBAAgBppH,OAAO,GAClCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnG,GAAG,mBAAmBzB,MAAO,EAAGE,cAAe,UACnDyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACPmN,GAAI,CAAC,EAAE,GACP/B,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOFiD,EAAA9G,EAAAC,cAACo/H,GAAA,EAAD9/H,OAAAuB,OAAA,CACEuN,cAAenQ,KAAKoC,MAAMuoH,gBAC1B1lH,YAAa,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,QACrDL,KAAM,CACJ,CACEilB,MAAM,WACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACEoC,KAAK,eAIX,CACEnD,QAAO,EACPwjB,MAAM,OACN8qF,kBAAiB,EACjB1yG,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJW,SAAS,MAKjB,CACEinB,MAAM,MACN4xF,KAAKgnB,EACLxgI,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdmf,YAAY,CACVjf,cAAc,SACdD,WAAW,cAEb8lD,OAAO,CACL,CACEv/C,KAAK,MACL4/G,aAAY,GAEd,CACE5/G,KAAK,mBACLgH,YAAW,EACXvO,MAAM,CACJW,SAASb,KAAKE,MAAM4C,SAAW,EAAI,EACnC4C,SAAS1F,KAAKE,MAAM4C,SAAW,MAAQ,GAEzC+vG,QAAkC,WAA1BxsF,EAAe9C,YAI7B,CACEuE,MAAM,UACN8qF,kBAAiB,EACjBtuG,OAA8B,OAAvBtE,KAAKE,MAAMwQ,QAClBgpG,KAAKinB,EACLzgI,MAAM,CACJe,MAAM,CAAC,IAAK,KACZkN,UAAU,UAEZ64C,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJW,SAAS,MAKjB,CACEinB,MAAM,gBACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,KAERmf,YAAY,CACVnf,MAAM,EACNmrH,GAAG,CAAC,EAAE,IAERplE,OAAO,CACL,CACEv/C,KAAK,WACLnB,MAAM,CACJE,SAAS,cAKjB,CACEshB,MAAM,GACN8qF,kBAAiB,EACjBtuG,OAA8B,OAAvBtE,KAAKE,MAAMwQ,QAClBxQ,MAAM,CACJe,MAAM,CAAyB,OAAvBjB,KAAKE,MAAMwQ,QAAmB,IAAO,EAAI,MAEnD0P,YAAY,CACVnf,MAAM,GAER+lD,OAAO,CACL,CACEv/C,KAAK,SACLmG,MAAO,SAAC1N,GACN,OAAOmB,OAAOC,KAAK42G,EAAK91G,MAAMy/B,iBAAiB3L,SAASh2B,EAAMgD,OAAS,UAAY,WAErFhD,MAAM,CACJe,MAAM,EACNyE,SAAS,EACTC,WAAW,EACXN,OAAO,OACP6B,aAAa,EACbiI,UAAU,KACVzH,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCmC,YAAY,SAAC/E,GAAD,OAAWg4G,EAAKh4G,MAAMkwB,YAAYlwB,EAAMgD,SAEtD6vG,UAAU,CACR5rG,UAAW,SAACjH,GACV,OAAOmB,OAAOC,KAAK42G,EAAK91G,MAAMy/B,iBAAiB3L,SAASh2B,EAAMgD,OAAS,UAAY,iBAO3FlD,KAAKE,WAOjBF,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAChCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPyB,GAAI,gBACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,iBACAlG,EAAA9G,EAAAC,cAACo/H,GAAA,EAAD9/H,OAAAuB,OAAA,CACEuN,cAAe9O,OAAOC,KAAKtB,KAAKD,cAAcw9F,uBAC9C16F,KAAM,CACJ,CACEilB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,GAAI,MAEb+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,CAAC,QAAQ,WAGpB,CACEoC,KAAK,eAIX,CACEnD,QAAO,EACPwjB,MAAM,UACN5nB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEf+lD,OAAO,CACL,CACEv/C,KAAK,eACLvH,MAAM,CACJW,SAAUb,KAAKE,MAAM4C,SAAW,EAAI,MAK5C,CACEglB,MAAM,aACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,8BACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,IACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,oBACLvH,MAAM,CACJW,SAAUb,KAAKE,MAAM4C,SAAW,EAAI,MAK5C,CACEglB,MAAM,eACN4xF,KAAK15G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW,0BACpD1V,MAAM,CACJe,MAAM,CAAC,IAAK,KAEd+lD,OAAO,CACL,CACEv/C,KAAK,wBACLvH,MAAM,CACJW,SAAS,QAgDfb,KAAKE,MA9GX,CA+GEsQ,gBAAiBu8D,MAKvB/sE,KAAKoC,MAAMK,gBAAgBlB,OAAO,GAChCqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPyB,GAAG,sBACHvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,sBACAlG,EAAA9G,EAAAC,cAACs/H,GAADhgI,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAenQ,KAAKoC,MAAMK,oBAKhCzC,KAAKE,MAAMwQ,SAAWkvH,EAAoB9rG,SAAW8rG,EAAoB/xE,kBAAkB33B,SAAS7P,EAAe3jB,KACjHkG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,SACfuB,GAAI,wBAEJkG,EAAA9G,EAAAC,cAACu/H,GAADjgI,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4nB,MAAO,8BACPgsF,WAAY,CACVhlG,GAAG,OAOX9O,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAMK,gBAAgBlB,OAAO,GACtDqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPnN,MAAO,EACPyB,GAAI,eACJvB,cAAe,UAEfyH,EAAA9G,EAAAC,cAACijH,EAAA,EAAD,CAAOl2G,GAAI,CAAC,EAAE,IAAd,gBACAlG,EAAA9G,EAAAC,cAAC8kH,EAAA,EAADxlH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEiQ,cAAe,GACftN,KAAM,CACJ,CACEilB,MAAO9nB,KAAKE,MAAM4C,SAAW,GAAK,OAClC5C,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,OACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE5W,KAAK,OACLnD,QAAO,KAIb,CACEwjB,MAAM,SACNxjB,QAAO,EACPpE,MAAM,CACJe,MAAM,KAER+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,OACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEd+lD,OAAO,CACL,CACEv/C,KAAK,UAIX,CACEqgB,MAAM,SACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,aACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,KAGV,CACE/Z,QAAO,EACPmD,KAAK,YAIX,CACEqgB,MAAM,SACN5nB,MAAM,CACJe,MAAM,KAER+lD,OAAO,CACL,CACEv/C,KAAK,YAIX,CACEqgB,MAAM,QACN5nB,MAAM,CACJe,MAAM,CAAC,IAAK,IACZG,eAAe,CAAC,SAAS,eAE3B4lD,OAAO,CACL,CACEv/C,KAAK,YACLvH,MAAM,CACJme,GAAG,CAAC,EAAE,GACNhZ,OAAO,CAAC,QAAQ,WAGpB,CACEf,QAAO,EACPmD,KAAK,qBAz2CvBmB,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACEj9F,UAAW,CACTguG,SAAS,EACThnH,WAAW,GAEb+gB,YAAa,CACXtY,GAAG,EACH1G,KAAK,QAEP1G,UAAW,CACTuuB,UAAU,OACVpuB,cAAc,UAEhBqE,KAAM,iCAzTOtD,oDCwwCZq/H,8MA/vCbn/H,MAAQ,CACNo/H,UAAS,EACTxjD,YAAY,GACZyjD,YAAW,EACX3vH,OAAO,UACPosE,cAAc,GACd/6E,YAAY,KACZ2b,WAAW,CACT+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,GAEV88D,MAAM,CACJ/8D,OAAO,KACPC,SAAQ,IAGZ0iH,WAAU,EACVzjD,aAAa,GACbE,cAAc,KACd6gC,eAAc,EACd2iB,cAAa,EACbC,cAAa,EACbh4H,cAAc,KACdq1G,eAAc,EACdzhC,eAAe,KACfqkD,gBAAe,EACfC,gBAAe,EACftxH,gBAAgB,KAChBwD,iBAAiB,KACjBmyG,iBAAgB,EAChB4b,kBAAiB,EACjB9/F,kBAAiB,EACjB+/F,oBAAmB,EACnB5xD,oBAAoB,KACpB56C,oBAAoB,KACpBysG,qBAAoB,EACpBC,2BAA0B,EAC1BnV,2BAA2B,QAI7BhtH,cAAgB,OA+ZhBwxH,UAAY,SAACz/G,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUokB,SAASpkB,EAAO5E,eAAe,CAEzErI,EAAKoD,SAAS,CACZ6J,SACAkwH,oBAHyB,QAc/BG,yBAA2B,SAAClgG,GAC1Bp9B,EAAKoD,SAAS,CACZg6B,wBAIJmgG,kBAAoB,SAACxwH,GACnB/M,EAAKw9H,aAAY,+EAnbbriI,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKsiI,sMAGkBjgI,EAAUC,sFACjCtC,KAAKI,YAEoBiC,EAAU8oH,UAAUG,SAAWtrH,KAAKE,MAAMirH,UAAUG,QAE3EtrH,KAAKiI,SAAS,CACZk+G,iBAAgB,GADlB9kH,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAEE,SAAAgR,IAAA,OAAAuQ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAA5Q,KAAA,EACMpR,EAAK+sH,aADX,wBAAA/qG,EAAA1P,SAAAuP,EAAAliB,UAK4BsC,EAAU0R,mBAAqBhU,KAAKoC,MAAM4R,mBAElEpK,EAAgBvI,OAAOC,KAAKtB,KAAKoC,MAAMoO,iBAAiB,GAC9DxQ,KAAKi3G,YAAYrtG,IAGbiR,EAAuBvY,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,cAC9D24H,EAA0BjgI,EAAUy/H,mBAAqB/hI,KAAKoC,MAAM2/H,iBACpE3T,EAA0B9rH,EAAU4/H,4BAA8BliI,KAAKoC,MAAM8/H,2BAC/ErnH,GAAwBuzG,GAA2BmU,IACrDviI,KAAKqiI,6QAOS,EAEVG,EAAkB,SAAC5wH,EAAGqN,GAC1B,IAAMikC,EAA4B,YAAdtxC,EAAGG,OAGjBmN,EAAY,CAChBI,YAAa,UACbH,cAAe,gBAGbF,IACFC,EAAUE,WAAa5U,EAAKzK,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBvH,EAAKzK,cAAc0f,yBAAyBP,GAG9C1U,EAAKvC,SAAS,SAAC3F,GAAD,MAAgB,CAC5By/H,iBAAiB7+E,EACjBpkC,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAER+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,SAMVyjH,EAAyB,SAAC7wH,GAC9B,IAAMmN,EAASnN,EAAG+N,gBAClBnV,EAAKvC,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAER+B,QAAQxf,OAAA84B,EAAA,EAAA94B,CAAA,GACHiB,EAAUwc,WAAW+B,QADnB,CAEL9B,iBAMR/e,KAAKE,MAAM+f,0BAA0BjgB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAM,eAAgB,EAAC,GAAO,KAAM+6H,EAAiBC,GAE3IziI,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAER+B,QAAQxf,OAAA84B,EAAA,EAAA94B,CAAA,GACHiB,EAAUwc,WAAW+B,QADnB,CAEL7B,SApDU,oUA0DAgjH,kCAEV7xC,EAAwBnwF,KAAKoC,MAAMguE,oBAAoBp0C,2BAEvDja,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAasnD,EAAsB1oF,KAAK0oF,EAAsBljF,QAAQkjF,EAAsBrnD,KACvG9oC,KAAKE,MAAM2oC,aAAa7oC,KAAKoC,MAAMe,YAAYsE,KAAKzH,KAAKoC,MAAMe,YAAY8J,QAAQjN,KAAKoC,MAAMe,YAAY2lC,8BAOlG/mB,QAAQqD,IAAI,CACpBplB,KAAKD,cAAc28E,4BAA4ByT,EAAsBljF,SACrEjN,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,aAC7FzH,KAAKD,cAAc2kE,mBAAmB1kE,KAAKoC,MAAMe,YAAYsE,KAAK0oF,EAAsBljF,QAAQjN,KAAKE,MAAMwQ,8CAN3GktE,OACAJ,OACA0kD,OAQER,GAAY,GACXQ,GAA6B/xC,EAAsBzvD,WAAwD,IAA3CyvD,EAAsBzvD,UAAUn/B,SAC7FmhI,EAAevyC,EAAsBzvD,UAAU,GACrDghG,EAA8C,qBAA3BgB,EAAahB,WAA4BgB,EAAahB,UACnEn/D,EAAcviE,KAAKD,cAAc6V,gBAAgB,CAAC,SAAS5V,KAAKoC,MAAMe,YAAYsE,KAAK,gBACvFk7H,EAAiB3iI,KAAKD,cAAco5B,kBAAkBn5B,KAAKoC,MAAMe,YAAYsE,MACnFi6H,EAAYA,GAAaiB,KAAoBpgE,QAAuD/yC,IAAxCmzG,EAAe/oF,QAAQ2oB,KAG/Ex6D,EAAW,GACXi2E,EAAc,GACdC,EAAe,GACfC,EAAgB,GAClB2jD,GAAiB,EAErBrkD,EAAiBA,GAAkB,EAC1BC,EAAa,eAAGA,GAAcvrE,SAASsrE,sCAKpCz7D,QAAQqD,IAAI,CACpBplB,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,cAAc,CAACg2E,IAC5Gz9E,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,sBAAsB,CAACg2E,IACpHz9E,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,gBAAgB,CAACzH,KAAKE,MAAMwQ,QAAQ+sE,0CANjII,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBG,EAAYP,GAAcz9E,KAAKD,cAAcsV,iBAAiBwoE,EAAW79E,KAAKoC,MAAMe,YAAYtC,WAE7E,OAAjBk9E,IACFD,EAAc99E,KAAKD,cAAcsV,iBAAiByoE,EAAY,KAC9DC,EAAe/9E,KAAKD,cAAcsV,iBAAiB0oE,EAAa/9E,KAAKoC,MAAMe,YAAYtC,WACtE4U,GAAG,KAClByoE,EAAcT,GAAcM,EAE5BE,EAAaR,GAAcM,EAAa1wE,MAAMywE,GAAax5D,IAAI05D,EAAYP,IACvEQ,EAAaR,GAAYhoE,GAAGqoE,KAC9BG,EAAaR,GAAcK,GAGzBL,EAAaD,IACfqkD,GAAiB,aAzByCpkD,4BA+BlE11E,EAASm2E,cAAgBA,EAEnByjD,EAAgBzjD,GAAiB78E,OAAOC,KAAK48E,GAAe38E,OAAO,EAEnE48E,EAAgBP,GAAmBA,EAAgBr8E,OAASq8E,EAAgB,GAAK,KACjFglD,EAAmB5iI,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,iBAC/DqsH,EAAsBW,EAAiBC,eAE7C96H,EAAS25H,UAAYA,EACrB35H,EAASk3G,eAAgB,EACzBl3G,EAAS+5H,gBAAiB,EAC1B/5H,EAASo+G,iBAAkB,EAC3Bp+G,EAASg6H,kBAAmB,EAC5Bh6H,EAASi2E,YAAcA,EACvBj2E,EAAS45H,aAAeA,EACxB55H,EAASk2E,aAAeA,EACxBl2E,EAASo2E,cAAgBA,EACzBp2E,EAASy1E,eAAiBA,EAC1Bz1E,EAAS85H,eAAiBA,EAC1B95H,EAASi6H,mBAAqBA,EAC9Bj6H,EAASk6H,oBAAsBA,EAC/Bl6H,EAASy5H,SAAWK,GAAkBF,EAEtC55H,EAAS05H,WAAaQ,IAAwBJ,EAC9C95H,EAASm6H,0BAA4BA,EACrCn6H,EAAS+J,OAAS6vH,GAAgB55H,EAASy5H,SAAW,SAAW,UAEjExhI,KAAKiI,SAASF,mRAMR+6H,EAA0B,YAC1B9iI,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAjE,eAAA2iB,EAAA9xB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAkF,SAAA+S,EAAO/gB,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAChFtO,EAAc+0G,EAAKh4G,MAAMs7G,UAAUhrG,gBAAgBtN,GACnCg1G,EAAKn4G,cAAco5B,kBAAkBh2B,EAAYD,SACjDC,EAAY2lC,IAHoD,CAAA1kB,EAAA3S,KAAA,eAAA2S,EAAA3S,KAAA,EAI9EymG,EAAKh4G,MAAM2oC,aAAa1lC,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,KAJI,OAMtFg6F,EAAwB3/H,EAAYk/B,WAAY,EANsC,wBAAAje,EAAAzR,SAAAsR,EAAAjkB,SAAlF,gBAAA4S,GAAA,OAAAugB,EAAAtgB,MAAA7S,KAAA8S,YAAA,YASA0iB,EAAsBn0B,OAAOC,KAAKwhI,GAAyB7/H,IAAK,SAAAo/B,GACpE,IAAM8F,EAAiB+vE,EAAKn4G,cAAc6V,gBAAgB,CAAC,aAAaysB,IACxE,MAAO,CACLx3B,MAAMw3B,EACNt0B,KAAKo6B,EAAep6B,KACpBH,MAAMu6B,EAAergB,WAME0N,EAAoBj0B,OAAO,IAChDyS,EAAmBwhB,EAAoB,GAAG3qB,OAC1CjB,EAAgB5J,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMirH,UAAUG,OAAS,QAE7Il7C,EAAsBpwE,KAAKE,MAAMs7G,UAAUhrG,gBAAgB5G,GACjEA,EAAgBwmE,EAAoBnyC,UACpCjqB,EAAmBo8D,EAAoB/tC,UAGzCriC,KAAKiI,SAAS,CACZutB,uBACA,WACA0iF,EAAK6qB,eAAe/uH,EAAiBpK,uLAcrBoK,8FAAiBpK,iCAAc,KAC7C4G,EAAkBnP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBACtDmB,OAAO,SAAA7N,GAAG,OAAIkoH,EAAK9rH,MAAMs7G,UAAUhrG,gBAAgB1M,GAAKu+B,WAAaruB,IACrEiyB,OAAO,SAAC+8F,EAAKl/H,GACZ,IAAMX,EAAc6oH,EAAK9rH,MAAMs7G,UAAUhrG,gBAAgB1M,GACnDm8C,EAAkB+rE,EAAK9rH,MAAMs1B,oBAAoBxhB,GAAkB7Q,EAAY86B,WAOrF,OALA96B,EAAY2lC,IAAMmX,EAAgBnX,IAClC3lC,EAAYD,MAAQ+8C,EAAgB/8C,MACpCC,EAAY8J,QAAUgzC,EAAgBhzC,QACtC9J,EAAYtC,SAAWo/C,EAAgBp/C,SACvCmiI,EAAI7/H,EAAY86B,WAAa96B,EACtB6/H,GACN,IAELhjI,KAAKiI,SAAS,CACZuI,kBACAwD,oBACA,WACIpK,GACFoiH,EAAK/U,YAAYrtG,oLAKJA,iGACXwmE,EAAsBpwE,KAAKoC,MAAMoO,gBAAgB5G,GACjDq5H,EAA0BjjI,KAAKE,MAAMs1B,oBAAoB46C,EAAoB/tC,UAE7E4d,EAAkBgjF,EAAwB7yD,EAAoBltE,QAE9DC,EAAc,CAClBsE,KAAKw4C,EAAgB/8C,MACrBA,MAAM+8C,EAAgB/8C,MACtB+J,QAAQgzC,EAAgBhzC,QACxBpM,SAASo/C,EAAgBp/C,WAIfkzB,KAAOksB,EAAgBlsB,KAG7B4xB,EAAc,CAClB7c,IAAImX,EAAgBnX,IACpBrhC,KAAKw4C,EAAgB/8C,MACrBA,MAAM+8C,EAAgB/8C,MACtB+J,QAAQgzC,EAAgBhzC,SAGpB+uB,EAAoBo0C,EAAoBp0C,kBAG1CikB,EAAgBijF,kBAClBlnG,EAAkB0E,UAAU,GAAGj5B,KAAOw4C,EAAgBijF,iBAGxD//H,EAAY44B,UAAY,CACtBjI,SAAQ,EACR6xB,cACA3pB,oBACAgmG,oBAAmB,aAGfhiI,KAAKE,MAAMijI,iBAAiB/yD,EAAoB/tC,SAAS4d,EAAgB/8C,eAE/ElD,KAAKiI,SAAS,CACZ9E,cACAyG,gBACAwmE,uBACA,WAEA,GAAIA,EAAoB/tC,WAAayuF,EAAK1uH,MAAM4R,iBAAiB,CAC/D,IAAMA,EAAmBo8D,EAAoB/tC,SAC7CyuF,EAAKiS,eAAe/uH,sQAMnBhU,KAAKoC,MAAMy/H,wDACP,cAGO,EACO,EACjBuB,EAAU/hI,OAAOC,KAAKtB,KAAKoC,MAAM87E,eAAe,GAEhDmlD,EAAgB,SAACzxH,EAAGqN,GACxB,IAAMikC,EAA4B,YAAdtxC,EAAGG,OAGjBmN,EAAY,CAChBI,YAAa,QACbH,cAAa,eACbkhG,WAAYnuG,SAVO,GAWnBkN,WAAY4xG,EAAK9wH,MAAM0J,eAGrBqV,IACFC,EAAUE,WAAa4xG,EAAKjxH,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBi/G,EAAKjxH,cAAc0f,yBAAyBP,GAG9C8xG,EAAK/oH,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bw/H,eAAe5+E,EACfpkC,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAM,CACJ/8D,OAAO,KACPC,SAAQ,SAMVskH,EAAuB,SAAC1xH,GAC5B,IAAMmN,EAASnN,EAAG+N,gBAClBqxG,EAAK/oH,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAMz6E,OAAA84B,EAAA,EAAA94B,CAAA,GACDiB,EAAUwc,WAAWg9D,MADrB,CAEH/8D,iBAMR/e,KAAKE,MAAM+f,0BAA0BjgB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAM,WAAY,CAAC27H,GAAU,KAAMC,EAAeC,GAExItjI,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAMz6E,OAAA84B,EAAA,EAAA94B,CAAA,GACDiB,EAAUwc,WAAWg9D,MADrB,CAEH98D,SAxDU,4PA+DhBhf,KAAKiI,SAAS,CACZ25H,cAAa,8IAKf5hI,KAAKiI,SAAS,CACZg3G,eAAc,oFAIIijB,mEAEhBA,IAA8BliI,KAAKoC,MAAM8/H,2BAC3CliI,KAAKiI,SAAS,CACZi6H,6KAecljB,GAClBh/G,KAAKiI,SAAS,CACZ+2G,mDAcK,IAAAmX,EAAAn2H,KAEP,IAAKA,KAAKoC,MAAM4R,iBACd,OAAO,KAGT,IAAM0tH,EAAY1hI,KAAKoC,MAAM48G,eAAiBh/G,KAAKoC,MAAMs/H,UAEnD5jD,EAAc99E,KAAKoC,MAAM67E,cAAgB58E,OAAOqQ,OAAO1R,KAAKoC,MAAM67E,cAAc18E,OAAO,EAAIF,OAAOqQ,OAAO1R,KAAKoC,MAAM67E,cAAc,GAAK,KACvIF,EAAe/9E,KAAKoC,MAAM87E,eAAiB78E,OAAOqQ,OAAO1R,KAAKoC,MAAM87E,eAAe38E,OAAO,EAAIF,OAAOqQ,OAAO1R,KAAKoC,MAAM87E,eAAe,GAAK,KAC3IghC,EAAoBwiB,GAAa1hI,KAAKoC,MAAMw/H,eAAmBF,GAAa1hI,KAAKoC,MAAM8/H,0BACvFqB,EAAkBvjI,KAAKoC,MAAM47E,aAAeh+E,KAAKoC,MAAM47E,YAAYh+E,KAAKoC,MAAMo7E,iBAAmBx9E,KAAKoC,MAAM47E,YAAYh+E,KAAKoC,MAAMo7E,gBAAgB/nE,GAAG,GACtJ+tH,EAAuBxjI,KAAKoC,MAAM4R,iBAAmBhU,KAAKoC,MAAMozB,oBAAoB7F,KAAM,SAAAyI,GAAC,OAAIA,EAAEvtB,QAAUsrH,EAAK/zH,MAAM4R,mBAAqBhU,KAAKoC,MAAMozB,oBAAoB,GAwGhL,OACE5sB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,wBAKAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEuH,KAAM,WACN2U,cAAc,EACdnB,aAAcuoH,EACdroH,kBAjIgB,SAAAjb,GACxB,IAAM0N,EAAQ1N,EAAM0N,MACdzK,EAAc,CAClB4K,KAAK7N,EAAMqK,KAAKwD,MAGlB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UAEZ0H,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHpd,MAAM,MACNoE,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBA+FVmV,QAAS/a,KAAKoC,MAAMozB,oBACpBrY,SAAUnd,KAAK+iI,eAAeriH,KAAK1gB,MACnCob,qBAxFmB,SAAAlb,GAE3B,IACMgc,GAA4D,IADlDhc,EAAMgc,YAAYnB,QACN+B,QAAQ5c,EAAMgc,YAAYrR,OAAgB3K,EAAMgc,YAAYrR,MAAQ,KAEhG,IAAKqR,EACH,OAAO,KAGT,IAAMtO,EAAQsO,EAAYtO,MACpBzK,EAAc,CAClB4K,KAAKmO,EAAYnO,MAGnB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACE0D,MAAO,CACL4pB,KAAK,KAEP9uB,eAAgB,iBACZlB,EAAMqb,YAEV3S,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEnB,EAAG,EACHR,MAAO,GACHf,EAAMqb,WAHZ,CAIEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAC8I,OAAO,WACfhO,eAAgB,eAEhBwH,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBA2CZ5F,KAAKoC,MAAMoO,iBACT5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,4BAKAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwC,GAAI,aACJutB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKi3G,YAAYv2F,KAAK1gB,MAChC4J,cAAe5J,KAAKoC,MAAMwH,cAC1B4G,gBAAiBxQ,KAAKoC,MAAMoO,qBAKjCxQ,KAAKoC,MAAM+jH,iBACVv9G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,2BAMXxF,KAAKE,MAAMwQ,QAmCR1Q,KAAKoC,MAAM+jH,iBAAoBnmH,KAAKoC,MAAMguE,sBAAwBpwE,KAAKoC,MAAMq/H,YAAczhI,KAAKoC,MAAMo/H,WACxG54H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFuN,GAAG,EACHgN,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOy3G,EAAmB,WAAa,WACvCt5G,MAAQs5G,EAAmBl/G,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAErFvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAGTuzH,EAAY,uBAAyB,uCAI3C94H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAQzH,KAAKoC,MAAMu/H,cAAgB3hI,KAAKoC,MAAMy/H,eAAkB,WAAa,WAC7Ej8H,MAAS5F,KAAKoC,MAAMu/H,cAAgB3hI,KAAKoC,MAAMy/H,eAAkB7hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE3HvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,gBAMgBnO,KAAKoC,MAAMwH,gBAG7BhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAMy/H,eAAiB,WAAa,SAChDj8H,MAAQ5F,KAAKoC,MAAMy/H,eAAiB7hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE9FvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,2BAOEvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJE,WAAY,EACZC,MAAO,UACP8C,QAAS,SACT7C,WAAY,UACZC,QAAU,SAAAiB,GAAC,OAAIovH,EAAKj2H,MAAM6nH,iBAAiB,2BAA2BoO,EAAKp2H,cAAc6V,gBAAgB,CAAC,WAAW,qCANvH,iBAYJhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAM0/H,eAAiB,WAAa,SAChDl8H,MAAQ5F,KAAKoC,MAAM0/H,eAAiB9hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE9FvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,cAMcnO,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,OAE1C0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkoB,UAAW,MACXC,QAAO,oFAAAvtB,OAAsFzD,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,QAEzH0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,QACND,KAAM,UACN7B,MAAO,UACPU,MAAO,CACL8I,OAAO,mBA3JvBxG,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC2E,KAAM,QACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,uDAQAvF,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAKE,MAAMo8H,2BAL1B,aAgJNt8H,KAAKoC,MAAM+jH,iBAAmBnmH,KAAKE,MAAMwQ,SAAW1Q,KAAKoC,MAAMoO,iBAAmBxQ,KAAKoC,MAAMwH,eAC3FhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAK5H,MAAO,IAEPi+G,GAAoBl/G,KAAKoC,MAAMo/H,WAC9B54H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,sBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACV,OAAOuc,EAAK/zH,MAAMq/H,WAAatL,EAAK5E,UAAU,WAAa,OAG/D51G,eAAe,EACfmC,YAAc9d,KAAKoC,MAAMq/H,WACzB5jH,SAAiC,YAAtB7d,KAAKoC,MAAM0P,QAEtBlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACmvB,GAAA,EAAD,CACEpP,YAAa,CACXhQ,OAAO,WAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,GAFd,aAQJiD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACV,OAAOuc,EAAK/zH,MAAMo/H,SAAWrL,EAAK5E,UAAU,UAAY,OAG5D51G,eAAe,EACfmC,YAAc9d,KAAKoC,MAAMo/H,SACzB3jH,SAAiC,WAAtB7d,KAAKoC,MAAM0P,QAEtBlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACmvB,GAAA,EAAD,CACEpP,YAAa,CACXhQ,OAAO,UAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,GAFd,aAYV3F,KAAKoC,MAAM68G,eAAuC,YAAtBj/G,KAAKoC,MAAM0P,QAAwB9R,KAAKoC,MAAMs/H,WAAa1hI,KAAKoC,MAAM6/B,mBAAqBjiC,KAAKoC,MAAM4/H,mBAChIp5H,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHgN,GAAG,EACHtT,QAAQ,OACRxH,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,qBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAEVnO,KAAKoC,MAAMwH,cANd,iIASFhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJqd,UAAU,EACVgoF,QAASrhH,KAAKoC,MAAM48G,cACpBpxG,MAAK,8CACLuP,SAAW,SAAApW,GAAC,OAAIovH,EAAK7U,oBAAoBv6G,EAAEggB,OAAOs6F,cAGnDrhH,KAAKoC,MAAM68G,eAAuC,YAAtBj/G,KAAKoC,MAAM0P,QAAwB9R,KAAKoC,MAAMs/H,WAAa1hI,KAAKoC,MAAM6/B,mBAAqBjiC,KAAKoC,MAAM4/H,oBACrIp5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,EACHua,GAAI,EACJ/a,MAAO,EACPiG,aAAc,EACdhG,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEsF,UAAW,SACXtI,WAAY,UACZC,QAAS9F,KAAKi/G,cAAcv+F,KAAK1gB,OAHnC,2CAWkB,YAAtBA,KAAKoC,MAAM0P,OACT9R,KAAKoC,MAAM6/H,oBACTr5H,EAAA9G,EAAAC,cAAC0hI,GAAA,EAADpiI,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwjI,WAAW,EACXC,aAAa,EACbjC,UAAWA,EACXhuD,eAAe,EACfkwD,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACfljH,SAAU,uBACVzd,YAAanD,KAAKoC,MAAMe,YACxByG,cAAe5J,KAAKoC,MAAMwH,cAC1BsnF,gBAAiB,SAAA6yC,GAAS,MAAI,CAACA,IAC/B/vH,iBAAkBhU,KAAKE,MAAM8T,iBAC7BgwH,eAAgBhkI,KAAKgkI,eAAetjH,KAAK1gB,MACzC6/G,gBAAiB7/G,KAAK6/G,gBAAgBn/F,KAAK1gB,MAC3CoiI,kBAAmBpiI,KAAKoiI,kBAAkB1hH,KAAK1gB,MAC/CmiI,yBAA0BniI,KAAKmiI,yBAAyBzhH,KAAK1gB,MAC7DikI,cAAa,gBAAAxgI,OAAkBzD,KAAKoC,MAAMwH,cAA7B,+CAAAnG,OAAwFzD,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MAApH,OAEb0F,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMwH,cANjC,uBAYNhB,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFqN,GAAG,IAGLlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,WACPuI,UAAW,UAHb,+CAWNvF,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAIHhc,KAAKoC,MAAM0c,WAAWg9D,MAAM98D,QAC1BpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GAAmB5C,KAAKE,MAAxB,CAA+BogB,KAAMtgB,KAAKE,MAAMogB,KAAMM,SAAQ,qBAAwBD,WAAU,gCAAmC7Y,KAAM9H,KAAKoC,MAAM0c,WAAWg9D,MAAM/8D,WAErK/e,KAAKoC,MAAM0/H,eACbl5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,UACNC,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC8C,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,wCAMwCnO,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MANpE,KAQA0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7N,UAAW,SACXtI,WAAY,UACZC,QAAU,SAAAiB,GAAC,OAAIovH,EAAKj2H,MAAM8G,YAAYmvH,EAAK/zH,MAAMguE,oBAAoB/tC,SAAS,IAAI8zF,EAAK/zH,MAAMguE,oBAAoBnyC,aAJnH,wBASAj+B,KAAKoC,MAAMy/H,eACbj5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC8C,MAAO,WACP6B,KAAM,eAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,WACPuI,UAAW,UAHb,+BAK8BvF,EAAA9G,EAAAC,cAAA,WAL9B,0BAK4D+7E,EAAYxwE,QAAQ,GALhF,IAKqFtN,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,OAEjH0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,UACPuI,UAAW,UAHb,2BAK2BnO,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MALvD,iCAOA0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,IACTkG,UAAUnH,KAAKE,MAAM0G,MAAMC,OAAO6X,QAEpCzZ,YAAc,SAAA8B,GAAC,OAAIovH,EAAKr6C,UAN1B,WAaJlzE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,mBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAEXvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YADT,mCAGkCgD,EAAA9G,EAAAC,cAAA,cAASg8E,EAAazwE,QAAQ,GAA9B,IAAmCtN,KAAKoC,MAAMwH,eAHhF,2DAGgK5J,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MAH5L,QAaZlD,KAAKoC,MAAM47E,YAAYh+E,KAAKoC,MAAMo7E,iBAChC50E,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFqN,GAAG,IAIH9O,KAAKoC,MAAM0c,WAAW+B,QAAQ7B,QAC5BpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GAAmB5C,KAAKE,MAAxB,CAA+B0gB,SAAQ,+BAAkCD,WAAU,wCAA2C7Y,KAAM9H,KAAKoC,MAAM0c,WAAW+B,QAAQ9B,WAElK/e,KAAKoC,MAAM2/H,iBACbn5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,QACtC2E,KAAM,UACN7B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,iCAUFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,IACZC,MAAO,YACPuI,UAAW,UAHb,eAKenO,KAAKoC,MAAM47E,YAAYh+E,KAAKoC,MAAMo7E,gBAAgBlwE,QAAQ,GALzE,IAK8EtN,KAAKoC,MAAMwH,eAGvF25H,GACE36H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEsF,UAAW,SACXtI,WAAY,UACZC,QAAS9F,KAAK6gB,QAAQH,KAAK1gB,OAH7B,iBASFA,KAAKoC,MAAM47E,YAAYh+E,KAAKoC,MAAMo7E,gBAAgBjrE,GAAGvS,KAAKoC,MAAMguE,oBAAoB8zD,cAClFt7H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVE,MAAO,QACPuI,UAAW,UAJb,wCAMwCnO,KAAKD,cAAcW,YAAYV,KAAKoC,MAAMguE,oBAAoB8zD,YAAY,GANlH,IAMuHlkI,KAAKoC,MAAMwH,cANlI,oBAWF5J,KAAKoC,MAAM+7E,eACTv1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,WACPuI,UAAW,UAHb,yBAKyBnO,KAAKD,cAAciT,YAA+C,IAAnChT,KAAKoC,MAAM+7E,cAAchsE,WAAgB0mE,MAAMziE,OAAO,qCA/uCnHlU,kCC8xBZiiI,8MAzyBb/hI,MAAQ,CACNqL,MAAM,GACNwzG,MAAM,KACNmjB,UAAU,GACVlmB,QAAQ,KACRjsE,WAAW,GACX8mE,WAAW,KACXsrB,YAAW,EACXtwB,YAAY,KACZ5wG,YAAY,KACZg6G,YAAY,KACZn9E,aAAa,KACbs6C,aAAa,KACb1wE,cAAc,KACd4zG,eAAe,KACfjC,eAAe,KACfwS,eAAe,KACf/O,eAAc,EACdxuG,gBAAgB,KAChBq9C,kBAAkB,GAClBwvD,gBAAe,EACf6B,kBAAiB,EACjBolB,mBAAmB,KACnB/mB,mBAAmB,KACnBgE,oBAAoB,KACpBgjB,oBAAoB,KACpBliB,qBAAqB,KACrBmiB,wBAAwB,QAI1BzkI,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAK6H,yLAIoB7H,KAAKD,cAAc4wC,6BAAtCsB,SACNjyC,KAAKiI,SAAS,CACZgqC,aACAoyF,YAAW,GACX,WACAhkI,EAAK8tH,oMAIgB9rH,EAAUC,2FACjCtC,KAAKI,cAEwBkC,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,uCAE5DzG,EAAcnD,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKoC,MAAMwH,eAC9D66H,EAAkBthI,EAAYiwC,UAC9BsxF,EAAmBvhI,EAAYgwC,oBAG/BpxB,QAAQqD,IAAI,CAChBq/G,EAAkBzkI,KAAKE,MAAM2oC,aAAa47F,EAAgBh9H,KAAKg9H,EAAgBx3H,QAAQw3H,EAAgB37F,KAAO,KAC9G47F,EAAmB1kI,KAAKE,MAAM2oC,aAAa67F,EAAiBj9H,KAAKi9H,EAAiBz3H,QAAQy3H,EAAiB57F,KAAO,cAGpH9oC,KAAKiI,SAAS,CACZ9E,eACA,WACAqH,EAAK2jH,uCAGDjM,EAAwB5/G,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,eAChE4Q,EAA0B9rH,EAAU48G,mBAAqBl/G,KAAKoC,MAAM88G,kBACtEgD,GAAyBkM,IAC3BpuH,KAAKmuH,qBAImBl+G,KAAKC,UAAU5N,EAAUg4E,gBAAkBrqE,KAAKC,UAAUlQ,KAAKoC,MAAMk4E,eAE/Ft6E,KAAKs/G,iUAI4B,oJAIhBztF,GACnB,IAAIhnB,EAAQ,KACRwU,EAAa,KACbi5C,EAAe,GACf/4C,EAAe,KACnBsS,EAAS7xB,KAAKD,cAAcw3B,KAAK1F,GACjC,IAAMgiB,EAAa7zC,KAAKoC,MAAMe,YAAY0wC,WAC1C,OAAQ7zC,KAAKoC,MAAMo7G,gBACjB,IAAK,UACH,OAAQx9G,KAAKoC,MAAMwH,eACjB,IAAK,OACHyV,EAAa,kBACbE,EAAe,mBACf1U,EAAQ7K,KAAKE,MAAMogB,KAAKgC,IAAIwmB,IAAI67F,gBAAgB,UAAW9yG,GAC3DymC,EAAe,CAACt4D,KAAKE,MAAMwQ,SAC7B,MACA,QACE,IAAMk0H,EAAc5kI,KAAKE,MAAMogB,KAAKgC,IAAIwmB,IAAI67F,gBAAgB,UAAW9yG,GACvE,OAAQgiB,GACN,IAAK,SACHt0B,EAAe,iBACfF,EAAa,sBACbi5C,EAAe,CAACt4D,KAAKoC,MAAMe,YAAYiwC,UAAUnmC,QAAQjN,KAAKE,MAAMwQ,QAAQk0H,GAC9E,MACA,QACA,IAAK,MACHvlH,EAAa,aACbE,EAAe,mBACf+4C,EAAe,CAACt4D,KAAKE,MAAMwQ,QAAQ1Q,KAAKoC,MAAMe,YAAYiwC,UAAUnmC,QAAQ23H,IAKtF,MACA,IAAK,WACHvlH,EAAa,WACbi5C,EAAe,CAACzmC,GAChBtS,EAAevf,KAAKoC,MAAMe,YAAYgwC,WAAW1rC,KAC7CzH,KAAKoC,MAAMe,YAAY0hI,YACzBh6H,EAAQ7K,KAAKE,MAAMogB,KAAKgC,IAAIwmB,IAAI67F,gBAAgB,UAAW9yG,IAcjE,MAAO,CACLhnB,QACAwU,aACAi5C,eACA/4C,oOASIR,EAAS/e,KAAKoC,MAAMoiI,wBAEpBM,EAAoB9kI,KAAKE,MAAMs7G,UAAUupB,cAAcC,gCAClChlI,KAAKE,MAAMy1C,eAAesvF,SAASC,oBAAoBnmH,EAAO+lH,GAAkB,eAArGK,mDAGG,CAACA,oCAEH,yLAGcjmB,mEACrBl/G,KAAKiI,SAAS,CACZi3G,0MAIoBslB,yEAChBD,EAAsBvkI,KAAKoC,MAAM6vC,WAAWtiB,KAAM,SAAA/d,GAAE,OAAIA,EAAG9J,KAAKoF,gBAAkBs3H,EAAwBt3H,gBAChHlN,KAAKiI,SAAS,CACZs8H,sBACAC,oNAIuB5yH,EAAGigB,EAAOjS,gFAe7ByiG,EAAuBzwG,EAC7B5R,KAAKiI,SAAS,CACZo6G,wBACA,WACAnK,EAAKiW,0SAKDpmH,EAAW,GACXgyH,EAAmC,SAA3B/5H,KAAKoC,MAAMwH,cACnBiqC,EAAa7zC,KAAKoC,MAAMe,YAAY0wC,gBAClC7zC,KAAKoC,MAAMo7G,sBACZ,mBAqCA,qBA4DA,oCAhGHz1G,EAASk5G,MAAQ,GACjBl5G,EAASi3G,eAAgB,EACzBj3G,EAAS8lD,kBAAoB,CAAC,EAAE,GAChC9lD,EAASs1G,gBAAkB0c,EAC3BhyH,EAASw1G,mBAAT,wCAAA95G,OAAsEzD,KAAKoC,MAAMwH,eACjF7B,EAASuyE,aAA8B,QAAfzmC,EAAuB7zC,KAAKE,MAAMs7G,UAAUjiF,UAAU6rG,eAAiBplI,KAAKE,MAAMs7G,UAAUjiF,UAAU8rG,gBACvGtL,oCAAc/5H,KAAKD,cAAcu+E,cAAct+E,KAAKE,MAAMwQ,sEAAiB1Q,KAAKD,cAAc2yB,gBAAgB1yB,KAAKoC,MAAMe,YAAYiwC,UAAU3rC,KAAKzH,KAAKE,MAAMwQ,4CAAtL3I,EAASo1G,iBACLn9G,KAAKoC,MAAMigH,sBACTijB,EAAqB,KACrBC,EAAuB,KACtBxL,GAIHwL,EAAuBvlI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,OAASvkD,OAAOqQ,OAAO1R,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,QAAQj2B,KAAM,SAAA0lG,GAAK,OAAIA,EAAMpoH,QAAQC,gBAAkB8+G,EAAK9rH,MAAMs7G,UAAUjiF,UAAUisG,eAAev4H,QAAQC,eAAiBmoH,EAAMxvE,IAAI3R,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoBmoH,EAAMxvE,IAAIt7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAChhBo4H,EAAqBtlI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAO14B,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8+G,EAAK9rH,MAAMs7G,UAAUjiF,UAAUisG,eAAev4H,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,OAJ3eq4H,EAAuBvlI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,OAASvkD,OAAOqQ,OAAO1R,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,QAAQj2B,KAAM,SAAA0lG,GAAK,OAAIA,EAAMpoH,QAAQC,gBAAkB8+G,EAAK5pH,MAAMe,YAAYiwC,UAAUnmC,QAAQC,eAAiBmoH,EAAMxvE,IAAI3R,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK5pH,MAAMk4E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoBmoH,EAAMxvE,IAAI3R,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoBmoH,EAAMxvE,IAAIt7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC7nBo4H,EAAqBtlI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAO14B,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8+G,EAAK5pH,MAAMe,YAAYiwC,UAAUnmC,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK5pH,MAAMk4E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,MAK9kBzK,EAAkB6iI,EAAqBtlI,KAAKD,cAAcsV,iBAAiBnD,SAASozH,EAAmB/6H,KAAK,IAAIvK,KAAKoC,MAAMe,YAAYtC,UAAc0kI,EAAuBvlI,KAAKD,cAAcsV,iBAAiBnD,SAASqzH,EAAqB1/E,IAAIt7C,KAAK,IAAIvK,KAAKoC,MAAMe,YAAYtC,UAAYb,KAAKD,cAAc8R,MAAM,GAC7T9J,EAASm2G,QAAU,CACjBnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,2CAAA/B,OAA4ChB,EAAgB6K,QAAQ,GAApE,KAAA7J,OAA0EzD,KAAKoC,MAAMwH,cAArF,qHAGN7B,EAASm2G,QAAU,CACjBnwG,KAAK,cACLqQ,UAAU,CACRxY,MAAM,YAERJ,KAAI,kIAMRuC,EAASi3G,eAAgB,EACzBj3G,EAASs1G,gBAAiB,EAC1Bt1G,EAASw1G,mBAAqB,GAC9Bx1G,EAAS8lD,kBAAoB,CAAC,IAAI,OAClC9lD,EAASuyE,aAAet6E,KAAKoC,MAAMe,YAAYgwC,qBAClBnzC,KAAKD,cAAc2yB,gBAAgB1yB,KAAKoC,MAAMe,YAAYgwC,WAAW1rC,KAAKzH,KAAKE,MAAMwQ,oBAAlH3I,EAASo1G,mBAEH92F,EAAiBrmB,KAAKD,cAAcujB,qBACpCmiH,EAAep/G,EAAe5e,KAC9Bi+H,EAAgB1lI,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeyQ,EAAe3jB,KAClHijI,EAAkB3lI,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoB8vH,EAAc,SACxG39H,EAASk5G,MAAQ,CACf,CACElzG,KAAK,WACLof,WAAU,EACV4mF,YAAW,YAAAtwG,OAAazD,KAAKoC,MAAMwH,cAAxB,UAAAnG,OAA8CgiI,EAA9C,aAEb,CACE13H,KAAK,WACLof,WAAU,EACV4mF,YAAW,2CAEb,CACEhmG,KAAK,SACLof,WAAU,EACV4mF,YAAW,QAAAtwG,OAASzD,KAAKoC,MAAMwH,cAApB,UAAAnG,OAA0CkiI,EAA1C,eAGX3lI,KAAKoC,MAAMigH,sCACPujB,EAAuB5lI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,OAASvkD,OAAOqQ,OAAO1R,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,QAAQj2B,KAAM,SAAA0lG,GAAK,OAAIA,EAAMpoH,QAAQC,gBAAkB8+G,EAAK5pH,MAAMe,YAAYgwC,WAAWlmC,QAAQC,eAAiBmoH,EAAMxvE,IAAI3R,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK5pH,MAAMk4E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoBmoH,EAAMxvE,IAAI3R,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoBmoH,EAAMxvE,IAAIt7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9nB24H,EAAqB7lI,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAO14B,KAAKoC,MAAMigH,qBAAqB5uE,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB8+G,EAAK5pH,MAAMe,YAAYgwC,WAAWlmC,QAAQC,eAAiB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK5pH,MAAMk4E,aAAartE,QAAQ4sB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIE,OAAOvkB,KAAM,SAAAsL,GAAC,OAAIA,EAAE/tB,cAAcgpB,SAAS81F,EAAK9rH,MAAMwQ,QAAQmpB,QAAQ,KAAK,IAAI3sB,kBAAoB8mC,EAAIzpC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KACnlB44H,EAAkBD,EAAqB7lI,KAAKD,cAAcsV,iBAAiBnD,SAAS2zH,EAAmBt7H,KAAK,IAAIvK,KAAKoC,MAAMe,YAAYtC,UAAab,KAAKoC,MAAMigH,qBAAqB5uE,WAAazzC,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,QAAU5lD,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,OAAOmgF,SAAW/lI,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMigH,qBAAqB5uE,UAAUmS,OAAOmgF,SAAS/8F,aAAan+B,MAAM7K,KAAKoC,MAAMe,YAAYtC,UAAc+kI,EAAuB5lI,KAAKD,cAAcsV,iBAAiBnD,SAAS0zH,EAAqB//E,IAAIt7C,KAAK,IAAIvK,KAAKoC,MAAMe,YAAYtC,UAAab,KAAKD,cAAc8R,MAAM,GAChnB9J,EAASm2G,QAAU,CACjBnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,2CAAA/B,OAA4CqiI,EAAgBx4H,QAAQ,GAApE,KAAA7J,OAA0EzD,KAAKoC,MAAMwH,cAArF,iIAGFpE,EAAO,QACHquC,SACD,kDACHruC,EAAI,kGAIJA,EAAI,mGAGRuC,EAASm2G,QAAU,CACjB14G,OACAuI,KAAK,cACLqQ,UAAU,CACRxY,MAAM,gEAMZmC,EAAS8lD,kBAAoB,CAAC,EAAE,GAChC9lD,EAASq8H,UAAYpkI,KAAKoC,MAAM6vC,WAAWtgC,OAAQ,SAAAC,GAAE,MAAkB,aAAdA,EAAGE,SAA0BF,EAAG8jC,QAAU9jC,EAAG2f,YAAY1b,gBAAkBm2G,EAAK5pH,MAAMwH,cAAciM,gBAAgB5S,IAAK,SAAA2O,GAEhL,MAAO,CACLhE,MAFYo+G,EAAKjsH,cAAciT,YAAyB,IAAbpB,EAAGO,WAAgBiE,OAAO,oBAAoB,MAAMxE,EAAG/G,MAAMyC,QAAQ,GAAG,IAAIsE,EAAG1O,MAG1HqH,KAAKqH,EACL/G,MAAM+G,EAAG9J,QAIbC,EAASu8H,mBAAqBv8H,EAASq8H,UAAU7iI,OAAO,EAAIwG,EAASq8H,UAAU,GAAK,KACpFr8H,EAASw8H,oBAAsBx8H,EAASu8H,mBAAqBv8H,EAASu8H,mBAAmB/5H,KAAO,KAChGxC,EAASy8H,wBAA0Bz8H,EAASw8H,oBAAsBx8H,EAASw8H,oBAAoBz8H,KAAO,sEAMrGC,EAASo1G,cACZp1G,EAASo1G,YAAcn9G,KAAKD,cAAc8R,MAAM,IAKlD7R,KAAKiI,SAASF,4QAIRyI,EAAkBnP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiBy1B,OAAQ,SAAC3U,EAAOpuB,GACxF,IAAMC,EAAc2tH,EAAK5wH,MAAMs7G,UAAUhrG,gBAAgBtN,GAQzD,OAPIC,EAAY2wB,SACdxC,EAAO/jB,KAAPlM,OAAA84B,EAAA,EAAA94B,CAAA,CACEwJ,MAAM3H,EACN0K,MAAM1K,GACHC,IAGAmuB,GACP,IAEIjL,EAAiBrmB,KAAKD,cAAcujB,qBACpC0iH,EAAehmI,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKE,MAAMirH,UAAUG,QACxG1hH,EAAgBo8H,EAAehmI,KAAKE,MAAMirH,UAAUG,OAAUtrH,KAAKE,MAAM0J,eAAiB5J,KAAKoC,MAAMwH,eAAiB4G,EAAgB,GAAG3F,MACzI0wG,EAAiB/qG,EAAgBmf,KAAM,SAAAsL,GAAC,OAAIA,EAAEpwB,QAAUjB,IACxDq8H,EAAiBD,EAAiF,UAArC,WAA5B3/G,EAAe9C,SAAwB,UAAY,WACpFi6F,EAAiBx9G,KAAKE,MAAM4R,QAAU9R,KAAKoC,MAAM0P,QAAUm0H,EAC3D9iI,EAAcnD,KAAKE,MAAMs7G,UAAUhrG,gBAAgB5G,GAIzD5J,KAAKiI,SAAS,CACZ9E,cACAyG,gBACA2xG,iBACAiC,iBACAhtG,mBACA,WACAsgH,EAAKoV,8YAQGt8H,GACV5J,KAAKiI,SAAS,CACZ2B,oDAIM4zG,GACRx9G,KAAKiI,SAAS,CACZu1G,oDAIK,IAAAwT,EAAAhxH,KACDq8H,IAAcr8H,KAAKE,MAAMm8H,UACzB8J,EAAuC,SAA9BnmI,KAAKoC,MAAMo7G,eACpBx6G,EAA0C,YAA9BhD,KAAKoC,MAAMo7G,eACvB+E,EAA2C,aAA9BviH,KAAKoC,MAAMo7G,eACxBn3F,EAAiBrmB,KAAKD,cAAcujB,qBACpC8R,EAAmB/O,EAAe3jB,GAExC,OACEkG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKoC,MAAMoO,gBAmBV5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKoC,MAAMoO,gBAAgBjP,OAU1BqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBH,MAAO,CAAC,EAAEo7H,EAAY,EAAI,UAGvBr8H,KAAKE,MAAM0J,eACVhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,iBAKAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,CACEF,GAAI,UACA1C,KAAKE,MAFX,CAGE+vB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKi3G,YAAYv2F,KAAK1gB,MAChC4J,cAAe5J,KAAKoC,MAAMwH,cAC1B4G,gBAAiBxQ,KAAKE,MAAMs7G,UAAUhrG,oBAM5CxQ,KAAKoC,MAAMwH,eACThB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,IAGJjB,KAAKE,MAAM4R,QACVlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,sBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJlN,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,MAER0d,UAAW,CACThZ,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,UACN2Y,UAAW,UACXpQ,KAAM,gBACNwQ,YAAa,UACbtZ,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,YAClC1zG,SAAyC,YAA9B7d,KAAKoC,MAAMo7G,kBAExB50G,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,MAER0d,UAAW,CACThZ,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,WACN2Y,UAAW,SACXpQ,KAAM,cACNwQ,YAAa,UACbtZ,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,aAClC1zG,SAAyC,aAA9B7d,KAAKoC,MAAMo7G,kBAExB50G,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,MAER0d,UAAW,CACThZ,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,OACNuI,KAAM,YACNoQ,UAAW,SACXI,YAAa,UACbtZ,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,SAClC1zG,SAAyC,SAA9B7d,KAAKoC,MAAMo7G,oBAO7Bx9G,KAAKoC,MAAMyrD,kBAAkB33B,SAASd,GAqClCp1B,KAAKoC,MAAMe,aAAenD,KAAKoC,MAAM+6G,aAAen9G,KAAKoC,MAAMk4E,aAClE1xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPmN,GAAI,CAAC,EAAE,IAGJpL,GAAau/G,EACZ35G,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE+e,MAAOjf,KAAKoC,MAAM6c,MAClBgiG,MAAOjhH,KAAKoC,MAAM6+G,MAClB/C,QAASl+G,KAAKoC,MAAM87G,QACpBpsG,OAAQ9R,KAAKoC,MAAMo7G,eACnBr6G,YAAanD,KAAKoC,MAAMe,YACxB68B,aAAchgC,KAAKoC,MAAM+6G,YACzB7iC,aAAct6E,KAAKoC,MAAMk4E,aACzB0kC,cAAeh/G,KAAKoC,MAAM48G,cAC1B3B,eAAgBr9G,KAAKoC,MAAMi7G,eAC3Br1G,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAC/B2B,iBAAkBl/G,KAAKk/G,iBAAiBx+F,KAAK1gB,MAC7CuhH,oBAAqBvhH,KAAKoC,MAAMm/G,oBAChCjC,oBAAqBt/G,KAAKs/G,oBAAoB5+F,KAAK1gB,MACnD6f,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,QAGnDgD,EACE4F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACiyG,EAAA,EAAD3yG,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE61G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUt0G,KAAKoC,MAAMwH,kBAIvB24G,GACF35G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,WACN7B,MAAO,WACP8B,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,UAExC8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMwH,cANjC,oBAaRu8H,GACFv9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAGJjB,KAAKoC,MAAMiiI,WAkBRrkI,KAAKoC,MAAMgiI,UAAU7iI,OACvBqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,uBAGAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEkc,cAAc,EACd3U,KAAM,eACNsT,QAAS/a,KAAKoC,MAAMgiI,UACpBjnH,SAAUnd,KAAKomI,kBAAkB1lH,KAAK1gB,MACtCib,aAAcjb,KAAKoC,MAAMkiI,sBAGzBtkI,KAAKoC,MAAMmiI,sBACRvkI,KAAKoC,MAAMmiI,oBAAoBpwF,SAC9BvrC,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,EACH/a,MAAM,GAER8M,KAAM,aACNvI,KAAM,0IAGRoD,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEkP,OAAQ,OACR5P,UAAW4gH,IACX1iG,YAAa,CACXpE,GAAG,EACH9a,WAAW,SACXE,eAAe,UAEjB0f,eAAgB,CACdnb,WAAW,EACX1E,MAAM,CAAC,EAAE,EAAE,GACXyG,KAAK,SACLrC,OAAO,OACPK,SAAS,CAAC,EAAE,GACZyJ,UAAU,KACVjI,aAAa,EACbC,UAAU,SACV0D,MAAM,oBAER+U,OAAQ,GACRP,WAAY,OACZW,oBAAoB,EACpBT,aAAc,mBACdvX,SAAUhI,KAAKqmI,aAAa3lH,KAAK1gB,MACjC8f,0BAA2B9f,KAAKsmI,yBAAyB5lH,KAAK1gB,OAC1DA,KAAKE,OAET0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJ5W,KAAM,OACNC,KAAM,QACN9B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,IACZD,SAAU,OACVE,MAAO,YACPuI,UAAW,UAJb,uCAcZvF,EAAA9G,EAAAC,cAACgf,EAAA,EAAD,CACEzF,UAAW,CACTU,GAAG,EACH/a,MAAM,GAER8M,KAAM,UACNvI,KAAM,yCAtGRoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,+BAiGtBoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,qBA9OVoD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACF2M,GAAG,EACHnN,MAAM,IAGR2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,OAMMvF,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKD,cAAc8N,WAAWwY,EAAe5e,MAAtD,YANN,yDAMyImB,EAAA9G,EAAAC,cAAA,cAAS/B,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoB5V,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewf,IAAmB,SAAjL,YANzI,KAQAxsB,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,IACTyE,SAAS,CAAC,EAAE,IAEdT,YAAa,SAAA8B,GAAC,OAAIiqH,EAAK9wH,MAAMqmI,mBAAmBvV,EAAKjxH,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewf,OANrI,sBA/IhBxsB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,UAJb,gCAzBNvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,+BAxaMtD,aCkwBbskI,8MArwBbpkI,MAAQ,CACN6+G,MAAM,KACN/C,QAAQ,KACRuoB,SAAS,KACTznG,UAAU,KACV+5E,WAAW,KACXhF,YAAY,KACZ5wG,YAAY,KACZ68B,aAAa,KACbs6C,aAAa,KACb1wE,cAAc,KACd4zG,eAAe,KACfuQ,eAAe,KACfp2C,gBAAgB,KAChB+uD,gBAAgB,KAChBC,iBAAiB,KACjBznB,kBAAiB,EACjB3B,mBAAmB,KACnBgE,oBAAoB,KACpBc,sBAAqB,KAIvBtiH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK6H,gMAIkBxF,EAAUC,0FACjCtC,KAAKI,cAE2BkC,EAAUqkI,mBAAqB3mI,KAAKoC,MAAMukI,0CAElE/8H,EAAgB5J,KAAKoC,MAAMukI,iBAAiBtuD,WAC5Cl1E,EAAc9B,OAAOqQ,OAAO1R,KAAKE,MAAMs1B,qBAAqB,GAAG5rB,YAC1C5J,KAAKD,cAAc2yB,gBAAgB9oB,EAAc5J,KAAKE,MAAMwQ,gBAAjFsvB,SACAw9E,EAAkBx9G,KAAKoC,MAAMo7G,eAA4Dx9G,KAAKoC,MAAMo7G,eAArDx9G,KAAKE,MAAMirH,UAAUG,QAAU,QACpFtrH,KAAKiI,SAAS,CACZ9E,cACA68B,eACAp2B,gBACA4zG,2BAIE4Q,EAA0B9rH,EAAU48G,mBAAqBl/G,KAAKoC,MAAM88G,iBACpEgD,EAAwB5/G,EAAUk7G,iBAAmBx9G,KAAKoC,MAAMo7G,eAChEopB,EAAoBtkI,EAAUy2G,aAAe/4G,KAAKoC,MAAM22G,YAAc/4G,KAAKoC,MAAM22G,WAAWtjG,GAAG,GAC/FoxH,EAAkB52H,KAAKC,UAAU5N,EAAUmkI,YAAcx2H,KAAKC,UAAUlQ,KAAKoC,MAAMqkI,WAAazmI,KAAKoC,MAAM22G,YAAc/4G,KAAKoC,MAAM22G,WAAWtjG,GAAG,IACpJysG,GAAyB0kB,GAAqBC,GAAmBzY,IACnEpuH,KAAKmuH,aAGqBl+G,KAAKC,UAAU5N,EAAUg4E,gBAAkBrqE,KAAKC,UAAUlQ,KAAKoC,MAAMk4E,eAE/Ft6E,KAAKs/G,wMAISztF,iFAChBA,EAAS7xB,KAAKD,cAAc8R,MAAMggB,IACtBrxB,UAAWqxB,EAAOpc,GAAG,wBAG3BzV,KAAKoC,MAAMqQ,YAAczS,KAAKoC,MAAM0kI,SAAW9mI,KAAKoC,MAAM2kI,kCAEtDD,EAAU9mI,KAAKoC,MAAM0kI,QACrBr0H,EAAazS,KAAKoC,MAAMqQ,WAE9Bu0H,GADIA,EAAiBn1G,EAAOvN,IAAI7R,IACAH,MAAM00H,EAAe35H,MAAMy5H,sBAEpD,CACLj1G,SACAm1G,mDAKC,0RAGiBjuB,iCAAW,KAC/B0tB,EAAW,KACXllB,EAAsB,OAC1BxI,EAAaA,GAAc/4G,KAAKoC,MAAM22G,cAEpB/4G,KAAKD,cAAc8R,MAAMknG,GAAYtjG,GAAG,yBAChDzV,KAAKoC,MAAMo7G,sBACZ,gBAMA,kBACA,2CANH+D,EAAsB,CACpB37G,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAClD3nB,KAAI,kBAAA/B,OAAmBs1G,EAAWzrG,QAAQ,GAAtC,2DAKAukB,EAAS7xB,KAAKD,cAAcy0D,qBAAqBukD,EAAW/4G,KAAKoC,MAAMe,YAAYtC,oBACxEb,KAAKinI,YAAYp1G,kBAAlC40G,YAGIllB,EADEklB,EAASO,eAAe5yG,IAAIp0B,KAAKoC,MAAM2kI,WACnB,CACpBnhI,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAClD3nB,KAAI,kBAAA/B,OAAmBzD,KAAKD,cAAcsV,iBAAiBoxH,EAASO,eAAe,IAAI15H,QAAQ,GAA3F,KAAA7J,OAAiGzD,KAAKoC,MAAMo7G,iBAG5F,CACpBh4G,KAAI,uBACJI,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOsb,0EAU9DrtB,KAAKiI,SAAS,CACZw+H,WACA1tB,aACAwI,gNAIuB1vF,iFACrBxS,EAAa,KACbi5C,EAAe,KACnBzmC,EAAS7xB,KAAKD,cAAc8R,MAAMggB,GAC5Bq1G,EAAclnI,KAAKD,cAAc8R,MAAM,GAAG2wD,IAAI,KAAKlwD,MAAM,GAAGhF,QAAQ,QAClEtN,KAAKoC,MAAMo7G,sBACZ,gBAIA,kBACA,2CAJHn+F,EAAa,WACbi5C,EAAe,CAACt4D,KAAKoC,MAAMe,YAAY8J,QAAQiF,SAASlS,KAAKoC,MAAMukI,iBAAiB/tD,qBAAqB54E,KAAKD,cAAcs0D,aAAaxiC,wCAIzIxS,EAAa,qBACP8nH,EAAsBnnI,KAAKoC,MAAMukI,iBAAiBjuD,OAAO14E,KAAKoC,MAAMo7G,0BACnDx9G,KAAKinI,YAAYp1G,gBAAlC40G,+BAEAA,EAASO,eAAe5yG,IAAIp0B,KAAKoC,MAAM2kI,4BACzCzuE,EAAe,CAACt4D,KAAKoC,MAAMe,YAAY8J,QAAQjN,KAAKD,cAAcs0D,aAAaxiC,GAAQs1G,EAAoBl6H,QAASjN,KAAKD,cAAcs0D,aAAaoyE,EAASO,gBAAiBE,oDAEvK,mFAOR,CACL7nH,aACAi5C,sMAImB4mD,mEACrBl/G,KAAKiI,SAAS,CACZi3G,6MAIuBttG,EAAGigB,EAAOjS,8GAC/Bs+F,EAAU,KACRkpB,aAAmBpnI,KAAKD,cAAc6V,gBAAgB,CAAC,YAAY,uBACnEyxH,EAAcrnI,KAAKD,cAAcsV,iBAAiBwc,EAAO7xB,KAAKoC,MAAMe,YAAYtC,eAC9Eb,KAAKoC,MAAMo7G,sBACZ,gBAaA,kBAYA,2CAxBG8pB,EAAiB11H,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB7M,EAAK+B,MAAMukI,iBAAiBjuD,OAA5B,MAA4CzrE,UAAY,KAC1Ks6H,EAAmB31H,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB7M,EAAK+B,MAAMukI,iBAAiBjuD,OAA5B,QAA8CzrE,UAAY,KAC9Ku6H,EAAoBF,EAAiBtnI,KAAKD,cAAcsV,iBAAiBnD,SAASo1H,EAAe/8H,KAAK,IAAIvK,KAAKoC,MAAMk4E,aAAaz5E,UAAYwmI,EAC9II,EAAsBF,EAAmBvnI,KAAKD,cAAcsV,iBAAiBnD,SAASq1H,EAAiBh9H,KAAK,IAAIvK,KAAKoC,MAAMk4E,aAAaz5E,UAAYwmI,EAC1JnpB,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wCAAA/B,OAAyC+jI,EAAkBl6H,QAAQ,GAAnE,gCAAA7J,OAAoGgkI,EAAoBn6H,QAAQ,GAAhI,2CAAA7J,OAA4K2jI,EAA5K,qDAAA3jI,OAA4OzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAApQ,8DAIA4+G,EAAmB1nI,KAAKoC,MAAMukI,iBAAiBjuD,OAAO14E,KAAKoC,MAAMo7G,gBACjEmqB,EAAiB/1H,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkBw6H,EAAiBz6H,UAAY,KAC/I26H,EAAsBD,EAAiB3nI,KAAKD,cAAcsV,iBAAiBnD,SAASy1H,EAAep9H,KAAK,IAAIm9H,EAAiBG,aAAahnI,UAAYb,KAAKD,cAAcsV,iBAAiBuK,EAAO,GAAG8nH,EAAiBG,aAAahnI,UACxOq9G,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wCAAA/B,OAAyCmkI,EAAoBt6H,QAAQ,GAArE,KAAA7J,OAA2EzD,KAAKoC,MAAMo7G,eAAtF,uHAAA/5G,OAA0N2jI,EAA1N,qDAAA3jI,OAA0RzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAlT,8DAKAg/G,EAAqB9nI,KAAKoC,MAAMukI,iBAAiBjuD,OAAO14E,KAAKoC,MAAMo7G,gBACnEuqB,EAAmBn2H,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB46H,EAAmB76H,UAAY,KACnJ+6H,EAAwBD,EAAmB/nI,KAAKD,cAAcsV,iBAAiBnD,SAAS61H,EAAiBx9H,KAAK,IAAIu9H,EAAmBD,aAAahnI,UAAYb,KAAKD,cAAcsV,iBAAiBuK,EAAO,GAAGkoH,EAAmBD,aAAahnI,UAClPq9G,EAAU,CACRnwG,KAAK,UACLqQ,UAAU,CACRxY,MAAM5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAEpD3nB,KAAI,wCAAA/B,OAAyCukI,EAAsB16H,QAAQ,GAAvE,KAAA7J,OAA6EzD,KAAKoC,MAAMo7G,eAAxF,6HAAA/5G,OAAkO2jI,EAAlO,qDAAA3jI,OAAkSzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAA1T,kGAQNm4F,EAAQjhH,KAAKoC,MAAM6+G,OACjB,GAAG9zF,WAAY,EAEfk1F,GAAuB,YACFriH,KAAKD,cAAc2yB,gBAAgB1yB,KAAKoC,MAAMwH,cAAc5J,KAAKE,MAAMwQ,iBAA5FsvB,SAINhgC,KAAKiI,SAAS,CACZg5G,QACA/C,UACAl+E,eACAqiF,iVAKEt2E,EAAM,KACJk1E,EAAQ,GACV/C,EAAU,KACV4oB,EAAU,KACVC,EAAY,KACZt0H,EAAa,KACbL,EAAc,KACdkoE,EAAe,KACf2tD,EAAmB,KACnB1qB,EAAqB,KAEnBmqB,EAAmB1nI,KAAKoC,MAAMukI,iBAAiBjuD,OAA5B,MACnBovD,EAAqB9nI,KAAKoC,MAAMukI,iBAAiBjuD,OAA5B,QACrBwvD,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3C9lH,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAa6+F,EAAiBjgI,KAAKigI,EAAiBz6H,QAAQy6H,EAAiB5+F,KACxF9oC,KAAKE,MAAM2oC,aAAai/F,EAAmBrgI,KAAKqgI,EAAmB76H,QAAQ66H,EAAmBh/F,KAC9F9oC,KAAKE,MAAM2oC,aAAaq/F,EAAoBzgI,KAAKygI,EAAoBj7H,QAAQi7H,EAAoBp/F,KACjG9oC,KAAKE,MAAM2oC,aAAas/F,EAAsB1gI,KAAK0gI,EAAsBl7H,QAAQk7H,EAAsBr/F,gCAQ/F/mB,QAAQqD,IAAI,CAEpBplB,KAAKD,cAAc2yB,gBAAgBg1G,EAAiBjgI,KAAKzH,KAAKE,MAAMwQ,SAEpE1Q,KAAKD,cAAc2yB,gBAAgBo1G,EAAmBrgI,KAAKzH,KAAKE,MAAMwQ,SAEtE1Q,KAAKD,cAAc2yB,gBAAgBw1G,EAAoBzgI,KAAKzH,KAAKE,MAAMwQ,SAEvE1Q,KAAKD,cAAc2yB,gBAAgBy1G,EAAsB1gI,KAAKzH,KAAKE,MAAMwQ,+CAZzE03H,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkB3yH,GAAG,IAAM4yH,EAAoB5yH,GAAG,QAG9GzV,KAAKoC,MAAMo7G,sBACZ,iBAGA,oBAGA,0CALHljC,EAAet6E,KAAKE,MAAMs7G,UAAUliF,6CAGpCghD,EAAewtD,EAAmBD,iDAGlCvtD,EAAeotD,EAAiBG,iFAM9BV,EAAsBnnI,KAAKoC,MAAMukI,iBAAiBjuD,OAAO14E,KAAKoC,MAAMo7G,iBAEtEljC,uBACE6sD,oCAKQplH,QAAQqD,IAAI,CACpBplB,KAAKD,cAAcgzB,oBAAoBunD,EAAa7yE,KAAK,cACzDzH,KAAKD,cAAcgzB,oBAAoBunD,EAAa7yE,KAAK,aAAa,CAAC0/H,EAAoBl6H,UAC3FjN,KAAKD,cAAcgzB,oBAAoBunD,EAAa7yE,KAAK,eAAe,CAACzH,KAAKoC,MAAMe,YAAY8J,QAAQk6H,EAAoBl6H,gDAN5H65H,OACAC,QACAt0H,UASM6jH,EAAwC,UAA9Bt2H,KAAKoC,MAAMo7G,eACrB5kC,EAAsB54E,KAAKoC,MAAMukI,iBAAiB/tD,oBAClDxlE,GAA6B,IAApBwlE,EAA2B3lE,KAAK04B,OAAjC,MACdl5B,EAAazS,KAAKD,cAAcsV,iBAAiB5C,EAAWzS,KAAKoC,MAAMe,YAAYtC,UAC7E4nI,EAAWnS,EAAU7jH,EAAazS,KAAKD,cAAc8R,MAAM,GAAGS,MAAMG,GAAY6R,IAAI7R,GAC1Fs5B,EAAM/rC,KAAKD,cAAc8R,MAAM,KAAKxE,MAAMo7H,GAAUp7H,MAAM,KAAKiX,IAAIlR,IAIjE0zH,IACFA,EAAU9mI,KAAKD,cAAcsV,iBAAiByxH,EAAQ,kBAIlD9mI,KAAKoC,MAAMo7G,sBACZ,iBAiCA,oBAgCA,0CAhEHD,EAAkB,sCAClBW,EAAU,CACRnwG,KAAK,iBACLvI,KAAI,SAAA/B,OAAUzD,KAAKoC,MAAMwH,cAArB,gYAAAnG,OAAiazD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAzb,4BAGNm4F,EAAM1zG,KAAK,CACTQ,KAAK,WACLgmG,YAAYwJ,EACZpwF,UAAUntB,KAAKoC,MAAM88G,mBAGvB+B,EAAM1zG,KAAK,CACTQ,KAAK,WACLof,UAAUq7G,EACVz0B,YAAW,kCAGbkN,EAAM1zG,KAAK,CACTQ,KAAK,SACLgmG,YAAW,6CACX5mF,UAAUm7G,GAA4BA,EAAyB7yH,GAAG,GAClExP,KAAI,0CAAAxC,OAA2CzD,KAAKoC,MAAMukI,iBAAiBjuD,OAA5B,MAA4CmvD,aAAa56H,QAApG,OAGNg0G,EAAM1zG,KAAK,CACTQ,KAAK,SACLgmG,YAAW,+CACX5mF,UAAUo7G,GAA8BA,EAA2B9yH,GAAG,GACtExP,KAAI,0CAAAxC,OAA2CzD,KAAKoC,MAAMukI,iBAAiBjuD,OAA5B,QAA8CmvD,aAAa56H,QAAtG,2CAIFjN,KAAKoC,MAAMqkI,UACbwB,EAAmBjoI,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMqkI,SAAS50G,OAAO7xB,KAAKoC,MAAMe,YAAYtC,UACzGuR,EAAcpS,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMqkI,SAASO,eAAe1sD,EAAaz5E,UAClGq9G,EAAU,CACRnwG,KAAK,eACLvI,KAAI,wBAAA/B,OAAyBwkI,EAAiB36H,QAAQ,GAAlD,KAAA7J,OAAwDzD,KAAKoC,MAAMwH,cAAnE,wDAAAnG,OAAuI2O,EAAY9E,QAAQ,GAA3J,KAAA7J,OAAiKzD,KAAKoC,MAAMwH,cAA5K,oFAGNs0G,EAAU,CACRnwG,KAAK,eACLvI,KAAI,iCAAA/B,OAAkCzD,KAAKoC,MAAMwH,cAA7C,kGAKRs0G,EAAQ14G,MAAR,GAAA/B,OAAiBsoC,EAAG,4BAAAtoC,OAA+BzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAvD,kFAAArlB,OAA+IsoC,EAAIz+B,QAAQ,GAA3J,cAA4K,KAAhM,2JAAA7J,OAA8VzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAtX,iGAGAy0F,EAAkB,6CAClB0D,EAAM1zG,KAAK,CACTQ,KAAK,WACLgmG,YAAYwJ,EACZpwF,UAAUntB,KAAKoC,MAAM88G,mBAGvB+B,EAAM1zG,KAAK,CACTQ,KAAK,WACLof,UAAUk7G,GAAuBA,EAAoB5yH,GAAG,GACxDs+F,YAAW,gCAAAtwG,OAAiCzD,KAAKoC,MAAMwH,qDAIrD5J,KAAKoC,MAAMqkI,UACbwB,EAAmBjoI,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMqkI,SAAS50G,OAAO7xB,KAAKoC,MAAMe,YAAYtC,UACzGuR,EAAcpS,KAAKD,cAAcsV,iBAAiBrV,KAAKoC,MAAMqkI,SAASO,eAAe1sD,EAAaz5E,UACrE,GAC7Bq9G,EAAU,CACRnwG,KAAK,cACLvI,KAAI,wBAAA/B,OAAyBwkI,EAAiB36H,QAAQ,GAAlD,KAAA7J,OAAwDzD,KAAKoC,MAAMwH,cAAnE,sDAAAnG,OAAqI2O,EAAY9E,QAAQ,GAAzJ,KAAA7J,OAA+JzD,KAAKoC,MAAMwH,cAA1K,aAAAnG,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGNy6G,EAAU,CACRnwG,KAAK,cACLvI,KAAI,+BAAA/B,OAAgCzD,KAAKoC,MAAMwH,cAA3C,oHAIRs0G,EAAQ14G,MAAR,GAAA/B,OAAiBsoC,EAAG,4BAAAtoC,OAA+BzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAvD,8EAAArlB,OAA2IsoC,EAAIz+B,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAA7J,OAA0VzD,KAAKE,MAAM0G,MAAMC,OAAOiiB,QAAlX,iGAGAy0F,EAAkB,2CAClB0D,EAAM1zG,KAAK,CACTQ,KAAK,WACLgmG,YAAYwJ,EACZpwF,UAAUntB,KAAKoC,MAAM88G,mBAGvB+B,EAAM1zG,KAAK,CACTQ,KAAK,WACLof,UAAUi7G,GAAqBA,EAAkB3yH,GAAG,GACpDs+F,YAAW,8BAAAtwG,OAA+BzD,KAAKoC,MAAMwH,mFAO9B,EAC7B5J,KAAKiI,SAAS,CACZ8jC,MACAk1E,QACA/C,UACA4oB,UACAC,YACAt0H,aACA6nE,eACAijC,qBACA8E,sBAV2B,4QAgBzB76D,EAAWt1C,SAASe,KAAK04B,MAAM,KAC/BgsC,EAAkB33E,KAAKE,MAAMs7G,UAAUxjC,UAAU/xC,OAAQ,SAAC3U,EAAOkI,EAAExzB,GACvE,GAAIwzB,EAAEo/C,oBAAoBpxB,EAAS,CACjC,IAAMqvB,EAAiBrsE,EAAKzK,cAAciT,YAAkC,IAAtBwmB,EAAEo/C,qBAA0BC,MAAMziE,OAAO,uBAAuB,OAChHrI,EAAI,iBAAAtK,OAAoB+1B,EAAE6+C,WAAtB,QACJzqE,EAAK,eAAAnK,OAAkB+1B,EAAE6+C,WAApB,mBAAA50E,OAAgDozE,GAC3DvlD,EAAO/jB,KAAK,CACVQ,OACAH,QACArD,KAAKivB,EACL3uB,MAAMgsE,IAGV,OAAOvlD,GACP,aAEsBtxB,KAAKD,cAAc2hC,6BAArC1C,SACA0nG,EAAkB/uD,EAAgBp2E,OAASo2E,EAAgB,GAAK,KAEtE33E,KAAKiI,SAAS,CACZ+2B,YACA0nG,kBACA/uD,mBACA,WACI+uD,GACFl8H,EAAKk+H,eAAehC,sLAKLvuD,yEACbwuD,EAAmBxuD,EAAS5tE,KAClCvK,KAAKiI,SAAS,CACZ0+H,0JAIMnpB,GACRx9G,KAAKiI,SAAS,CACZu1G,oDAIK,IAAAtF,EAAAl4G,KAED2oI,EAAuC,SAA9B3oI,KAAKoC,MAAMo7G,eACpBorB,EAA2C,UAA9B5oI,KAAKoC,MAAMo7G,eACxBqrB,EAA6C,YAA9B7oI,KAAKoC,MAAMo7G,eAC1B4T,EAAWuX,EAAS3oI,KAAKoC,MAAMo7G,eAAd,OAAA/5G,OAAsCzD,KAAKoC,MAAMo7G,gBAwGxE,OACE50G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKoC,MAAMu1E,gBAmBV/uE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKoC,MAAMu1E,gBAAgBp2E,OAU1BqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,oBAGAxF,EAAA9G,EAAAC,cAAC4Y,EAAA,EAADtZ,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEuH,KAAM,WACN2U,cAAc,EACdrB,QAAS/a,KAAKoC,MAAMu1E,gBACpBx8D,kBAlKM,SAAAjb,GACxB,IAAM0N,EAAQ1N,EAAM0N,MACdzK,EAAc,CAClB4K,KAAK7N,EAAMqK,KAAKwD,MAGlB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UAEZ0H,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHpd,MAAM,MACNoE,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBAgIAqV,aAAcjb,KAAKoC,MAAMskI,gBACzBvpH,SAAUnd,KAAK0oI,eAAehoH,KAAK1gB,MACnCob,qBAzHS,SAAAlb,GAE3B,IACMgc,GAA4D,IADlDhc,EAAMgc,YAAYnB,QACN+B,QAAQ5c,EAAMgc,YAAYrR,OAAgB3K,EAAMgc,YAAYrR,MAAQ,KAEhG,IAAKqR,EACH,OAAO,KAGT,IAAMtO,EAAQsO,EAAYtO,MACpBzK,EAAc,CAClB4K,KAAKmO,EAAYnO,MAGnB,OACEnF,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACE0D,MAAO,CACL4pB,KAAK,KAEP9uB,eAAgB,iBACZlB,EAAMqb,YAEV3S,EAAA9G,EAAAC,cAAC8G,EAAA,EAADxH,OAAAuB,OAAA,CACEnB,EAAG,EACHR,MAAO,GACHf,EAAMqb,WAHZ,CAIEra,WAAY,SACZC,cAAe,MACfmF,MAAO,CAAC8I,OAAO,WACfhO,eAAgB,eAEhBwH,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPzK,YAAaA,EACb0sB,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,EACHhZ,OAAO,UAIbuD,EAAA9G,EAAAC,cAAC45G,EAAA,EAAD,CACEz4G,MAAO0K,EACPiiB,UAAW,CACTpoB,KAAK,YACLvH,MAAM,CACJwF,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBA4EF5F,KAAKoC,MAAMukI,kBACT/9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,kBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOujI,EAAS,EAAI,GAEtB1nI,MAAO,CAAC,EAAE,OACVk3G,QAAS,gBACTK,SAAU,kBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBgmI,WAAY,qDACZ7qH,WAAY,CACV7P,GAAG,EACH/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAU8qH,EACV1jI,YAAc,SAAA8B,GAAC,OAAImxG,EAAKqZ,UAAU,WAEpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOwjI,EAAa,EAAI,GAE1B3nI,MAAO,CAAC,EAAE,OACVk3G,QAAS,YACTK,SAAU,mBACV11G,SAAU9C,KAAKE,MAAM4C,SACrBgmI,WAAY,wDACZ7qH,WAAY,CACV7P,GAAG,EACH/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAU+qH,EACV3jI,YAAc,SAAA8B,GAAC,OAAImxG,EAAKqZ,UAAU,YAEpC3oH,EAAA9G,EAAAC,cAAC4gH,EAAA,EAAD,CACEx9G,YAAa,CACX6D,GAAG,EACH5D,OAAOyjI,EAAe,EAAI,GAE5B5nI,MAAO,CAAC,EAAE,OACVk3G,QAAS,cACTr1G,SAAU9C,KAAKE,MAAM4C,SACrB01G,SAAU,qBACVswB,WAAY,yDACZ7qH,WAAY,CACV7P,GAAG,EACH/I,OAAOrF,KAAKE,MAAM4C,SAAW,OAAS,QAExC+a,SAAUgrH,EACV5jI,YAAc,SAAA8B,GAAC,OAAImxG,EAAKqZ,UAAU,eAIpCvxH,KAAKoC,MAAMe,aAAenD,KAAKoC,MAAM49B,cAAgBhgC,KAAKoC,MAAMk4E,cAC9D1xE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5N,GAAI,EACJnN,MAAO,GAEP2H,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4R,OAAQs/G,EACRnyG,MAAOjf,KAAKoC,MAAM6c,MAClBgiG,MAAOjhH,KAAKoC,MAAM6+G,MAClB/C,QAASl+G,KAAKoC,MAAM87G,QACpB/6G,YAAanD,KAAKoC,MAAMe,YACxB68B,aAAchgC,KAAKoC,MAAM49B,aACzBs6C,aAAct6E,KAAKoC,MAAMk4E,aACzBtyE,SAAUhI,KAAKqiH,qBAAqB3hG,KAAK1gB,MACzCk/G,iBAAkBl/G,KAAKk/G,iBAAiBx+F,KAAK1gB,MAC7Cu9G,mBAAoBv9G,KAAKoC,MAAMm7G,mBAC/BgE,oBAAqBvhH,KAAKoC,MAAMm/G,oBAChCjC,oBAAqBt/G,KAAKs/G,oBAAoB5+F,KAAK1gB,MACnD6f,qBAAsB7f,KAAK6f,qBAAqBa,KAAK1gB,QAErD4I,EAAA9G,EAAAC,cAACiyG,EAAA,EAAD3yG,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE61G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUt0G,KAAKoC,MAAMwH,qBA7HvChB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,UAJb,mCAzBNvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,yCA5mBMtD,gHCgTb6mI,8MAhTb3mI,MAAQ,CACNe,YAAY,KACZ0pH,kBAAkB,KAClBC,kBAAkB,KAClBkV,oBAAmB,EACnBjV,2BAA2B,QAI7BhtH,cAAgB,OA0ChBipI,gBAAkB,SAACp/H,GACjB,IAAMq/H,EAAcpkI,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,mBAChE/Q,EAAK3E,MAAM8G,YAAX,SAAAvD,OAAgCwlI,EAAYtvD,MAA5C,KAAAl2E,OAAqDmG,OAGvDojH,sDAAkB,SAAAvrG,EAAOorG,GAAP,IAAAhnB,EAAAinB,EAAAC,EAAA,OAAAt6F,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACVo0F,EAAYhhG,EAAK3E,MAAMs7G,UAAUhrG,gBAAgBq8G,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7CloH,EAAK3E,MAAMs7G,UAAUhmF,oBAAsC3wB,EAAK3E,MAAMs7G,UAAUhmF,oBAAsBn0B,OAAOC,KAAKuD,EAAK3E,MAAMs1B,sBAE5Ih0B,QAAS,SAAA6gC,GAC3B,IACM4d,EAD2Bp7C,EAAK3E,MAAMs1B,oBAAoB6M,GAChBwjE,EAAU5nE,WAC1D,IAAKgiB,EACH,OAAO,SAIFA,EAAgBlyC,KAElB++G,IACHA,EAAoB7sE,EAAgBlsB,KAAK7wB,OAE3C+8C,EAAgB5d,SAAWA,EAC3B4d,EAAgBhiB,UAAY4nE,EAAU5nE,UACtC8uF,EAA2B9sE,EAAgBlsB,KAAK7wB,OAAS+8C,IAG3Dp7C,EAAKoD,SAAS,CACZ9E,YAAY,KACZ0pH,oBACAE,8BACA,WACAloH,EAAKooH,gBAAgBH,KA/BP,wBAAAnrG,EAAAhP,SAAA8O,EAAAzhB,iEAmClBitH,sDAAkB,SAAA/qG,EAAO4qG,GAAP,IAAA12B,EAAAyP,EAAA1iG,EAAAwiD,EAAA3pB,EAAA,OAAAvJ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAEV2kF,EAAkBvxF,EAAKzC,MAAM2qH,2BAA2BD,GACxDjnB,EAAYhhG,EAAK3E,MAAMs7G,UAAUhrG,gBAAgB3L,EAAKzC,MAAMyqH,oBAE5D1pH,EAAc,CAClBD,MAAMkzF,EAAgBn4D,UACtBhxB,QAAQmpF,EAAgBnpF,QACxBpM,SAASu1F,EAAgBv1F,WAIfkzB,KAAOqiE,EAAgBriE,KAG7B4xB,EAAc,CAClB7c,IAAI+8D,EAAU/8D,IACdrhC,KAAKo+F,EAAU3iG,MACfA,MAAM2iG,EAAU3iG,MAChB+J,QAAQ44F,EAAU54F,SAGd+uB,EAAoBn3B,EAAK3E,MAAMs7G,UAAUx/E,kBAG3C6pE,EAAUq9B,kBACZlnG,EAAkB0E,UAAU,GAAGj5B,KAAOo+F,EAAUq9B,iBAGlD//H,EAAY44B,UAAY,CACtBjI,SAAQ,EACR6xB,cACA3pB,oBACAgmG,oBAAmB,GAjCL3/G,EAAA5Q,KAAA,GAoCV5M,EAAK3E,MAAMijI,iBAAiB/sC,EAAgB/zD,SAASwjE,EAAU5nE,WApCrD,QAsChBp5B,EAAKoD,SAAS,CACZ9E,cACA2pH,sBAxCc,yBAAAzqG,EAAA1P,SAAAuP,EAAAliB,iEA4ClBoiI,kBAAoB,WAClBv9H,EAAKoD,SAAS,CACZ+5H,oBAAmB,gFA7HjBhiI,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAKotH,gRAILP,EAAoB7sH,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMirH,UAAUG,OAASjqH,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiB,YAEvMxQ,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAjE,eAAAwR,EAAA3gB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAkF,SAAAgD,EAAOhR,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAChFtO,EAAc9C,EAAKH,MAAMs7G,UAAUhrG,gBAAgBtN,GACnC7C,EAAKN,cAAco5B,kBAAkBh2B,EAAYD,SACjDC,EAAY2lC,IAHoD,CAAA10B,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAI9EpR,EAAKH,MAAM2oC,aAAa1lC,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,KAJI,wBAAA10B,EAAAzB,SAAAuB,EAAAlU,SAAlF,gBAAA4S,GAAA,OAAAoP,EAAAnP,MAAA7S,KAAA8S,YAAA,WAQF+5G,GAAqBA,IAAsB7sH,KAAKE,MAAMirH,UAAUG,QAClEtrH,KAAKgpI,gBAAgBnc,GAGvB7sH,KAAKgtH,gBAAgBH,wLAGExqH,EAAUC,sEACjCtC,KAAKI,cAEoBiC,EAAU8oH,UAAUG,SAAWtrH,KAAKE,MAAMirH,UAAUG,wCAErEtrH,KAAKotH,mJAgGb,OAAKptH,KAAKoC,MAAMyqH,kBAKdjkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,4BAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwC,GAAI,aACJutB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKgpI,gBACfp/H,cAAe5J,KAAKoC,MAAMyqH,kBAC1Br8G,gBAAiBxQ,KAAKE,MAAMs7G,UAAUhrG,oBAIxCxQ,KAAKoC,MAAM2qH,4BAA8B/sH,KAAKoC,MAAM0qH,mBAClDlkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,6BAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwC,GAAI,aACJutB,aAAa,EACb9S,SAAUnd,KAAKitH,gBACfrjH,cAAe5J,KAAKoC,MAAM0qH,kBAC1Bt8G,gBAAiBxQ,KAAKoC,MAAM2qH,+BAKlC/sH,KAAKoC,MAAMyqH,mBAAqB7sH,KAAKoC,MAAM0qH,kBACzClkH,EAAA9G,EAAAC,cAAC0hI,GAAA,EAADpiI,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEyjI,aAAa,EACbjwD,eAAe,EACfkwD,iBAAiB,EACjBzgI,YAAanD,KAAKoC,MAAMe,YACxBi/H,kBAAmBpiI,KAAKoiI,kBACxBx4H,cAAe5J,KAAKoC,MAAMyqH,kBAC1B74G,iBAAkBhU,KAAKE,MAAM8T,mBAG1BhU,KAAKE,MAAMwQ,QAoCV9H,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAIHhc,KAAKoC,MAAM4/H,mBACTp5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,QAMQnO,KAAKoC,MAAMyqH,kBANnB,sCAUFjkH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMyqH,kBANjC,sBAvERjkH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,QACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,uDAQAvF,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAKE,MAAMo8H,2BAL1B,cA+DR,OAxJH,YAlJgBp6H,aC2xBdgnI,8MAxwBb9mI,MAAQ,CACNo/H,UAAS,EACTxjD,YAAY,GACZyjD,YAAW,EACX3vH,OAAO,UACPosE,cAAc,GACd/6E,YAAY,KACZ2b,WAAW,CACTg9D,MAAM,CACJ/8D,OAAO,KACPC,SAAQ,IAGZ2iH,cAAa,EACb/3H,cAAc,KACdi4H,gBAAe,EACfC,gBAAe,EACfE,oBAAmB,EACnB5xD,oBAAoB,KACpB8xD,2BAA0B,EAC1BnV,2BAA2B,QAI7BhtH,cAAgB,OAwGhBitH,sDAAkB,SAAAvrG,EAAO7X,GAAP,IAAAwmE,EAAA6yD,EAAAhjF,EAAA98C,EAAAwiD,EAAA3pB,EAAA,OAAAvJ,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cAEV2+D,EAAsBvrE,EAAK3E,MAAMs7G,UAAUhrG,gBAAgB5G,GAC3Dq5H,EAA2Bp+H,EAAK3E,MAAMs1B,oBAAoB46C,EAAoB/tC,UAE9E4d,EAAkBgjF,EAAwB7yD,EAAoBnyC,YAE9D96B,EAAc,CAClBD,MAAMktE,EAAoBnyC,UAC1BhxB,QAAQmjE,EAAoBnjE,QAC5BpM,SAASuvE,EAAoBvvE,WAInBkzB,KAAOksB,EAAgBlsB,KAG7B4xB,EAAc,CAClB7c,IAAIsnC,EAAoBtnC,IACxBrhC,KAAK2oE,EAAoB3oE,KACzBvE,MAAMktE,EAAoBltE,MAC1B+J,QAAQmjE,EAAoBnjE,SAGxB+uB,EAAoBo0C,EAAoBp0C,kBAG1CikB,EAAgBijF,kBAClBlnG,EAAkB0E,UAAU,GAAGj5B,KAAOw4C,EAAgBijF,iBAGxD//H,EAAY44B,UAAY,CACtBjI,SAAQ,EACR6xB,cACA3pB,oBACAgmG,oBAAmB,GAnCLrgH,EAAAlQ,KAAA,GAsCV5M,EAAK3E,MAAMijI,iBAAiB/yD,EAAoB/tC,SAAS4d,EAAgBhiB,WAtC/D,QAwChBp5B,EAAKoD,SAAS,CACZ9E,cACAyG,gBACAwmE,wBA3Cc,yBAAAzuD,EAAAhP,SAAA8O,EAAAzhB,iEA+ClB87E,2BAAQ,SAAA55D,IAAA,IAAAkhH,EAAAC,EAAAC,EAAA,OAAA7wG,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,UACD5M,EAAKzC,MAAMy/H,eADV,CAAAx/G,EAAA5Q,KAAA,eAAA4Q,EAAAK,OAAA,SAEG,MAFH,QAKU,EACO,EACjB0gH,EAAU/hI,OAAOC,KAAKuD,EAAKzC,MAAM87E,eAAe,GAEhDmlD,EAAgB,SAACzxH,EAAGqN,GACxB,IAAMikC,EAA4B,YAAdtxC,EAAGG,OAGjBmN,EAAY,CAChBC,cAAa,iBACbG,YAAa,QACbF,WAAYva,EAAK3E,MAAM0J,cACvBy2G,WAAYnuG,SAXO,IAcjB+M,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAG9Cra,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bw/H,eAAe5+E,EACfpkC,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAM,CACJ/8D,OAAO,KACPC,SAAQ,SAMVskH,EAAuB,SAAC1xH,GAC5B,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAMz6E,OAAA84B,EAAA,EAAA94B,CAAA,GACDiB,EAAUwc,WAAWg9D,MADrB,CAEH/8D,iBAMRla,EAAK3E,MAAM+f,0BAA0Bpb,EAAKzC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAM,WAAY,CAAC27H,GAAU,KAAMC,EAAeC,GAExIz+H,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERg9D,MAAMz6E,OAAA84B,EAAA,EAAA94B,CAAA,GACDiB,EAAUwc,WAAWg9D,MADrB,CAEH98D,SAxDU,SALV,wBAAAqD,EAAA1P,SAAAuP,EAAAliB,WAmERuxH,UAAY,SAACz/G,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUokB,SAASpkB,EAAO5E,gBAC1DrI,EAAKoD,SAAS,CACZ6J,cAKNswH,kBAAoB,WAClBv9H,EAAKw9H,cACLx9H,EAAKoD,SAAS,CACZ+5H,oBAAmB,gFAlOjBhiI,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAKotH,0SAKLj9B,EAAwBnwF,KAAKoC,MAAMguE,oBAAoBp0C,2BAEvDja,QAAQqD,IAAI,CAChBplB,KAAKE,MAAM2oC,aAAasnD,EAAsB1oF,KAAK0oF,EAAsBljF,QAAQkjF,EAAsBrnD,KACvG9oC,KAAKE,MAAM2oC,aAAa7oC,KAAKoC,MAAMguE,oBAAoB3oE,KAAKzH,KAAKoC,MAAMguE,oBAAoBnjE,QAAQjN,KAAKoC,MAAMguE,oBAAoBtnC,8BAG3E/mB,QAAQqD,IAAI,CACnEplB,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,aAC7FzH,KAAKD,cAAc2kE,mBAAmB1kE,KAAKoC,MAAMguE,oBAAoB3oE,KAAK0oF,EAAsBljF,QAAQjN,KAAKE,MAAMwQ,iDAF9G8sE,OAAe0kD,OAKhBn6H,EAAW,GACXm2E,EAAgB,GAChBF,EAAc,GAChB6jD,GAAiB,EAEE,OAAnBrkD,mBACOC,EAAa,eAAGA,GAAcD,qCACCz7D,QAAQqD,IAAI,CAChDplB,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,cAAc,CAACg2E,IAC5Gz9E,KAAKD,cAAcgzB,oBAAoB/yB,KAAKoC,MAAMguE,oBAAoBp0C,kBAAkBv0B,KAAK,gBAAgB,CAACzH,KAAKE,MAAMwQ,QAAQ+sE,0CAF9HI,OAAWE,OAIZF,GAA6B,OAAfA,IAChBG,EAAYP,GAAcz9E,KAAKD,cAAcsV,iBAAiBwoE,EAAW79E,KAAKoC,MAAMguE,oBAAoBvvE,WAErF,OAAjBk9E,IACFA,EAAe/9E,KAAKD,cAAcsV,iBAAiB0oE,EAAa/9E,KAAKoC,MAAMguE,oBAAoBvvE,WAC9E4U,GAAG,KAElByoE,EAAcT,GAAcM,EAExBN,EAAaD,IACfqkD,GAAiB,YAf+BpkD,4BAqBxD11E,EAASm2E,cAAgBA,UAGrByjD,EAAgBzjD,GAAiB78E,OAAOC,KAAK48E,GAAe38E,OAAO,EAEnE4nI,EAAqBnpI,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,mBACjEwzH,EAA+BD,EAAmBtG,eAExD96H,EAAS+5H,gBAAiB,EAC1B/5H,EAASi2E,YAAcA,EACvBj2E,EAAS85H,eAAiBA,EAC1B95H,EAAS45H,aAAeA,EACxB55H,EAAS05H,YAAcE,GAAgByH,EACvCrhI,EAASy5H,SAAWK,GAAkBF,EACtC55H,EAAS+J,OAAS6vH,EAAe,SAAW,UAC5C55H,EAASm6H,0BAA4BA,EAErCliI,KAAKiI,SAASF,uQAIR6B,EAAgB5J,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMs7G,UAAUhrG,gBAAgBxQ,KAAKE,MAAMirH,UAAUG,QAAUtrH,KAAKE,MAAMirH,UAAUG,OAASjqH,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAiB,YAEnMxQ,KAAKD,cAAc+Q,aAAazP,OAAOC,KAAKtB,KAAKE,MAAMs7G,UAAUhrG,iBAAjE,eAAA+iB,EAAAlyB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAkF,SAAA+R,EAAO/f,GAAP,IAAAC,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,UAChFtO,EAAc9C,EAAKH,MAAMs7G,UAAUhrG,gBAAgBtN,GACnC7C,EAAKN,cAAco5B,kBAAkBh2B,EAAYD,SACjDC,EAAY2lC,IAHoD,CAAA3lB,EAAA1R,KAAA,eAAA0R,EAAA1R,KAAA,EAI9EpR,EAAKH,MAAM2oC,aAAa1lC,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,KAJI,wBAAA3lB,EAAAxQ,SAAAsQ,EAAAjjB,SAAlF,gBAAAyiB,GAAA,OAAA8Q,EAAA1gB,MAAA7S,KAAA8S,YAAA,WAQN9S,KAAKgtH,gBAAgBpjH,wLAGEvH,EAAUC,sEACjCtC,KAAKI,cAEoBiC,EAAU8oH,UAAUG,SAAWtrH,KAAKE,MAAMirH,UAAUG,wCAErEtrH,KAAKotH,oBAGgB9qH,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,eAElE5J,KAAKqiI,oJAqIA,IAAA73H,EAAAxK,KAEP,IAAKA,KAAKoC,MAAMwH,cACd,OAAO,KAGT,IACMw/H,EADqBppI,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,mBACfitH,eAElDO,EAAUpjI,KAAKoC,MAAM87E,eAAiB78E,OAAOC,KAAKtB,KAAKoC,MAAM87E,eAAe38E,OAAO,EAAIF,OAAOC,KAAKtB,KAAKoC,MAAM87E,eAAe,GAAK,KAClIH,EAAe/9E,KAAKoC,MAAM87E,eAAiB78E,OAAOqQ,OAAO1R,KAAKoC,MAAM87E,eAAe38E,OAAO,EAAIF,OAAOqQ,OAAO1R,KAAKoC,MAAM87E,eAAe,GAAK,KAEjJ,OACEt1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+a,GAAI,CAAC,EAAE,GACP9a,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,GAEP2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,4BAGAxF,EAAA9G,EAAAC,cAAC2tB,GAAA,EAADruB,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwC,GAAI,aACJutB,aAAa,EACb7T,cAAc,EACde,SAAUnd,KAAKgtH,gBACfpjH,cAAe5J,KAAKoC,MAAMwH,cAC1B4G,gBAAiBxQ,KAAKE,MAAMs7G,UAAUhrG,qBAIvCxQ,KAAKoC,MAAMq/H,YAAczhI,KAAKoC,MAAMo/H,WACnC54H,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFuN,GAAG,EACHgN,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAM8/H,0BAA4B,WAAa,WAC3Dt8H,MAAQ5F,KAAKoC,MAAM8/H,0BAA4BliI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAEzGvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,yCASFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAMu/H,aAAe,WAAa,WAC9C/7H,MAAQ5F,KAAKoC,MAAMu/H,aAAe3hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE5FvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,gBAMgBnO,KAAKoC,MAAMguE,oBAAoBltE,QAGjD0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAMy/H,eAAiB,WAAa,SAChDj8H,MAAQ5F,KAAKoC,MAAMy/H,eAAiB7hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE9FvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,sCASFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAOzH,KAAKoC,MAAM0/H,eAAiB,WAAa,SAChDl8H,MAAQ5F,KAAKoC,MAAM0/H,eAAiB9hI,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UAAY,aAE9FvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJC,SAAU,EACVE,MAAO,WACPuI,UAAW,QAJb,cAMcnO,KAAKoC,MAAMwH,cANzB,SAaR5J,KAAKoC,MAAMwH,cACThB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAK5H,MAAO,GAERjB,KAAKoC,MAAM8/H,4BAA8BliI,KAAKoC,MAAMq/H,YAAczhI,KAAKoC,MAAMo/H,WAC3E54H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7a,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,sBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACV,OAAOpvG,EAAKpI,MAAMq/H,WAAaj3H,EAAK+mH,UAAU,WAAa,OAG/D51G,eAAe,EACfmC,YAAc9d,KAAKoC,MAAMq/H,WACzB5jH,SAAiC,YAAtB7d,KAAKoC,MAAM0P,QAEtBlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACmvB,GAAA,EAAD,CACEpP,YAAa,CACXhQ,OAAO,WAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,GAFd,aAQJiD,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACV,OAAOpvG,EAAKpI,MAAMo/H,SAAWh3H,EAAK+mH,UAAU,UAAY,OAG5D51G,eAAe,EACfmC,YAAc9d,KAAKoC,MAAMo/H,SACzB3jH,SAAiC,WAAtB7d,KAAKoC,MAAM0P,QAEtBlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACmvB,GAAA,EAAD,CACEpP,YAAa,CACXhQ,OAAO,UAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,GAFd,aAYY,YAAtB3F,KAAKoC,MAAM0P,OACTs3H,EACExgI,EAAA9G,EAAAC,cAAC0hI,GAAA,EAADpiI,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEyjI,aAAa,EACbzyC,gBAAiB,GACjBxd,eAAe,EACfkwD,iBAAiB,EACjBE,cAAe,eACfljH,SAAU,uBACVzd,YAAanD,KAAKoC,MAAMe,YACxByG,cAAe5J,KAAKoC,MAAMwH,cAC1Bi2G,gBAAiB7/G,KAAKqiI,YAAY3hH,KAAK1gB,MACvCgU,iBAAkBhU,KAAKE,MAAM8T,iBAC7BouH,kBAAmBpiI,KAAKoiI,kBAAkB1hH,KAAK1gB,MAC/CikI,cAAa,gBAAAxgI,OAAkBzD,KAAKoC,MAAMguE,oBAAoBltE,MAAjD,+CAAAO,OAAoGzD,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MAAhI,OAGVlD,KAAKE,MAAMwQ,QAoCV9H,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFqN,GAAG,IAIHs0H,EACEx6H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,mBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGTnO,KAAKoC,MAAMy/H,eACTj5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YADT,qFAIAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YADT,mCAGmCm4E,EAAazwE,QAAQ,GAHxD,IAG6DtN,KAAKoC,MAAMguE,oBAAoBltE,MAH5F,kEAK+C,qBAApClD,KAAKoC,MAAM47E,YAAYolD,IAC9Bx6H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YAEPgD,EAAA9G,EAAAC,cAAA,WAHF,eAGqB/B,KAAKoC,MAAM47E,YAAYolD,GAAS91H,QAAQ,GAH7D,IAGkEtN,KAAKoC,MAAMguE,oBAAoBltE,UAQ3GlD,KAAKoC,MAAM4/H,mBACbp5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,wCAMwCnO,KAAKoC,MAAMguE,oBAAoBltE,MANvE,qBAUF0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,sBAMsBnO,KAAKoC,MAAMguE,oBAAoBltE,MANrD,sBA9GR0F,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,QACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,uDAQAvF,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAKE,MAAMo8H,2BAL1B,cAuGV1zH,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFqN,GAAG,IAGLlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,WACPuI,UAAW,UAHb,iDAWNvF,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,EACFqN,GAAG,IAIH9O,KAAKoC,MAAM0c,WAAWg9D,MAAM98D,QAC1BpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,UAEfyH,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GAAmB5C,KAAKE,MAAxB,CAA+B0gB,SAAQ,qBAAwBD,WAAU,gCAAmC7Y,KAAM9H,KAAKoC,MAAM0c,WAAWg9D,MAAM/8D,WAE9I/e,KAAKoC,MAAM0/H,eACbl5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,UACN7B,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,wCAMwCnO,KAAKoC,MAAMwH,cANnD,QAQAhB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ7N,UAAW,SACXtI,WAAY,UACZC,QAAU,SAAAiB,GAAC,OAAIyD,EAAKtK,MAAM8G,YAAYwD,EAAKpI,MAAMguE,oBAAoB/tC,SAAS,IAAI73B,EAAKpI,MAAMguE,oBAAoBnyC,aAJnH,wBASAj+B,KAAKoC,MAAMy/H,eACbj5H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,eAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,+BAM8BvF,EAAA9G,EAAAC,cAAA,WAN9B,0BAM4D/B,KAAKoC,MAAMe,YAAY4wB,KAAK7wB,MANxF,QAQA0F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,IACTkG,UAAUnH,KAAKE,MAAM0G,MAAMC,OAAO6X,QAEpCzZ,YAAc,SAAA8B,GAAC,OAAIyD,EAAKsxE,UAN1B,WAaJlzE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACN9B,MAAO,WACP6B,KAAM,mBAERmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAEXvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YADT,mCAGmCm4E,EAAazwE,QAAQ,GAHxD,IAG6DtN,KAAKoC,MAAMguE,oBAAoBltE,MAH5F,qEAK+C,qBAApClD,KAAKoC,MAAM47E,YAAYolD,IAC9Bx6H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACE/gB,MAAO,YAEPgD,EAAA9G,EAAAC,cAAA,WAHF,eAGqB/B,KAAKoC,MAAM47E,YAAYolD,GAAS91H,QAAQ,GAH7D,IAGkEtN,KAAKoC,MAAMguE,oBAAoBltE,YAYnH,cAlwBahB,8GC6xCdmnI,8MAzyCbjnI,MAAQ,CACNknI,QAAQ,GACRxqH,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRuqH,YAAY,IAEdz3H,OAAO,SACP03H,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACbzmI,YAAY,KACZ68B,aAAa,KACbs6C,aAAa,KACbuvD,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjB1wF,OAAO,CACL,CACE9xC,KAAK,QACLhH,KAAK,WAEP,CACEgH,KAAK,YACLhH,KAAK,WAEP,CACEgH,KAAK,gBACLhH,KAAK,eAMXV,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,yCAItC4R,GACR9R,KAAKiI,SAAS,CACZ6J,SACA43H,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnBjqI,KAAKiI,SAAS,CACZ6W,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRuqH,YAAY,6PAMhBvpI,KAAKI,YACLJ,KAAKw5H,qMAGkBn3H,EAAUC,mEACjCtC,KAAKI,YACLJ,KAAKkqI,eACLlqI,KAAKmqI,cAEoB7nI,EAAU2nI,mBAAqBjqI,KAAKoC,MAAM6nI,kBAAoBjqI,KAAKoC,MAAM6nI,kBAEhGjqI,KAAKw5H,qSAKDr2H,EAAcnD,KAAKD,cAAc6V,gBAAgB,CAAC,YAAY,SAC9Dw0H,EAAuBpqI,KAAKE,MAAMs7G,UAAUjiF,UAAU6wG,qBACtDpyE,EAAYh4D,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,8BACrC5V,KAAKD,cAAcg4D,sBAAsB,eAAgB,eAAgB,CAACC,YAAWN,QAAS,yBAAnH2yE,SACAC,EAA6BD,EAAa14H,OAAQ,SAAAlQ,GAAC,OAAIA,EAAEunC,aAAauhG,eAAer9H,gBAAkBk9H,EAAqBn9H,QAAQC,gBAAgBjK,IAAK,SAAAxB,GAAC,OAAIA,EAAEunC,aAAawhG,QAG7KR,EAAoB,aACpBhqI,KAAKD,cAAc+Q,aAAaw5H,EAAhC,eAAAv5H,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA4D,SAAAgD,EAAOooB,GAAP,IAAA/c,EAAAtL,EAAA+N,EAAA69C,EAAA+0D,EAAA6V,EAAAC,EAAAC,EAAA5mG,EAAA,OAAAtR,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAC1D8N,EAD0D,cAAA9b,OAC7B64B,GAD6BloB,EAAA3C,KAAA,EAE1DpR,EAAKH,MAAM2oC,aAAatpB,EAAa+c,EAAgB8tG,EAAqBthG,KAFhB,cAAA10B,EAAA3C,KAAA,EAUtDsQ,QAAQqD,IAAI,CAElB/kB,EAAKN,cAAcgzB,oBAAoBxT,EAAa,SACpDlf,EAAKN,cAAcgzB,oBAAoBxT,EAAa,aACpDlf,EAAKN,cAAcgzB,oBAAoBxT,EAAa,iBACpDlf,EAAKN,cAAc2yB,gBAAgBvvB,EAAYD,MAAMo5B,GACrDj8B,EAAKN,cAAcgzB,oBAAoBxT,EAAa,uBAhBQ,OAAAtL,EAAAG,EAAAG,KAAAyN,EAAA3gB,OAAA4yB,EAAA,EAAA5yB,CAAA4S,EAAA,GAK9D4rD,EAL8D79C,EAAA,GAM9D4yG,EAN8D5yG,EAAA,GAO9DyoH,EAP8DzoH,EAAA,GAQ9D0oH,EAR8D1oH,EAAA,GAS9D2oH,EAT8D3oH,EAAA,GAmB5D+hB,EAAiB1jC,EAAKN,cAAc8R,MAAM,GAC1C84H,IACF5mG,EAAiB4mG,EAAe1kG,OAAQ,SAAC+F,EAAMna,GAE7C,OADAma,EAAQA,EAAM35B,KAAKwf,IAEnBxxB,EAAKN,cAAc8R,MAAM,IAE3BkyB,EAAiB1jC,EAAKN,cAAcsV,iBAAiB0uB,EAAe5gC,EAAYtC,WAKlFmpI,EAAkBz8H,KAAK,CACrBsyD,QACA+0D,YACAr1G,eACAkrH,gBACA1mG,iBACAzH,kBACAouG,qBAtC8D,yBAAAt2H,EAAAzB,SAAAuB,EAAAlU,SAA5D,gBAAA4S,GAAA,OAAA7B,EAAA8B,MAAA7S,KAAA8S,YAAA,6BAyCqB9S,KAAKD,cAAc2yB,gBAAgB,OAAO1yB,KAAKE,MAAMwQ,iBAA1EsvB,SAINhgC,KAAKiI,SAAS,CACZ9E,cACA68B,eACAgqG,gKAKF,IAAMR,EAAYnoI,OAAOqQ,OAAO1R,KAAKoC,MAAMknI,SAAS/nI,OAAO,EACvDioI,IAAcxpI,KAAKoC,MAAMonI,WAC3BxpI,KAAKiI,SAAS,CACZuhI,2DAKe33G,GAMnB,MALe,CACbhnB,MAAM,KACNwU,WAAW,UACXi5C,aAAa,CAACzmC,0CAKJjgB,GAAG,IAAApH,EAAAxK,KAEf,GAAkB,YAAd4R,EAAGG,OAAqB,CAC1B/R,KAAKw5H,gBAEL,IAAMoR,EAAmBh5H,EAAG6hC,WAAa7hC,EAAG6hC,UAAU/a,KAAO9mB,EAAG6hC,UAAU/a,KAAK/I,KAAM,SAAAqkB,GAAG,OAAIA,EAAI/mC,QAAQC,gBAAkB1C,EAAKpI,MAAMe,YAAY8J,QAAQC,gBAAkB,KAC3K,GAAI09H,EAAiB,CACnB,IAAMb,EAAgB/pI,KAAKD,cAAcsV,iBAAiBnD,SAAS04H,EAAiBrgI,KAAK,IAAIvK,KAAKoC,MAAMe,YAAYtC,UACpHb,KAAKiI,SAAS,CACZ8hI,4DAMQn4H,EAAGigB,EAAOjS,GAEN,YAAdhO,EAAGG,QACL/R,KAAKw5H,8DAIa/4H,GAAwB,IAAnBoqI,EAAmB/3H,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GACxCg4H,EAAe,KACnB,OAAQrqI,GACN,IAAK,UACHqqI,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIrvG,OAAOqvG,IAGrBA,wCAGI,IAAA5yB,EAAAl4G,KAEX,IAAKA,KAAKoC,MAAM0nI,aACd,OAAO,EAGT,IAAMvwF,EAASv5C,KAAKoC,MAAMm3C,OACtBswF,EAAcxoI,OAAOqQ,OAAO1R,KAAKoC,MAAM0nI,cAAcvoI,SAAWg4C,EAAOh4C,OAEvEsoI,GACFxoI,OAAOqQ,OAAO1R,KAAKoC,MAAM0nI,cAActoI,QAAS,SAACu3G,EAAWgyB,GAC1D,IAAMC,EAAYzxF,EAAOwxF,GACnBD,EAAe5yB,EAAK+yB,sBAAsBD,EAAUvqI,MACpDyqI,GAAaJ,GAAkD,OAAnC/xB,EAAWtkE,MAAMq2F,GACnDjB,EAAcA,GAAeqB,IAK7BrB,IAAgB7pI,KAAKoC,MAAMynI,aAC7B7pI,KAAKiI,SAAS,CACZ4hI,oDAKM9iI,EAAEgkI,GACZ,IAAII,EAAcpkI,EAAEggB,OAAOlc,MAC3B7K,KAAKiI,SAAS,CACZkjI,oDAIQpkI,EAAEgkI,GACZ,IAAIhyB,EAAahyG,EAAEggB,OAAOlc,MAE1B7K,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5BwnI,aAAazoI,OAAA84B,EAAA,EAAA94B,CAAA,GACRiB,EAAUwnI,aADHzoI,OAAA+pI,GAAA,EAAA/pI,CAAA,GAET0pI,EAAYhyB,8CAMjB,GAA8B,OAA1B/4G,KAAKoC,MAAMsnI,WAAoB,CACjC,IAAIJ,EAAUtpI,KAAKoC,MAAMknI,QACzB,GAAIA,EAAQtpI,KAAKoC,MAAMsnI,YAAY,QAC1BJ,EAAQtpI,KAAKoC,MAAMsnI,YAC1BJ,EAAUjoI,OAAOqQ,OAAO43H,GAIxBtpI,KAAKiI,SAAS,CACZqhI,UACAI,WALiB,KAMjBI,aALmB,6CAWhB,IAAA9d,EAAAhsH,KA2BT,GAxBeqB,OACEqQ,OAAO1R,KAAKoC,MAAM0nI,cAAcn4H,OAAQ,SAAAhH,GAAC,OAAIA,EAAEpJ,OAAO,IACtD0B,IAAK,SAAC81G,EAAWgyB,GAChB,IAAMC,EAAYhf,EAAK5pH,MAAMm3C,OAAOwxF,GACpC,OAAQC,EAAUvqI,MAChB,IAAK,YACHs4G,EAAaA,EAAWptD,MAAM,KAChC,MACA,IAAK,YACHotD,EAAaA,EAAWptD,MAAM,KAAK1oD,IAAK,SAAAu0B,GAAC,OAAIw0F,EAAKjsH,cAAcw3B,KAAKC,KACvE,MACA,IAAK,UACHuhF,EAAaiT,EAAKjsH,cAAcw3B,KAAKwhF,GACvC,MACA,QACoC,OAA9BiyB,EAAUvqI,KAAK2lB,QAAQ,KACzB2yF,EAAaA,EAAWptD,MAAM,MAKpC,OAAOotD,IAGdx3G,OAAOvB,KAAKoC,MAAMm3C,OAAOh4C,OAClC,OAAO,EAGT,IAAMuQ,EAAS,CACbu5H,QAAQ,KACR/uG,gBAAgB,KAChBid,OAAOv5C,KAAKoC,MAAM0nI,cAIdR,EAAUjoI,OAAOqQ,OAAO1R,KAAKoC,MAAMknI,SAEX,OAA1BtpI,KAAKoC,MAAMsnI,WACbJ,EAAQ/7H,KAAKuE,GAEbw3H,EAAQtpI,KAAKoC,MAAMsnI,YAAc53H,EAMnC9R,KAAKiI,SAAS,CACZqhI,UACAK,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAK1pI,KAAKoC,MAAMknI,QAAQI,GACtB,OAAO,EAGT,GAAIA,IAAe1pI,KAAKoC,MAAMsnI,WAC5B,OAAO,EAGT,IAGMI,EAHS9pI,KAAKoC,MAAMknI,QAAQI,GAGNnwF,OAE5Bv5C,KAAKiI,SAAS,CACZ0hI,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAezpI,KAAKoC,MAAMqnI,WAAW,CACvC,IAAMW,EAAuBpqI,KAAKE,MAAMs7G,UAAUjiF,UAAU6wG,qBACtDkB,EAAmBtrI,KAAKoC,MAAM4nI,kBAAkBP,GAChDnvD,EAAe,CACnBxxC,IAAIshG,EAAqBthG,IACzBrhC,KAAK6jI,EAAiB/rH,aACtBtS,QAAQq+H,EAAiBhvG,iBAE3Bt8B,KAAKiI,SAAS,CACZwhI,aACAnvD,eACAyvD,cAAc,6CAKPJ,GACX,GAAIA,IAAc3pI,KAAKoC,MAAMunI,UAC3B,OAAO,EAKT3pI,KAAKiI,SAAS,CACZ0hI,YACAD,WAJiB,oFAQF3iI,6FACjBA,EAAE6H,iBAEIw7H,EAAuBpqI,KAAKE,MAAMs7G,UAAUjiF,UAAU6wG,qBACtDmB,EAAcvrI,KAAKD,cAAc6V,gBAAgB,CAAC,YAAY,OAAO,YAErE5N,EAAW,SAAC4J,EAAGqN,EAAMsqH,GACzB,IAAMrmF,EAA4B,YAAdtxC,EAAGG,OACjBu3H,EAAUjoI,OAAOqQ,OAAOo/G,EAAK1uH,MAAMknI,SACnCkC,EAAet5H,SAASq3H,KAAer3H,SAAS4+G,EAAK1uH,MAAMknI,QAAQ/nI,QAAQ,EAC3E0oI,EAAmB/mF,GAAesoF,EAExC,GAAItoF,EAAY,CACd,IAAMuoF,EAAsB75H,EAAG6hC,UAAUmS,QAAUh0C,EAAG6hC,UAAUmS,OAAO8lF,aAAe95H,EAAG6hC,UAAUmS,OAAO8lF,aAAa1iG,aAAa,GAAxG,KAAAvlC,OAAkHmO,EAAG6hC,UAAU/a,KAAK,GAAGnuB,KAAK6b,QAAQ,KAChLkjH,EAAQC,GAAajtG,gBAAkBmvG,OAGvCnC,EAAQC,GAAa8B,SAAU,EAKjCva,EAAK7oH,SAAS,CACZqhI,UACAW,oBACA,WACIuB,GACF1a,EAAKrwG,uBAKLf,EAAkB,SAAC9N,EAAG23H,GAC1B,IAAMxqH,EAASnN,EAAG+N,gBAEZb,EAAazd,OAAOuB,OAAO,GAAGkuH,EAAK1uH,MAAM0c,YAC/CA,EAAWC,OAASA,EACpBD,EAAWyqH,YAAYh8H,KAAKg8H,GAC5BzY,EAAK7oH,SAAS,CACZ6W,gBAIJ9e,KAAKoC,MAAMknI,QAAQ9nI,QAAQ,SAACsQ,EAAOy3H,GACjC,IAAMoC,EAAe75H,EAAOynC,OAAO,GAC7BqyF,EAAmB95H,EAAOynC,OAAO,GACjCkxF,EAAgB34H,EAAOynC,OAAO,GAE9BsyF,EAAW/a,EAAK5wH,MAAMogB,KAAKgC,IAAIwmB,IAAIyxF,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAACoR,EAAaJ,EAAYK,EAAiBnB,IAEvCnyE,EAAe,CAAC8xE,EAAqBn9H,QAL3B,8CAK2C4+H,GAC3D/a,EAAK/wH,cAAckgB,0BAA0B,eAAgB,gBAAiBq4C,EAAc,SAAC1mD,EAAGqN,GAAJ,OAAcjX,EAAS4J,EAAGqN,EAAMsqH,IAAc,SAAC33H,GAAD,OAAQ8N,EAAgB9N,EAAG23H,OAGvKvpI,KAAKiI,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUwc,WADL,CAERE,SAAQ,0BAIL,uIAGA,IAAAgyG,EAAAhxH,KAED8rI,EAAmB9rI,KAAKE,MAAMwQ,QAAU1Q,KAAKoC,MAAM4nI,kBAAkBr4H,OAAQ,SAAA6nB,GAAC,OAAIA,EAAEqmC,MAAM3yD,gBAAkB8jH,EAAK9wH,MAAMwQ,QAAQxD,gBAAkB,GACjJ6+H,EAAiB/rI,KAAKE,MAAMwQ,QAAU1Q,KAAKoC,MAAM4nI,kBAAkBr4H,OAAQ,SAAA6nB,GAAC,OAAIA,EAAEo7F,UAAU1nH,gBAAkB8jH,EAAK9wH,MAAMwQ,QAAQxD,gBAAkB,GAEzJ,OACEtE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,GADN,sBAKAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,SACNuI,KAAM,cACNoQ,UAAW,UACXI,YAAa,UACbV,SAAiC,WAAtB7d,KAAKoC,MAAM0P,OACtB7M,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,cAEpC3oH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,UACN2Y,UAAW,UACXpQ,KAAM,gBACNwQ,YAAa,UACbV,SAAiC,YAAtB7d,KAAKoC,MAAM0P,OACtB7M,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,eAEpC3oH,EAAA9G,EAAAC,cAAC4b,EAAA,EAADtc,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEob,UAAW,CACTtM,GAAG,EACHD,GAAG,EACH9N,MAAM,KAERuE,KAAM,QACN2Y,UAAW,SACXpQ,KAAM,cACNwQ,YAAa,UACbV,SAAiC,UAAtB7d,KAAKoC,MAAM0P,OACtB7M,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKO,UAAU,eAIxC3oH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE2wG,GAAI,EACJv4G,MAAO,EACP6N,GAAI,CAAC,EAAE,GACPzC,YAAa,UACb+vG,aAAc,yBAEdxzG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CACE3J,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,GACfW,MAAO,CACLk7G,cAAc,eAGfxhH,KAAKoC,MAAM0P,SAGhBlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,UAGS,WAAtBnB,KAAKoC,MAAM0P,OACTlJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPuoI,UAAWxpI,KAAKoC,MAAMonI,UACtBwC,SAAUhsI,KAAKisI,aAAavrH,KAAK1gB,OAG/BqB,OAAOqQ,OAAO1R,KAAKoC,MAAMknI,SAASrmI,IAAK,SAAC6O,EAAOy3H,GAC7C,OACE3gI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,EACHnN,MAAM,GAER2yG,iBAAkB,CAChBnuG,GAAG,EACHqJ,GAAG,EACH1N,eAAe,UAEjB0yG,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbgW,eAAe,EACf7X,IAAG,UAAAL,OAAY8lI,GACfzhH,MAAQkpG,EAAK5uH,MAAMsnI,aAAeH,EAAc,gBAAkB,KAClEtkI,YAAc,SAAA8B,GAAC,OAAoIiqH,EAAKkb,cAAc3C,KAGpKvY,EAAK5uH,MAAMsnI,aAAeH,EACxB3gI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd4vH,EAAK5uH,MAAMm3C,OAAOt2C,IAAK,SAAC4tB,EAAMk6G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQj2G,SAASrF,EAAMpwB,MAAQ,SAAW,OACjEqqI,EAAe9Z,EAAKia,sBAAsBp6G,EAAMpwB,MAAK,GAC3D,OACEmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhB2C,IAAG,SAAAL,OAAWsnI,GACdn9H,MAAK,GAAAnK,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,MAELmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRp4B,MAAO,EACPR,KAAM0rI,EACNC,QAAStB,EACTz+H,YAAa,aACb4C,gBAAiB,SACjB4pG,YAAW,GAAAp1G,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,KACX0c,SAAW,SAAApW,GAAC,OAAIiqH,EAAKqb,YAAYtlI,EAAEgkI,IACnClgI,MAAOmmH,EAAK5uH,MAAM0nI,cAAgB9Y,EAAK5uH,MAAM0nI,aAAaiB,GAAc/Z,EAAK5uH,MAAM0nI,aAAaiB,GAAc,QAMxHniI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd0Q,EAAOwqB,gBACL1zB,EAAA9G,EAAAC,cAACq/G,EAAA,EAAD,CACE17G,SAAU,EACVE,MAAOorH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UACnDtnB,WAAYmrH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,UACxDlG,KAAM+pG,EAAKjxH,cAAcwvD,uBAAuBz9C,EAAOwqB,kBAJzD,eAMexqB,EAAOwqB,kBAEnB00F,EAAK5uH,MAAM0c,WAAWE,SACzBpW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6J,GAAG,CAAC,EAAE,GACNvO,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTmG,UAAU4pH,EAAK5uH,MAAMynI,aAEvB5kI,YAAa+rH,EAAKsb,UAAU5rH,KAAKswG,IAPnC,iBAWApoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJpW,MAAO,MACPC,WAAY,MACZC,QAASkrH,EAAKub,aAAa7rH,KAAKswG,IAJlC,sBAcVpoH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACGmoH,EAAKjxH,cAAcoI,YAAY2J,EAAOynC,OAAO,IADhD,MACwDy3E,EAAKjxH,cAAcoI,YAAY2J,EAAOynC,OAAO,IADrG,MAC6GznC,EAAOynC,OAAO,GAD3H,IACiIznC,EAAOwqB,gBAAkB,aAAe,IAGvKxqB,EAAOwqB,gBACL1zB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,MACHP,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,OACNsW,MAAO,SACPrW,KAAMspH,EAAK9wH,MAAM4C,SAAW,QAAU,QACtC8C,MAAOorH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,aAGrD6jG,EAAK5uH,MAAM0c,WAAWE,SAAWgyG,EAAK5uH,MAAM0c,WAAWyqH,aAAevY,EAAK5uH,MAAM0c,WAAWyqH,YAAYrzG,SAAShkB,SAASq3H,IAC5H3gI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SACXoK,EAAOu5H,QACTziI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,MACHP,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,MACP6B,KAAM,QACNsW,MAAO,SACPrW,KAAOspH,EAAK9wH,MAAM4C,SAAW,QAAU,WAI3C8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,CAAC,MAAM,OACVyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAkB+hH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAaC,SAASC,QAEhE9V,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,OACNsW,MAAO,SACPnY,MAAO,SACP8B,KAAOspH,EAAK9wH,MAAM4C,SAAW,QAAU,gBAazD9C,KAAKoC,MAAM6nI,mBAAqBjqI,KAAKoC,MAAM0c,WAAWE,WAAahf,KAAKoC,MAAMknI,SAAWjoI,OAAOqQ,OAAO1R,KAAKoC,MAAMknI,SAAS/nI,OAAOvB,KAAKoC,MAAMwnI,eAC7IhhI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,EACHnN,MAAM,GAER2yG,iBAAkB,CAChBnuG,GAAG,EACHqJ,GAAG,EACH1N,eAAe,UAEjB0yG,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbgW,eAAe,EACf1W,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKwb,cAAa,IACrC1kH,MAAQ9nB,KAAKoC,MAAMunI,UAAY,eAAiB,MAG9C3pI,KAAKoC,MAAMunI,UACT/gI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKoC,MAAMm3C,OAAOt2C,IAAK,SAAC4tB,EAAMk6G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQj2G,SAASrF,EAAMpwB,MAAQ,SAAW,OACjEqqI,EAAe9Z,EAAKia,sBAAsBp6G,EAAMpwB,MAAK,GAC3D,OACEmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhB2C,IAAG,SAAAL,OAAWsnI,GACdn9H,MAAK,GAAAnK,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,MAELmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRp4B,MAAO,EACPR,KAAM0rI,EACNC,QAAStB,EACTz+H,YAAa,aACb4C,gBAAiB,SACjB4pG,YAAW,GAAAp1G,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,KACX0c,SAAW,SAAApW,GAAC,OAAIiqH,EAAKqb,YAAYtlI,EAAEgkI,IACnClgI,MAAOmmH,EAAK5uH,MAAM0nI,cAAgB9Y,EAAK5uH,MAAM0nI,aAAaiB,GAAc/Z,EAAK5uH,MAAM0nI,aAAaiB,GAAc,QAMxHniI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX6J,GAAG,CAAC,EAAE,GACNvO,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTmG,UAAUpH,KAAKoC,MAAMynI,aAEvB5kI,YAAajF,KAAKssI,UAAU5rH,KAAK1gB,OAPnC,kBAcJ4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,qBAGAD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,CAAC,MAAM,OACVyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAkBjP,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAaC,SAASC,QAEhE9V,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,MACNsW,MAAO,SACPnY,MAAO,SACP8B,KAAO1H,KAAKE,MAAM4C,SAAW,QAAU,aASvD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGdpB,KAAKoC,MAAM6nI,iBACTrhI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACH/N,MAAM,CAAC,EAAE,UAGX2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,UACNsW,MAAO,SACPrW,KAAO1H,KAAKE,MAAM4C,SAAW,QAAU,QACvC8C,MAAO5F,KAAKE,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,YAErDvkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJrW,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,UALb,8CAWFnO,KAAKoC,MAAM0c,YAAc9e,KAAKoC,MAAM0c,WAAWE,QACjDpW,EAAA9G,EAAAC,cAACkf,EAAA,EAAD5f,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4H,KAAM9H,KAAKoC,MAAM0c,WAAWC,OAC5B6B,SAAQ,0BACRD,WAAU,mCACVF,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,SAGjD4I,EAAA9G,EAAAC,cAAC86G,EAAA,EAAD,CACE13G,YAAa,CACX1E,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTmG,UAAUpH,KAAKoC,MAAMonI,YAJzB,sBAagB,YAAtBxpI,KAAKoC,MAAM0P,OACbg6H,EAAiBvqI,OAAO,EACtBuqI,EAAiB7oI,IAAK,SAACq3E,EAAaivD,GAClC,OACE3gI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,EACHnN,MAAM,GAER2yG,iBAAkB,CAChBnuG,GAAG,EACHqJ,GAAG,EACH1N,eAAe,UAEjB0yG,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbgW,eAAe,EACf7X,IAAG,UAAAL,OAAY8lI,GACftkI,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKyb,cAAclD,IACtCzhH,MAAQkpG,EAAK5uH,MAAMqnI,aAAeF,EAAc,gBAAkB,MAGhEvY,EAAK5uH,MAAMqnI,aAAeF,EACxB3gI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,oBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAah+C,mBAItB00F,EAAK5uH,MAAMm3C,OAAOt2C,IAAK,SAAC4tB,EAAMk6G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQj2G,SAASrF,EAAMpwB,MAAQ,SAAW,OACvE,OACEmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhB2C,IAAG,SAAAL,OAAWsnI,GACdn9H,MAAK,GAAAnK,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,MAELmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM0rI,EACN9/H,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAazpD,EAAMppB,WAMpCmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,mBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAav2C,eAAez2B,QAAQ,MAG/C1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,qBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAaowD,iBAAiBp9H,QAAQ,MAGjD1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBshH,UAAW,yBAEX95G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAACghH,EAAD1hH,OAAAuB,OAAA,GACMouH,EAAK9wH,MADX,CAEE4R,OAAQk/G,EAAK5uH,MAAM0P,OACnB3O,YAAa6tH,EAAK5uH,MAAMe,YACxB68B,aAAcgxF,EAAK5uH,MAAM49B,aACzBs6C,aAAc02C,EAAK5uH,MAAMk4E,aACzBtyE,SAAUgpH,EAAK2b,gBAAgBjsH,KAAKswG,GACpCnxG,qBAAsBmxG,EAAKnxG,qBAAqBa,KAAKswG,GACrDzT,mBAAoB,iDAEpB30G,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACT7Z,EAAE,IAGJmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZC,cAAe,UAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,QACND,KAAM,WACN7B,MAAO,aAETgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,kDAeZvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACGmoH,EAAKjxH,cAAcoI,YAAYmyE,EAAaza,OAD/C,MAC0DmxD,EAAKjxH,cAAcoI,YAAYmyE,EAAas6C,WADtG,MACqHt6C,EAAamwD,eAElI7hI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,CAAC,MAAM,OACVyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAkB+hH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAaC,SAASC,QAEhE9V,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,SACNsW,MAAO,SACPnY,MAAO,SACP8B,KAAOspH,EAAK9wH,MAAM4C,SAAW,QAAU,eAUvD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEsF,UAAW,UADb,0CAMoB,UAAtBnO,KAAKoC,MAAM0P,QACXi6H,EAAexqI,OAAO,EACpBwqI,EAAe9oI,IAAK,SAACq3E,EAAaivD,GAChC,OACE3gI,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,EACHnN,MAAM,GAER2yG,iBAAkB,CAChBnuG,GAAG,EACHqJ,GAAG,EACH1N,eAAe,UAEjB0yG,WAAY,CACVpuG,SAAS,EACTC,WAAW,GAEbgW,eAAe,EACf7X,IAAG,UAAAL,OAAY8lI,GACftkI,YAAc,SAAA8B,GAAC,OAAIiqH,EAAKyb,cAAclD,IACtCzhH,MAAQkpG,EAAK5uH,MAAMqnI,aAAeF,EAAc,gBAAkB,MAGhEvY,EAAK5uH,MAAMqnI,aAAeF,EACxB3gI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,oBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAah+C,mBAItB00F,EAAK5uH,MAAMm3C,OAAOt2C,IAAK,SAAC4tB,EAAMk6G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQj2G,SAASrF,EAAMpwB,MAAQ,SAAW,OACvE,OACEmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhB2C,IAAG,SAAAL,OAAWsnI,GACdn9H,MAAK,GAAAnK,OAAKotB,EAAMppB,KAAX,MAAAhE,OAAoBotB,EAAMpwB,KAA1B,MAELmI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM0rI,EACN9/H,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAazpD,EAAMppB,WAMpCmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,mBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAav2C,eAAez2B,QAAQ,MAG/C1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLrF,MAAM,OACNyH,QAAQ,OACRxH,WAAW,UACXC,cAAc,UAEhByM,MAAK,qBAELhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRqzG,UAAQ,EACRzrI,MAAO,EACPR,KAAM,UACN4L,YAAa,aACb4C,gBAAiB,SACjBpE,MAAOyvE,EAAaowD,iBAAiBp9H,QAAQ,MAGjD1E,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBshH,UAAW,yBAEX95G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd4vH,EAAK5uH,MAAM2nI,eACTnhI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAOorH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAazM,OAAOob,WAJrD,iCAMiC6jG,EAAK5uH,MAAM2nI,cAAcz8H,QAAQ,GANlE,IAMuE0jH,EAAK5uH,MAAMe,YAAYD,OAKhGo3E,EAAaowD,kBAAoBpwD,EAAaowD,iBAAiBj1H,GAAG,MAChE7M,EAAA9G,EAAAC,cAAC6c,EAAA,EAADvd,OAAAuB,OAAA,CACEgd,OAAQ,IACJoxG,EAAK9wH,MAFX,CAGEgC,UAAW4gH,IACXhiG,eAAgB,CACdpZ,KAAK,SACLmD,MAAM,QACN1D,UAAU,UAEZkY,WAAY,QACZvN,OAAQk/G,EAAK5uH,MAAM0P,OACnB9J,SAAUgpH,EAAKhL,cAActlG,KAAKswG,GAClCzxG,aAAc+6D,EAAa/6D,gBAG7B3W,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,4BAcVgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACGmoH,EAAKjxH,cAAcoI,YAAYmyE,EAAaza,OAD/C,MAC0DmxD,EAAKjxH,cAAcoI,YAAYmyE,EAAas6C,WADtG,MACqHt6C,EAAamwD,eAElI7hI,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,CAAC,MAAM,OACVyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAkB+hH,EAAK9wH,MAAM0G,MAAMC,OAAO2X,aAAaC,SAASC,QAEhE9V,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,SACNsW,MAAO,SACPnY,MAAO,SACP8B,KAAOspH,EAAK9wH,MAAM4C,SAAW,QAAU,eAUvD8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEsF,UAAW,UADb,oDA7xCajM,oKCkEzBojC,GAAMsnG,8/CAENp/H,GAAgB,CACpBq/H,QAAS,OACTxsE,QAAS,OACTpiC,UAAW,MACXiuB,QAAS,uBACT4gF,SAAU,2BACVC,YAAa,2BACbC,WAAY,6BACZC,WAAY,kCACZC,MAAO,CACL7uG,IAAI,IACJ8uG,UAAS,GAEXvmI,MAAO,CACLwmI,iBAAiB,GAEnBhhF,aAAc,CACZihF,KAAM,CACJjqG,gBAAiB,EACjB9H,IAAK,wBAEPgyG,KAAM,CACJlqG,gBAAiB,EACjB9H,IAAK,6BAEPiyG,QAAS,CACPnqG,gBAAiB,IACjB9H,IAAK,iCAGToxB,QAAS,4BACT8qD,UAAW,CACTg2B,IAAK,2BACLC,IAAK,iBACLC,IAAK,YACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,YACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,eACLC,IAAK,eAEP11G,KAAM,CAEJO,eAAe,EACfN,iBAAiB,GAEnB01G,WAAY,CAEVC,SAAU,CACRx6G,SAAS,EACTg1G,WAAY,qBAEdyF,MAAO,CACLz6G,SAAS,EACTg1G,WAAY,yBAEd0F,OAAQ,CACN16G,SAAS,EACT/lB,KAAM,aACN+6H,WAAY,qBAEd2F,SAAU,CACR36G,SAAS,EACT/lB,KAAM,eACN+6H,WAAY,gCAEd4F,YAAa,CACX56G,SAAS,EACTg1G,WAAY,6BAEd6F,cAAe,CACb76G,SAAS,EACT86G,UAAW,oBACX9F,WAAY,wBAEd+F,WAAY,CACV/6G,SAAS,EACT/lB,KAAM,eACNtG,KAAM,kBACNqhI,WAAY,wBAEdgG,OAAQ,CACNh7G,SAAS,EAETrsB,KAAM,kBACNqhI,WAAY,gCAEdiG,UAAW,CACTj7G,SAAS,EACTg1G,WAAY,2BAEdkG,OAAQ,CACNl7G,SAAS,EACTg1G,WAAY,qBAEdmG,UAAW,CACTn7G,SAAS,EACTg1G,WAAY,uBAEdoG,MAAO,CACLp7G,SAAS,EACT/lB,KAAM,YACN+6H,WAAY,+BAEdqG,OAAQ,CACNr7G,SAAS,EACTg1G,WAAY,mBAEdsG,OAAQ,CACNt7G,SAAS,EACTg1G,WAAY,mBAEduG,WAAY,CACVv7G,SAAS,EACTg1G,WAAY,uBAEdwG,OAAQ,CACNx7G,SAAS,EACTg1G,WAAY,mBAGhByG,uBAAwB,CACtBl3F,SAAU,iDAEZgiE,SAAU,CACRm1B,WAAY,sBACZC,SAAU,0BACVC,gBAAiB,oDACjBj9H,WAAY,2DACZk9H,YAAa,2DACbC,SAAS,0EACTC,mBAAoB,8EACpBrlG,kBAAmB,mFACnBslG,WAAY,4FACZvoG,YAAY,oGACZwoG,eAAgB,qGAChB9f,sBAAuB,iHACvB+f,YAAa,iIACbC,YAAa,kIACb1wG,eAAe,iIACf2wG,0BAA2B,6IAC3BC,eAAgB,8JAChBC,cAAe,wLACfC,8BAA+B,qNAC/BC,mCAAkC,oRAClC5P,QAAS,8TACT6P,UAAS,0aACTC,kBAAiB,2bACjB7P,aAAc,ucACd8P,kCAAiC,yfAEnC/iF,UAAW,CACTC,OAAQ,CACN/H,OAAQ,CACN9xB,SAAS,EACTw5B,cAAc,EACdM,sBAAsB,GAExB8iF,SAAU,CACR58G,SAAS,KAIf68G,OAAQ,CAENC,wBAAwB,EACxBC,qBAAqB,EACrBnlH,QAAS,CACPoI,SAAS,EACT+5B,kBAAmB,CAAC,IAEtBijF,QAAS,CAEPh9G,SAAS,EACTi+B,UAAW,SAGfg/E,UAAW,CACTC,UAAW,aACXpqI,MAAO,CACL+2F,KAAM,QACNyvC,iBAAiB,IAGrB6D,WAAY,CACVC,MAAM,EACNp9G,SAAS,EACTujC,WAAY,SACZxJ,kBAAmB,CAAC,GACpBmjF,UAAW,cACX9wI,MAAO,CACLoyB,UAAW,OACX6+G,mBAAoB,CAClB5jE,OACA6jE,eACAC,eACAC,iBACAC,iBACAC,iBACAC,oBAGJthF,UAAW,CACTuhF,GAAI,CACF39B,YAAW,+gBAEb49B,GAAI,CACF59B,YAAa,mSAEf69B,EAAG,CACD79B,YAAW,+mBAUfx6E,UAAW,CACTs4G,UAAW,OACXZ,WAAY,CACVa,GAAG,CACDrqI,KAAK,gBACLiwD,QAAQ,YAEVq6E,GAAG,CACDtqI,KAAK,gBACLiwD,QAAQ,aAKhB5+C,MAAO,CACLgb,SAAS,EACTlU,OAAQ,CACN8wE,QAAS,EACT9iF,MAAO,QACP+rE,MAAO,mBACP37D,MAAO,6BACPg0H,cAAe,kCAEjB52C,MAAO,CACLr1F,KAAM,CAAC,MAAO,MAAO,QACrBsyC,SAAU,8CAEZ45F,aAAc,CACZpxI,SAAU,GACVioC,IAAKopG,GACLzqI,KAAM,4BACNvE,MAAO,4BACP+J,QAAS,8CAEXqmF,gBAAiB,CACfxqD,IAAKqpG,GACL1qI,KAAM,mBACNwF,QAAS,8CAEXmlI,cAAe,CACbtpG,IAAKupG,GACL5qI,KAAM,mBACNwF,QAAS,8CAEXqlI,YAAa,CACXxpG,IAAKypG,GACL9qI,KAAM,eACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKqpG,GACL1qI,KAAM,mBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,mBAIZ+I,gBAAiB,CACfgiI,aAAc,CACZ3xI,SAAU,GACVizB,SAAS,EACTmK,UAAW,MACX/6B,MAAO,eACP+J,QAAS,6CACTikF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGf0hD,cAAe,CACb5xI,SAAU,GACVizB,SAAS,EACTmK,UAAW,OACX/6B,MAAO,gBACP+J,QAAS,6CACTikF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGf2hD,cAAe,CACb7xI,SAAU,GACVizB,SAAS,EACTmK,UAAW,OACX/6B,MAAO,gBACP+J,QAAS,6CACTikF,gBAAiB,CACfR,QAAS,EACTK,UAAW,MAKnB9wB,OAAQ,CACNi6C,IAAK,CACH75C,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb96D,KAAM,iBACNhH,KAAM,CACJ,CAAEgH,KAAM,SAAUhH,KAAM,WACxB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,SAAUhH,KAAM,WACxB,CAAEgH,KAAM,UAAWhH,KAAM,UAG7BkyI,KAAM,CACJtyE,QAAS,EACT54D,KAAM,WACNu6D,WAAY,KACZO,YAAa,SACb9hE,KAAM,CACJ,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,WAAYhH,KAAM,aAG9BmyI,IAAK,CACHvyE,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb96D,KAAM,qBACNhH,KAAM,CACJ,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,UAAWhH,KAAM,WACzB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,QAAShH,KAAM,WACvB,CAAEgH,KAAM,WAAYhH,KAAM,cAIhCssE,UAAW,CACTQ,KAAM,CACJzkC,IAAKykC,EACL1sE,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTkzE,SAAS,EACT6rC,SAAS,EACTzvI,SAAU,OACV0vI,WAAW,EACX7iH,aAAa,EACbqwE,gBAAgB,EAChBrtB,iBAAkB,QAClBplB,kBAAmB,CAAC,EAAG,KACvBv3B,sBAAuB,MACvB1wB,MAAO,sBACPmI,KAAM,yBACN8zE,UAAW,CACTs1C,EAAG,6CACH4b,IAAK,8CAEP9lI,QAAS,6CACTonF,eAAgB,CACd8iC,EAAG,CAAC,cAAe,eAAgB,gBACnC4b,IAAK,CAAC,eAAgB,gBAAiB,mBAG3CC,KAAM,CACJlqG,IAAKkqG,GACLnyI,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTkzE,SAAS,EACT6rC,SAAS,EACTC,WAAW,EACX7iH,aAAa,EACbokE,eAAgB,GAChBjxF,SAAU,WACVk9F,gBAAgB,EAChBzyC,kBAAmB,CAAC,GACpBolB,iBAAkB,QAClB38C,sBAAuB,MACvB1wB,MAAO,sBACPqH,QAAS,8CAGXgmI,IAAK,CACHnqG,IAAKq2C,GACLj8E,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTkzE,SAAS,EACT6rC,SAAS,EACTC,WAAW,EACX1vI,SAAU,OACV6sB,aAAa,EACbokE,eAAgB,GAChBiM,gBAAgB,EAChBzyC,kBAAmB,CAAC,GACpBjoD,MAAO,mBACPqtE,iBAAkB,QAClB38C,sBAAuB,MACvBrpB,QAAS,8CAGXimI,QAAS,CACPpqG,IAAKqqG,GACLtyI,SAAU,GACVmmG,SAAS,EACT6rC,SAAS,EACT/+G,SAAS,EACTg/G,WAAW,EACX5vI,MAAO,UACP+sB,aAAa,EACb7sB,SAAU,SACVk9F,gBAAgB,EAChBzyC,kBAAmB,CAAC,GACpBolB,iBAAkB,SAClBrtE,MAAO,qBACP0wB,sBAAuB,MACvBrpB,QAAS,6CACTi/E,gBAAiB,6CACjBmI,eAAgB,CACd8iC,EAAG,CAAC,gBAAiB,gBAAiB,kBAG1Cic,OAAQ,CACNtqG,IAAKq2C,GACLt+E,SAAU,GACVmmG,SAAS,EACT6rC,SAAS,EACT/+G,SAAS,EACT5wB,MAAO,SACP4vI,WAAW,EACX7iH,aAAa,EACb7sB,SAAU,SACVixF,eAAgB,GAChBiM,gBAAgB,EAChBrtB,iBAAkB,SAClBrtE,MAAO,qBACP0wB,sBAAuB,MACvBu3B,kBAAmB,CAAC,IAAK,OAEzB5gD,QAAS,6CACTi/E,gBAAiB,+CAGrB3yD,UAAW,CACTw5G,IAAK,CACHM,qBAAsB,CACpBvqG,IAAKuqG,GACLpmI,QAAS,8CAEXqmI,kBAAmB,CACjBxqG,IAAKwqG,GAELrmI,QAAS,8CAEXsmI,cAAe,CACbn6G,UAAW,EACX0P,IAAK0qG,GACLvmI,QAAS,8CAEXwmI,gBAAiB,CACf3qG,IAAK4qG,GACLzmI,QAAS,+CAGbkqH,EAAG,CACDkO,eAAgB,CACdv8F,IAAKu8F,GACLp4H,QAAS,8CAEX0mI,iBAAkB,CAChB7qG,IAAK6qG,GAEL1mI,QAAS,8CAEX2mI,aAAc,CACZ9qG,IAAK+qG,GACL5mI,QAAS,8CAEX6mI,WAAY,CACVhrG,IAAKgrG,GACL7mI,QAAS,8CAEXmkI,YAAa,CACXtoG,IAAKsoG,GACLnkI,QAAS,8CAEXokI,YAAa,CACXvoG,IAAKuoG,GACLpkI,QAAS,8CAGX8mI,SAAU,CACRjrG,IAAKirG,GACL9mI,QAAS,8CAGXukI,cAAe,CACb1oG,IAAK0oG,GACLvkI,QAAS,8CAGX+mI,cAAe,CACblrG,IAAKkrG,GACL/mI,QAAS,8CAGXwkI,eAAgB,CACd3oG,IAAK2oG,GACLxkI,QAAS,8CAGXgnI,aAAc,CACZnrG,IAAKmrG,GACLhnI,QAAS,8CAGXqkI,cAAe,CACbxoG,IAAKwoG,GACLrkI,QAAS,8CAGXskI,cAAe,CACbzoG,IAAKyoG,GACLtkI,QAAS,8CAEXinI,YAAa,CACXprG,IAAKorG,GACLjnI,QAAS,8CAGXwmI,gBAAiB,CACf3qG,IAAK4qG,GACLzmI,QAAS,8CAEXsmI,cAAe,CACbzqG,IAAK0qG,GACLvmI,QAAS,8CAEXknI,sBAAuB,CACrBrrG,IAAKqrG,GACLlnI,QAAS,gDAIfyrE,OAAQ,CACNwhC,IAAK,CACHk6B,cAAe,CACbC,YAAa,0BACb1/C,UACE,6EACF2/C,cAAe,CACbC,aAAc,6CACd1vC,cAAe,SAIrB8tC,KAAM,CACJyB,cAAe,CACbC,YAAa,0BACb1/C,UACE,6EACF2/C,cAAe,CACbC,aAAc,6CACd1vC,cAAe,UAKvB2vC,YAAa,CACX/sI,KAAM,2BACNqgH,SAAU,uBACVpO,KAAM,mLACNwO,OAAQ,wBACRE,WACE,6EACFD,WACE,oFACFF,WAAY,yBACZjM,UAAW,CACT,CACEtC,KAAM,gBACNsO,IAAK,6hBAEP,CACEtO,KAAM,uCACNsO,IAAK,0dAIX/oF,SAAU,CACRt7B,GAAI,CACFiC,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtBjN,KAAM,KACNk5E,MAAO,SACP5rE,KAAM,WACNiQ,MAAO,2BACP02H,OAAQ,0BACRptB,SAAU,SACV7/G,KAAM,iBACNggH,SAAU,CACR,mCACA,0BACA,8BACA,+BACA,iCAEF1T,YAAa,CACX/mF,SAAU,4DACVstF,MAAO,0EACPC,QAAS,4EACTyD,YAAa,2FACbC,aAAc,qGACduJ,KAAM,uIACN/7F,QAAS,4IACTsgB,IAAI,4NAGRnoC,GAAI,CACFgC,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,IAChB/mI,IAAK,CAAC,KAAM,MAAO,QAErBjN,KAAM,KACNk5E,MAAO,SACP5rE,KAAM,aACNiQ,MAAO,2BACP02H,OAAQ,0BACRptB,SAAU,SACV7/G,KAAM,iBACNggH,SAAU,CACR,6CACA,qDACA,8BACA,gCAEF1T,YAAa,CACX/mF,SAAU,4DACVstF,MAAO,0EACPC,QAAS,4EACTyD,YAAa,2FACbC,aAAc,qGACduJ,KAAM,iIACN/7F,QAAS,+IACTsgB,IAAI,6NAIV4oG,WAAY,CACVC,KAAM,CACJ7mI,KAAM,6BACN8mI,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpB91G,SAAU,CACRlxB,KAAM,iCACN8mI,SAAU,sCACVC,aAAc,qCACdC,iBAAkB,2CAEpBC,KAAM,CACJjnI,KAAM,6BACN8mI,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBtnI,MAAO,CACLM,KAAM,8BACN8mI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBE,MAAO,CACLlnI,KAAM,8BACN8mI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBG,MAAO,CACLnnI,KAAM,8BACN8mI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBz6B,MAAO,CACLvsG,KAAM,8BACN8mI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBI,YAAa,CACXpnI,KAAM,oCACN8mI,SAAU,yCACVC,aAAc,qCACdC,iBAAkB,2CACjBK,SAAU,CACXrnI,KAAM,iCACN8mI,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,wCACjB5kF,UAAW,CACZpiD,KAAM,kCACN8mI,SAAU,uCACVC,aAAc,mCACdC,iBAAkB,yCACjBM,SAAU,CACXtnI,KAAM,iCACN8mI,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,yCAGtBO,kBAAmB,CACjBr2G,SAAU,CACR7F,UAAW,EACXy5E,SAAS,EACT3vG,MAAO,QACPzC,KAAM,UACN80I,YAAa,GACbnyI,SAAU,OACVwC,MAAO,UACP4vI,YAAY,EACZjtE,cAAc,EACdktE,aAAc,KACdpzG,SAAU,WACVq5E,UAAW+O,GACXllH,SAAU,WACVsoD,kBAAmB,CAAC,GACpB6nF,kBAAkB,EAClB5tH,MAAO,qBACP6tH,WAAY,kBACZ5nI,KAAM,oCACN+mI,aAAc,qCACdC,iBAAkB,uCAClBr7B,KAAM,sEACNk8B,UAAW,mKACXC,SAAU,oLAEZjB,KAAM,CACJx7G,UAAW,EACXl2B,MAAO,MACP2vG,SAAS,EACTxwE,SAAU,OACVkzG,YAAa,GACb3vI,MAAO,UACPnF,KAAM,WACN+0I,YAAY,EACZjtE,cAAc,EACdktE,aAAc,KACd3tH,MAAO,aACPviB,SAAU,WACVsoD,kBAAmB,GACnB6nF,kBAAkB,EAClBh6B,UAAWwkB,GACXyV,WAAY,kBACZ5nI,KAAM,gCACN+mI,aAAc,iCACdC,iBAAkB,mCAClBr7B,KAAM,8CACNm8B,SAAU,4lBACVD,UAAW,0JAEbrI,QAAS,CACPrqI,MAAO,MACP2vG,SAAS,EACTz5E,UAAW,IACXm8G,YAAa,GACblzG,SAAU,OACVz8B,MAAO,UACPnF,KAAM,WACN+0I,YAAY,EACZjtE,cAAc,EACdktE,aAAc,KACd3tH,MAAO,aACPviB,SAAU,WACVsoD,kBAAmB,GACnB6nF,kBAAkB,EAClBh6B,UAAWwkB,GACXyV,WAAY,kBACZ5nI,KAAM,gCACN+mI,aAAc,gCACdC,iBAAkB,gCAClBr7B,KAAM,yDACNm8B,SAAU,4lBACVD,UAAW,2JAGf7kF,WAAY,CACV9xB,SAAU,CACR/7B,MAAO,MACP2vG,SAAS,EACTpyG,KAAM,UACN80I,YAAa,GACbnyI,SAAU,OACVwC,MAAO,UACP4vI,YAAY,EACZ1tH,MAAO,WACPygD,cAAc,EACdktE,aAAc,KACd/5B,UAAW+O,GACXllH,SAAU,WACVsoD,kBAAmB,CAAC,GACpB6nF,kBAAkB,EAClBC,WAAY,kBACZ5nI,KAAM,oCACN+mI,aAAc,qCACdC,iBAAkB,uCAClBr7B,KAAM,sEACNk8B,UAAW,mKACXC,SAAU,oLAEZjB,KAAM,CACJ1xI,MAAO,MACP2vG,SAAS,EACT0iC,YAAa,GACb3vI,MAAO,UACPnF,KAAM,WACN+0I,YAAY,EACZjtE,cAAc,EACdktE,aAAc,KACd3tH,MAAO,aACPviB,SAAU,WACVmwI,kBAAkB,EAClBh6B,UAAWwkB,GACXryE,kBAAmB,CAAC,EAAG,KACvB8nF,WAAY,kBACZ5nI,KAAM,gCACN+mI,aAAc,iCACdC,iBAAkB,mCAClBr7B,KAAM,8CACNm8B,SAAU,4lBACVD,UAAW,0JAEbZ,KAAM,CACJ9xI,MAAO,MACP2vG,SAAS,EACT0iC,YAAa,GACb3vI,MAAO,UACPnF,KAAM,WACN+0I,YAAY,EACZC,aAAc,KACdltE,cAAc,EACdhjE,SAAU,WACVsoD,kBAAmB,CAAC,GACpB/lC,MAAO,gBACP4tH,kBAAkB,EAClBh6B,UAAWwkB,GACXyV,WAAY,mBACZ5nI,KAAM,gCACN+mI,aAAc,iCACdC,iBAAkB,mCAClBr7B,KAAM,oDACNm8B,SAAU,6aACVD,UAAW,yGAmBfnoI,MAAO,CACLqmB,SAAS,EACT+5B,kBAAmB,CAAC,EAAG,KACvButC,MAAO,CACL/8D,IAAK,IACLga,SAAU,CACR8+E,EAAG,kCACH4b,IAAK,4CAGTrpC,KAAM,CACJrrE,IAAK,IACLga,SAAU,CACR8+E,EAAG,iCACH4b,IAAK,2CAGTthF,KAAM,CACJpzB,IAAK,IACLga,SAAU,CACR8+E,EAAG,iCACH4b,IAAK,2CAGT+C,SAAU,CACRz3G,IAAK,KACLga,SAAU,CACR8+E,EAAG,qCACH4b,IAAK,+CAGTniC,OAAQ,CACNvyE,IAAK,IACLga,SAAU,CACR8+E,EAAG,qCAGPxtE,OAAQ,CACNosF,QAAQ,KACR36E,QAAS91B,GAAI0wG,mBAAqB,CAAEC,cAAa,UAAAxyI,OAAY6hC,GAAI0wG,qBAAyB,IAE5FE,SAAU,CAYRC,GAAI,CACFvoI,MAAO,UACPwoI,oBAAqB,GACrB9uF,aAAc,WACdD,eAAgB,WAChBgvF,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJ1tF,aAAc,aAGlBivF,kBAAmB,CAAC,OAAQ,QAC5BpmI,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SAEzDqmI,GAAI,CACF5oI,MAAO,UACP05C,aAAc,KACdD,eAAgB,WAChBkvF,kBAAmB,CAAC,OAAQ,QAC5BF,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJ3tF,eAAgB,aAGpBl3C,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAC9EimI,oBAAqB,CACnB,CACEv1I,SAAU,GACVuC,SAAU,WACVqE,KAAM,mBACN0I,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAEjE,CACEtP,SAAU,GACVuC,SAAU,SACVqE,KAAM,oBACN0I,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAK/EuoE,OAAQ,CACNwhC,IAAK,CACHr5G,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL6uI,IAAK,CAAC,IAAK,IAAK,IAChBj2B,IAAK,UACL9wG,IAAK,CAAC,KAAM,MAAO,QAErB+oI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCrvF,eAAgB,aAChBp6C,QAAS,6CACT0pI,mBAAoB,8KAEtBC,IAAK,CACH/1I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,eAERT,QAAS,8CAEX4pI,MAAO,CACLh2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,QACPhI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,OAAQ,QAEvBK,KAAM,0BACN4H,oBAAqB,gBACrB1I,QAAS,8CAEX6pI,IAAK,CACHj2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,MACPhI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,IAAK,KAAM,QAEnBT,QAAS,8CAEXgmI,IAAK,CACHrlI,MAAO,MACP/M,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,IAAK,MAAO,QAEpBT,QAAS,8CAEX8pI,IAAK,CACHnpI,MAAO,MACP/M,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,EAAG,EAAG,GACZ/mI,IAAK,CAAC,IAAK,KAAM,OAEnBT,QAAS,8CAEX+pI,IAAK,CACHn2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,MACPhI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEX+tG,SAAU,CACRn6G,SAAU,GACVizB,SAAS,EACTlmB,MAAO,WACPG,KAAM,6BACNnI,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,eAERT,QAAS,8CAEXguG,QAAS,CACPp6G,SAAU,GACVizB,SAAS,EACTlmB,MAAO,UACPhI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXkuG,UAAW,CACTt6G,SAAU,GACVizB,SAAS,EACTlmB,MAAO,YACPG,KAAM,8BACNnI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,kBAERT,QAAS,8CAEXouG,SAAU,CACRx6G,SAAU,GACVizB,SAAS,EACTlmB,MAAO,WACPG,KAAM,6BACNnI,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,eAERT,QAAS,8CAEXgqI,KAAM,CACJp2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,OACPhI,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,eAERT,QAAS,8CAEXiqI,MAAO,CACLr2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,QACPhI,MAAO,CACL44G,IAAK,OACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,eAERT,QAAS,8CAEXmuG,OAAQ,CACNv6G,SAAU,GACVizB,SAAS,EACTlmB,MAAO,OACPhI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,KAAM,MAAO,QAErBiI,oBAAqB,cACrB1I,QAAS,6CACTi/E,gBAAiB,6CACjBmjB,oBAAqB,8CAEvB8nC,OAAQ,CACNt2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,SACPG,KAAM,2BACNnI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,MAAO,OAAQ,QAEvBiI,oBAAqB,gBACrB1I,QAAS,6CACTi/E,gBAAiB,8CAEnBkrD,MAAO,CACLv2I,SAAU,GACVizB,SAAS,EACTlmB,MAAO,QACPG,KAAM,0BACNnI,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXoqI,MAAO,CACLx2I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,GAAI,KACf/mI,IAAK,CAAC,kBAERT,QAAS,8CAEXqqI,IAAK,CACHxjH,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,KAAM,MAAO,QAErB+oI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCzpI,QAAS,KACTo6C,eAAgB,cAElBsrF,KAAM,CACJ9xI,SAAU,EACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtB+oI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCrvF,eAAgB,aAChBp6C,QAAS,6CACT0pI,mBACE,8KAEJY,KAAM,CACJ12I,SAAU,EACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtB+oI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCrvF,eAAgB,aAChBp6C,QAAS,6CACT0pI,mBACE,8KAEJa,KAAM,CACJ32I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,SACLi2B,IAAK,CAAC,EAAG,GAAI,KACb/mI,IAAK,CAAC,MAAO,MAAO,QAEtB+oI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCrvF,eAAgB,aAChBp6C,QAAS,8CAEXwqI,KAAM,CACJ52I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,MAAO,MAAO,QAEtB+oI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCrvF,eAAgB,aAChBp6C,QAAS,8CAEXyqI,KAAM,CACJ72I,SAAU,EACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,IAAK,IAChB/mI,IAAK,CAAC,KAAM,MAAO,QAErB25C,eAAgB,aAChB1xC,oBAAqB,eACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,6CACT0pI,mBACE,8KAEJgB,KAAM,CACJ92I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,GAAI,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtB25C,eAAgB,aAChB1xC,oBAAqB,eACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,6CACT0pI,mBACE,8KAEJ3D,KAAM,CACJnyI,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,OAAQ,QAEvB25C,eAAgB,aAChB1xC,oBAAqB,eACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEX2qI,QAAS,CACP/2I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,GAAI,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtB25C,eAAgB,aAChBt5C,KAAM,4BACN4H,oBAAqB,eACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEXsgE,KAAM,CACJ1sE,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,GAAI,KACd/mI,IAAK,CAAC,MAAO,MAAO,QAEtB25C,eAAgB,aAChB1xC,oBAAqB,eACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEX4qI,IAAK,CACHh3I,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtBoqI,eAAgB,CAAC,SACjBzwF,eAAgB,aAChBt5C,KAAM,wBACN4H,oBAAqB,cACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEXytG,IAAK,CACH75G,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtBoqI,eAAgB,CAAC,SACjBzwF,eAAgB,aAChB1xC,oBAAqB,cACrB8gI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEXmmI,OAAQ,CACNvyI,SAAU,GACVizB,SAAS,EACTluB,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,GAAI,IAAK,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtB25C,eAAgB,aAChBovF,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCzpI,QAAS,8CAEX8qI,4BAA6B,CAC3Bl3I,SAAU,GACVizB,SAAS,EACTrsB,KAAM,WACN7B,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,EAAG,GACd/mI,IAAK,CAAC,IAAK,OAAQ,QAErB25C,eAAgB,eAGpBz6C,UAAW,CACTorI,SAAU,CACRjgI,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,WACPhI,MAAO,CACL6uI,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,OAAQ,SAGzBuqI,kBAAmB,CACjBnkH,SAAS,EACTlmB,MAAO,oBACPy5C,eAAgB,sBAMhBzhD,MAAO,CACL44G,IAAK,UACLi2B,IAAK,CAAC,IAAK,GAAI,KACf/mI,IAAK,CAAC,MAAO,MAAO,QAEtBwqI,UAAW,CAAC,OAAQ,sBAEtBC,iBAAkB,CAChBrkH,SAAS,EACTlmB,MAAO,kBACPhI,MAAO,CACL6uI,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,OAAQ,QAEvBwqI,UAAW,CAAC,OAAQ,0BAEtBE,QAAS,CACPrgI,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,UACPhI,MAAO,CACL6uI,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,MAAO,SAGxB2qI,IAAK,CACHzqI,MAAO,MACPkmB,SAAS,EACT/lB,KAAM,WACNnI,MAAO,CACL6uI,IAAK,CAAC,IAAK,GAAI,IACf/mI,IAAK,CAAC,MAAO,MAAO,SAGxB4qI,KAAM,CACJvgI,QAAQ,EACRnK,MAAO,OACPkmB,SAAS,EACTluB,MAAO,CACL6uI,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,MAAO,KAAM,SAGvB6qI,MAAO,CACL3qI,MAAO,QACPkmB,SAAS,GAEX0kH,KAAM,CACJ5qI,MAAO,UACPmK,QAAQ,EACR+b,SAAS,EACTluB,MAAO,CACL6uI,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,MAAO,MAAO,SAGxB+qI,OAAQ,CACN1gI,QAAQ,EACR+b,SAAS,EACT/lB,KAAM,WACNH,MAAO,UACPhI,MAAO,CACL6uI,IAAK,CAAC,IAAK,GAAI,KACf/mI,IAAK,CAAC,MAAO,MAAO,SAGxBgrI,MAAO,CACL3gI,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,QACPG,KAAM,YACNnI,MAAO,CACL6uI,IAAK,CAAC,IAAK,IAAK,KAChB/mI,IAAK,CAAC,MAAO,MAAO,SAGxBitG,KAAM,CACJ5iG,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,OACPG,KAAM,WACNnI,MAAO,CACL6uI,IAAK,CAAC,EAAG,IAAK,KACd/mI,IAAK,CAAC,MAAO,OAAQ,SAGzBqtG,OAAQ,CACNhjG,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,SACPhI,MAAO,CACL6uI,IAAK,CAAC,GAAI,GAAI,IACd/mI,IAAK,CAAC,IAAK,KAAM,SAGrBirI,QAAS,CACP5gI,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,UACPhI,MAAO,CACL6uI,IAAK,CAAC,EAAG,EAAG,GACZ/mI,IAAK,CAAC,IAAK,KAAM,QAGrBkrI,KAAM,CACJ7gI,QAAQ,EACR+b,SAAS,EACTlmB,MAAO,OACPG,KAAM,WACNnI,MAAO,CACL6uI,IAAK,CAAC,EAAG,EAAG,GACZ/mI,IAAK,CAAC,IAAK,KAAM,QAGrBoL,MAAO,CACLlL,MAAO,GACPkmB,SAAS,EACTluB,MAAO,CACL6uI,IAAK,CAAC,EAAG,GAAI,KACb/mI,IAAK,CAAC,MAAO,OAAQ,SAGzBqmB,KAAM,CACJnmB,MAAO,OACPkmB,SAAS,EACTluB,MAAO,CACL6uI,IAAK,CAAC,EAAG,GAAI,KACb/mI,IAAK,CAAC,MAAO,OAAQ,WAK7B4rB,SAAU,CACRsgB,QAAS,CACP5mB,iBAAkB,CAChBc,SAAS,EACT+5B,kBAAmB,CAAC,IAEtBnvC,OAAQ,CACNm6H,eAAe,EACfC,yBAAyB,GAE3BrtH,QAAS,CACPstH,UAAU,EACVC,iBAAkB,IAClBC,uBAAuB,EACvBC,yBAAyB,EACzBJ,yBAAyB,EAEzBK,4BAA6B,CAC3BC,UAAW,CACTtlH,SAAS,EACTgV,IAAKuwG,GACL5xI,KAAM,iBACN6xI,SAAU,cACVrsI,QAAS,8CAGXyrE,OAAQ,CACNwhC,IAAK,CACHpmF,SAAS,EACT4oC,WAAY,aACZ5zB,IAAKywG,GACLD,SAAU,mBACV7xI,KAAM,0BACNwF,QAAS,8CAGX0lI,KAAM,CACJ7+G,SAAS,EACTgV,IAAKywG,GACL78E,WAAY,iBACZj1D,KAAM,2BACN6xI,SAAU,0BACVrsI,QAAS,gDAKfusI,cAAe,CACb1lH,SAAS,EACTgV,IAAK2wG,GACLhyI,KAAM,kBACN6xI,SAAU,sBACVrsI,QAAS,+CAGbye,QAAS,CACPmtH,eAAe,EACfa,sBAAuB,IACvBC,4BAA6B,KAE/BC,gBAAiB,CACf9lH,SAAS,GAEXs8G,cAAe,CACbt8G,SAAS,EACTugE,eAAgB,CAAC,cAAe,eAAgB,iBAElDwlD,UAAW,CACT/lH,SAAS,EACTgV,IAAKgxG,MAIXv5H,QAAS,CACPstC,kBAAmB,CACjBspE,EAAG,CACD92D,QAAS,KACT54D,KAAM,WACNw2B,UAAW,MACXr4B,MAAO,UACP2d,SAAU,SACVhD,QAAS,UACT4G,SAAU,YACVowC,cAAe,IACf75B,UAAW,oBAEbq8G,GAAI,CACFtyI,KAAM,QACN7B,MAAO,UACPq4B,UAAW,MACX1a,SAAU,SACV4D,SAAU,YACVowC,cAAe,IACf75B,UAAW,0BAEbs8G,EAAG,CACDvyI,KAAM,UACN7B,MAAO,UACPq4B,UAAW,MACX1a,SAAU,SACV4D,SAAU,YACVowC,cAAe,IACf75B,UAAW,4BAEbu8G,EAAG,CACDxyI,KAAM,UACN7B,MAAO,UACPq4B,UAAW,MACX1a,SAAU,SACV4D,SAAU,YACVowC,cAAe,IACf75B,UAAW,4BAEbq1G,IAAK,CACH1yE,QAAS,KACT54D,KAAM,UACN7B,MAAO,UACP2a,QAAS,UACT0d,UAAW,QACX9W,SAAU,UACV5D,SAAU,UACVg0C,cAAe,IACf75B,UAAW,0BAEbw8G,EAAG,CACDzyI,KAAM,WACN7B,MAAO,UACPq4B,UAAW,MACXoiC,QAAS,SACT9/C,QAAS,UACTgD,SAAU,SACV4D,SAAU,YACVowC,cAAe,IACf75B,UAAW,6BAEby8G,KAAM,CACJ1yI,KAAM,UACNw2B,UAAW,MACXr4B,MAAO,UACP2d,SAAU,SACV4D,SAAU,YACVowC,cAAe,IACf75B,UAAW,oBAEb08G,MAAO,CACL3yI,KAAM,SACN7B,MAAO,UACPy6D,QAAS,SACT9/C,QAAS,UACT0d,UAAW,QACX9W,SAAU,UACV5D,SAAU,UACVg0C,cAAe,IACf75B,UAAW,yBAGf28G,UAAU,EACVj3G,gBAAiB,EACjBtO,cAAe,QACfggE,eAAgB,QAChBwlD,sBAAuB,EACvBC,gBAAiB,CAAC,EAAG,KACrB9iG,iBAAkB,QAClB+iG,sBAAuB,EACvBj3G,UAAW,CACTk3G,OAAQ,CACN32I,IAAKwhC,GAAIo1G,qBACT38G,IAAK,CACHm8G,EAAG,+BACHH,GAAI,8BACJ5iB,EAAG,gCACHgjB,KAAM,gCACNpH,IAAK,gCACLqH,MAAO,iCAGX7M,QAAS,CACPz5G,SAAS,EAEThwB,IAAKwhC,GAAIo1G,qBACTl1G,QAAS,CACPutG,IAAK,0BACLqH,MAAO,0CAETO,aAAc,CACZxjB,EAAG,IACH4b,IAAK,EACLmH,EAAG,MACHE,MAAO,GAETt8G,UAAW,CACTi1G,IAAK,2BAEPh1G,IAAK,CAMHo5F,EAAG,wCACH+iB,EAAG,wCACHnH,IAAK,wCACLqH,MAAO,0CAQXQ,MAAO,CACL7nG,UAAW,CACTokF,EAAG,iCACH4iB,GAAI,2CAGRz7G,IAAK,CACHxK,SAAS,EACT0K,kBAAmB,CAAC,IAEtBq8G,SAAU,CACR/mH,SAAS,EACThwB,IAAKwhC,GAAIw1G,uBACT/nG,UAAW,CACTggG,IAAK,qCACLqH,MAAO,yCAGXW,UAAW,CACTjnH,SAAS,EACTxyB,KAAM,CACJgkC,GAAI01G,wBACJ11G,GAAI21G,yBACJ31G,GAAI41G,yBACJ51G,GAAI61G,0BAENpoG,UAAW,CACTokF,EAAG,+BACHgjB,KAAM,+BACND,EAAG,sCACHH,GAAI,sCAENv0G,QAAS,CACP2xF,EAAG,uBACHgjB,KAAM,uBACND,EAAG,8BACHH,GAAI,+BAGRqB,SAAU,CACRn8G,SAAS,CACPnL,SAAQ,EACRukB,SAAS,kEACTmQ,SAAS,CACPC,aAAa,CACX,KACA,MACA,YACA,cACA,cACA,eACA,oBAKRqI,SAAU,CACRZ,UAAW,CACT,6CACA,8CAEFnd,UAAW,CACTod,UAAW,oCAEbkrF,KAAM,CACJlrF,UAAW,2DAEbmrF,QAAS,CACPnrF,UAAS,+lBA6BTorF,gBAAe,wrBAgCnBC,SAAU,CACR1nH,SAAS,EACT2nH,aAAa,EACbj9G,kBAAmB,CAAC,EAAG,IACvBk9G,gBAAiB,CAAC,YAAY,UAC9B3oG,UAAW,CACTmoB,OAAQ,mDAEVt7C,OAAQ,CACNs2B,OAAO,EACPuU,OAAQnlB,GAAIq2G,uBACZC,OAAQt2G,GAAIu2G,yBACZ1gF,MAAO,yCAIXlM,SAAU,CACRn7B,SAAS,EACT0K,kBAAmB,CAAC,GACpBs9G,WAAY,SAAC1iH,EAAWy0B,GACtB,IAAIkuF,EAAc,KAClB,OAAQ3iH,GACN,KAAK,EACH2iH,EAAc,UACd,MACF,QACEA,EAAcluF,EAAkBz0B,GAC5By0B,EAAkBz0B,GAAWlsB,cAC7B,UAGR,OAAO6uI,GAETn8H,OAAQ,CACNo8H,UAAWv2H,OAAO8V,SAASkK,OAC3BonG,QAAS,OACToP,MAAO,uCACPC,qBAAqB,EACrB37H,QAAS,cAKjBqlC,OAAQ,CACNs0D,IAAK,CACHlzD,OAAQ,CACNtsB,GAAI,MACJtuB,KAAM,MACNvB,MAAO,QAGX6vG,IAAK,CACH1zD,OAAQ,CACNtsB,GAAI,MACJtuB,KAAM,MACNvB,MAAO,SAIbsxI,cAAe,CACb,CACEroH,SAAS,EACT88B,IAAK,cACLh2B,MAAO,cACPnkB,KAAM,yBACNqR,MAAO,2BACPhgB,KAAM,kCACNkW,MAAO,mCACPxY,KAAM,+CAGVyvI,MAAO,CACL36B,MAAO,CACLxmF,SAAS,EACT/lB,KAAM,SACNH,MAAO,UACP+rE,MAAO,UACPyiE,aAAc9gC,EACdztD,kBAAmB,CAAC,GACpB6rD,KAAM,gEACNx5G,MAAO,CACLsQ,gBAAiB,CACf+8D,KAAM,CACJmuC,UAAWuW,GACX34F,SAAU,CACRwP,IAAKuzG,GACLx7I,SAAU,GACV4G,KAAM,UACNuwD,UAAW,SACXh3B,YAAa,OACb/zB,QAAS,8CAEX8lH,eAAgB,CACd/6D,UAAW,SACXlvB,IAAKwzG,GACL70I,KAAM,wBACNwF,QAAS,8CAEX67B,IAAKykC,EACL9lE,KAAM,OACNvE,MAAO,OACPrC,SAAU,GACVizB,SAAS,EACTlmB,MAAO,OACPG,KAAM,yBACNd,QAAS,6CACTokH,SACE,4EAEJuhB,IAAK,CACHl3B,UAAW8R,GACXl0F,SAAU,CACRz4B,SAAU,GACV4G,KAAM,YACNsoH,cAAe,EACfjnF,IAAKyzG,GACLrsB,aAAc,IACdlvF,YAAa,OACb/zB,QAAS,8CAEXxF,KAAM,MACNvE,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAK0zG,GACL5uI,MAAO,8BACPG,KAAM,iCACNd,QAAS,6CACTokH,SACE,mFAKVorB,aAAc,CACZ3oH,SAAS,EACT/lB,KAAM,SACNH,MAAO,UACPwuI,aAAc9gC,EACdztD,kBAAmB,CAAC,KACpB8rB,MAAO,kBACP+/B,KAAM,yDACNx5G,MAAO,CACLsQ,gBAAiB,CACfoiI,IAAK,CACHl3B,UAAW8R,GACXl0F,SAAU,CACRz4B,SAAU,GACV4G,KAAM,YACNsoH,cAAe,EACfjnF,IAAKyzG,GACLrsB,aAAc,GACdlvF,YAAa,OACb/zB,QAAS,8CAEXxF,KAAM,MACNvE,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAK0zG,GACL5uI,MAAO,+BACPG,KAAM,iCACNd,QAAS,6CACTokH,SAAU,2FAKlBqrB,YAAa,CACX5oH,SAAS,EACT/lB,KAAM,WACN4rE,MAAO,WACP/rE,MAAO,WACPigD,kBAAmB,CAAC,GACpB6rD,KAAM,0DACN0iC,aAAcnlB,GACd/2H,MAAO,CACLsQ,gBAAiB,CACfgiI,aAAc,CACZ3xI,SAAU,GACVioC,IAAK6zG,GACLl1I,KAAM,eACNvE,MAAO,eAEP+J,QAAS,6CACTqsH,YAAa,6CAEbl9C,WAAY,CACV89B,IAAK,CACHpxE,IAAKq2C,GACL13E,KAAM,MACNvE,MAAO,MACPrC,SAAU,GAEVoM,QAAS,gDAKfylI,cAAe,CACb7xI,SAAU,GACVioC,IAAK6zG,GACLl1I,KAAM,gBACNvE,MAAO,gBAEP+J,QAAS,6CACTqsH,YAAa,6CACbl9C,WAAY,CACV89B,IAAK,CACHpxE,IAAKq2C,GACL13E,KAAM,MACNvE,MAAO,MACPrC,SAAU,GAEVoM,QAAS,kDAOnBotE,YAAa,CAEXhjB,WAAY,SAEZ4kB,2BAA4B,QAC5B3B,aAAc,CACZxxC,IAAK8zG,GACLn1I,KAAM,yBAENwF,QAAS,8CAEX6sE,cAAe,CACbhxC,IAAK+zG,GACLp1I,KAAM,uBAENwF,QAAS,gDAIf6vI,WAAY,CACVhpH,SAAS,EACT++E,SAAS,EACT9kG,KAAM,cACNH,MAAO,cACPigD,kBAAmB,CAAC,GACpB8rB,MAAO,uBACPyiE,aAAc/S,GACd3vB,KAAM,qJACNx5G,MAAO,CACLq5B,UAAW,CACT6wG,qBAAsB,CACpBthG,IAAKi0G,GACL9vI,QAAS,iDAKjB+vI,cAAe,CACblpH,SAAS,EACT6lD,MAAO,iBACP9rB,kBAAmB,CAAC,EAAG,KACvBuuF,aAAcjY,GACdnmH,MAAO,+BACPpQ,MAAO,iCACP8rG,KAAM,2FACNx5G,MAAO,CACLq5B,UAAW,CACT6rG,eAAgB,CACdt8F,IAAKs8F,GACL39H,KAAM,iBAENwF,QAAS,8CAEXu4H,eAAgB,CACd18F,IAAK08F,GACL/9H,KAAM,iBAENwF,QAAS,8CAEXo4H,eAAgB,CACdv8F,IAAKu8F,GACL59H,KAAM,iBACNwF,QAAS,8CAEX0mI,iBAAkB,CAChBlsI,KAAM,mBACNwF,QAAS,8CAEXgwI,YAAa,CACXx1I,KAAM,cACNwF,QAAS,+CAGb83H,cAAc,CACZC,uBAAwB,sEAE1Bx0H,gBAAiB,CAmBf6mI,MAAO,CACL5vI,KAAM,QACNvE,MAAO,QACPrC,SAAU,GACVizB,SAAS,EACT+wG,WAAW,EACXhxF,WAAY,SACZT,UAAW,CACTtK,IAAKq2C,GACL13E,KAAM,QACNwF,QAAS,8CAEXkmC,WAAY,CACVrK,IAAKo0G,GACLz1I,KAAM,aACNwF,QAAS,+CAGb0qI,KAAM,CACJlwI,KAAM,OACNvE,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACT+f,WAAY,MACZT,UAAU,CACR3rC,KAAK,MACLwF,QAAQ,8CAEVkmC,WAAY,CACVrK,IAAKo0G,GACLz1I,KAAM,YACNwF,QAAS,+CAuBbitG,IAAK,CACHzyG,KAAM,MACNvE,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACT+wG,WAAW,EACXhxF,WAAY,MACZT,UAAW,CACTtK,IAAKoxE,EACLzyG,KAAM,MAENwF,QAAS,8CAEXkmC,WAAY,CACVrK,IAAKo0G,GACLz1I,KAAM,WAENwF,QAAS,+CAGb0lI,KAAM,CACJ9xI,SAAU,EACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT+f,WAAY,MACZT,UAAW,CACTtK,IAAK6pG,GACLlrI,KAAM,OAENwF,QAAS,8CAEXkmC,WAAY,CACVrK,IAAKo0G,GACLz1I,KAAM,YAENwF,QAAS,+CAGbsgE,KAAM,CACJ1sE,SAAU,GACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT+f,WAAY,MACZT,UAAW,CACTtK,IAAKykC,EACL9lE,KAAM,OACNwF,QAAS,8CAEXkmC,WAAY,CACVrK,IAAKo0G,GACLz1I,KAAM,YACNwF,QAAS,kDAyBnBkwI,WAAY,CACVrpH,SAAS,EACTlmB,MAAO,cACP+rE,MAAO,cACP9rB,kBAAmB,CAAC,EAAG,IACvBuuF,aAAc1gB,GACd19G,MAAO,yBACP07F,KAAM,iEACNx5G,MAAO,CACLwwH,cAAe,CACbjpH,KAAM,MACNvE,MAAO,MACPrC,SAAU,GACV8vH,WAAY,WAEdC,aAAc,CACZ9nF,IAAK6uG,GACLlwI,KAAM,OACN5G,SAAU,GACVqC,MAAO,OACP2tH,aAAc,WACd5jH,QAAS,gDAIfmwI,cAAe,CACbtpH,SAAS,EACT+5B,kBAAmB,CAAC,GACpBjgD,MAAO,iBACP+rE,MAAO,iBACPyiE,aAAc5V,GACdxoH,MAAO,kCACP07F,KAAM,8DACN/gC,aAAc,6DACdz4E,MAAO,CACLo5B,SAAU,CACRz4B,SAAU,GACVioC,IAAKu0G,GACL51I,KAAM,YACNwF,QAAS,8CAEX+qE,UAAW,CACT,CACEK,WAAY,MACZO,oBAAqB,WACrBF,OAAQ,CACN4kE,MAAO,CACLx0G,IAAKy0G,GACL91I,KAAM,oCACNwF,QAAS,6CACT46H,aAAc,CACZhnI,SAAU,GACVioC,IAAK00G,GACL/1I,KAAM,wCACNwF,QAAS,+CAGbwwI,QAAS,CACP30G,IAAKy0G,GACL91I,KAAM,sCACNwF,QAAS,6CACT46H,aAAc,CACZhnI,SAAU,GACVioC,IAAK00G,GACL/1I,KAAM,0CACNwF,QAAS,oDAQvB8wE,aAAc,CACZjqD,SAAS,EACT/lB,KAAM,UACN2vI,cAAc,EACd7a,gBAAgB,EAChBh1E,kBAAmB,CAAC,GACpB8rB,MAAO,gBACP/rE,MAAO,gBACPwuI,aAAc7a,GACd7nB,KAAM,6FACNx5G,MAAO,CACLsQ,gBAAiB,CACfgiI,aAAc,CACZ3xI,SAAU,GACVwhC,SAAU,OACVpE,UAAW,MACXimG,YAAa,IACbloG,kBAAmB,CACjB8M,IAAK60G,GACLl2I,KAAM,qBACNwF,QAAS,6CAETyzB,UAAW,CACT,CACEj5B,KAAM,UACNi6H,WAAW,EACX9zH,MAAO,UACPq0D,WAAY,uBAKpBwwE,cAAe,CACb5xI,SAAU,EACVwhC,SAAU,OACVpE,UAAW,OACXimG,YAAa,IACbloG,kBAAmB,CACjB8M,IAAK60G,GACLl2I,KAAM,sBACNwF,QAAS,6CAETyzB,UAAW,CACT,CACEj5B,KAAM,UACNmG,MAAO,UACP8zH,WAAW,EACXz/D,WAAY,0CAQ1B9lC,eAAgB,CACdrI,SAAS,EACT4pH,cAAc,EACd3vI,KAAM,eACN80H,gBAAgB,EAChBh1E,kBAAmB,CAAC,GACpB8rB,MAAO,kBACP/rE,MAAO,kBACPwuI,aAAclT,GACdxvB,KAAM,8FACNx5G,MAAO,CACLsQ,gBAAiB,CACfgiI,aAAc,CACZ3xI,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,MACXx2B,KAAM,iBACNvE,MAAO,iBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,wBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdgrI,cAAe,CACb5xI,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,kBACNvE,MAAO,kBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,yBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdirI,cAAe,CACb7xI,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,kBACNvE,MAAO,kBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,yBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdq2I,cAAe,CACbj9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,kBACNvE,MAAO,kBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,yBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKds2I,cAAe,CACbl9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,kBACNvE,MAAO,kBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,yBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdu2I,cAAe,CACbn9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,kBACNvE,MAAO,kBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,yBACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdw2I,YAAa,CACXp9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,MACXx2B,KAAM,gBACNvE,MAAO,gBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,4BACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKdy2I,aAAc,CACZr9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,iBACNvE,MAAO,iBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,6BACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,cAKd02I,aAAc,CACZt9I,SAAU,GACVioC,IAAK80G,GACLv7G,SAAU,OACVpE,UAAW,OACXx2B,KAAM,iBACNvE,MAAO,iBACP+J,QAAS,6CACT+uB,kBAAmB,CACjB8M,IAAK+0G,GACLp2I,KAAM,6BACNwF,QAAS,6CACTyzB,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,iBAQpB22I,eAAgB,CACdtqH,SAAS,EACT/lB,KAAM,YACN4rE,MAAO,UACP9rB,kBAAmB,CAAC,GACpBjgD,MAAO,kBACP8rG,KAAM,yEACN0iC,aAAcrT,GACd7oI,MAAO,CACL87B,kBAAmB,CACjBv0B,KAAM,kBACNqhC,IAAKu1G,GACLpxI,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,uBAIZ+tB,oBAAqB,CAAC,OAAQ,QAC9BhlB,gBAAiB,CACf8tI,UAAW,CACTz9I,SAAU,GACVizB,SAAS,EACT1wB,SAAU,OACV66B,UAAW,MACX6K,IAAKy1G,GACLr7I,MAAO,aACP6K,KAAM,4BACNm1H,gBAAiB,oBACjBj2H,QAAS,8CAEXuxI,KAAM,CACJ39I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,OACP+6B,UAAW,MACX76B,SAAU,WACV8/H,gBAAiB,4BACjBj2H,QAAS,8CAEXwxI,KAAM,CACJ59I,SAAU,GACVizB,SAAS,EACT5wB,MAAO,OACP+6B,UAAW,MACX76B,SAAU,UACV8/H,gBAAiB,2BACjBj2H,QAAS,8CAEXyxI,KAAM,CACJ79I,SAAU,GACVizB,SAAS,EACT5wB,MAAO,OACPE,SAAU,OACV66B,UAAW,MACXilG,gBAAiB,wBACjBj2H,QAAS,8CAEX0xI,OAAQ,CACN99I,SAAU,GACVizB,SAAS,EACT5wB,MAAO,SACP4lC,IAAK61G,GAAO71G,IACZ7K,UAAW,MACX76B,SAAU,QACV2K,KAAM,yBACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEX2xI,OAAQ,CACN/9I,SAAU,GACVizB,SAAS,EACT5wB,MAAO,SACP+6B,UAAW,MACX6K,IAAK61G,GAAO71G,IACZ1lC,SAAU,QACV2K,KAAM,yBACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEX4xI,WAAY,CACVh+I,SAAU,GACVizB,SAAS,EACT1wB,SAAU,OACV0lC,IAAKy1G,GACLtgH,UAAW,OACX/6B,MAAO,cACP6K,KAAM,6BACNm1H,gBAAiB,oBACjBj2H,QAAS,8CAEX6xI,MAAO,CACLj+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,WACV8/H,gBAAiB,4BACjBj2H,QAAS,8CAEX8xI,MAAO,CACLl+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,UACV8/H,gBAAiB,2BACjBj2H,QAAS,8CAEX+xI,MAAO,CACLn+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACPE,SAAU,OACV66B,UAAW,OACXilG,gBAAiB,wBACjBj2H,QAAS,8CAEXgyI,QAAS,CACPp+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,UACPE,SAAU,QACV0lC,IAAKm2G,GAAQn2G,IACb7K,UAAW,OACXlwB,KAAM,0BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEXiyI,QAAS,CACPr+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,UACPE,SAAU,QACV0lC,IAAKm2G,GAAQn2G,IACb7K,UAAW,OACXlwB,KAAM,0BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEXkyI,MAAO,CACLt+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,WACV8/H,gBAAiB,4BACjBj2H,QAAS,8CAEXmyI,MAAO,CACLv+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,UACV8/H,gBAAiB,2BACjBj2H,QAAS,8CAEXoyI,MAAO,CACLx+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACPE,SAAU,OACV66B,UAAW,OACXilG,gBAAiB,wBACjBj2H,QAAS,8CAEXqyI,QAAS,CACPz+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,UACP4lC,IAAKw2G,GAAQx2G,IACb1lC,SAAU,QACV66B,UAAW,OACXlwB,KAAM,0BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEXsyI,QAAS,CACP1+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,UACP4lC,IAAKw2G,GAAQx2G,IACb1lC,SAAU,QACV66B,UAAW,OACXlwB,KAAM,0BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEXuyI,WAAY,CACV3+I,SAAU,GACVizB,SAAS,EACTgV,IAAKy1G,GACLn7I,SAAU,OACV66B,UAAW,OACX/6B,MAAO,mBACPsyB,oBAAqB,CAAC,QACtB0tG,gBAAiB,oBACjBn1H,KAAM,kCACNd,QAAS,8CAEXwyI,MAAO,CACL5+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACPE,SAAU,OACV66B,UAAW,OACXilG,gBAAiB,wBACjBj2H,QAAS,8CAEXyyI,QAAS,CACP7+I,SAAU,GACVizB,SAAS,EACT5wB,MAAO,UACP4lC,IAAK42G,GACLzhH,UAAW,OACX76B,SAAU,QACVoyB,oBAAqB,CAAC,QACtBznB,KAAM,4BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEX0yI,WAAY,CACV9+I,SAAU,GACVizB,SAAS,EACTgV,IAAKy1G,GACLn7I,SAAU,OACV66B,UAAW,OACX/6B,MAAO,mBACPsyB,oBAAqB,CAAC,QACtB0tG,gBAAiB,oBACjBn1H,KAAM,kCACNd,QAAS,8CAEX2yI,MAAO,CACL/+I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACPE,SAAU,OACV66B,UAAW,OACXilG,gBAAiB,wBACjBj2H,QAAS,8CAEX4yI,QAAS,CACPh/I,SAAU,GACVizB,SAAS,EACTgV,IAAK+2G,GACL38I,MAAO,UACP+6B,UAAW,OACX76B,SAAU,QACV2K,KAAM,4BACNm1H,gBAAiB,yBACjBj2H,QAAS,8CAEX6yI,MAAO,CACLj/I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,WACV8/H,gBAAiB,4BACjBj2H,QAAS,8CAEX8yI,MAAO,CACLl/I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACP+6B,UAAW,OACX76B,SAAU,UACV8/H,gBAAiB,2BACjBj2H,QAAS,8CAEX+yI,MAAO,CACLn/I,SAAU,EACVizB,SAAS,EACT5wB,MAAO,QACPE,SAAU,OACV66B,UAAW,OACXilG,gBAAiB,wBACjBj2H,QAAS,iDAKjBgzI,SAAU,CACRnsH,SAAS,EACT6lD,MAAO,YACP/rE,MAAO,YACPigD,kBAAmB,CAAC,GACpB9/C,KAAM,mBACN2rG,KAAM,oEACN0iC,aAAcpoC,IACd35B,YAAa,CACX07B,YAAY,EACZsC,eAAe,IAGnB6nC,UAAW,CACTpsH,SAAS,EACT/lB,KAAM,OACN4rE,MAAO,aACP/rE,MAAO,aACPigD,kBAAmB,CAAC,GACpB6rD,KAAM,kDACN0iC,aAAcxvB,GACd1sH,MAAO,CACLsQ,gBAAiB,CACfomI,IAAK,CAAE1zI,MAAO,OACdg3G,IAAK,CAAEh3G,MAAO,OACdu0I,KAAM,CAAEv0I,MAAO,QACfs0I,KAAM,CAAEt0I,MAAO,QACfyvI,KAAM,CAAEzvI,MAAO,QACfi9I,KAAM,CAAEj9I,MAAO,QACfq0I,KAAM,CAAEr0I,MAAO,QACfw0I,KAAM,CAAEx0I,MAAO,QACfy0I,KAAM,CAAEz0I,MAAO,QACfk9I,KAAM,CAAEl9I,MAAO,QACfm9I,KAAM,CAAEn9I,MAAO,QACfo9I,OAAQ,CAAEp9I,MAAO,QACjBq9I,IAAK,CAAEr9I,MAAO,OACds9I,MAAO,CAAEt9I,MAAO,SAChBu9I,KAAM,CAAEv9I,MAAO,QACfw9I,IAAK,CAAEx9I,MAAO,OACdy9I,IAAK,CAAEz9I,MAAO,OACd09I,KAAM,CAAE19I,MAAO,QACf29I,IAAK,CAAE39I,MAAO,OACd49I,IAAK,CAAE59I,MAAO,OACd69I,IAAK,CAAE79I,MAAO,OACd89I,IAAK,CAAE99I,MAAO,OACd+9I,IAAK,CAAE/9I,MAAO,OACdg+I,IAAK,CAAEh+I,MAAO,OACdi+I,IAAK,CAAEj+I,MAAO,OACdk+I,IAAK,CAAEl+I,MAAO,OACdm+I,IAAK,CAAEn+I,MAAO,OACdo+I,IAAK,CAAEp+I,MAAO,OACdq+I,IAAK,CAAEr+I,MAAO,OACds+I,IAAK,CAAEt+I,MAAO,OACdu+I,MAAO,CAAEv+I,MAAO,SAChBw+I,IAAK,CAAEx+I,MAAO,OACdy+I,IAAK,CAAEz+I,MAAO,OACd0+I,IAAK,CAAE1+I,MAAO,OACd2+I,IAAK,CAAE3+I,MAAO,OACd4+I,IAAK,CAAE5+I,MAAO,OACd6+I,KAAM,CAAE7+I,MAAO,QACf8+I,IAAK,CAAE9+I,MAAO,OACd++I,IAAK,CAAE/+I,MAAO,OACdg/I,KAAM,CAAEh/I,MAAO,QACfi/I,KAAM,CAAEj/I,MAAO,QACfk/I,KAAM,CAAEl/I,MAAO,QACfm/I,IAAK,CAAEn/I,MAAO,OACdo/I,KAAM,CAAEp/I,MAAO,QACfq/I,IAAK,CAAEr/I,MAAO,OACds/I,IAAK,CAAEt/I,MAAO,OACdu/I,IAAK,CAAEv/I,MAAO,OACdw/I,IAAK,CAAEx/I,MAAO,OACdy/I,IAAK,CAAEz/I,MAAO,OACd0/I,IAAK,CAAE1/I,MAAO,OACd2/I,IAAK,CAAE3/I,MAAO,OACd4/I,MAAO,CAAE5/I,MAAO,SAChB6/I,KAAM,CAAE7/I,MAAO,QACf8/I,IAAK,CAAE9/I,MAAO,OACd+/I,IAAK,CAAE//I,MAAO,OACdggJ,IAAK,CAAEhgJ,MAAO,OACdigJ,IAAK,CAAEjgJ,MAAO,OACdkgJ,KAAM,CAAElgJ,MAAO,QACfmgJ,IAAK,CAAEngJ,MAAO,OACdogJ,IAAK,CAAEpgJ,MAAO,OACdqgJ,KAAM,CAAErgJ,MAAO,QACfsgJ,KAAM,CAAEtgJ,MAAO,QACfugJ,GAAI,CAAEvgJ,MAAO,MACbwgJ,IAAK,CAAExgJ,MAAO,OACdygJ,IAAK,CAAEzgJ,MAAO,OACd0gJ,IAAK,CAAE1gJ,MAAO,OACd2gJ,IAAK,CAAE3gJ,MAAO,OACd4gJ,IAAK,CAAE5gJ,MAAO,OACd6gJ,IAAK,CAAE7gJ,MAAO,OACd8gJ,IAAK,CAAE9gJ,MAAO,OACd+gJ,IAAK,CAAE/gJ,MAAO,OACdghJ,IAAK,CAAEhhJ,MAAO,OACdihJ,IAAK,CAAEjhJ,MAAO,OACdkhJ,IAAK,CAAElhJ,MAAO,OACdmhJ,IAAK,CAAEnhJ,MAAO,OACdohJ,MAAO,CAAEphJ,MAAO,SAChBqhJ,IAAK,CAAErhJ,MAAO,OACdshJ,IAAK,CAAEthJ,MAAO,OACduhJ,IAAK,CAAEvhJ,MAAO,OACdwhJ,KAAM,CAAExhJ,MAAO,QACfyhJ,IAAK,CAAEzhJ,MAAO,OACd0hJ,IAAK,CAAE1hJ,MAAO,OACd2hJ,IAAK,CAAE3hJ,MAAO,SAGlBm3E,YAAa,KAGjByqE,UAAW,CACTpI,YAAa,CACX9uI,MAAO,eACPoQ,MAAO,oCACP+mI,UAAW,2CAEb3H,cAAe,CACbxvI,MAAO,iBACPoQ,MAAO,kCACP+mI,UAAW,oCAGfvvC,SAAU,CAER57D,QAAS,CACPorG,KAAM,CACJl2F,gBAAiB,KACjB8nD,iBAAiB,EACjB12G,MAAO,CACLs4G,SAAU,kBACVL,QAAS,iBAGb8sC,KAAM,CACJn2F,gBAAiB,KACjB8nD,iBAAiB,EACjB12G,MAAO,CACLs4G,SAAU,wBACVL,QAAS,gBAGb+sC,OAAQ,CACNp2F,gBAAiB,gBACjB8nD,iBAAiB,EACjB12G,MAAO,CACLs4G,SAAU,6BACVL,QAAS,kBACTl6F,WAAY,CACVuQ,QAAS,CAAC,IAAK,WAKvB+U,UAAW,CACT4hH,KAAM,CACJrxH,SAAS,EACT0kF,SAAU,2BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAY,gBACZtyB,iBAAkB,CAAC,QACnBc,mBAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/DZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCe,gBAAiB,GACjBnyE,IAAK,OACL+/G,UAAW,CACTnU,KAAM,CACJoU,UAAW,kBAEbC,KAAM,CACJD,UAAW,mBAGfpvC,QAAS,SAAAh2G,GACP,IAAM+tB,EAAO,GACb,GAAI/tB,EAAM+zG,gBAAkB/zG,EAAM+zG,eAChC,OAAQ/zG,EAAM+zG,gBACZ,IAAK,OACHhmF,EAAK66G,WAAL,8BACA,MACF,IAAK,OACH76G,EAAK66G,WAAL,4BAMN,OAAO76G,GAETwnF,cAAe,SAACv1G,EAAOsN,EAAegnG,GACpC,IAAMlvE,EAAM93B,EAAcgoG,SAASjyE,UAAU4hH,KAAK7/G,IAE5CkgH,EADYh4I,EAAcgoG,SAASjyE,UAAU4hH,KAAKE,UAAU//G,GAC9BggH,UAG9B1lI,EAAS,CACb6lI,KAAI,YAAAhiJ,OAAcvD,EAAMwQ,SACxBg1I,aAAclxC,EAAU5qG,cAAgB4qG,EAAU5qG,cAAgB1J,EAAMiD,YAAYgiJ,MAAQjlJ,EAAMiD,YAAYgiJ,KAAKO,aAAexlJ,EAAMiD,YAAYgiJ,KAAKO,aAAexlJ,EAAM0J,cAC9K47I,oBACAG,YAAan4I,EAAc0+C,SAI7B,MACE,GAAAzoD,OAXU,oCAWV,KACApC,OAAOC,KAAKse,GACT3c,IACC,SAAA2iJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjmI,EAAOgmI,MAE9Dj4I,KAAK,MAGZ+nG,OAAQ,SAACd,EAAY/iF,EAAQ3xB,EAAOsN,GAElC,IADmBwhB,SAASC,eAAe,eAC1B,CACf,IAAM62H,EAAY92H,SAASjtB,cAAc,OA2BzC,GA1BA+jJ,EAAU9tH,UAAV,68BAAAv0B,OASemxG,EATf,2dAAAnxG,OAgBsB+J,EAAcgoG,SAASjyE,UAAU4hH,KAAK3sC,SAhB5D,oQAuBAxpF,SAASgxD,KAAKC,YAAY6lE,IAGrB92H,SAASC,eAAe,oBAAqB,CAChD,IAAM82H,EAAY/2H,SAASjtB,cAAc,SACzCgkJ,EAAUrjJ,GAAK,mBACfqjJ,EAAU/tH,UAAV,4aAaAhJ,SAASgxD,KAAKC,YAAY8lE,OAKlCC,KAAM,CACJlyH,SAAS,EACT0kF,SAAU,2BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAU,0BACVtyB,iBAAkB,CAAC,OAAQ,QAC3ByvC,MAAO,CACLzgJ,KAAM,iBACNI,MAAO,OACP4rB,QAAS,WAEXklF,gBAAiB,CAAC,MAAO,MAAO,QAChCY,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFpB,QAAS,SAAAh2G,GACP,IAAM+tB,EAAO,GACb,OAAQ/tB,EAAM+zG,gBACZ,IAAK,OACHhmF,EAAKqpF,mBAAqB,CAAC,MAAO,OAClCrpF,EAAK66G,WAAL,qBACA,MACF,IAAK,OACH76G,EAAKqpF,mBAAqB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFrpF,EAAK66G,WAAL,gBAKJ,OAAO76G,GAETwnF,cAAe,SAACv1G,EAAOsN,EAAegnG,GACpC,MAAO,CACL0xC,YAAa,OACb9sF,YAAal5D,EAAMwQ,QACnBy1I,WAAY7gH,GAAI8gH,mBAChB9wC,QAASp1G,EAAM4C,SAAW,SAAW,UACrCujJ,YAAW,GAAA5iJ,OAAK+J,EAAc0+C,QAAnB,0BACXo6F,UAAW9xC,EAAU5qG,cACjB4qG,EAAU5qG,cACV1J,EAAMiD,YAAY6iJ,MAAQ9lJ,EAAMiD,YAAY6iJ,KAAKM,UAC/CpmJ,EAAMiD,YAAY6iJ,KAAKM,UACvBpmJ,EAAM0J,gBAGhB8rG,OAAQ,SAACd,EAAY/iF,EAAQ3xB,EAAOsN,GAClC,IAAI+4I,KAAe3xC,GAChBn7C,GAAG,IADN,eAAA1oD,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KACW,SAAAuQ,EAAM4zG,GAAN,IAAAt1H,EAAAkV,EAAA7C,EAAA,OAAAqgB,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OACD1R,EAAgB,IAAII,IAAcD,GACpC+U,EAAgB,KAChB7C,EAAc,KAHXuP,EAAAwS,GAKCkhG,EAAM50H,KALPkhB,EAAAlQ,KAMA,wBANAkQ,EAAAwS,GAAA,yBAQHj0B,EAAMq1G,oBARH5zF,EAAAlQ,KAAA,EAUmBvR,EAAM+yD,mBAVzB,cAUHh+C,EAVG0M,EAAApN,KAYHnC,EAAcijH,EAAMmxB,QAAQC,SAASr0I,YACrCA,EAAcrS,EACX8R,MAAMO,EAAYmS,YAClBD,IACCvkB,EAAc8R,MACZG,KAAKwwD,IAAI,GAAItwD,SAAS+C,IAAgBsP,aAGzCA,WAGHkB,OAAOuvF,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAAzxG,OAAK2O,EAAL,KAAA3O,OAAoBvD,EAAM0J,cAA1B,2BAChBurG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YA5BR3zF,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,qCAAAf,EAAAhP,SAAA8O,EAAAzhB,SADX,gBAAAwiB,GAAA,OAAAzR,EAAA8B,MAAA7S,KAAA8S,YAAA,IAqCG4zI,SAGPC,QAAS,CACP7yH,SAAS,EACT0kF,SAAU,8BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAU,+BACVtyB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAChEe,gBAAiB,CAAEmvC,0CAA2C,IAC9DthH,IAAK,OACL2gH,MAAO,CACLzgJ,KAAM,UACNgsB,QAAS,WAEX6zH,UAAW,CACTnU,KAAM,CACJzmF,OAAQnlB,GAAIuhH,2BACZvrH,IAAK,8BAEPiqH,KAAM,CACJ96F,OAAQnlB,GAAIwhH,2BACZxrH,IAAK,+BAGT46E,QAAS,SAAAh2G,GACP,IAAM+tB,EAAO,GAEPgmF,EAAiB/zG,EAAM+zG,gBAAkB/zG,EAAM+zG,eACjDj/B,EAAyB,SAAnBi/B,EAA4B,OAAS,OAE/C,GAAI/zG,EAAMi0G,iBAAmBj0G,EAAMi0G,gBAAgBtpG,MACjD,OAAQ3K,EAAMi0G,gBAAgBtpG,MAAMgL,eAClC,IAAK,MACHoY,EAAKg4H,MAAQ,CACXzgJ,KAAM,UACNgsB,QAAS,WAEXvD,EAAK66G,WAAL,KAAArlI,OAAuBuxE,EAAvB,oBACA,MACF,IAAK,MACHA,EAAM,OACN/mD,EAAKg4H,MAAQ,CACXzgJ,KAAM,UACNgsB,QAAS,WAEXvD,EAAK66G,WAAL,KAAArlI,OAAuBuxE,EAAvB,oBACA,MACF,IAAK,MAED/mD,EAAKg4H,MADgB,SAAnBhyC,EACW,CACXzuG,KAAM,OACNI,MAAO,WACP4rB,QAAS,WAGE,CACXhsB,KAAM,UACNgsB,QAAS,WAGbvD,EAAK66G,WAAL,KAAArlI,OAAuBuxE,EAAvB,oBAMN,OAAO/mD,GAETwnF,cAAe,SAACv1G,EAAOsN,EAAegnG,GACpC,IAAMlvE,EAAM93B,EAAcgoG,SAASjyE,UAAUojH,QAAQrhH,IAC/C+/G,EACJ73I,EAAcgoG,SAASjyE,UAAUojH,QAAQtB,UAAU//G,GAEjDyhH,EAAe,KAEnB,GAAIvyC,EAAUL,iBAAmBK,EAAUL,gBAAgBtpG,MACzD,OAAQ2pG,EAAUL,gBAAgBtpG,MAAMgL,eACtC,IAAK,MACHkxI,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,QACEA,EAAe,MAKrB,IAAIC,EAAqBxyC,EAAU5qG,cAC/B4qG,EAAU5qG,cAAcsD,cACxBhN,EAAMiD,YAAYwjJ,SAClBzmJ,EAAMiD,YAAYwjJ,QAAQM,aACxB/mJ,EAAMiD,YAAYwjJ,QAAQM,aAC1B/mJ,EAAM0J,cACZo9I,EAAqBA,EAAmBnxI,cAOxC,MAAO,CACL40C,OANa46F,EAAU56F,OAOvBu8F,qBACAE,cAPoBhnJ,EAAMwQ,QAQ1Bq2I,eACAI,kBARwBjnJ,EAAMwQ,QAS9B02I,0BAR+B,EAS/BnmJ,MAAO,OACPoE,OAAQ,SAIZqwG,OAAQ,SAACd,EAAY/iF,EAAQ3xB,EAAOsN,GAClC,GAAIiY,OAAO4hI,cAAe,CAExB,IADsBr4H,SAASC,eAAe,kBAC1B,CAClB,IAAM62H,EAAY92H,SAASjtB,cAAc,OAmBzC,GAlBA+jJ,EAAU9tH,UAAV,szCAAAv0B,OAQsB+J,EAAcgoG,SAASjyE,UAAUojH,QAAQnuC,SAR/D,iQAeAxpF,SAASgxD,KAAKC,YAAY6lE,IAGrB92H,SAASC,eAAe,uBAAwB,CACnD,IAAMq4H,EAAet4H,SAASjtB,cAAc,SAC5CulJ,EAAa5kJ,GAAK,sBAClB4kJ,EAAatvH,UAAb,6cAaAhJ,SAASgxD,KAAKC,YAAYqnE,IAI9B7hI,OAAO4hI,cAAc3xC,OAAOd,EAAY,+BAI9C2yC,QAAS,CACPzzH,SAAS,EACT0kF,SAAU,8BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAY,eACZtyB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCpxE,IAAK,OACL+/G,UAAW,CACTnU,KAAM,CACJ51G,IAAK,iCACLmvB,OAAQnlB,GAAIkiH,4BAEdjC,KAAM,CACJjqH,IAAK,yBACLmvB,OAAQnlB,GAAImiH,6BAGhBvxC,QAAS,SAAAh2G,GACP,IAAM+tB,EAAO,GACb,GAAI/tB,EAAM+zG,gBAAkB/zG,EAAM+zG,eAChC,OAAQ/zG,EAAM+zG,gBACZ,IAAK,OACH,GAAI/zG,EAAMi0G,iBAAmBj0G,EAAMi0G,gBAAgBtpG,MACjD,OAAQ3K,EAAMi0G,gBAAgBtpG,MAAMgL,eAClC,IAAK,MACHoY,EAAKg4H,MAAQ,CACXzgJ,KAAM,OACNI,MAAO,WACP4rB,QAAS,WAEXvD,EAAK66G,WAAL,yBACA,MACF,IAAK,MACH76G,EAAKg4H,MAAQ,CACXzgJ,KAAM,OAERyoB,EAAK66G,WAAL,yBACA,MACF,QACE76G,EAAKg4H,MAAQ,KACbh4H,EAAK66G,WAAL,6BAIN,MACF,IAAK,OACH76G,EAAKg4H,MAAQ,KACbh4H,EAAK66G,WAAL,aAMN,OAAO76G,GAETwnF,cAAe,SAACv1G,EAAOsN,EAAegnG,GACpC,IAAMlvE,EAAM93B,EAAcgoG,SAASjyE,UAAUgkH,QAAQjiH,IAC/C+/G,EACJ73I,EAAcgoG,SAASjyE,UAAUgkH,QAAQlC,UAAU//G,GAE/C1lB,EAAS,CACb6qC,OAFa46F,EAAU56F,OAGvBw8F,aAAczyC,EAAU5qG,cACpB4qG,EAAU5qG,cAAcsD,cACxBhN,EAAMiD,YAAYokJ,SAClBrnJ,EAAMiD,YAAYokJ,QAAQN,aACxB/mJ,EAAMiD,YAAYokJ,QAAQN,aAC1B/mJ,EAAM0J,cAAcsD,cAC1Bg6I,cAAehnJ,EAAMwQ,QACrBg3I,iBAAkB,MAClBC,uBAAuB,GAGnB/tG,EAAU,CACdorG,KAAM,CACJvX,IAAK,oBACLK,IAAK,sBAEPmX,KAAM,qBAGF9wC,EACJK,EAAUL,iBAAmBK,EAAUL,gBAAgBtpG,MACnD2pG,EAAUL,gBAAgBtpG,MAAMgL,cAChC,KAGN,GAAI2+F,EAAUP,eACZ,OAAQO,EAAUP,gBAChB,IAAK,OAGH,OAFAr0F,EAAOgoI,sBACLhuG,EAAQ46D,EAAUP,gBAAlB,IACME,GACN,IAAK,MACL,IAAK,MACHv0F,EAAOgoI,sBACLhuG,EAAQ46D,EAAUP,gBAAgBE,GACpC,MACF,QACEv0F,EAAOgoI,sBAAwBvmJ,OAAOqQ,OACpCkoC,EAAQ46D,EAAUP,iBAClBtmG,KAAK,KAGX,MACF,IAAK,OACL,QACEiS,EAAOgoI,sBACLhuG,EAAQ46D,EAAUP,gBAM1B,OAAQE,GACN,IAAK,MACHv0F,EAAO8nI,iBAAmB,MAC1B,MACF,IAAK,MACH9nI,EAAO8nI,iBAAmB,MAC1B,MACF,QACE9nI,EAAO8nI,iBAAmB,MAI9B,IAAIpsH,EAAM+pH,EAAU/pH,IAgBpB,OAbeusH,UAAUC,UAAUhrI,QAAQ,WAAa,IAGnDkS,SAAS+4H,OAAOtzG,MACf,+CAGFzlB,SAAS+4H,OACP,qEACFzsH,GAAO,gBAKT,GAAA73B,OAAG63B,EAAH,KACAj6B,OAAOC,KAAKse,GACT3c,IACC,SAAA2iJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjmI,EAAOgmI,MAE9Dj4I,KAAK,MAGZ+nG,OAAQ,SAACd,EAAY/iF,EAAQ3xB,EAAOsN,GAElC,IADsBwhB,SAASC,eAAe,kBAC1B,CAClB,IAAM62H,EAAY92H,SAASjtB,cAAc,OA8BzC,GA7BA+jJ,EAAU9tH,UAAV,iqBAAAv0B,OAQiBmxG,EARjB,yeAAAnxG,OAewB+J,EAAcgoG,SAASjyE,UAAUgkH,QAAQ/uC,SAfjE,iwBA0BAxpF,SAASgxD,KAAKC,YAAY6lE,IAGrB92H,SAASC,eAAe,uBAAwB,CACnD,IAAM+4H,EAAeh5H,SAASjtB,cAAc,SAC5CimJ,EAAatlJ,GAAK,sBAClBslJ,EAAahwH,UAAb,qbAaAhJ,SAASgxD,KAAKC,YAAY+nE,OAKlC5T,cAAe,CACbtgH,SAAS,EACT0kF,SAAU,oCACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAY,gBACZtyB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Be,gBAAiB,CAAEwwC,uCAAwC,IAC3DxyC,cAAe,SACbv1G,EACAsN,EACAgnG,EACAC,EACAC,GAEA,IAAMwzC,EAAc16I,EAAckrE,OAAO87B,EAAU5qG,eAC7Co3G,EAAgBv7F,OAAO0iI,mBACzB1iI,OAAO0iI,mBAAmBnnC,cAC1B,KAEJ,OAAKknC,EAAY9T,cAIV,CACLh7G,UAAW5rB,EAAc+S,QAAQ6iB,gBACjClG,QAAS1vB,EAAc+S,QAAQ6iB,gBAC/B7f,SACEy9F,GACoB,aAAlBA,GACAv7F,OAAO0iI,mBAAmBC,UAAUpnC,EAAc9zG,eAChDuY,OAAO0iI,mBAAmBC,UAC1B3iI,OAAO0iI,mBAAmBnnC,cAAc9zG,eACxCqW,SACAkC,OAAOwd,SACboxG,YAAa6T,EAAY9T,cAAcC,YACvCC,cAAe4T,EAAY9T,cAAcE,cACzC+T,yBAA0BH,EAAY9T,cAAcz/C,UACpD2zD,oBAAqB,CAACJ,EAAY9T,cAAcz/C,WAChD4zD,gCAAgC,EAChC9zC,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cApBtB,MAuBXgB,OAAQ,SAACd,EAAY/iF,GACfpM,OAAO2uH,eAAiBx/B,IACtB/iF,IACF+iF,EAAW4zC,sBAAwBp7I,WAAWykB,IAEhDpM,OAAO2uH,cAAc1+B,OAAOd,EAAY,WAI9C6zC,UAAW,CACT30H,SAAS,EACT0kF,SAAU,4BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,YACTitC,WAAY,MACZtc,WAAY,gBACZtyB,iBAAkB,CAAC,UACnBE,gBAAiB,CACf,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEFgyC,iBAAkB,CAEhB50H,SAAS,EACTwI,gBAAiB,6CACjBqsH,eAAgB,CACd,CACElvG,aAAc,UACdhyC,KAAM,gBACNhH,KAAM,WAER,CACEg5C,aAAc,UACdhyC,KAAM,gBACNhH,KAAM,WAER,CACEg5C,aAAc,UACdhyC,KAAM,eACNhH,KAAM,WAER,CACEg5C,aAAc,UACdhyC,KAAM,eACNhH,KAAM,aAIZg3G,gBAAiB,CACfmxC,iDAAkD,GAClDC,gDAAiD,CAC/ChxC,cAAe7oF,SAASgxD,KACxB43B,QAAS,SAAC13G,EAAOsN,EAAeyoG,GAG9B,IADA,IAAM/nF,EAAUc,SAAS85H,iBAAiB,wBACjCh8I,EAAI,EAAGA,EAAIohB,EAAQ3sB,OAAQuL,IAClCohB,EAAQphB,GAAGi8I,SASb,IADA,IAAMC,EAAUh6H,SAAS85H,iBAAiB,qBACjCh8I,EAAI,EAAGA,EAAIk8I,EAAQznJ,OAAQuL,IAClCk8I,EAAQl8I,GAAGi8I,SAGb,IAAM57B,EAAWjtH,EAAMitH,SACnBjtH,EAAMitH,SADO,iBAAA1pH,OAEIvD,EAAM0J,eAC3B,IAAKolB,SAASC,eAAek+F,GAAW,CACtC,IAAMrrH,EAAIktB,SAASjtB,cAAc,KACjCD,EAAEY,GAAKyqH,EACPrrH,EAAEmlB,KAAOgvF,EAAaR,cAAcv1G,EAAOsN,GAC3C1L,EAAEilB,OAAS,SACXjlB,EAAEklB,IAAM,+BACRllB,EAAEgH,UAAY,kDACdhH,EAAEgmB,MAAQ,kBACVhmB,EAAEwE,MAAQ,gBACV0oB,SAASgxD,KAAKC,YAAYn+E,OAKlC2zG,cAAe,SAACv1G,EAAOsN,GAAoCsF,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,OACnDmrB,EAAY/9B,EAAM+9B,UAAY/9B,EAAM+9B,UAAY,MAChDre,EAAS,CACbqpI,KAAM,KACNxoJ,KAAM,OACNk9F,KAAM,SACN/2F,MAAO,cACPsiJ,iBAAiB,EAEjBC,aAAY,GAAA1lJ,OAAKw6B,EAAL,KAAAx6B,OAAkBvD,EAAM0J,eACpCke,MAAK,QAAArkB,OAAUw6B,EAAV,SAAAx6B,OAA2BvD,EAAM0J,eACtCw/I,YAAW,GAAA3lJ,OAAKw6B,EAAL,KAAAx6B,OAAkBvD,EAAM0J,eACnCy/I,aAAc,6CACd9oI,QAC4C,IAA1C/S,EAAc+S,QAAQ6iB,gBAAwB,UAAY,QAK9D,MACE,GAAA3/B,OAHU,uCAGV,KACApC,OAAOC,KAAKse,GACT3c,IACC,SAAA2iJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBjmI,EAAOgmI,MAE9Dj4I,KAAK,MAGZ+nG,OAAQ,SAACd,EAAY/iF,EAAQ3xB,GAC3B,IAAMitH,EAAWjtH,EAAMitH,SACnBjtH,EAAMitH,SADO,iBAAA1pH,OAEIvD,EAAM0J,eACrB9H,EAAIktB,SAASC,eAAek+F,GAC9BrrH,GACFA,EAAEwnJ,UAgCRC,QAAS,CACPz1H,SAAS,EACT0kF,SAAU,8BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAY,aACZtyB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1BpxE,IAAK,aACLmyE,gBAAiB,CACf+xC,mDAAoD,IAEtD/zC,cAAe,SACbv1G,EACAsN,EACAgnG,EACAi1C,EACA/0C,GAEA,MAAO,CACLpvE,IAAK,aACLq4D,KAAM,MACNz6F,MAAOhD,EAAMiD,YAAY8J,QACzBgxB,UAAW,MACXwrH,WAAYA,GAA0B,aACtC/0C,QAASA,GAAoB,eAGjCgB,OAAQ,SAACd,EAAY/iF,EAAQ3xB,GACvBulB,OAAOikI,iBACL73H,IACF+iF,EAAW/iF,OAASA,EAAOtN,YAE7BkB,OAAOikI,eAAeh0C,OAAOd,EAAY,WAI/C+0C,MAAO,CACL71H,SAAS,EACT0kF,SAAU,4BACVv6F,WAAY,CACVhd,MAAO,CAAC,OAAQ,QAChBoE,OAAQ,CAAC,OAAQ,QACjByJ,GAAI,OAENqpG,QAAS,WACTitC,WAAY,MACZtc,WAAY,aACZtyB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1BpxE,IAAK,aACLmyE,gBAAiB,CAAEmyC,0CAA2C,IAC9Dn0C,cAAe,SACbv1G,EACAsN,EACAgnG,EACAi1C,EACA/0C,GAEA,MAAO,CACLm1C,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1Bv/F,OAAQ,KACRw/F,uBAAwB,OAG5Bv0C,OAAQ,SAACd,EAAY/iF,EAAQ3xB,GAC3B,GAAIulB,OAAOykI,YAAa,CACtB,IAAMC,EAAS,eACf,IAAKn7H,SAASC,eAAek7H,GAAS,CACpC,IAAMC,EAAuBp7H,SAASjtB,cAAc,OACpDqoJ,EAAqB1nJ,GAAKynJ,EAC1Bn7H,SAASgxD,KAAKC,YAAYmqE,GAG5B3kI,OAAOykI,YAAYp9H,QAAQu9H,IACzBz1C,EACA5lF,SAASC,eAAek7H,UASvB38I,wfCr1FAgxI,EAAA,CAAEvxI,QAptCD,6CAotCU67B,IAntCd,CACV,CACEwQ,UAAY,EACZC,OAAU,GACV9xC,KAAQ,OACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,WAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,UACRhH,KAAQ,WAEV,CACEgH,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,UACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,SAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,wBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,UACRhH,KAAQ,YAGZgH,KAAQ,uBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,cACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,qBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,MACRhH,KAAQ,WAEV,CACEgH,KAAQ,MACRhH,KAAQ,WAEV,CACEgH,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,eACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,SAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,eACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,WACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,QACRhH,KAAQ,YAGZgH,KAAQ,sBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,UACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,iBACRhH,KAAQ,YAGZgH,KAAQ,kBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,eACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,cACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,kBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,8BACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,qBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,aACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,QACRhH,KAAQ,YAGZgH,KAAQ,YACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,sBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,gBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,SACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,WAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,UACRhH,KAAQ,YAGZgH,KAAQ,sBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,iBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,MACRhH,KAAQ,WAEV,CACEgH,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,WACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,SAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,cACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,qBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,aACRhH,KAAQ,WAEV,CACEgH,KAAQ,WACRhH,KAAQ,WAEV,CACEgH,KAAQ,cACRhH,KAAQ,YAGZgH,KAAQ,QACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,kBACRhH,KAAQ,YAGZgH,KAAQ,mBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,sBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,UACRhH,KAAQ,YAGZgH,KAAQ,qBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,WAEV,CACEgH,KAAQ,GACRhH,KAAQ,WAEV,CACEgH,KAAQ,GACRhH,KAAQ,WAEV,CACEgH,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,QACRhH,KAAQ,WAEV,CACEgH,KAAQ,UACRhH,KAAQ,YAGZgH,KAAQ,YACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,eACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,uBACRhH,KAAQ,YAGZgH,KAAQ,wBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,oBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,QACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,qBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,2BACRhH,KAAQ,YAGZgH,KAAQ,oBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,GACV9xC,KAAQ,WACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,SAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,OACnBl5C,KAAQ,YAEV,CACE84C,OAAU,CACR,CACE9xC,KAAQ,cACRhH,KAAQ,WAEV,CACEgH,KAAQ,eACRhH,KAAQ,WAEV,CACEgH,KAAQ,qBACRhH,KAAQ,WAEV,CACEgH,KAAQ,+BACRhH,KAAQ,WAEV,CACEgH,KAAQ,QACRhH,KAAQ,UAEV,CACEgH,KAAQ,UACRhH,KAAQ,UAEV,CACEgH,KAAQ,YACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,cACbxgB,gBAAmB,aACnBl5C,KAAQ,eAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,sBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,cACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,iBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,SACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,aACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,aACRhH,KAAQ,YAGZgH,KAAQ,OACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,SACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,iBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,SACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,QACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,cACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,iBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,cACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,aACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,cACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,mBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,cACRhH,KAAQ,YAGZgH,KAAQ,kBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,kBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,kBACRhH,KAAQ,YAGZgH,KAAQ,kBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,WACRhH,KAAQ,YAGZgH,KAAQ,WACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,iBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,iBACRhH,KAAQ,YAGZgH,KAAQ,iBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,uBACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,uBACRhH,KAAQ,YAGZgH,KAAQ,6BACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,2BACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,2BACRhH,KAAQ,YAGZgH,KAAQ,mBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,QACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,eACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,mBACRhH,KAAQ,YAGZgH,KAAQ,kBACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,QACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,OACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,UACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,OACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,KACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,WACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE6pJ,WAAa,EACb/wG,OAAU,CACR,CACEgxG,SAAW,EACX9iJ,KAAQ,QACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,UACRhH,KAAQ,WAEV,CACE8pJ,SAAW,EACX9iJ,KAAQ,SACRhH,KAAQ,YAGZgH,KAAQ,WACR0yD,UAAa,qEACb15D,KAAQ,SAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,aACRhH,KAAQ,YAGZgH,KAAQ,OACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,SACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,mBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,eACRhH,KAAQ,YAGZgH,KAAQ,SACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,cACRhH,KAAQ,YAGZgH,KAAQ,cACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,WACRhH,KAAQ,WAEV,CACEgH,KAAQ,cACRhH,KAAQ,YAGZgH,KAAQ,oBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,YAEV,CACE64C,UAAY,EACZC,OAAU,CACR,CACE9xC,KAAQ,WACRhH,KAAQ,WAEV,CACEgH,KAAQ,cACRhH,KAAQ,WAEV,CACEgH,KAAQ,mBACRhH,KAAQ,YAGZgH,KAAQ,kBACR+xC,QAAW,CACT,CACE/xC,KAAQ,GACRhH,KAAQ,YAGZi5C,SAAW,EACXygB,UAAa,aACbxgB,gBAAmB,aACnBl5C,KAAQ,gCC/sCG0+E,EAAA,CAAElyE,QAFD,6CAEU67B,IADd,CAAC,CAACwQ,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,OAAO+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,GAAG9xC,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,UAAU+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,SAASi5C,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,SAAShH,KAAO,YAAYgH,KAAO,WAAW+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,cAAc+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,eAAe+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,SAASi5C,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,WAAW+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,QAAQhH,KAAO,YAAYgH,KAAO,UAAU+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,YAAY+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,UAAU+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,SAASi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,aAAahH,KAAO,YAAYgH,KAAO,eAAe+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,QAAQ+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,SAAS+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,WAAW+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,SAASi5C,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,GAAG9xC,KAAO,QAAQ+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,GAAG9xC,KAAO,YAAY+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,UAAU+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,SAASi5C,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC64C,UAAW,EAAKC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,YAAY+xC,QAAU,CAAC,CAAC/xC,KAAO,GAAGhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,OAAOl5C,KAAO,YAAY,CAAC64C,UAAW,EAAMC,OAAS,CAAC,CAAC9xC,KAAO,MAAMhH,KAAO,WAAW,CAACgH,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAO+xC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,YAAY,CAAC84C,OAAS,CAAC,CAAC9xC,KAAO,UAAUhH,KAAO,YAAYi5C,SAAU,EAAMC,gBAAkB,aAAal5C,KAAO,eAAe,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAOhH,KAAO,SAAS,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,OAAOhH,KAAO,SAAS,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,YAAYhH,KAAO,YAAYgH,KAAO,kBAAkBhH,KAAO,SAAS,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,QAAQhH,KAAO,YAAYgH,KAAO,cAAchH,KAAO,SAAS,CAAC6pJ,WAAY,EAAK/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,UAAU,CAAC8pJ,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,UAAUgH,KAAO,UAAUhH,KAAO,SAAS,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,WAAWhH,KAAO,SAAS,CAAC6pJ,WAAY,EAAM/wG,OAAS,CAAC,CAACgxG,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAK9iJ,KAAO,MAAMhH,KAAO,WAAW,CAAC8pJ,SAAU,EAAM9iJ,KAAO,MAAMhH,KAAO,YAAYgH,KAAO,WAAWhH,KAAO,iFCc3kL+P,EAAkB,CAEtB0pI,EAAE,CACAtF,KAAK,CACH16B,IAAI,CACFpxE,IAAIoxE,EACJh3G,MAAM,MACNrC,SAAS,GACTizB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,oBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRvnJ,MAAM,OAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,eACN+J,QAAQ,8CAEVL,UAAU,CACR,CACEk8B,IAAIqqG,EACJ1rI,KAAK,OACLqsB,SAAQ,EACR5wB,MAAM,QACN+J,QAAQ,6CACRpM,SAAS,GACT6/B,UAAU,OAOlBs0G,KAAK,IAIPoF,MAAM,CACJxF,KAAK,CACH16B,IAAI,CACFpxE,IAAIoxE,EACJh3G,MAAM,MACNrC,SAAS,GACTizB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,oBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRvnJ,MAAM,OAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,eACN+J,QAAQ,8CAEVL,UAAU,CACR,CACEk8B,IAAIqqG,EACJ1rI,KAAK,SACLqsB,SAAQ,EACR5wB,MAAM,QACN+J,QAAQ,6CACRpM,SAAS,GACT6/B,UAAU,OAmDlBs0G,KAAK,IAIPjC,IAAI,CACF6B,KAAK,CACH16B,IAAI,CACFpxE,IAAIoxE,EACJh3G,MAAM,MACNrC,SAAS,GACTizB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,oBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRvnJ,MAAM,OAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,eACN+J,QAAQ,8CAEVL,UAAU,CACR,CACEk8B,IAAI4hH,EACJ7pJ,SAAS,GACT4G,KAAK,QACLqsB,SAAQ,EACR5wB,MAAM,QACNw9B,UAAU,CACRmyB,aAAa,CACXprD,KAAK,qBACLmY,OAAO,KAGX3S,QAAQ,8CAEV,CACE67B,IAAIqqG,EACJ1rI,KAAK,SACLqsB,SAAQ,EACR5wB,MAAM,QACN+J,QAAQ,6CACRpM,SAAS,GACT6/B,UAAU,MAMhBiyG,KAAK,CACH7pG,IAAI6pG,EACJ9xI,SAAS,EACTqC,MAAM,OACN4wB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,qBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACRvnJ,MAAM,QAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,gBACN+J,QAAQ,8CAEVL,UAAU,CACR,CACEk8B,IAAI4hH,EACJ7pJ,SAAS,GACT4G,KAAK,QACLqsB,SAAQ,EACR5wB,MAAM,SACNw9B,UAAU,CACRmyB,aAAa,CACXprD,KAAK,qBACLmY,OAAO,KAGX3S,QAAQ,8CAEV,CACE67B,IAAIqqG,EACJ1rI,KAAK,SACLqsB,SAAQ,EACR5wB,MAAM,SACN+J,QAAQ,6CACRpM,SAAS,GACT6/B,UAAU,MAMhBi3G,KAAK,CACH7uG,IAAI6uG,EACJz0I,MAAM,OACNrC,SAAS,GACTizB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,oBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACRvnJ,MAAM,QAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,gBACN+J,QAAQ,8CAEVL,UAAU,CACR,CACEk8B,IAAI4hH,EACJ7pJ,SAAS,GACT4G,KAAK,QACLqsB,SAAQ,EACR5wB,MAAM,SACNw9B,UAAU,CACRmyB,aAAa,CACXprD,KAAK,qBACLmY,OAAO,KAGX3S,QAAQ,8CAEV,CACE67B,IAAIqqG,EACJtyI,SAAS,GACTizB,SAAQ,EACR5wB,MAAM,QACNuE,KAAK,SACLwF,QAAQ,6CACRyzB,UAAU,OAOlBs0G,KAAK,IAKP+E,GAAG,CACDnF,KAAK,CACH16B,IAAI,CACFpxE,IAAIoxE,EACJh3G,MAAM,MACNrC,SAAS,GACTizB,SAAQ,EACR02H,mBAAkB,EAClB5kJ,MAAM,oBACNqH,QAAQ,6CACRwe,QAAQ,CACNutH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRvnJ,MAAM,OAER6wB,KAAK,CACH+U,IAAI6zG,EACJz5I,MAAM,eACN+J,QAAQ,8CAEVL,UAAU,CACR,CACE/L,SAAS,GACTqC,MAAM,OACN4wB,SAAQ,EACRgV,IAAI6hH,EAAO7hH,IACXrhC,KAAK,WACLwF,QAAQ,6CACRyzB,UAAU,CACRmyB,aAAa,CACXprD,KAAK,qBACLmY,OAAO,QAMjB+yH,KAAM,CACJ7pG,IAAK6pG,EACLzvI,MAAO,OACPrC,SAAU,EACVizB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEXL,UAAW,CACT,CACE/L,SAAU,GACVizB,SAAS,EACT5wB,MAAO,QACP4lC,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACTyzB,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,SAOpBo1H,KAAM,IAIRmF,KAAM,CACJvF,KAAM,CACJ16B,IAAK,CACHpxE,IAAKoxE,EACLh3G,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTvnJ,MAAO,OAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,UACPuE,KAAM,iBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,WACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB94B,MAAO,UACP4lC,IAAKu1G,EACL52I,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEknB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEkpB,IAAK+hH,EACL/2H,SAAS,EACTrsB,KAAM,UACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEkpB,IAAKqqG,EACL1rI,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKqqG,EACL1rI,KAAM,SACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKgiH,EACLrjJ,KAAM,MACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAK8hH,EACLnjJ,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB+yH,KAAM,CACJ7pG,IAAK6pG,EACL9xI,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACE3+D,IAAK8hH,EACLnjJ,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,YACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEnY,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKqqG,EACLtyI,SAAU,GACVizB,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTyzB,UAAW,IAIb,CACEj5B,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB23H,KAAM,CACJ12I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEnY,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKqqG,EACLtyI,SAAU,GACV4G,KAAM,SACNqsB,SAAS,EACT5wB,MAAO,UACP+J,QAAS,6CACTyzB,UAAW,MAMjB+2G,KAAM,CACJ52I,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnBO,oBAAoB,EACpBnlJ,MAAO,qBAEPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEj5B,KAAM,SACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,UACPrC,SAAU,GACV6/B,UAAW,MAMjB82G,KAAM,CACJ32I,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnBO,oBAAoB,EACpBnlJ,MAAO,sBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKqqG,EACLr/G,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,MAMjBi3G,KAAM,CACJ7uG,IAAK6uG,EACLz0I,MAAO,OACPrC,SAAU,GACVizB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEXL,UAAW,CACT,CACEknB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEkpB,IAAKqqG,EACL1rI,KAAM,SACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,MAMjBg3G,KAAM,CACJ72I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEknB,SAAS,EACT5wB,MAAO,QACP4lC,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEkpB,IAAK+hH,EACLhqJ,SAAU,GACVqC,MAAO,QACP4wB,SAAS,EACTrsB,KAAM,UACNwF,QAAS,6CACTyzB,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEkpB,IAAKqqG,EACL1rI,KAAM,OACNqsB,SAAS,EACT5wB,MAAO,QACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKqqG,EACLr/G,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,MAMjBm3G,IAAK,CACHpsH,QAAS,GACTvoB,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACXysG,YAAa,GACbiV,mBAAmB,EACnB5kJ,MAAO,mBACPmI,KAAM,wBACNd,QAAS,6CACT8mB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXL,UAAW,CACT,CACEk8B,IAAK4hH,EACL7pJ,SAAU,GACVizB,SAAS,EACTrsB,KAAM,QACNvE,MAAO,QACPw9B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,8CAEX,CACE67B,IAAKkiH,EACLnqJ,SAAU,GACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT4M,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,gDAIfytG,IAAK,CACHjvF,QAAS,GACTvoB,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACXysG,YAAa,GACbiV,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACT8mB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXL,UAAW,CACT,CACEk8B,IAAK4hH,EACL7pJ,SAAU,GACVizB,SAAS,EACTrsB,KAAM,QACNvE,MAAO,QACPw9B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,8CAEX,CACE67B,IAAKkiH,EACLnqJ,SAAU,GACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT4M,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,iDAKjB+nI,KAAM,CACJ96B,IAAK,CACHpxE,IAAKoxE,EACLr5G,SAAU,GACVqC,MAAO,MACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTvnJ,MAAO,OAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,cACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,UACPuE,KAAM,gBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,WACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,UACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEnY,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEj5B,KAAM,MACNqsB,SAAS,EACTgV,IAAKgiH,EACL79I,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEj5B,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB+yH,KAAM,CACJ7pG,IAAK6pG,EACL9xI,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,iBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,YACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEnY,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEj5B,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB23H,KAAM,CACJ12I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,iBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,UACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACEnF,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACEnY,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,QAQrBy2F,EAAG,CACDyd,KAAM,CACJ16B,IAAK,CACHpxE,IAAKoxE,EACLh3G,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTvnJ,MAAO,OAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,UACPuE,KAAM,iBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,WACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB94B,MAAO,UACP4lC,IAAKu1G,EACL52I,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX1oE,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEkpB,IAAK+hH,EACL/2H,SAAS,EACTrsB,KAAM,UACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX1zD,IAAKqqG,EACL1rI,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAKqqG,EACL1rI,KAAM,SACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEoI,IAAKgiH,EACLrjJ,KAAM,MACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAK8hH,EACLnjJ,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB+yH,KAAM,CACJ7pG,IAAK6pG,EACL9xI,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACE3+D,IAAK8hH,EACLnjJ,KAAM,OACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,YACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,EACX1oE,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAKqqG,EACLtyI,SAAU,GACVizB,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTyzB,UAAW,IAIb,CACE87D,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB23H,KAAM,CACJ12I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX/0F,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAKqqG,EACLtyI,SAAU,GACV4G,KAAM,SACNqsB,SAAS,EACT5wB,MAAO,UACP+J,QAAS,6CACTyzB,UAAW,MAMjB+2G,KAAM,CACJ52I,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnBO,oBAAoB,EACpBnlJ,MAAO,qBAEPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX/0F,KAAM,SACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,UACPrC,SAAU,GACV6/B,UAAW,MAMjB82G,KAAM,CACJ32I,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnBO,oBAAoB,EACpBnlJ,MAAO,sBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAKqqG,EACLr/G,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,MAMjBi3G,KAAM,CACJ7uG,IAAK6uG,EACLz0I,MAAO,OACPrC,SAAU,GACVizB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEXL,UAAW,CACT,CACE4vF,UAAW,IACX1oE,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACE48E,UAAW,IACX1zD,IAAKqqG,EACL1rI,KAAM,SACNqsB,SAAS,EACT7mB,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,MAMjBg3G,KAAM,CACJ72I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,gBACP+J,QAAS,8CAEX8uB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACT20B,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX1oE,SAAS,EACT5wB,MAAO,QACP4lC,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEkpB,IAAK+hH,EACLhqJ,SAAU,GACVqC,MAAO,QACP4wB,SAAS,EACTrsB,KAAM,UACNwF,QAAS,6CACTyzB,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX1zD,IAAKqqG,EACL1rI,KAAM,OACNqsB,SAAS,EACT5wB,MAAO,QACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX1zD,IAAKqqG,EACLr/G,SAAS,EACTrsB,KAAM,SACNvE,MAAO,UACP+J,QAAS,6CACTpM,SAAU,GACV6/B,UAAW,MAMjBm3G,IAAK,CACHpsH,QAAS,GACTvoB,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACXysG,YAAa,GACb0V,mBAAmB,EACnBT,mBAAmB,EACnB5kJ,MAAO,mBACPmI,KAAM,wBACNd,QAAS,6CACT8mB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXL,UAAW,CAiBT,CACEk8B,IAAKkiH,EACLnqJ,SAAU,GACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT4M,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,8CAEX,CACE67B,IAAKqqG,EACLtyI,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACTrsB,KAAM,SACNi5B,UAAW,GAEXzzB,QAAS,gDAIfytG,IAAK,CACHjvF,QAAS,GACTvoB,MAAO,MACPrC,SAAU,GACVizB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACXysG,YAAa,GACb0V,mBAAmB,EACnBT,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACT8mB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXL,UAAW,CACT,CACEk8B,IAAK4hH,EACL7pJ,SAAU,GACVizB,SAAS,EACTrsB,KAAM,QACNvE,MAAO,QACPw9B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,8CAEX,CACE67B,IAAKkiH,EACLnqJ,SAAU,GACV4G,KAAM,OACNvE,MAAO,OACP4wB,SAAS,EACT4M,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,KAGZ3S,QAAS,8CAEX,CACE67B,IAAKqqG,EACLtyI,SAAU,GACVqC,MAAO,OACP4wB,SAAS,EACT4M,UAAW,GACXj5B,KAAM,SACNwF,QAAS,iDAKjB+nI,KAAM,CACJ96B,IAAK,CACHpxE,IAAKoxE,EACLr5G,SAAU,GACVqC,MAAO,MACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,oBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTvnJ,MAAO,OAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,cACP+J,QAAS,8CAEXw0H,WAAY,CACV3tG,SAAS,EACTo3H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BpvH,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,UACPuE,KAAM,gBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,WACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,UACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX1oE,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZrhC,KAAM,WACNwF,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACEj5B,KAAM,MACNqsB,SAAS,EACTgV,IAAKgiH,EACL79I,QAAS,6CACT/J,MAAO,OACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB+yH,KAAM,CACJ7pG,IAAK6pG,EACL9xI,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACT02H,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTwe,QAAS,CACPutH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXw0H,WAAY,CACV3tG,SAAS,EACTo3H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BpvH,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,iBACNwF,QAAS,8CAEXw6F,aAAc,CACZ,CACEhgG,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,YACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,OAKhBoc,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,WACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,EACX/0F,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,IAIb,CACE87D,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAK8hH,EACL39I,QAAS,6CACT/J,MAAO,SACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,QACNmY,OAAQ,QAMlB23H,KAAM,CACJ12I,SAAU,EACVqC,MAAO,OACP4wB,SAAS,EACTgV,IAAKq2C,EAAMr2C,IACX0hH,mBAAmB,EACnB5kJ,MAAO,qBACPqH,QAAS,6CACTk4I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTvnJ,MAAO,QAET6wB,KAAM,CACJ+U,IAAK6zG,EACLz5I,MAAO,eACP+J,QAAS,8CAEXw0H,WAAY,CACV3tG,SAAS,EACTo3H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BpvH,UAAW,CACTjI,SAAS,EACT6xB,YAAa,CACX7c,IAAK80G,EACL16I,MAAO,WACPuE,KAAM,iBACNwF,QAAS,8CAEX+uB,kBAAmB,CACjB8M,IAAKu1G,EACLn7I,MAAO,UACPuE,KAAM,kBACNwF,QAAS,6CACTivB,aAAc,GACdwE,UAAW,CACT,CACE9yB,MAAO,UACPnG,KAAM,wBAKdmF,UAAW,CACT,CACE4vF,UAAW,IACX/0F,KAAM,WACNqsB,SAAS,EACTgV,IAAK6hH,EAAO7hH,IACZ77B,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,qBACNmY,OAAQ,MAId,CACEnY,KAAM,UACNqsB,SAAS,EACTgV,IAAK+hH,EACL59I,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,CACTmyB,aAAc,CACZprD,KAAM,aACNmY,OAAQ,MAId,CACE48E,UAAW,IACX/0F,KAAM,OACNqsB,SAAS,EACTgV,IAAKqqG,EACLlmI,QAAS,6CACT/J,MAAO,QACPrC,SAAU,GACV6/B,UAAW,SAURlwB,+/jBC1uEA46I,6MA3VbhpJ,MAAQ,2EAGN,OACEwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,IAAOxE,gBAAiBi1G,GAAI,CAAC,EAAE,GAAIxqG,GAAI,CAAC,EAAE,GAAI4T,GAAI,CAAC,MAAO,QACxEha,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,IAAOvE,iBACvBoE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKoF,SAAU,WAAYC,OAAQ,IACjCtF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUD,WAAY,SAAUqF,SAAU,CAAC,OAAQ,QAASyC,GAAI,OAAQwwG,GAAI,EAAGrrG,UAAW,SAAUyU,GAAI,CAAC,MAAO,QACnIha,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwiJ,GAAT,CAAYhgJ,WAAY,YAAawoG,WAAY,QAASzlG,GAAI,QAAS1I,SAAU,CAAC,QAAQ,GAAIyI,UAAW,SAAUvI,MAAO,SAA1H,oBAGAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CAAY3lJ,WAAY,MAAOkuG,WAAY,CAAC,QAAS,OAAQnuG,SAAU,CAAC,EAAE,GAAIyI,UAAW,SAAUvI,MAAO,SAA1G,+BAIFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUD,WAAY,SAAUqF,SAAU,CAAC,OAAQ,QAASyC,GAAI,OAAQmF,UAAW,UACtGvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,IAAOpE,cAAezD,WAAY,SAAUD,MAAO,OAAQsuB,UAAW,CAAC,OAAO,QAAStgB,gBAAiB,QAASrJ,MAAO,YAAanE,EAAG,CAAC,EAAE,GAAI0N,UAAW,wCAAyCjI,aAAc,OAAQZ,MAAO,CAAC2H,SAAS,aACxPrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,kBAAmB82G,GAAI,GAC9B5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM2wG,GAAI,GAAV,wZAGA5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM2wG,GAAI,GAAV,sgBAGA5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM2wG,GAAI,GAAV,ikBAGA5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM2wG,GAAI,GAAV,iuBAGA5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,+mCAKFD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,kBAAmBqM,GAAI,CAAC,EAAE,IACjCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,sBAIAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,sGAIAnG,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,MACpBkE,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,4CADF,yKAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,iDADF,mjBAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,wCADF,sLAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,mDADF,4IAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,sDADF,mHAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,yDADF,6JAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,yCADF,mOAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,2CADF,wJAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,wCADF,iFAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,4CADF,4CAGA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,0DADF,sJAMJ6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,sBAAuBqM,GAAI,CAAC,EAAE,IACrCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,mCAIAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,mjBAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,WAAYqM,GAAI,CAAC,EAAE,IAC1BnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,gBAKFkD,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,MACpBkE,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,+BAA8B6G,EAAA9G,EAAAC,cAAA,WADhC,qTAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,2BAA0B6G,EAAA9G,EAAAC,cAAA,WAD5B,kGAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,2CAA0C6G,EAAA9G,EAAAC,cAAA,WAD5C,qzBAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,kDAAiD6G,EAAA9G,EAAAC,cAAA,WADnD,uMAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,iEAAgE6G,EAAA9G,EAAAC,cAAA,WADlE,oWAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,4CAA2C6G,EAAA9G,EAAAC,cAAA,WAD7C,8EAGE6G,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,KAAM4B,MAAO,CAACilJ,UAAU,gBAC5C3iJ,EAAA9G,EAAAC,cAAA,0GACA6G,EAAA9G,EAAAC,cAAA,kMACA6G,EAAA9G,EAAAC,cAAA,4KAGJ6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,kDAAiD6G,EAAA9G,EAAAC,cAAA,WADnD,iFAGE6G,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,KAAM4B,MAAO,CAACilJ,UAAU,gBAC5C3iJ,EAAA9G,EAAAC,cAAA,mNACA6G,EAAA9G,EAAAC,cAAA,oKACA6G,EAAA9G,EAAAC,cAAA,gQACA6G,EAAA9G,EAAAC,cAAA,wOACA6G,EAAA9G,EAAAC,cAAA,0LACA6G,EAAA9G,EAAAC,cAAA,2JACA6G,EAAA9G,EAAAC,cAAA,qLACA6G,EAAA9G,EAAAC,cAAA,mEACA6G,EAAA9G,EAAAC,cAAA,uVACA6G,EAAA9G,EAAAC,cAAA,qNACA6G,EAAA9G,EAAAC,cAAA,0OACA6G,EAAA9G,EAAAC,cAAA,yHAIJ6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,+CAA8C6G,EAAA9G,EAAAC,cAAA,WADhD,sCAGE6G,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,KAAM4B,MAAO,CAACilJ,UAAU,gBAC5C3iJ,EAAA9G,EAAAC,cAAA,0LACA6G,EAAA9G,EAAAC,cAAA,+PACA6G,EAAA9G,EAAAC,cAAA,mUACA6G,EAAA9G,EAAAC,cAAA,yIACA6G,EAAA9G,EAAAC,cAAA,6QARJ,uXAYA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,iDAAgD6G,EAAA9G,EAAAC,cAAA,WADlD,sCAGE6G,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,KAAM4B,MAAO,CAACilJ,UAAU,gBAC5C3iJ,EAAA9G,EAAAC,cAAA,0HACA6G,EAAA9G,EAAAC,cAAA,4GAGJ6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,oCAAmC6G,EAAA9G,EAAAC,cAAA,WADrC,80BAMF6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,iBAAkBqM,GAAI,CAAC,EAAE,IAChCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,qBAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,sLAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,qBAAsBqM,GAAI,CAAC,EAAE,IACpCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,yBAGAkD,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,MACpBkE,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,iEAAgE6G,EAAA9G,EAAAC,cAAA,WADlE,sjBAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,8EAA6E6G,EAAA9G,EAAAC,cAAA,WAD/E,snCAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,iCAAgC6G,EAAA9G,EAAAC,cAAA,WADlC,wVAOJ6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,iCAAkCqM,GAAI,CAAC,EAAE,IAChDnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,uCAGAkD,EAAA9G,EAAAC,cAAA,MAAI+G,UAAWC,IAAOrE,MACpBkE,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,0CAAyC6G,EAAA9G,EAAAC,cAAA,WAD3C,uRAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,mCAAkC6G,EAAA9G,EAAAC,cAAA,WADpC,mOAIA6G,EAAA9G,EAAAC,cAAA,UACE6G,EAAA9G,EAAAC,cAAA,+BAA8B6G,EAAA9G,EAAAC,cAAA,WADhC,sRAOJ6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,qBAAsBqM,GAAI,CAAC,EAAE,IACpCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,yBAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,sqBAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,kBAAmBqM,GAAI,CAAC,EAAE,IACjCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,sBAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,klCAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,0BAA2BqM,GAAI,CAAC,EAAE,IACzCnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,+BAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,4rBAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,+lBAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,2ZAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,weAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,sWAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,gjCAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,8mBAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,6MAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,0CAA2CqM,GAAI,CAAC,EAAE,IACzDnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,sDAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,wwCAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,0CAA2CqM,GAAI,CAAC,EAAE,IACzDnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,+BAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,yyBAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,iCAAkCqM,GAAI,CAAC,EAAE,IAChDnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,0CAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,woBAIAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,62DAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,40BAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,2xBAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,4bAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,mPAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,2aAGAnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,giCAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,gBAAiBqM,GAAI,CAAC,EAAE,IAC/BnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,qBAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,mzBAKFnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKnG,GAAI,gBAAiBqM,GAAI,CAAC,EAAE,IAC/BnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAYt/G,MAAO,YAAauI,UAAW,OAAQxI,WAAY,EAAGkuG,WAAY,UAAWnuG,SAAU,CAAC,EAAE,IAAtG,qBAGAkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMkG,GAAI,GAAV,62DASVnG,EAAA9G,EAAAC,cAACs3G,EAAA,EAAD,cAtVUn3G,6BCDHspJ,EAAA,CACb9jI,YAAa,CAAC,OAAQ,QAEtBrL,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCoL,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERzc,MAAO,CACL0c,MAAO,2CACPzc,UAAW,qCACX0c,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnClnB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BonB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAqB,qBAClCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPzhB,SAAU,IAEZP,OAAQ,CACNiiB,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKtM,KAAK,GAC1B4M,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXnN,UAAW,UACXoN,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIPjlB,KAAM,UACNJ,OAAQ,UACRulB,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACdtR,gBAAiB,UACjBuR,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVzkB,QAAS,UACTmhB,QAAS,UACTvJ,OAAQ,UACRzY,KAAM,UACNwlB,QAAS,UACTC,QAAS,UACT3T,OAAQ,UACR5M,OAAQ,UACRwgB,OAAQ,UACRC,UAAW,UACXC,WAAY,UACZK,YAAa,UACbC,WAAY,UACZC,WAAY,UACZC,aAAc,UACdN,eAAgB,UAChBC,eAAgB,UAChBF,gBAAiB,UACjBQ,aAAc,UACdC,WAAY,UACZN,gBAAiB,iCACjBzN,aAAc,CACZ1M,OAAQ,CACN0a,KAAM,UACNC,KAAM,UACNg/H,KAAM,UACN/+H,MAAO,UACPhO,OAAQ,UACRiO,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBzO,SAAU,CACR+N,KAAM,UACNC,KAAM,UACNg/H,KAAM,UACN/+H,MAAO,UACPhO,OAAQ,UACRiO,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBnb,OAAQ,CACNob,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJpjB,MAAO,UACPyG,YAAa,UACb4C,gBAAiB,WAEnB2e,QAAS,CACPhoB,MAAO8nB,YAAM,GAAKjD,IAAMzB,MACxB/Z,gBAAiB0e,YAAK,GAAKlD,IAAMzB,MACjC3c,YAAaoe,IAAMzB,MAErB6E,QAAS,CACPjoB,MAAO8nB,YAAM,GAAKI,IAAO9E,MACzB/Z,gBAAiB0e,YAAK,GAAKG,IAAO9E,MAClC3c,YAAayhB,IAAO9E,MAEtB+E,OAAQ,CACNnoB,MAAO8nB,YAAM,GAAKM,IAAIhF,MACtB/Z,gBAAiB0e,YAAK,GAAKK,IAAIhF,MAC/B3c,YAAa2hB,IAAIhF,MAEnBiF,KAAM,CACJroB,MAAO,UACPyG,YAAa,UACb4C,gBAAiB,YAGrBif,QAAS,CACPpF,QAAS,CACPljB,MAAOmjB,IAAKvjB,KACZyJ,gBAAiB8Z,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKvjB,MAE3B6oB,OAAQ,CACNzoB,MAAOgkB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAMjlB,MAE5BuoB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAIxoB,OAG5B8oB,YAAa,CACXC,MAAO,CACL7oB,SAAU,UACVL,OAAQ,OACRgC,SAAU,OACVmnB,QAAS,UAEXC,OAAQ,CACN/oB,SAAU,OACVL,OAAQ,OACRgC,SAAU,QAEZqnB,MAAO,CACLhpB,SAAU,SACVL,OAAQ,OACRgC,SAAU,OACVH,aAAc,gLChPCwkJ,cAEnB,SAAAA,EAAYC,GAAQ,IAAA9mJ,EAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAA0rJ,GAAA,IACLE,EAA+BD,EAApCE,IAAYj3C,EAAwB+2C,EAAxB/2C,WAAek3C,EADjBzqJ,OAAA0qJ,EAAA,EAAA1qJ,CAC0BsqJ,EAD1B,6BAElB9mJ,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAAqqJ,GAAA5xG,KAAA95C,KAAM8rJ,KAED5c,MAAQ,KACbrqI,EAAK+mJ,MAAQA,EACb/mJ,EAAK+vG,WAAaA,EANA/vG,6LAUb7E,KAAKkvI,QACRlvI,KAAKkvI,MAAQ,IAAIlvI,KAAK4rJ,MAAM,CAC1BI,eAAgB,2BAGdhsJ,KAAKkvI,MAAM+c,8BACXjsJ,KAAKkvI,MAAMgd,4RAIV,IAAInqI,QAAJ,eAAAhR,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAa,SAAAgR,EAAOC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OAClB0Q,EAAQ9hB,EAAK6uI,MAAM3rH,UADD,wBAAAlB,EAAA1P,SAAAuP,EAAAliB,SAAb,gBAAAwiB,EAAAC,GAAA,OAAA1R,EAAA8B,MAAA7S,KAAA8S,YAAA,kLAKQyQ,yFACQvjB,KAAKkvI,MAAMid,0BAA5Bn9F,0CAEShvD,KAAKkvI,MAAMkd,iBAAiB,CACvCC,SAASr9F,EAASq9F,SAClBC,WAAWt9F,EAASs9F,qFAGjB,0QAIDtsJ,KAAKkvI,MAAMqd,iJAGLhsI,GACZlf,OAAA0hB,EAAA,EAAA1hB,QAAAo7G,EAAA,EAAAp7G,CAAAqqJ,EAAAhxD,WAAA,0BAAA16F,MAAA85C,KAAA95C,KAA8B,CAAEwsJ,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYf,GAAQ,IAAA9mJ,EAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAA0sJ,GAAA,IACLC,EAAgChB,EAArCE,IAAgBtrI,EAAqBorI,EAArBprI,QAAYurI,EADlBzqJ,OAAA0qJ,EAAA,EAAA1qJ,CAC2BsqJ,EAD3B,0BAElB9mJ,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAAqrJ,GAAA5yG,KAAA95C,KAAM8rJ,KAED7c,UAAY,KACjBpqI,EAAK8nJ,UAAYA,EACjB9nJ,EAAK0b,QAAUA,EANG1b,mMAUb7E,KAAKivI,YACRjvI,KAAKivI,UAAY,IAAIjvI,KAAK2sJ,UAAU3sJ,KAAKugB,mBAEpBvgB,KAAK4sJ,0BAAtBrpI,0CAEEA,EAASspI,yCACRtpI,uRAKF,IAAIxB,QAAJ,eAAAhR,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAa,SAAAgR,EAAOC,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OAClB0Q,EAAQ9hB,EAAK4uI,UAAU2d,eADL,wBAAAvqI,EAAA1P,SAAAuP,EAAAliB,SAAb,gBAAAwiB,EAAAC,GAAA,OAAA1R,EAAA8B,MAAA7S,KAAA8S,YAAA,kLAKQyQ,6EACXA,kCACqBA,EAASupI,0BAA1BC,YACUA,EAASxrJ,gDAChBwrJ,EAAS,oCAGb,yQAIgB/sJ,KAAK4sJ,0BAAtBrpI,0CAEEA,EAASypI,0CACRzpI,2IAIGhD,GACZvgB,KAAKitJ,YAAY,CACfpB,IAAK7rJ,KAAK2sJ,UACVpsI,YAEFlf,OAAA0hB,EAAA,EAAA1hB,QAAAo7G,EAAA,EAAAp7G,CAAAqrJ,EAAAhyD,WAAA,0BAAA16F,MAAA85C,KAAA95C,KAA8B,CAAEwsJ,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAAtoJ,EAAA,OAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAAktJ,IAC5BroJ,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAA6rJ,GAAAr6I,MAAA7S,KAAS8S,aACJs6I,YAAa,EAClBvoJ,EAAKsoJ,iBAAmBA,EACxBtoJ,EAAK0e,SAAW,IAAI1e,EAAKsoJ,iBACzBtoJ,EAAKwoJ,eALuBxoJ,yLASvB7E,KAAKujB,WACRvjB,KAAKujB,SAAW,IAAIvjB,KAAKmtJ,mBAGvBntJ,KAAKujB,yCACDvjB,KAAKujB,SAAS+pI,2CACbttJ,KAAKujB,6PAKVvjB,KAAKujB,yCACMvjB,KAAKujB,SAASgqI,ySAKzBvtJ,KAAKujB,yCACMvjB,KAAKujB,SAASqpI,0SAKzB5sJ,KAAKujB,yCACMvjB,KAAKujB,SAASiqI,ySAKzBxtJ,KAAKujB,yCACMvjB,KAAKujB,SAAS68C,gTAKzBpgE,KAAKujB,yCACiBvjB,KAAKujB,SAASkqI,0BAAhCA,SACNztJ,KAAKotJ,YAAa,oBACXK,mPAKLztJ,KAAKujB,gCACPvjB,KAAKujB,SAASmqI,+BACP1tJ,KAAKujB,mHAxD+BkpI,KCA5BkB,cAEnB,SAAAA,EAAYhC,GAAQ,IAAA9mJ,EAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAA2tJ,GAAA,IACLC,EAAiEjC,EAAtEE,IAAiBhf,EAAqD8e,EAArD9e,QAASghB,EAA4ClC,EAA5CkC,UAAW3wH,EAAiCyuH,EAAjCzuH,QAAS4wH,EAAwBnC,EAAxBmC,WAAehC,EADnDzqJ,OAAA0qJ,EAAA,EAAA1qJ,CAC4DsqJ,EAD5D,6DAElB9mJ,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAAssJ,GAAA7zG,KAAA95C,KAAM8rJ,KAEDvoI,SAAW,KAChB1e,EAAKkpJ,WAAa,KAClBlpJ,EAAKgoI,QAAUA,EACfhoI,EAAKq4B,QAAUA,EACfr4B,EAAKgpJ,UAAYA,EACjBhpJ,EAAKipJ,WAAaA,EAClBjpJ,EAAK+oJ,WAAaA,EAVA/oJ,+LAcb7E,KAAK+tJ,aACR/tJ,KAAK+tJ,WAAa,IAAI/tJ,KAAK4tJ,WAAW,CACpCI,UAAU,EACVnhB,QAAS7sI,KAAK6sI,QACdghB,UAAW7tJ,KAAK6tJ,UAChBC,WAAY9tJ,KAAK8tJ,gBAIfvqI,EAAWvjB,KAAK4sJ,+CAEdrpI,EAASspI,yCACRtpI,2IAQT,OAHKvjB,KAAKujB,WACRvjB,KAAKujB,SAAWvjB,KAAK+tJ,WAAWE,iBAAiBjuJ,KAAK6tJ,UAAW7tJ,KAAKk9B,UAEjEl9B,KAAKujB,oFAGGA,6EACXA,kCAEqBA,EAASiJ,KAAK,mCAA/BugI,YACUA,EAASxrJ,gDAChBwrJ,EAAS,oCAGb,8PAIDxpI,EAAWvjB,KAAK4sJ,sCAEpB5sJ,KAAK+tJ,WAAWG,sBACV3qI,EAAS4qI,wCACR5qI,2IAIGhD,GACZvgB,KAAKitJ,YAAY,CACf1sI,UACAsrI,IAAK7rJ,KAAK4tJ,WACV/gB,QAAS7sI,KAAK6sI,QACd3vG,QAASl9B,KAAKk9B,QACd2wH,UAAW7tJ,KAAK6tJ,UAChBC,WAAY9tJ,KAAK8tJ,aAEnBzsJ,OAAA0hB,EAAA,EAAA1hB,QAAAo7G,EAAA,EAAAp7G,CAAAssJ,EAAAjzD,WAAA,0BAAA16F,MAAA85C,KAAA95C,KAA8B,CAAEwsJ,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAYzC,GAAQ,IAAA9mJ,EAAAxD,OAAAgxB,EAAA,EAAAhxB,CAAArB,KAAAouJ,GAAA,IACLC,EAA6D1C,EAAlEE,IAA4CyC,GAAsB3C,EAAtCj7G,eAAsCi7G,EAAtB2C,UAAaxC,EAD/CzqJ,OAAA0qJ,EAAA,EAAA1qJ,CACwDsqJ,EADxD,4CAElB9mJ,EAAAxD,OAAAm7G,EAAA,EAAAn7G,CAAArB,KAAAqB,OAAAo7G,EAAA,EAAAp7G,CAAA+sJ,GAAAt0G,KAAA95C,KAAM8rJ,KAEDvoI,SAAW,KAChB1e,EAAKwpJ,sBAAwBA,EAC7BxpJ,EAAKypJ,SAAWA,EANEzpJ,yLAUb7E,KAAKujB,WACRvjB,KAAKujB,SAAW,IAAIvjB,KAAKquJ,sBAAsB,CAC7CC,SAAStuJ,KAAKsuJ,aAIdtuJ,KAAKujB,yCACDvjB,KAAKujB,SAASspI,yCACb7sJ,KAAKujB,mRAKPvjB,KAAKujB,0PAIRvjB,KAAKujB,gCACPvjB,KAAKujB,SAAS4qI,0BACPnuJ,KAAKujB,mHA/BkCkpI,KCelD8B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIvpH,GAAMsnG,8/CAENkiB,GAAgBxpH,GAAIypH,gCACpBC,GAAiB1pH,GAAI2pH,8BACrBv+G,GAAiBljC,IAAc+S,QAAQ6iB,gBACvC8rH,GAAkB5pH,GAAI6pH,gCACtBC,GAAe9pH,GAAI+pH,yBACnBC,GAAgBhqH,GAAIiqH,yBAEpBC,GAAuB,GAE7BnuJ,OAAOC,KAAKkM,IAAc+S,QAAQgjB,UAAUk3G,OAAO18G,KAAKv8B,QAAQ,SAAC43B,EAAUpzB,GACzEozB,EAAYlnB,SAASknB,GACrBo2H,GAAqBp2H,GAAa5rB,IAAc+S,QAAQgjB,UAAUk3G,OAAO18G,IAAI3E,GAAWkM,GAAIo1G,uBAG9F,IAAM+U,GAAW,IAAIlB,GAAkB,CACrC/vH,kBAAmBhxB,IAAc+S,QAAQg6H,kBAGrCmV,GAAS,IAAIjB,GAAqB,CACtCkB,YAAaH,GAAqB9+G,MAI9Bk/G,GAAS,IAAIlB,GAAgB,CACjC7C,IAAKgE,IACLL,wBACA9+G,kBACAo+G,iBACAE,oBAGIc,GAAS,IAAInB,GAAgB,CACjCa,wBACA9+G,oBAGIq/G,GAAgB,IAAI3B,GAAuB,CAC/C19G,kBACA8+G,wBACA3D,IAAKwC,IACLC,SAAShpH,GAAIo1G,qBACbsV,OAAQ,qCAGJC,GAAY,IAAIrB,GAAmB,CACvC/C,IAAKqE,IACLzlG,OAAQykG,GACRiB,sBAAsB,IAGlBC,GAAS,IAAIvB,GAAgB,CACjChD,IAAKwE,IACLC,OAAQlB,GACR7uI,QAAS+uI,KAGL3C,GAAY,IAAID,EAAmB,CACvCb,IAAK0E,IACLhwI,QAAS/S,IAAc+S,QAAQstC,kBAAkBnd,IAAgBjpC,KAAKyF,gBAGlE6gJ,GAAa,IAAIJ,EAAoB,CACzC9B,IAAK+B,IACLI,UAAU,EACV9wH,QAASwT,GACTm8F,QAASr/H,IAAcq/H,QACvBghB,UAAW2B,GAAqB9+G,IAChCo9G,WAAY,8CAGRlC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK2E,IACL57C,WAAW,CACT67C,SAAU,aACVC,eAAe,EACfnwI,QAAS,CACPowI,KAAMnjJ,IAAc+S,QAAQstC,kBAAkBnd,IAAgBjpC,KAAKyF,cACnEgwB,QAASwT,GACTqrG,YAAavuI,IAAc+S,QAAQstC,kBAAkBnd,IAAgBjpC,KAAKyF,eAE5E0jJ,iBAAiB,KAMNviB,GAAA,CACbohB,YACAC,UACAK,iBACAjhB,OANa,IAAIoe,EAAoBC,qBAOrCY,cACAkC,aACAG,UACAzD,aACAf,SACAgE,UACAE,mFCtFae,oLAxBX,OACEjoJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKvC,MAVa,CAClB2H,SAAU,QACVvB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPxL,MAAO,OACPiN,OAAQ,MAIiBe,gBAAiB,uBAAwBxN,EAAG,GACnEmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKpH,EAAG,GACNmH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,UAAU7B,MAAM,OAAO8B,KAAK,QAEzCkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,UACnByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,QAAlB,0CAGAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,+CAC0C,IACxCD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWrgB,MAAO,CAAEk7G,cAAe,eAAnC,IACIxhH,KAAKE,MAAMqgB,QAAQkZ,QAAQhyB,KAD/B,KAEa,IAJf,sEArBqB6xG,IAAMp3G,WCexB4uJ,oLAZX,OACEloJ,EAAA9G,EAAAC,cAAA,YAC8C,IAA1C/B,KAAKE,MAAMqgB,QAAQwwI,oBAAgC/wJ,KAAKE,MAAMogB,MAC9D1X,EAAA9G,EAAAC,cAACivJ,GAAD,CACEzwI,QAASvgB,KAAKE,MAAMqgB,kBANN+4F,IAAMp3G,iFCiIjB+uJ,8MA/HbC,cAAgB,WACd,OACEtoJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CACE5lJ,SAAU,EACVC,WAAY,EACZkuG,WAAY,UACZ/kG,GAAI,GAJN,uCASCqiJ,KAAWC,iBACVxoJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,8GAE6C,IAC3ClG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BApe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,qGAE0C,IACxClG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,8BACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,2BACLa,MAAM,2BACNf,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,iCACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,iCACLa,MAAM,0BACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCApe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWkhG,MAAI,GAAf,0BADF,2DAE8C,IAC5Cj/G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAWl5G,KAAKE,MAAMy1G,YAC/B/sG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACGp5G,KAAKkxJ,0BAxHe53C,IAAMp3G,WCiDxBmvJ,oLAxCX,OACEzoJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpH,EAAG,EAAG8E,SAAU,SACpBqC,EAAA9G,EAAAC,cAAC8G,EAAA,EAAOzC,KAAR,CACEkrJ,UAAQ,EACRvjJ,KAAM,QACNnI,MAAO,YACPqI,SAAU,WACVzB,IAAK,EACLC,MAAO,EACPuP,GAAI,EACJqC,GAAI,EACJvY,QAAS9F,KAAKE,MAAMy1G,aAGtB/sG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUC,eAAgB,iBAC7CwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAU0N,GAAI,GAClClG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,UAAU7B,MAAM,OAAO8B,KAAK,QAGzCkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CAAYx8I,GAAI,GAAhB,uBAEAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,4GAKAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,SAArB,qCAjCc4xG,IAAMp3G,WC0CnBsvJ,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBhsI,OAAOwd,SAChBwuH,EAAoD,qBAA/BhsI,OAAOwd,SAASyuH,WACL,qBAAhBjsI,OAAOnF,OACvBmxI,EAAgE,qBAA3ChsI,OAAOnF,KAAK8c,gBAAgBs0H,YAA8BjsI,OAAOnF,KAAK8c,gBAAgBs0H,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBlsI,OAAOnF,MAA+D,qBAAhCmF,OAAOnF,KAAK8c,kBACL,qBAAxC3X,OAAOnF,KAAK8c,gBAAgBw0H,SAA2BnsI,OAAOnF,KAAK8c,gBAAgBw0H,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBpsI,OAAOnF,MAA+D,qBAAhCmF,OAAOnF,KAAK8c,kBACI,qBAAjD3X,OAAOnF,KAAK8c,gBAAgBy0H,kBAAoCpsI,OAAOnF,KAAK8c,gBAAgBy0H,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1BrsI,OAAOssI,eAM9B,MAJ+B,qBAApBtsI,OAAOwd,WAChB6uH,EAAgD,qBAA7BrsI,OAAOwd,SAAS+uH,UAA4BvsI,OAAOwd,SAAS+uH,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAc/gB,KAAK2W,UAAUC,YAGtCoK,UAAW,WACT,IAAMA,IAAY,WAAWhhB,KAAK2W,UAAUC,WAE5C,OAAOoK,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmBjhB,KAAK2W,UAAUC,YAAeriI,OAAO2sI,UAI1D,OAAOD,IC0BIE,8MA7DbnB,cAAgB,WACd,OACEtoJ,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CAAYx8I,GAAI,GAAhB,iBACiBjK,EAAK3E,MAAMqgB,QAAQ8Y,SAAS5xB,KAD7C,cAC8D,IAC3D+pJ,GAAYC,cAAZ,uBAGH7oJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,iCACiC,IAC/BlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWrgB,MAAO,CAAEk7G,cAAe,eAChC38G,EAAK3E,MAAMqgB,QAAQ8Y,SAAS5xB,MAClB,IAJf,wCAKmC,IACjCmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAWrgB,MAAO,CAAEk7G,cAAe,eAChC,IACA38G,EAAK3E,MAAMqgB,QAAQkZ,QAAQhyB,MACjB,IATf,YAaC+pJ,GAAYC,gBAAkBa,KAAYlB,iBACzCxoJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKwnB,GAAI,UAAW5uB,EAAG,EAAGiH,QAAS,CAAC,OAAQ,UAC1CE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKoF,SAAU,WAAYhN,MAAO,OAChC2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAM,UAGlBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,GAAlB,oCACAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,GAAlB,sCAMJ,KAEJiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKH,QAAS,CAAC,QAAS,SACtBE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQ/C,QAASjB,EAAK3E,MAAMy1G,WAAY10G,MAAO,GAA/C,iFASN,OACE2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAWl5G,KAAKE,MAAMy1G,YAC/B/sG,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACGryG,KAAKkxJ,0BAtDc53C,IAAMp3G,kDCiDvBqwJ,OA3Df,SAA6BryJ,GAC3B,OACE0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAO,6CAA8CggG,SAAU,wDAAyD0qC,UAAW,0EACrJ5pJ,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChB0N,GAAI,CAAC,EAAG,IACRlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAIiQ,GAAI,GACtDzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,cACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,oBACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,UAA9B,6FAKFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAIiQ,GAAI,GACtDzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,qBACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,0BACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,UAA9B,6DAIFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAIiQ,GAAI,GACtDzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,iBACL7B,MAAM,UACN8B,KAAK,QAEPkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,gBACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,wBACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,UAA9B,qGC1CN4V,GAAY,WAAc,QAAAwU,EAAAzlB,UAAAvR,OAAVrB,EAAU,IAAAs4B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVv4B,EAAUu4B,GAAA3lB,UAAA2lB,IAEjB,SAASg6H,GAAsBvyJ,GAC5C,IAAMwyJ,EAAUC,2BAEXD,EAAQr/C,QAAWq/C,EAAQzzI,MAErByzI,EAAQzzI,MACjB8E,GAAU,gBAAiB2uI,GAE3B3uI,GAAU,kBAAmB2uI,GAJ7B3uI,GAAU,kBAAmB2uI,GAO/B,IAAME,EAAY,eAAA7hJ,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAuQ,EAAOu/F,EAAcv5G,GAArB,IAAAorJ,EAAA,OAAApgI,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cACfohJ,EAAmC,aAAlB7xC,EAA+Bv5G,EAAOu5G,EACvD/7F,eACFA,aAAauwC,QAAQ,iBAAkBq9F,GACvC5tI,aAAauwC,QAAQ,gBAAiBwrD,IAGpC9gH,EAAM0yJ,cAA8C,oBAAvB1yJ,EAAM0yJ,cACrC1yJ,EAAM0yJ,aAAa5xC,EAAc6xC,GAIK,oBAA7B3yJ,EAAM4yJ,oBACf5yJ,EAAM4yJ,qBAbWnxI,EAAAe,OAAA,SAgBZs+F,GAhBY,wBAAAr/F,EAAAhP,SAAA8O,EAAAzhB,SAAH,gBAAAwiB,EAAAC,GAAA,OAAA1R,EAAA8B,MAAA7S,KAAA8S,YAAA,GAoBZigJ,EAAc,eAAA9+I,EAAA5S,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAgR,IAAA,OAAAuQ,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OACrBihJ,EAAQK,iBACJ7yJ,EAAM0yJ,cAA8C,oBAAvB1yJ,EAAM0yJ,cACrC1yJ,EAAM0yJ,aAAa,SAAS,UAHT,wBAAAvwI,EAAA1P,SAAAuP,EAAAliB,SAAH,yBAAAiU,EAAApB,MAAA7S,KAAA8S,YAAA,GAUdm/I,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBkB,EAAaxB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BsB,IAAiB5kB,GAAWS,OAAOvrH,SAAS2vI,KAC5CrB,EAAmBL,GAAYK,mBAC/BsB,EAAwBH,GAAcf,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoBlzJ,EAAMkzJ,kBAC1BC,EAAenzJ,EAAMmzJ,aAEvBhlB,GAAW+hB,SACTiD,GACFhlB,GAAW+hB,OAAOr1I,QAAUszH,GAAW+hB,OAAOr1I,SAAW,GACzDszH,GAAW+hB,OAAOr1I,QAAQu4I,uBAAwB,IAElDjlB,GAAW+hB,OAAOr1I,QAAUszH,GAAW+hB,OAAOr1I,SAAW,GACzDszH,GAAW+hB,OAAOr1I,QAAQu4I,uBAAwB,IAItD,IAAIC,EAAsBlyJ,OAAOC,KAAK+sI,IAAY18H,OAAO,SAAA6nB,GAAC,MAAU,WAANA,IAO9D,GALI45H,IACFG,EAAsBA,EAAoB5hJ,OAAO,SAAA6lB,GAAC,OAA4F,IAAxF47H,EAAkBnwJ,IAAI,SAAC0H,GAAQ,OAAOA,EAAEuC,gBAAkB4P,QAAQ0a,EAAEtqB,kBAIxH+lJ,EAAa,CACf,IAAMO,EAAgBD,EAAoBz2I,QAAQ,YAElDy2I,EAAoBlqG,OAAOmqG,EAAc,GAEzC,IAAMC,EAAcF,EAAoBz2I,QAAQ,UAChDy2I,EAAoBlqG,OAAOoqG,EAAY,GAEvCF,EAAoBhwF,QAAQ,cACvB,CACL,IAAMkwF,EAAcF,EAAoBz2I,QAAQ,UAEhDy2I,EAAoBlqG,OAAOoqG,EAAY,GAGzC,IAAMvlI,EAAUqlI,EAAoBtwJ,IAAK,SAAC+9G,EAAch7G,GACtD,OAAQg7G,GACN,IAAK,WACH,GAAImyC,EAAuB,CACzB,IAAI1rJ,EAAO,KACPurJ,EACFvrJ,EAAO,WACEwqJ,EACTxqJ,EAAO,QACEuqJ,EACTvqJ,EAAO,SACEoqJ,EACTpqJ,EAAO,WACEkqJ,IACTlqJ,EAAO,eAGT,IAAMisJ,EAAgBlmJ,IAAc6gI,WAAW5mI,EAAKyF,eACpD,GAAIwmJ,GAAiBA,EAAc5/H,QAAQ,CACzC,IAAM6/H,EAAaD,EAAc3lJ,KAAO2lJ,EAAc3lJ,KAAnC,GAAAtK,OAA6CgE,EAAKyF,cAAlD,QACnB,OACEtE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP6C,IAAG,UAAAL,OAAYgE,GACfrG,eAAgB,gBAChBkF,MAAO,CACL4pB,KAAK,UAEP/uB,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAET+yG,QAAS1wG,EACT3E,UAAU,EACV7B,MAAO,CAAC,EAAE,KACVgd,WAAY,CAAChd,MAAM,OAAOoE,OAAO,QACjCmzG,SAAQ,qBAAA/0G,OAAuBkwJ,GAC/B1uJ,YAAW5D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAC,IAAA,OAAAshB,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBmhJ,EAAa5xC,EAAcv5G,GAA7C,cAAA8J,EAAAmR,OAAA,SAAAnR,EAAAgD,MAAA,wBAAAhD,EAAAoB,SAAAxB,EAAAnR,SACd8oI,WAAa4qB,GAAiBA,EAAc5qB,WAAa4qB,EAAc5qB,WAA1D,iBAAArlI,OAAwFgE,KAEvGmB,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAETtC,UAAU,EACV7B,MAAO,CAAC,EAAE,KACVk3G,QAAS,gBACTK,SAAQ,wBACRswB,WAAY,4BACZ7qH,WAAY,CAAChd,MAAM,OAAOoE,OAAO,QACjCJ,YAAc,SAAA8B,GAAC,OAAI7G,EAAMymD,kBAAiB,OAKlD,OAAO,KAEP,IAAM+sG,EAAgBlmJ,IAAc6gI,WAAWrtB,EAAc9zG,eAC7D,OACEtE,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAETtC,UAAU,EACVq1G,QAAS,iBACTr0G,IAAG,UAAAL,OAAYu9G,GACf/iG,WAAY,CAAChd,MAAM,OAAOoE,OAAO,QACjCmzG,SAAQ,uCACRvzG,YAAW5D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAgD,IAAA,OAAAue,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAAkBmhJ,EAAa5xC,GAA/B,cAAA5sG,EAAAsO,OAAA,SAAAtO,EAAAG,MAAA,wBAAAH,EAAAzB,SAAAuB,EAAAlU,SACd8oI,WAAa4qB,GAAiBA,EAAc5qB,WAAa4qB,EAAc5qB,WAA1D,iCACb8qB,YAAc1zJ,EAAM4C,SAAW,CAAC1B,eAAe,aAAa8uB,KAAK,UAAY,CAAC9uB,eAAe,aAAa8uB,KAAK,WAIvH,QACE,IAAMwjI,EAAgBlmJ,IAAc6gI,WAAWrtB,EAAc9zG,eAC7D,GAAIwmJ,GAAiBA,EAAc5/H,QAAQ,CACzC,IAAM6/H,EAAaD,EAAc9kB,UAAY8kB,EAAc9kB,UAAa8kB,EAAc3lJ,KAAO2lJ,EAAc3lJ,KAAnC,GAAAtK,OAA6Cu9G,EAAc9zG,cAA3D,QAEpEirG,EAAUu7C,EAAcjsJ,KAAOisJ,EAAcjsJ,KAAOu5G,EACxD,OACEp4G,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAETtC,UAAU,EACVq1G,QAASA,EACTr0G,IAAG,UAAAL,OAAYu9G,GACfxI,SAAQ,qBAAA/0G,OAAuBkwJ,GAC/B11I,WAAY,CAAChd,MAAM,OAAOoE,OAAO,QACjCJ,YAAW5D,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAA+R,IAAA,OAAAwP,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,cAAA0R,EAAA1R,KAAA,EAAkBmhJ,EAAa5xC,GAA/B,cAAA79F,EAAAT,OAAA,SAAAS,EAAA5O,MAAA,wBAAA4O,EAAAxQ,SAAAsQ,EAAAjjB,SACd8oI,WAAa4qB,GAAiBA,EAAc5qB,WAAa4qB,EAAc5qB,WAA1D,iBAAArlI,OAAwFu9G,GACrG4yC,YAAc1zJ,EAAM4C,SAAW,CAAC1B,eAAe,aAAa8uB,KAAK,UAAY,CAAC9uB,eAAe,aAAa8uB,KAAK,WAIrH,OAAO,QAIb,OACEtnB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAK5H,MAAO,CAAC,IACX2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUD,WAAY,UACxCwxJ,EAAQzzI,OACPrW,EAAA9G,EAAAC,cAAC8G,EAAA,EAAKpH,EAAN,CAAQ0M,UAAU,UAAlB,+DAEEvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMoe,KAAK,uBAAuBF,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMoe,KAAK,8BAA8BF,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBA0rI,EAAQr/C,QAAWq/C,EAAQzzI,OAASyzI,EAAQ1xC,gBAA6C,WAA1B0xC,EAAQ1xC,eACvEp4G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CACEtwJ,MAAO,CAAC,IACR6H,UAAW,CAACC,KAAOynB,QACnBpiB,GAAI,CAAC,EAAG,GACR1G,KAAM,QACN5D,IAAK,QACLgC,QAAOzE,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAE,SAAA+S,IAAA,OAAAwO,EAAA3wB,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,cAAA2S,EAAA3S,KAAA,EAAkBshJ,IAAlB,cAAA3uI,EAAA1B,OAAA,SAAA0B,EAAA7P,MAAA,wBAAA6P,EAAAzR,SAAAsR,EAAAjkB,UAER0yJ,EAAQr/C,OAAS,uBAAyB,UAIjDzqG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE0vG,SAAU,OACVp3G,cAAe,MACfC,eAAgB,iBAEf8sB,kBCkVM2lI,8MApiBbzxJ,MAAQ,CACNonI,WAAU,EACVsqB,YAAW,EACXltG,cAAc,GACdmtG,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBr0J,cAAgB,OAShBs0J,iBAAmB,SAAAttJ,GACjBA,EAAE6H,iBAEF/J,EAAKoD,SAAS,CACZ6rJ,YAAajvJ,EAAKzC,MAAM0xJ,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARI9uI,eACF8uI,EAAiB9uI,aAAaC,QAAQ,oBAEpCrgB,EAAKoD,SAAS,CACZ8rJ,mBAICA,KAGT3jJ,kBAAoB,WAClBvL,EAAKzE,YACLyE,EAAKyvJ,sBAGP53C,mBAAqB,WACnB73G,EAAKzE,eAGPy1G,WAAa,SAAA9uG,GACXlC,EAAKoD,SAAS,CACZ6rJ,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBxB,mDAAe,SAAAnxI,EAAOu/F,EAAcv5G,GAArB,IAAAorJ,EAAA,OAAApgI,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,cACTohJ,EAAmC,aAAlB7xC,EAA+Bv5G,EAAOu5G,EAG3Dn8G,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAc,UACdC,WAAWyzI,EACXvzI,YAAY,kBAGVza,EAAK3E,MAAM0yJ,cAAmD,oBAA5B/tJ,EAAK3E,MAAM0yJ,cAC/C/tJ,EAAK3E,MAAM0yJ,aAAa5xC,EAAc6xC,GAIxChuJ,EAAKoD,SAAS,CACZmsJ,oBAAqBpzC,IAGvBn8G,EAAK0vJ,iBAnBQ5yI,EAAAe,OAAA,SAqBNs+F,GArBM,wBAAAr/F,EAAAhP,SAAA8O,EAAAzhB,mEA0Bfu0J,eAAiB,WACf,IAAML,EAAqBrvJ,EAAKzC,MAAM8xJ,mBAAqBrvJ,EAAKzC,MAAM8xJ,mBAAmB,EAAI,EACxFA,EAGH1vI,WAAW,WAAQ3f,EAAK0vJ,kBAAmB,KAF3C1vJ,EAAK8wG,aAIP9wG,EAAKoD,SAAS,CACZisJ,0BAIJM,gBAAkB,SAACztJ,EAAE0tJ,GACnB1tJ,EAAE6H,iBACF/J,EAAKoD,SAAS,CACZmsJ,oBAAqBK,OAIzB9+C,WAAa,WAEX9wG,EAAKgxG,aAELhxG,EAAKyvJ,mBAELzvJ,EAAK3E,MAAMy1G,gBAGb++C,kBAAoB,SAAC3tJ,EAAEgtJ,GACrBhtJ,EAAE6H,iBACF/J,EAAKoD,SAAS,CACZ8rJ,mBAGmB,iBAAjBA,IAEFlvJ,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,cACbF,WAAY20I,IAGdlvJ,EAAK9E,cAAculB,gBAAgB,iBAAiByuI,OAIxDY,qBAAuB,WAErB,OADqB9vJ,EAAK9E,cAAc0+B,aAAa55B,EAAKzC,MAAMwkD,gBAE9D/hD,EAAK8hD,kBAAiB,GACtB9hD,EAAK9E,cAAc4mD,iBAAiB9hD,EAAKzC,MAAMwkD,eAC/C/hD,EAAK+tJ,aAAa,SAAS,UAC3BpuI,WAAW,WAAQ3f,EAAK8wG,cAAe,MAChC,GAEA9wG,EAAKoD,SAAS,CACnBksJ,oBAAmB,OAKzBS,oBAAsB,SAAC7tJ,GACrB,IACM6/C,EAAgB7/C,EAAEggB,OAAOlc,MACzB2+H,EAAY3kI,EAAK9E,cAAc0+B,aAAamoB,GAClD/hD,EAAKoD,SAAS,CACZuhI,YACA5iF,gBACAutG,oBANyB,OAU7BxtG,iBAAmB,SAACstG,GAClBpvJ,EAAKoD,SAAS,CACZgsJ,wBAIJY,mBAAqB,WAEnB,IAAMC,EACJlsJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMsF,UAAW,SAAUzI,SAAU,EAAGqJ,GAAI,CAAC,EAAE,IAA/C,kCAAkFnG,EAAA9G,EAAAC,cAACgzJ,GAAA,EAAD,CAAYr6H,GAAG,oBAAoB90B,MAAO,UAAWU,MAAO,CAACV,MAAMf,EAAK3E,MAAM0G,MAAMC,OAAOiiB,QAAQmyG,eAAe,aAAcl0G,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhFguI,EAA8C,QAA9BnwJ,EAAKzC,MAAM2xJ,eAC3BkB,EAAsD,WAA9BpwJ,EAAKzC,MAAM2xJ,eAGzC,MAFuD,iBAA9BlvJ,EAAKzC,MAAM2xJ,eAIhCnrJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAO,qBAAsBggG,SAAU,4DACzDl/G,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChB0N,GAAI,CAAC,EAAG,IAERlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAIiQ,GAAI,GACtDzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,SACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,4BACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,UAA9B,4IAMFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAIiQ,GAAI,GACtDzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,uBACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,4BACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAG0I,GAAI,EAAGD,UAAW,UAArC,kJAG2BvF,EAAA9G,EAAAC,cAAA,WACzB6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEif,MAAM,wCACNniB,WAAY,IACZC,MAAO,OACPuI,UAAW,SACXtI,WAAY,OACZohB,KAAK,IACLnhB,QAASjB,EAAKwvJ,kBAPhB,gCAaJzrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKqnB,KAAM,MAAOjvB,MAAO,EAAG+a,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,IAC9CxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMzH,eAAgB,SAAUgN,GAAI,GAClCxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAK,SACL7B,MAAM,UACN8B,KAAK,SAGTkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAASnD,SAAU,EAAGyI,UAAW,UAAjC,gCACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,UAA9B,6GAWRtJ,EAAKzC,MAAM6xJ,iBAEXrrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CACErxF,MAAO,qBACP/Z,KAAM,uBACN+5G,SAAU,+BAGZl/G,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPoG,SAAU,CAAC,EAAE,QACblG,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP2M,MAAO,oBAEPhF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwwB,UAAQ,EACRp4B,MAAO,EACPR,KAAM,OACNqI,UAAWC,KAAO8nB,MAClBxkB,YAAa,aACb4C,gBAAiB,SACjBm9H,QAAS,sBACTvhI,MAAOhG,EAAKzC,MAAMwkD,cAClBzpC,SAAW,SAAApW,GAAC,OAAIlC,EAAK+vJ,oBAAoB7tJ,IACzC8xG,YAAa,qCAIfh0G,EAAKzC,MAAM+xJ,oBACTvrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ1I,SAAU,EACVE,MAAO,MACPD,WAAY,EACZwI,UAAW,UALb,mCAWJvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmG,GAAI,CAAC,EAAE,GACPhG,GAAI,OACJrD,WAAY,EACZ+B,KAAM,SACNhC,SAAU,CAAC,EAAE,GACbwB,aAAc,EACdq3G,cAAe,UACfz1G,UAAW,CAACC,KAAO0nB,gBACnB3qB,QAAU,SAAAiB,GAAC,OAAIlC,EAAK8vJ,yBATtB,YAcF/rJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJ1hB,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEhD,WAAY,OACZsI,UAAW,SACXrI,QAAU,SAAAiB,GAAC,OAAIlC,EAAK8hD,kBAAiB,KAHvC,0BAQAmuG,IAMNG,EAEArsJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAO,qBAAsBggG,SAAU,6BAA8B/5G,KAAM,yBAC7FnF,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,EAAG+N,GAAI,CAAC,EAAE,GAAI7N,cAAe,SAAUC,eAAgB,UAClEwH,EAAA9G,EAAAC,cAAC0wJ,GAAD,CACExxJ,MAAO,GACP6B,SAAU+B,EAAK3E,MAAM4C,SACrB8vJ,aAAc/tJ,EAAK+tJ,aACnBE,mBAAoBjuJ,EAAK8wG,WACzBjuG,KAAM7C,EAAK3E,MAAM4C,SAAW,SAAW,QACvC6jD,iBAAkB9hD,EAAK8hD,iBAAiBjmC,KAAtBrf,OAAA6zJ,GAAA,EAAA7zJ,QAAA6zJ,GAAA,EAAA7zJ,CAAAwD,QAGtB+D,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM+Z,GAAI,EAAG1hB,WAAY,SAAUE,eAAgB,UACjDwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMsF,UAAW,SAAUtI,WAAY,OAAQC,QAAU,SAAAiB,GAAC,OAAIlC,EAAK6vJ,kBAAkB3tJ,EAAE,SAAvF,0BAEA+tJ,IAMNE,EAEApsJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAO,0CAA4C/Z,KAAM,yBAC3EnF,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KAEKv0G,EAAKzC,MAAMgyJ,oBAoCVxrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGyI,UAAW,SAAUxI,WAAY,EAAGkuG,WAAY,KAAnE,4BAC4BhvG,EAAKzC,MAAMgyJ,oBADvC,uBAGAxrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ5a,eAAgB,SAChBF,WAAY,SACZiN,UAAW,UACXvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,SALf,IAKyBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGG,MAAO,aAApB,cAA6Cf,EAAKzC,MAAM8xJ,mBAAxD,iBA5C3BtrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,EAAG+N,GAAI,CAAC,EAAE,GAAI7N,cAAe,SAAUC,eAAgB,UAClEwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKuF,GAAI,GACPxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,CAAC,EAAE,GAAIyI,UAAW,SAAUxI,WAAY,EAAGkuG,WAAY,KAAvE,yCAIFjrG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,EAAGjN,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFwH,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAET+yG,QAAS,aACTK,SAAU,mBACV11G,SAAU+B,EAAK3E,MAAM4C,SACrBgmI,WAAY,oBACZ7jI,YAAc,SAAA8B,GAAC,OAAIlC,EAAK+tJ,aAAa,SAAS,WAC9C30I,WAAapZ,EAAK3E,MAAM4C,SAAW,CAAC7B,MAAM,OAAOoE,OAAO,QAAU,CAAC+I,GAAG,MAAMnN,MAAM,OAAOoE,OAAO,UAElGuD,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAET+yG,QAAS,mBACTr1G,SAAU+B,EAAK3E,MAAM4C,SACrB01G,SAAU,oBACVswB,WAAY,uBACZ7jI,YAAc,SAAA8B,GAAC,OAAIlC,EAAK+tJ,aAAa,YAAY,cACjD30I,WAAapZ,EAAK3E,MAAM4C,SAAW,CAAC7B,MAAM,OAAOoE,OAAO,QAAU,CAAC+I,GAAG,MAAMnN,MAAM,OAAOoE,OAAO,WAGpGuD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,SAAUE,eAAgB,UAC1CwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMsF,UAAW,SAAUtI,WAAY,OAAQC,QAAU,SAAAiB,GAAC,OAAIlC,EAAK6vJ,kBAAkB3tJ,EAAE,YAAvF,6BAkBN+tJ,IAORlsJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAO,kBAAmB/Z,KAAM,yBAClDnF,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KAEIxwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACP+N,GAAI,CAAC,EAAE,GACP7N,cAAe,SACfC,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKuF,GAAI,GACPxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACElD,WAAY,EACZD,SAAU,CAAC,EAAE,GACbmuG,WAAY,IACZ1lG,UAAW,UAJb,wCASFvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,CAAC,EAAE,GACPlN,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAET+yG,QAAO,kBACPr1G,SAAU+B,EAAK3E,MAAM4C,SACrBgmI,WAAY,wBACZtwB,SAAU,6BACVvzG,YAAc,SAAA8B,GAAC,OAAIlC,EAAK6vJ,kBAAkB3tJ,EAAE,WAC5CkX,WAAYpZ,EAAK3E,MAAM4C,SAAW,CAAC7B,MAAM,OAAOoE,OAAO,QAAU,CAACpE,MAAM,OAAOoE,OAAO,OAAO8vJ,aAAa,SAE5GvsJ,EAAA9G,EAAAC,cAAC4gH,GAAA,EAAD,CACEx9G,YAAa,CACXC,OAAO,GAET+yG,QAAO,aACPr1G,SAAU+B,EAAK3E,MAAM4C,SACrBgmI,WAAY,oBACZtwB,SAAU,wBACVvzG,YAAc,SAAA8B,GAAC,OAAIlC,EAAK6vJ,kBAAkB3tJ,EAAE,QAC5CkX,WAAYpZ,EAAK3E,MAAM4C,SAAW,CAAC7B,MAAM,OAAOoE,OAAO,QAAU,CAACpE,MAAM,OAAOoE,OAAO,OAAO8vJ,aAAa,UAG9GvsJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,SACZE,eAAgB,UAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,UACPC,WAAY,UACZC,QAAU,SAAAiB,GAAC,OAAIlC,EAAK8hD,kBAAiB,KAHvC,4BAUJmuG,OAMVM,aAAe,WAEb,OAAIvwJ,EAAKzC,MAAMgyJ,qBAAwBvvJ,EAAKzC,MAAM2xJ,gBAAkBlvJ,EAAKzC,MAAM6xJ,iBACtE,KAIPrrJ,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUtD,OAAX,KACKx0G,EAAKzC,MAAM2xJ,iBAcNlvJ,EAAKzC,MAAM6xJ,kBAAgD,iBAA5BpvJ,EAAKzC,MAAM2xJ,iBAC9CnrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO0nB,eAAe1nB,KAAO2nB,OACzC5qB,QAASjB,EAAKgxG,WACdnuG,KAAM,SACNR,aAAc,EACdq3G,cAAe,OACf54G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbsD,GAAI,OACJgG,GAAI,CAAC,EAAE,IATT,QAdApG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO0nB,eAAe1nB,KAAO2nB,OACzC5qB,QAAU,SAAAiB,GAAC,OAAIlC,EAAK6vJ,kBAAkB3tJ,EAAE,iBACxCW,KAAM,SACNR,aAAc,EACdq3G,cAAe,OACf54G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbsD,GAAI,OACJgG,GAAI,CAAC,EAAE,IATT,kGA9dJhP,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,wCA6f9C,OACE0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAWl5G,KAAK21G,aACE,IAA1B31G,KAAKoC,MAAM0xJ,WACVlrJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACGryG,KAAK60J,qBACL70J,KAAKo1J,gBAGRxsJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAACszJ,GAAD,MACCr1J,KAAKo1J,yBA5hBU97C,IAAMp3G,WCkCrBozJ,8MA9CbpE,cAAgB,WACd,OACEtoJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CAAYx8I,GAAI,GAAhB,4BAEAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,kFAEqB,IAClB0iJ,GAAYC,cAAZ,2CAHH,KASA7oJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKwnB,GAAI,UAAW5uB,EAAG,EAAGiH,QAAS,CAAC,OAAQ,UAC1CE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKoF,SAAU,WAAYhN,MAAO,OAChC2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAM,UAGlBkB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,GAAlB,0CAGAiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMlD,WAAY,GAAlB,mHASV,OACEiD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAWl5G,KAAKE,MAAMy1G,YAC/B/sG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACGp5G,KAAKkxJ,0BAvCmB53C,IAAMp3G,WCmC5BqzJ,8MA1CbC,iBAAmB,SAAAngC,GACjBxwH,EAAK3E,MAAMy1G,aACX9wG,EAAK3E,MAAMu1J,iBAGbvE,cAAgB,WACd,OACEtoJ,EAAA9G,EAAAC,cAAC6G,EAAA9G,EAAMuwG,SAAP,KACEzpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,CAAYx8I,GAAI,GAAhB,sDAIAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,GAAV,8EAKAlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAY4a,GAAI,GACtEpT,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgBzrJ,QAASjB,EAAK3E,MAAMy1G,WAAYt3F,GAAI,CAAC,EAAG,GAAIjQ,GAAI,CAAC,EAAG,IAApE,qBAGAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQ/C,QAASjB,EAAK2wJ,kBAAtB,wFASN,OACE5sJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAWl5G,KAAKE,MAAMy1G,YAC/B/sG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACGp5G,KAAKkxJ,0BAnCwB53C,IAAMp3G,WCiRjCwzJ,8MApQbtzJ,MAAQ,CACNuzJ,eAAe,EACf7B,YAAY,KAGd8B,gBAAkB,WAChB/wJ,EAAKoD,SAAS,CACZ0tJ,eAAgB9wJ,EAAKzC,MAAMuzJ,mBAI/BtB,iBAAmB,SAAAttJ,GACjBmyB,QAAQ8a,IAAI,aAAcnvC,EAAKzC,MAAM0xJ,YACrC/sJ,EAAE6H,iBAEF/J,EAAKoD,SAAS,CACZ6rJ,YAAajvJ,EAAKzC,MAAM0xJ,sFAK1B,OACElrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAG,GACR/lH,GAAI,CAAC,EAAG,GACRuc,GAAI,CAAC,OAAQ,GACb42F,GAAI,CAAC,OAAQ,GACbjzG,SAAU,QACVC,SAAU,SACVyH,SAAU,YAEVrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKoF,SAAU,YACbrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEzH,eAAgB,WAChBid,GAAI,CAAC,GAAI,GACTrC,GAAI,CAAC,SAAU,GACf/N,SAAU,WACVzB,IAAK,IACLG,KAAM,IACNF,MAAO,IACP4jB,GAAI,QACJniB,OAAQ,KAERtF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAOzC,KAAR,CACEkrJ,UAAQ,EACRvjJ,KAAM,QACNnI,MAAO,YACPE,QAAS9F,KAAKE,MAAMy1G,gBAKI,IAA7B31G,KAAKoC,MAAMuzJ,gBACc,IAA1B31J,KAAKoC,MAAM0xJ,WACTlrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnBmwH,UAAW,uBAEX/tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKmG,GAAI,CAAC,EAAG,GAAI4T,GAAI,CAAC,EAAG,GAAI42F,GAAI,CAAC,EAAG,IAGnC5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKgtJ,aAAa,SAAS9mJ,GAAI,GAC7BnG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQyiJ,GAAT,+CAIF1iJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,GAAV,+KAG8D,IAC5DxF,EAAA9G,EAAAC,cAAA,kDAAkD,IAClD6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEif,MAAM,wCACNguI,GAAI,IACJ7uI,KAAK,IACLnhB,QAAS9F,KAAKq0J,kBAJhB,+BAUFzrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,yBAEAt8G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3H,WAAY,UACZ8H,GAAI,EACJoF,GAAI,CAAC,EAAG,GACR4N,GAAI,CAAC,EAAG,GACRu8F,SAAU,CAAC,OAAQ,YAEnB3vG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKpH,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzB2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfC,eAAgB,gBAChBiE,OAAQ,QAERuD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQktJ,GAAT,iCACAntJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAS,KAAf,oKAQFkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgBziJ,GAAI,GAClBlG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,YAAY4W,GAAI,IAD7B,qBAONzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKpH,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzB2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfC,eAAgB,gBAChBiE,OAAQ,QAERuD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQktJ,GAAT,sCAGAntJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAS,KAAf,gIAMFkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgBziJ,GAAI,EAAGhJ,QAAS9F,KAAK41J,iBACnChtJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,oBAAoB4W,GAAI,IADrC,8BAWZzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR4T,GAAI,EACJ42F,GAAI,EACJnpF,GAAI,SAGJznB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM65G,UAAW,EAAGr2G,YAAa,SACjCzD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM+Z,GAAI,EAAGxhB,eAAgB,CAAC,SAAU,aACtCwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQ/C,QAAS9F,KAAKE,MAAMy1G,WAAY10G,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHjB,KAAKoC,MAAMuzJ,cACV/sJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKuF,GAAI,GACPxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnBmwH,UAAW,uBAEX/tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKmG,GAAI,CAAC,EAAG,GAAI4T,GAAI,CAAC,EAAG,GAAI42F,GAAI,CAAC,EAAG,IAEnC5wG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,EAAG1N,eAAgB,UAC3BwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAM,IACNmD,MACE7K,KAAKE,MAAMwQ,QAAU1Q,KAAKE,MAAMwQ,QAAU,gBAKhD9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAYiG,GAAI,EAAG7B,QAASjN,KAAKE,MAAMwQ,UACvC9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,MAKdxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR4T,GAAI,EACJ42F,GAAI,EACJnpF,GAAI,SAGJznB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM65G,UAAW,EAAGr2G,YAAa,SACjCzD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMmT,GAAI,EAAG5a,eAAgB,CAAC,SAAU,aACtCwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CACEtwJ,MAAO,CAAC,EAAG,QACX6E,QAAS9F,KAAK41J,iBAFhB,cAUJ,KAEH51J,KAAKoC,MAAM0xJ,WACVlrJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKuF,GAAI,GACPxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CAAEE,SAAU,QACnBmwH,UAAW,uBAEX/tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKmG,GAAI,CAAC,EAAG,GAAI4T,GAAI,CAAC,EAAG,GAAI42F,GAAI,CAAC,EAAG,IAEnC5wG,EAAA9G,EAAAC,cAACszJ,GAAD,QAIJzsJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR4T,GAAI,EACJ42F,GAAI,EACJnpF,GAAI,SAGJznB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,EACJxhB,eAAgB,CAAC,SAAU,YAC3BshH,UAAW,EACXr2G,YAAa,QAEbzD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CACEtwJ,MAAO,CAAC,EAAG,QACX6E,QAAS9F,KAAKq0J,kBAFhB,cAUJ,cA9Pc/6C,IAAMp3G,WCoDnB8zJ,oLAtDX,OACEptJ,EAAA9G,EAAAC,cAAA,WACE6G,EAAA9G,EAAAC,cAACk0J,GAAD,CACEtgD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQs8G,wBACtCl9C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAK4rJ,yBAC/Br0I,YAAa9hB,KAAKE,MAAM4hB,cAG1BlZ,EAAA9G,EAAAC,cAACq0J,GAAD,CACEzgD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQy8G,mBACtCr9C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAK+rJ,oBAC/Bx0I,YAAa9hB,KAAKE,MAAM4hB,cAG1BlZ,EAAA9G,EAAAC,cAACw0J,GAAD,CACE5gD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQ48G,uBACtCx9C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAKksJ,wBAC/Bl2I,QAASvgB,KAAKE,MAAMqgB,UAGtB3X,EAAA9G,EAAAC,cAAC20J,GAADr1J,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4C,SAAU9C,KAAKE,MAAM4C,SACrB8vJ,aAAc5yJ,KAAKE,MAAM0yJ,aACzBvsI,eAAgBrmB,KAAKE,MAAMqgB,QAAQkZ,QACnCk9H,gBAAiB32J,KAAKE,MAAMy2J,gBAC5BhhD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQg9G,qBACtC59C,OAASh5G,KAAKE,MAAMywI,OAAOpmI,KAAKssJ,wBAA0B72J,KAAKE,MAAM42J,oBAGvEluJ,EAAA9G,EAAAC,cAACg1J,GAAD,CACEphD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQo9G,4BACtCh+C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAK0sJ,yBAC/B5wI,eAAgBrmB,KAAKE,MAAMqgB,QAAQkZ,UAErC7wB,EAAA9G,EAAAC,cAACm1J,GAAD,CACEvhD,WACE31G,KAAKE,MAAMywI,OAAO/2F,QAAQu9G,iCAE5Bn+C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAK6sJ,oBAC/B3B,YAAaz1J,KAAKE,MAAMu1J,cAG1B7sJ,EAAA9G,EAAAC,cAACs1J,GAAD,CACE1hD,WAAY31G,KAAKE,MAAMywI,OAAO/2F,QAAQ09G,mBACtCt+C,OAAQh5G,KAAKE,MAAMywI,OAAOpmI,KAAKgtJ,oBAC/BlxI,eAAgBrmB,KAAKE,MAAMqgB,QAAQkZ,QACnC/oB,QAAS1Q,KAAKE,MAAMwQ,kBAjDI4oG,IAAMp3G,iCC8EzBs1J,8MA7Ebz3J,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGU2G,sEACfA,EAAE6H,iBAEG5O,KAAKE,MAAMwQ,+BAGd1Q,KAAKE,MAAMwyJ,QAAQK,iBACnB/yJ,KAAKE,MAAM0yJ,aAAa,SAAS,eAC3B5yJ,KAAKE,MAAMwyJ,QAAQ+E,uBAAuB,CAAC,kBAEnDz3J,KAAKE,MAAMywI,OAAO/2F,QAAQ89G,gKAGnB,IAAAr3J,EAAAL,KAED6yJ,EAAiB7yJ,KAAKD,cAAc8uD,oBACpC8oG,EAAY9E,GAAmD,WAAjCA,EAAe3lJ,eAAkF,kBAA3ClN,KAAKE,MAAMywI,OAAOpmI,KAAKqtJ,iBAAgC53J,KAAKE,MAAMywI,OAAOpmI,KAAKqtJ,gBAAgB1qJ,cAAcgpB,SAAS,UAE/M,OACEttB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAY,SAAAnyG,GAAC,OAAI1G,EAAKs1G,WAAW5uG,KAC1C6B,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAQ6vI,EAAW,eAAH,mBAAyC5pJ,KAAM,uBACjFnF,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,EAAG7N,MAAO,EAAGE,cAAe,SAAU6H,GAAI,QAClDJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAKpH,EAAN,CAAQmE,MAAO,YAAauI,UAAW,UAAvC,iEACkEwpJ,EAAW,SAAW,UADxF,IACoG/uJ,EAAA9G,EAAAC,cAAA,WAClG6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAW/gB,MAAO,MAAOD,WAAY,GAArC,IAA0C3F,KAAKE,MAAMywI,OAAOpmI,KAAKqtJ,gBAAjE,KAA8FhvJ,EAAA9G,EAAAC,cAAA,WAE5F41J,EACE/uJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,sCACgC/d,EAAA9G,EAAAC,cAAA,2BADhC,QAC+D6G,EAAA9G,EAAAC,cAAA,0BAD/D,0BAC+G6G,EAAA9G,EAAAC,cAAA,+BAD/G,QACkJ6G,EAAA9G,EAAAC,cAAA,iCADlJ,uCACsN6G,EAAA9G,EAAAC,cAAA,YAGpN,0DAIV6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,EAAGjN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACR9B,aAAc,EACdC,UAAW,OACXO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCgD,QAAO,eAAAiL,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAgR,EAAOnb,GAAP,OAAA0rB,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAA5Q,KAAA,EAAqBpR,EAAKs1G,WAAW5uG,GAArC,wBAAAsb,EAAA1P,SAAAuP,EAAAliB,SAAH,gBAAAyiB,GAAA,OAAA1R,EAAA8B,MAAA7S,KAAA8S,YAAA,IANT,qBA9DqBwmG,IAAMp3G,WC2E1B21J,8MAvEb93J,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGU2G,mEACfA,EAAE6H,iBACF5O,KAAKE,MAAMywI,OAAO/2F,QAAQk+G,iKAGnB,IAAAz3J,EAAAL,KAED+3J,EAAmE,kBAA5C/3J,KAAKE,MAAMywI,OAAOpmI,KAAKytJ,kBAAiCh4J,KAAKE,MAAMywI,OAAOpmI,KAAKytJ,iBAAiB9qJ,cAAcgpB,SAAS,UAC9I+hI,EAAmE,kBAA5Cj4J,KAAKE,MAAMywI,OAAOpmI,KAAKytJ,kBAAiCh4J,KAAKE,MAAMywI,OAAOpmI,KAAKytJ,iBAAiB9qJ,cAAcgpB,SAAS,8BAEpJ,OACEttB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,GAAA,EAAD,CAAWzD,UAAY,SAAAnyG,GAAC,OAAI1G,EAAKs1G,WAAW5uG,KAC1C6B,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUxD,OAAX,CAAkBrxF,MAAQ,oBAAsB/Z,KAAM,uBACtDnF,EAAA9G,EAAAC,cAAC46G,GAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,EAAG7N,MAAO,EAAGE,cAAe,SAAU6H,GAAI,QAClDJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAKpH,EAAN,CAAQmE,MAAO,YAAauI,UAAW,UAAvC,kEACiEvF,EAAA9G,EAAAC,cAAA,WAC/D6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CAAW/gB,MAAO,MAAOD,WAAY,GAArC,IAA0C3F,KAAKE,MAAMywI,OAAOpmI,KAAKytJ,iBAAjE,KAA+FpvJ,EAAA9G,EAAAC,cAAA,WAE7Fg2J,EACEnvJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAK8d,KAAN,CACEjhB,SAAU,GAEVkD,EAAA9G,EAAAC,cAAA,WAHF,iCAGsC6G,EAAA9G,EAAAC,cAAA,2BAHtC,QAGqE6G,EAAA9G,EAAAC,cAAA,0BAHrE,0BAGqH6G,EAAA9G,EAAAC,cAAA,+BAHrH,QAGwJ6G,EAAA9G,EAAAC,cAAA,iCAHxJ,uCAG4N6G,EAAA9G,EAAAC,cAAA,WAH5N,sEAIqE6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMnD,SAAU,EAAGE,MAAO,OAAQC,WAAY,OAAQkhB,OAAQ,SAAUC,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAMEgxI,EAAgB,8FAAgG,0DAI1HrvJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,EAAGjN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJ9F,GAAI,CAAC,EAAG,GACR9B,aAAc,EACdC,UAAW,OACXO,KAAM1H,KAAKE,MAAM4C,SAAW,QAAU,SACtCgD,QAAO,eAAAiL,EAAA1P,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAG,SAAAgR,EAAOnb,GAAP,OAAA0rB,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAA5Q,KAAA,EAAqBpR,EAAKs1G,WAAW5uG,GAArC,wBAAAsb,EAAA1P,SAAAuP,EAAAliB,SAAH,gBAAAyiB,GAAA,OAAA1R,EAAA8B,MAAA7S,KAAA8S,YAAA,IANT,qBAxDsBwmG,IAAMp3G,WCM1Ci1B,EAAQ,MAAUwyB,SAElB,IAAMuuG,GAA2B5+C,IAAM6+C,cAAc,CACnD73I,KAAM,GACN5P,QAAS,GACT8qI,SAAU,GACVvsF,SAAU,GACV11B,UAAW,GACXwa,WAAY,GACZqF,YAAa,GACbj2C,YAAa,GACbqb,aAAc,GACd45I,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChB3iH,eAAgB,GAChB4iH,SAAU,aACVzB,iBAAkB,GAClB0B,kBAAmB,GACnB/C,YAAa,aACbgD,kBAAmB,GACnB9+H,kBAAmB,GACnBw1B,aAAc,aACdtmB,aAAc,aACdk0B,qBAAsB,GACtB27F,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjBp2I,QAAS,CACPkZ,QAAS,GACTJ,SAAU,GACVu/H,aAAc,aACdl/H,iBAAkB,KAClBq3H,mBAAoB,MAEtBp/B,oBAAoB,EACpB1+D,iBAAkB,aAClB4lG,iBAAkB,aAClBtjD,kBAAmB,aACnB2R,sBAAsB,EACtB4xC,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1B38B,0BAA2B,aAC3BqU,OAAQ,CACNpmI,KAAM,CACJqtJ,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBqC,uBAAwB,GACxBzC,wBAAyB,GACzBqC,yBAA0B,GAC1B7B,yBAA0B,GAC1Bd,yBAA0B,GAC1BgD,iCAAkC,IAEpCv/G,QAAS,CACPw/G,kBAAmB,aACnB9B,mBAAoB,aACpB+B,sBAAuB,aACvB7C,uBAAwB,aACxB8C,uBAAwB,aACxBpD,wBAAyB,aACzBqD,yBAA0B,aAC1B7B,0BAA2B,aAC3B8B,0BAA2B,aAC3B1B,2BAA4B,aAC5B2B,2BAA4B,aAC5BzC,4BAA6B,aAC7B0C,gCAAiC,aACjCC,gCAAiC,aACjCxC,iCAAkC,aAClCyC,iCAAkC,eAGtC93I,YAAa,CACXvX,KAAM,CACJiU,aAAc,IAEhBq7I,KAAM,GACNjgH,QAAS,MAITkgH,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJpyJ,oBAAqB,IAGrB7H,cAAgB,OAkChBk6J,0CAAuB,SAAA/3I,IAAA,IAAAkX,EAAA8gI,EAAApnJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAO2nB,EAAP8gI,EAAA34J,OAAA,QAAAiuB,IAAA0qI,EAAA,GAAAA,EAAA,GAAiB,KACtCr1J,EAAK9E,cAAck1D,iBAAiB,kBACpCpwD,EAAK9E,cAAck1D,iBAAiB,0BACpCpwD,EAAK9E,cAAck1D,iBAAiB,gBAHf5yC,EAAA5Q,KAAA,EAIf5M,EAAK3E,MAAMq2E,gBAAXl1E,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2B,SAAAuQ,IAAA,OAAAgR,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,OAO3B5M,EAAKzC,MAAMme,QAAQ8Y,UAAYD,GAAalnB,SAASknB,KAAelnB,SAASrN,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,IAC3G+iB,OAAO8V,SAAS4+H,SAEhBt1J,EAAKoD,SAAS,CACZqY,KAAK,KACLiZ,UAAU,GACViiH,SAAS,KACT4c,aAAa,KACbz+H,kBAAkB,GAClBygI,oBAAmB,EACnBr9F,qBAAqB,KACrBmqD,sBAAqB,GACrB,WACAriH,EAAK+zJ,iBApBsB,wBAAAj3I,EAAAhP,SAAA8O,EAAAzhB,UAJZ,wBAAAqiB,EAAA1P,SAAAuP,EAAAliB,WA8BvBoQ,uCAAoB,SAAAe,IAAA,OAAAshB,EAAA3wB,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlB5M,EAAKw1J,oBAKL50I,OAAO60I,gBAAkB,SAAC/8H,GACxB,IAAMzb,EAAcjd,EAAK01J,oBAGzB,OAFAz4I,EAAYyb,OAASA,EACrB14B,EAAK21J,eAAe14I,GACbA,GAGT2D,OAAOi5C,kBAAoB,SAAC58C,EAAYha,EAAKiK,EAAO6N,GAWlD,OATAkC,EAAY/P,OAASA,EACrB+P,EAAYlC,OAASA,EACrBkC,EAAYrhB,KAAO,WACnBqhB,EAAYkjC,QAAU/xC,KAAK04B,MAC3B7pB,EAAYnC,gBAAkB7X,EAI9BjD,EAAK65D,kBAAkB58C,GAChBA,GA3BS,wBAAAvQ,EAAAoB,SAAAxB,EAAAnR,WA+BpBq6J,kBAAoB,WAElB,GADyBx1J,EAAK3E,MAAMmuI,WAAWS,OAAOse,WACjC,CACnB,IAAMyF,EAAiBhuJ,EAAK9E,cAAc8uD,oBACrBhqD,EAAK3E,MAAMmuI,WAAWS,OAAOse,cAAgBvoJ,EAAK3E,MAAMmuI,WAAWS,OAAOvrH,SAAS2vI,KAItGruJ,EAAK3E,MAAM0yJ,aAAa,SAAS,UACL,WAAnBC,GAEThuJ,EAAK3E,MAAM0yJ,aAAa,SAAS,UAKvCl2C,yDAAqB,SAAAxoG,EAAO7R,EAAWC,GAAlB,IAAAm4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnI,EAAA,OAAAjgI,EAAA3wB,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAEnB5M,EAAKzE,aAIqByE,EAAKzC,MAAM04J,kBAAoBj2J,EAAK3E,MAAMmuI,WAAWS,OAAOse,YAGpFvoJ,EAAKoD,SAAS,CACZ6yJ,kBAAiB,GACjB,WACAj2J,EAAKw1J,sBAIJh4J,EAAU2+G,gBAAkBn8G,EAAK3E,MAAM8gH,eAAiBn8G,EAAK3E,MAAM8gH,eAAmBn8G,EAAK3E,MAAMwyJ,QAAQr/C,QAAUhxG,EAAUqwJ,QAAQr/C,SAAWxuG,EAAK3E,MAAMwyJ,QAAQr/C,OAEtKxuG,EAAK0zJ,WACKl2J,EAAUqwJ,UAAY7tJ,EAAK3E,MAAMwyJ,QACvC7tJ,EAAK3E,MAAMwyJ,QAAQzzI,iBAAiBo7C,OAASx1D,EAAK3E,MAAMwyJ,QAAQzzI,MAAM+R,QAAQzvB,QAC1Ek5J,EAAe51J,EAAK3E,MAAMwyJ,QAAQzzI,MAAM+R,QACxC0pI,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBX,IAAwCY,GAE1C71J,EAAK3E,MAAM0yJ,aAAa,SAAS,MAIjCkH,GAAmB,MAETY,EAIV71J,EAAK0zJ,WAHL1zJ,EAAK00J,yBAAyB,KAAKkB,IAM5B51J,EAAK3E,MAAMwyJ,QAAQr/C,QAA6C,kBAAnCxuG,EAAK3E,MAAMwyJ,QAAQ1xC,eAA8D,kBAA3Bn8G,EAAK3E,MAAM8gH,eAEvGn8G,EAAK0zJ,YAEG1zJ,EAAK3E,MAAMwyJ,QAAQ1xC,eAAiBn8G,EAAK3E,MAAMwyJ,QAAQ1xC,gBAAkBn8G,EAAK3E,MAAM8gH,eAAkB3+G,EAAUukD,gBAAkB/hD,EAAK3E,MAAM0mD,gBAEvJ/hD,EAAK0zJ,WAGuB1zJ,EAAKzC,MAAMg4J,oBAAsB93J,EAAUie,QAAQkZ,QAAQ/2B,KAAOmC,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,IAGzHmC,EAAK0zJ,WAGwBj2J,EAAUie,QAAQ8Y,SAAS32B,KAAOmC,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,IAG3FmC,EAAKoD,SAAS,CACZsxB,UAAU,GACVI,kBAAkB,GAClButF,sBAAqB,GACpB,WACDriH,EAAK3E,MAAM66J,WAAWl2J,EAAKzC,MAAMme,SACjC1b,EAAK0zJ,gBAI4Bl2J,EAAUmzB,qBAAuB3wB,EAAK3E,MAAMs1B,qBAAyBnzB,EAAUmzB,qBAAuB3wB,EAAK3E,MAAMs1B,qBAAuBvlB,KAAKC,UAAU7O,OAAOC,KAAKe,EAAUmzB,wBAA0BvlB,KAAKC,UAAU7O,OAAOC,KAAKuD,EAAK3E,MAAMs1B,uBAnE/P,CAAAphB,EAAA3C,KAAA,gBAAA2C,EAAA3C,KAAA,GAsEX5M,EAAKk0J,sBAtEM,QAyEb4B,EAAuBt4J,EAAUukD,gBAAkB/hD,EAAK3E,MAAM0mD,cAC9Dg0G,EAAwBv4J,EAAUqwJ,QAAQhiJ,UAAY7L,EAAK3E,MAAMwyJ,QAAQhiJ,QACzEmqJ,EAAsBx4J,EAAU2+G,gBAAkBn8G,EAAK3E,MAAM8gH,eAA8C,WAA7Bn8G,EAAK3E,MAAM8gH,eAS3F25C,GAAwBC,GAAyBC,IACnDh2J,EAAK4wJ,cAMcpzJ,EAAUuH,gBAAkB/E,EAAK3E,MAAM0J,eAE1D/E,EAAKoD,SAAS,CACZgN,cAAe,OAKf5S,EAAU42J,2BAA6Bp0J,EAAK3E,MAAM+4J,0BACpDp0J,EAAKoD,SAAS,CACZgxJ,yBAAyBp0J,EAAK3E,MAAM+4J,2BAIjB32J,EAAUoO,UAAY7L,EAAKzC,MAAMsO,SAEtD7L,EAAKm2J,qBAGH/1I,gBACIytI,EAAUziJ,KAAKkV,MAAMF,aAAaC,QAAQ,cAC/BrgB,EAAK3E,MAAMwyJ,QAAQr/C,SAAWq/C,EAAQr/C,QAAUxuG,EAAK3E,MAAMwyJ,QAAQ1xC,gBAAkB0xC,EAAQ1xC,eAC5Gn8G,EAAK9E,cAAculB,gBAAgB,UAAUrV,KAAKC,UAAU,CAACmjG,OAAOxuG,EAAK3E,MAAMwyJ,QAAQr/C,OAAO2N,cAAcn8G,EAAK3E,MAAMwyJ,QAAQ1xC,kBAIpG3+G,EAAUsnD,OAAOvmB,kBAAoBv+B,EAAK3E,MAAMypD,OAAOvmB,iBAGpFv+B,EAAKo1J,uBAxHY,yBAAA7lJ,EAAAzB,SAAAuB,EAAAlU,mEA4HrBg7J,wCAAqB,SAAA/3I,IAAA,IAAA0yB,EAAA6iH,EAAAp/H,EAAA6hI,EAAA50I,EAAAgrB,EAAAwc,EAAApwB,EAAAy9H,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7oI,EAAA3wB,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,UACfkkC,EAAiB,KACjB6iH,EAAoB,KAGlBp/H,EAAYv0B,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,GACxCu4J,EAAgBztJ,IAAc+S,QAAQgjB,UAAUgqG,QAEhDlnH,EAAiBxhB,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoBwjB,IACnFiY,EAA+C,YAA5BhrB,EAAe9C,SAAyB6V,EAAYv0B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewjB,IAE1Jy0B,EAAoBhpD,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,sBAClE6nB,EAAgBowB,EAAkBz0B,KAEpC6hI,GAAiBA,EAAcnnI,SAAWmnI,EAAcl9H,KAAO18B,OAAOC,KAAK25J,EAAcl9H,KAAK7H,SAAShkB,SAASm/B,GAAkB9sB,aAdnH,CAAApB,EAAA1R,KAAA,gBAeXypJ,EAAiBD,EAAcl9H,IAAIsT,GAAkBxsC,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,QACzHulJ,EAAgBt2J,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMwjB,IAAYv0B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExKwlJ,EAAgB,IAAIl4H,IAAK,IAAIA,IAAKK,UAAUC,aAAa03H,IACzDG,EAAiB,IAAIn4H,IAAK,IAAIA,IAAKK,UAAUC,aAAa23H,IAGhEI,eAAIC,qBAEJ7lH,EAAiB,IAAI8lH,aAEfH,EAAuB,CAC3BI,OAAQ,CACNn4I,SAAU83I,EACVM,cAAe,CACbvvJ,KAAOvH,EAAKzC,MAAMsO,UAGtBkrJ,MAAO,CACLr4I,SAAU63I,EACVO,cAAe,CACbvvJ,KAAOvH,EAAKzC,MAAMsO,UAGtB6P,QAASkd,EAAcld,QACvB8/C,QAAS5iC,EAAc4iC,SAxCRl9C,EAAA1R,KAAA,GA2CXkkC,EAAes2G,KAAKqP,GA3CT,QA8CnB71I,OAAOkwB,eAAiBA,EACxBlwB,OAAO+yI,kBAAoBA,EAE3B3zJ,EAAKoD,SAAS,CACZ0tC,iBACA6iH,sBAnDiB,yBAAAr1I,EAAAxQ,SAAAsQ,EAAAjjB,WAwDrBu4J,8BAAW,SAAA5zI,IAAA,IAAAq8F,EAAA0xC,EAAAt5H,EAAAy5H,EAAAhlG,EAAApwB,EAAAla,EAAA8f,EAAAC,EAAAu4H,EAAAV,EAAA5gB,EAAA8d,EAAAj/G,EAAArF,EAAAknH,EAAA50I,EAAAgrB,EAAA6pH,EAAA56I,EAAAw7I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhnI,EAAA2lC,EAAAshG,EAAA7gB,EAAA8gB,EAAAxpJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UAAOuvG,EAAPs7C,EAAA/6J,OAAA,QAAAiuB,IAAA8sI,EAAA,GAAAA,EAAA,GAAqB,KAOzBz3J,EAAKzC,MAAMg4J,mBAPP,CAAAp1I,EAAAvT,KAAA,eAAAuT,EAAAtC,OAAA,UAQA,GARA,UAWHgwI,EAAU7tJ,EAAK3E,MAAMwyJ,QACrBt5H,EAAYv0B,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,GACxCmwJ,EAAiBhuJ,EAAK9E,cAAc8uD,oBAIpChB,EAAoBhpD,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,sBAClE6nB,EAAgBowB,EAAkBz0B,GAClC7V,EAAWka,EAAgBA,EAAcla,SAAW,SACpD8f,EAAax+B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY2N,EAAS,QAChF+f,EAAUz+B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY2N,EAAS,MAAM6V,IAAYiK,EAE/Fw4H,EAAkBh3J,EAAKzC,MAAMme,QAAQmZ,iBACrCyhI,EAAgBt2J,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMwjB,IAAYv0B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExK2kI,EAAkB11I,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAChEyiJ,EAAgBh3J,OAAOC,KAAKusD,GAAmBl8C,OAAQ,SAAA4qJ,GAAK,OAAIhiB,EAAgBrkH,SAAShkB,SAASqqJ,MAAUt2H,OAAQ,SAACC,EAAIq2H,GAC7H,IAAM9+H,EAAgBowB,EAAkB0uG,GAClC5+H,EAAiB94B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY6nB,EAAcla,WACzFi5I,EAAc7+H,EAAeI,IAAIw+H,GAAO5+H,EAAe75B,IAE7D,OADAoiC,EAAIq2H,GAAS,IAAIr5H,IAAK,IAAIA,IAAKK,UAAUC,aAAag5H,IAC/Ct2H,GACP,IAEEkT,EAAc,KACZrF,EAAa,IAAI7Q,IAAK,IAAIA,IAAKK,UAAUC,aAAa23H,IAEtDF,EAAgBztJ,IAAc+S,QAAQgjB,UAAUgqG,QAChDlnH,EAAiBxhB,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoBwjB,IACnFiY,EAA+C,YAA5BhrB,EAAe9C,SAAyB6V,EAAYv0B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewjB,IAC5J6hI,GAAiBA,EAAcnnI,SAAWmnI,EAAcl9H,KAAO18B,OAAOC,KAAK25J,EAAcl9H,KAAK7H,SAAShkB,SAASm/B,GAAkB9sB,cAC9H22I,EAAiBD,EAAcl9H,IAAIsT,GAAkBxsC,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,UAAU,QAC/HwjC,EAAc,IAAIlW,IAAK,IAAIA,IAAKK,UAAUC,aAAa03H,IACvDz1I,OAAO2zB,YAAcA,GAGnB94B,EAAOu7I,EAAkBnJ,EAAQ+J,QAAU,KAG1Ch3I,OAAO0iI,oBAAsBuK,EAAQ1xC,gBAAkBv7F,OAAO0iI,mBAAmBnnC,gBACpFv7F,OAAO0iI,mBAAqBuK,GAI1B1xC,EACF84C,GAAmB,KAEnB94C,EAAgBn8G,EAAK3E,MAAM8gH,cAgBzB0xC,GAA6B,WAAlB1xC,GAA8BA,IAAkB0xC,EAAQ1xC,gBACjE1gG,GAAgD,oBAAjCA,EAAK8c,gBAAgB4vH,QACtC1sI,EAAK8c,gBAAgB4vH,UACZ0F,EAAQtK,WAAkD,oBAA9BsK,EAAQtK,UAAU4E,SACvD0F,EAAQtK,UAAU4E,UAEpB1sI,EAAO,KACPw5I,GAAmB,MAGfgC,EAAwBpJ,EAAQ1xC,eAAiB0xC,EAAQ1xC,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB84C,GAE9H,eAAlB94C,EAtFK,CAAAh8F,EAAAvT,KAAA,YAuFFihJ,EAAQr/C,SAAUyoD,EAvFhB,CAAA92I,EAAAvT,KAAA,aAyFDuvG,IAAiB86C,EAzFhB,CAAA92I,EAAAvT,KAAA,YA2FmB,WAAlBuvG,GAA+Bn8G,EAAKzC,MAAM04J,iBA3F3C,CAAA91I,EAAAvT,KAAA,gBAAAuT,EAAAtC,OAAA,UA4FM,GA5FN,eAgGHo3I,GAAmB94C,EAhGhBh8F,EAAAvT,KAAA,GAiGGihJ,EAAQE,aAAa5xC,GAjGxB,eAAAh8F,EAAAtC,OAAA,SAqGIpC,GArGJ,WA0GLy7I,EAAWz4H,EACX04H,EAAe,KAId17I,EAYH07I,EAAe17I,EAAK8c,gBAXhB3X,OAAOwd,UACTp+B,EAAK9E,cAAcgkB,UAAU,+BAC7Bi4I,EAAev2I,OAAOwd,UACbxd,OAAOnF,MAChBzb,EAAK9E,cAAcgkB,UAAU,uCAC7Bi4I,EAAev2I,OAAOnF,OAEtBzb,EAAK9E,cAAcgkB,UAAU,yDAC7Bg4I,EAAWZ,GAMXc,GAAgB,EAEdj7C,GAAmC,WAAlBA,IAA+Bg7C,GAA+C,oBAAxBA,EAAanP,OAhIjF,CAAA7nI,EAAAvT,KAAA,gBAAAuT,EAAAxT,KAAA,GAAAwT,EAAAvT,KAAA,GAkICuqJ,EAAanP,SAlId,QAAA7nI,EAAAvT,KAAA,iBAAAuT,EAAAxT,KAAA,GAAAwT,EAAAmP,GAAAnP,EAAA,UAoILg3I,EAAe,KACfD,EAAWZ,EACXc,GAAgB,EAtIX,cA2Ia,eAAlBj7C,IACFg7C,EAAe,IAAIU,2BAIjBV,GAAgBH,EAClBv7I,EAAO,IAAI4iB,IAAK84H,GAEPD,IACTz7I,EAAO+3I,EAAcj/H,IAKjB8iI,EAzJG,eAAA3oI,EAAAlyB,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAyJY,SAAA+S,EAAOm4I,GAAP,IAAAnJ,EAAAzX,EAAA,OAAA/oH,EAAA3wB,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UAGf2qJ,IAAkBv3J,EAAKzC,MAAMg6J,cAHd,CAAAh4I,EAAA3S,KAAA,eAAA2S,EAAA1B,OAAA,UAIV,GAJU,UAOnB+C,OAAOk3I,aAAe93J,EAAKzC,MAAMke,KAGY,oBAAlCzb,EAAK3E,MAAM08J,qBACpB/3J,EAAK3E,MAAM08J,qBACX/3J,EAAK3E,MAAM28J,sBAAsB,OAZhBz4I,EAAA5S,KAAA,EAuBXyhJ,EAAepuJ,EAAK3E,MAAMmuI,WAAWS,OAAOse,cAAgBvoJ,EAAK3E,MAAMmuI,WAAWS,OAAOvrH,SAAS2vI,KACnGruJ,EAAKzC,MAAMme,QAAQmZ,mBAAoBu5H,EAxB3B,CAAA7uI,EAAA3S,KAAA,eAAA2S,EAAA3S,KAAA,EAyBT5M,EAAK+zJ,eAzBI,WA4Bb/zJ,EAAKzC,MAAMme,QAAQwwI,mBA5BN,CAAA3sI,EAAA3S,KAAA,gBAAA2S,EAAA3S,KAAA,GA6BT5M,EAAKk0J,sBA7BI,YA8BXrG,EAAQr/C,QAAUq/C,EAAQ1xC,gBAAgBA,IAAiB0xC,EAAQhiJ,QA9BxD,CAAA0T,EAAA3S,KAAA,aAgCT5M,EAAKzC,MAAMo5I,SAhCF,CAAAp3H,EAAA3S,KAAA,YAiCL+pI,EAAW32I,EAAKzC,MAAMo5I,UACPhuI,IAAc+S,QAAQgjB,UAAUi4G,SACpCC,aAAgBD,EAASshB,SAAY/C,GAnC3C,CAAA31I,EAAA3S,KAAA,gBAoCTsoJ,IAA0B,EAC1Bve,EAAS0Q,MAAMwG,EAAQhiJ,QAAS,SAACuO,EAAOyjD,GAGtC,GAAIzjD,EACF,OAAOpa,EAAKoD,SAAS,CACnBuzI,UAAS,GACT,WACA32I,EAAK4wJ,YAAY/C,EAAQhiJ,WAI7BqpJ,IAA0B,EAEtBr3F,EAAS/iD,gBACX9a,EAAK4wJ,YAAY/C,EAAQhiJ,SACjBgyD,EAASq6F,cACjBl4J,EAAK4wJ,YAAY/C,EAAQhiJ,WArDpB0T,EAAA1B,OAAA,UAwDF,GAxDE,eAAA0B,EAAA3S,KAAA,GA4DP5M,EAAK4wJ,YAAY/C,EAAQhiJ,SA5DlB,QAAA0T,EAAA3S,KAAA,wBAAA2S,EAAA3S,KAAA,GA8DP5M,EAAK4wJ,cA9DE,QAAArxI,EAAA3S,KAAA,iBAAA2S,EAAA5S,KAAA,GAAA4S,EAAA+P,GAAA/P,EAAA,SAuEjBvf,EAAK00J,yBAAyB,KAAKn1I,EAAA+P,GAAMnD,SAvExB,yBAAA5M,EAAAzR,SAAAsR,EAAAjkB,KAAA,aAzJZ,gBAAA4S,GAAA,OAAA2gB,EAAA1gB,MAAA7S,KAAA8S,YAAA,GAqOHqpJ,EAAe77I,EACf87I,EAAgBlqJ,SAASrN,EAAKzC,MAAMg6J,eAAe,EAGzDv3J,EAAKoD,SAAS,CACZ8rC,aACAqF,cACAgjH,gBACA/D,iBACA,cAIIjjI,EAAmBvwB,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,GAC9Cq4D,EAAevtD,IAAc+S,QAAQgjB,UAAUi4G,WAI/B,WAAlBx6B,GAA8BjmD,GAAgBA,EAAajnC,SAAWinC,EAAav8B,kBAAkBtI,SAASd,KAAuBy9H,GAAmB93F,EAAa2gF,gBAAgBxlH,SAAS28H,EAAe3lJ,eAuD3MoT,IAASzb,EAAKzC,MAAMke,KACtBzb,EAAKoD,SAAS,CACZqY,QACC,kBAAM47I,EAAaE,MACb1J,EAAQhiJ,SAAWurJ,IAC5BC,EAAaE,IA1DTC,EAAuBL,GAA8B,IAAI94H,IAAKK,UAAUC,aAAau4H,GAC/D,OAAxBl3J,EAAKzC,MAAMo5I,UAAqB32I,EAAKzC,MAAMo5I,SAASp+G,kBAAoBi/H,KACpE7gB,EAAW,IAAIwhB,YAASX,EAAqBthG,EAAan7C,UACpB,oBAArB47H,EAASyhB,SAG9Bp4J,EAAKoD,SAAS,CACZ0pH,oBAAmB,EACnBzK,sBAAqB,IAGvB5mG,EAAO,IAAI4iB,IAAKs4G,GAChBA,EAASyhB,QAAQzhB,EAAS0hB,MAAO,WAC/B,GAAIr4J,EAAK+C,qBAA8C,IAAxB/C,EAAKzC,MAAMo5I,UAAuB32I,EAAKzC,MAAMo5I,WAAaA,GAAYl7H,IAASzb,EAAKzC,MAAMke,KAEvH,OAAO,EAGT,IAAM83I,EAAe5c,EAAS4c,aACxBr7F,EAAuBy+E,EAASz+E,qBAEhCh1D,EAAW,CACfuY,OACAk7H,WACAznG,aACAqkH,eACAC,gBACAt7F,wBAIEz8C,IAASzb,EAAKzC,MAAMke,MACtBzb,EAAKoD,SAASF,EAAU,kBAAMm0J,EAAaE,OAE5Ca,QAAQzhB,EAAS2hB,MAAO,SAACl+I,EAAO+R,GACjCkI,QAAQja,MAAM,iBAAiBA,EAAM+R,EAAQnsB,EAAKzC,MAAMo5I,UACxDl7H,EAAO67I,GAEqB,IAAxBt3J,EAAKzC,MAAMo5I,UACb32I,EAAKoD,SAAS,CACZqY,OACAk7H,UAAS,GACR,kBAAM0gB,EAAaE,QAI1Bv3J,EAAKoD,SAAS,CACZqY,OACAk7H,UAAS,GACR,kBAAM0gB,EAAaE,OA1SnBp3I,EAAAtC,OAAA,SAuTFpC,GAvTE,yBAAA0E,EAAArS,SAAAgS,EAAA3kB,KAAA,gBA0TX6oC,mDAAe,SAAAtjB,EAAO9d,EAAMwF,EAAS67B,GAAtB,IAAAs0H,EAAAC,EAAAvqJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAkU,GAAA,cAAAA,EAAAhU,KAAAgU,EAAA/T,MAAA,cAA2B2rJ,EAA3BC,EAAA97J,OAAA,QAAAiuB,IAAA6tI,EAAA,IAAAA,EAAA,GAAA73I,EAAA/T,KAAA,EAEA5M,EAAKypD,eAAe7mD,EAAMwF,EAAS67B,EAAKs0H,GAFxC,cAAA53I,EAAA9C,OAAA,SAAA8C,EAAAjR,MAAA,wBAAAiR,EAAA7S,SAAA4S,EAAAvlB,qEAKfs9J,uBAAyB,SAAC71J,EAAMwF,EAAS67B,GAAwB,IAAnB1P,EAAmBtmB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAElDsmB,GAAalnB,SAASknB,KAAelnB,SAASrN,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,KAAOmC,EAAKzC,MAAMme,QAAQmZ,mBACtGN,EAAY,MAEd,IAAM4iI,EAAe5iI,GAAav0B,EAAKzC,MAAMi2J,cAAcj/H,GAAav0B,EAAKzC,MAAMi2J,cAAcj/H,GAAcv0B,EAAKzC,MAAMme,QAAQmZ,iBAAmB70B,EAAKzC,MAAMke,KAAOzb,EAAKzC,MAAMi2J,cAAcxzJ,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,IAE5N,IAAKs5J,EACH,OAAO,KAIT,IAEE,MAAO,CAACv0J,OAAM6xB,SADG,IAAI0iI,EAAa15I,IAAI+2B,SAASvQ,EAAK77B,IAEpD,MAAOgS,GACPpa,EAAK9E,cAAc84B,eAAe,6BAA6BpxB,EAAKwF,EAAQgS,GAG9E,OAAO,QAGTqvC,qDAAiB,SAAA34B,EAAOluB,EAAMwF,EAAS67B,GAAtB,IAAAs0H,EAAApB,EAAA1iI,EAAAghD,EAAA14C,EAAA9uB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAA2B2rJ,EAA3Bx7H,EAAArgC,OAAA,QAAAiuB,IAAAoS,EAAA,IAAAA,EAAA,IAETo6H,EAAeoB,GAAqBv4J,EAAKzC,MAAM2xC,WAAalvC,EAAKzC,MAAM2xC,WAAclvC,EAAKzC,MAAMme,QAAQmZ,iBAAmB70B,EAAKzC,MAAMke,KAAOzb,EAAKzC,MAAMi2J,cAAcxzJ,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,MAMlLomC,EARP,CAAA7S,EAAAxkB,KAAA,eAAAwkB,EAAAvT,OAAA,SASN,MATM,cAAAuT,EAAAzkB,KAAA,EAcP8nB,EAAW,IAAI0iI,EAAa15I,IAAI+2B,SAASvQ,EAAK77B,GAC9CqtE,EAAe,CAAC7yE,OAAM6xB,YAE5Bz0B,EAAKoD,SAAS,SAAA3F,GAEZ,IAAMi3B,EAAYj3B,EAAUi3B,UAAU5nB,OAAQ,SAAA6nB,GAAC,OAAIA,EAAE/xB,OAAS6yE,EAAa7yE,OAG3E,OADA8xB,EAAUhsB,KAAK+sE,GACR,CACL/gD,eAvBStD,EAAAvT,OAAA,SA2BN43D,GA3BM,QAAArkD,EAAAzkB,KAAA,GAAAykB,EAAA9B,GAAA8B,EAAA,SA6BbiD,QAAQja,MAAM,6BAA6BxX,EAAKwF,EAAQ67B,EAAxD7S,EAAA9B,IA7Ba,eAAA8B,EAAAvT,OAAA,SAgCR,MAhCQ,yBAAAuT,EAAAtjB,SAAAgjB,EAAA31B,KAAA,yEAmCjBmvD,aAAe,WAEb,GAAItqD,EAAKzC,MAAM6sD,SACb,OAAOpqD,EAAKzC,MAAM6sD,SAGpB,IAAMsuG,EAAe/vJ,IAAc+S,QAAQgjB,UAAU0rB,SACjDA,EAAW,KACT71B,EAAYv0B,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,IAAMmC,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,GAE/E,GAAI66J,GAAgBA,EAAazpI,UAAkE,IAAvDypI,EAAa/+H,kBAAkB1hB,QAAQsc,GAAmB,CACpG,IAAMokI,EAAiBD,EAAa39I,OACpC49I,EAAej9I,QAAUg9I,EAAazhB,WAAWj3I,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,GAAG8K,IAAc+S,QAAQstC,mBACrGoB,EAAW,IAAIwuG,KAASD,GAS1B,OANA/3I,OAAOwpC,SAAWA,EAElBpqD,EAAKoD,SAAS,CACZgnD,aAGKA,KAGTwmG,iCAAc,SAAAvgI,IAAA,IAAAxkB,EAAAk2C,EAAAisG,EAAA6K,EAAAzuG,EAAAktF,EAAAwhB,EAAAC,EAAAtoI,EAAAxiB,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOf,EAAP4kB,EAAA/zB,OAAA,QAAAiuB,IAAA8F,EAAA,IAAAA,EAAA,GAENsxB,EAAgB/hD,EAAK3E,MAAM0mD,cAC3BisG,EAAiBhuJ,EAAK9E,cAAc8uD,kBAAkB,WAExDjI,EALQ,CAAArxB,EAAA9jB,KAAA,eAAA8jB,EAAA7S,OAAA,SAOH7d,EAAKoD,SAAS,CACnByI,QAAQk2C,EACR+qE,oBAAmB,GACnB,WACA9sH,EAAK0wG,uBAXG,UAa4B,WAA7B1wG,EAAK3E,MAAM8gH,eAA+Bn8G,EAAK3E,MAAM8gH,eAAkBn8G,EAAK3E,MAAMwyJ,QAAQr/C,OAbzF,CAAA99E,EAAA9jB,KAAA,eAAA8jB,EAAA7S,OAAA,SAcH7d,EAAKoD,SAAS,CACnByI,QAAQ,KACRihH,oBAAmB,KAhBX,UAAAp8F,EAAA/jB,KAAA,EAwBN3M,EAAK3E,MAAMwyJ,QAAQr/C,QAAUxuG,EAAK3E,MAAMwyJ,QAAQ1xC,gBAAgBn8G,EAAK3E,MAAM8gH,eAAiBn8G,EAAK3E,MAAMwyJ,QAAQhiJ,UACjHA,EAAU7L,EAAK3E,MAAMwyJ,QAAQhiJ,SAG1BA,EA5BK,CAAA6kB,EAAA9jB,KAAA,gBAAA8jB,EAAA9jB,KAAA,GA6Bc5M,EAAKzC,MAAMke,KAAKgC,IAAIwqI,cA7BlC,SA6BF4Q,EA7BEnoI,EAAAhhB,OA+BOmpJ,EAAQn8J,SACrBmP,EAAUgtJ,EAAQ,IAhCZ,WAoCLhtJ,IACHA,EAAU7L,EAAK3E,MAAMwyJ,QAAQhiJ,SAG1BA,GAAW7L,EAAKzC,MAAMsO,UAAYA,EAxC7B,CAAA6kB,EAAA9jB,KAAA,gBAAA8jB,EAAA7S,OAAA,SAyCD7d,EAAKoD,SAAS,CACnB0pH,oBAAoB,KA1Cd,YAiDNjhH,EAjDM,CAAA6kB,EAAA9jB,KAAA,cAoDFw9C,EAAWpqD,EAAKsqD,gBApDd,CAAA55B,EAAA9jB,KAAA,gBAAA8jB,EAAA9jB,KAAA,GAwDsBw9C,EAASktF,gBAxD/B,SAwDAA,EAxDA5mH,EAAAhhB,OA0De4nI,EAAc56I,QAAUkkB,OAAOo4I,SAE9CF,EAAqB,GACrB14I,eACF04I,EAAqB14I,aAAaC,QAAQ,uBAAyBjV,KAAKkV,MAAMF,aAAaC,QAAQ,uBAAyBjV,KAAKkV,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLi3H,EAAc36I,QAAQ,SAACg2B,EAAE1qB,GAEvB,IAAMgxJ,EAAiBtmI,EAAE/vB,MAG2B,IAAhDk2J,EAAmB7gJ,QAAQghJ,KAC7Br4I,OAAOo4I,OAAOtwJ,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQ1I,EAAK9E,cAAc65B,8BAA8BpC,EAAEumI,YAGtGJ,EAAmBpwJ,KAAKuwJ,MAKxB74I,cACFpgB,EAAK9E,cAAculB,gBAAgB,qBAAqBrV,KAAKC,UAAUytJ,KAhFrE,QAsFR94J,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,YACbF,WAAYyzI,IAMdhuJ,EAAKoD,SAAS,CACZyI,UAEAihH,oBAAoB,GACpB,WAEA9sH,EAAK0wG,sBArGChgF,EAAA9jB,KAAA,wBAAA8jB,EAAA7S,OAAA,SA4GD7d,EAAKoD,SAAS,CACnByI,QAAQ,KACRihH,oBAAoB,KA9Gd,QAAAp8F,EAAA9jB,KAAA,oBAAA8jB,EAAA/jB,KAAA,GAAA+jB,EAAApB,GAAAoB,EAAA,SAmHV1wB,EAAKoD,SAAS,CACZ0pH,oBAAoB,IAItB9sH,EAAK9E,cAAcgkB,UAAU,yCAA7BwR,EAAApB,MAKIoB,EAAApB,IAASoB,EAAApB,GAAMnD,SAAWuE,EAAApB,GAAMnD,QAAQkF,SAAS,yCA7H3C,CAAAX,EAAA9jB,KAAA,gBAAA8jB,EAAA7S,OAAA,kBAkIJk7I,EAAUroI,EAAApB,cAAiBkmC,MAC7Bx1D,EAAK9E,cAAcysD,kBAAoBoxG,GACzCI,KAAAzoI,EAAApB,IApIQ,yBAAAoB,EAAA5iB,SAAAuiB,EAAAl1B,KAAA,eA6Idg5J,qBAAuB,SAAA/5I,GACrB,IAAI0xH,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK0sJ,0BAA2B,EACvCtmB,EAAOpmI,KAAK6sJ,qBAAsB,EAClCvyJ,EAAKoD,SAAS,CAAE0oI,cAGlBp7B,wDAAoB,SAAA3+E,EAAOqnI,GAAP,IAAAvoI,EAAAE,EAAA0iI,EAAAI,EAAAzjJ,EAAA,OAAAwd,EAAA3wB,EAAAwP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,UAEb5M,EAAKzC,MAAMke,KAFE,CAAA0W,EAAAvlB,KAAA,eAAAulB,EAAAtU,OAAA,UAGT,GAHS,cAMlBu7I,EAAiBA,EAAiBp5J,EAAK9E,cAAc8R,MAAMosJ,GAAkB,KAN3DjnI,EAAAxlB,KAAA,EAAAwlB,EAAAvlB,KAAA,EAcNsQ,QAAQqD,IAAI,CACpBvgB,EAAKzC,MAAMke,KAAKgC,IAAIiQ,WAAW1tB,EAAKzC,MAAMsO,SAC1C7L,EAAK6tB,gBAAgB7tB,EAAKzC,MAAMsO,SAChC7L,EAAKouD,qBAjBS,OAAAv9B,EAAAsB,EAAAziB,KAAAqhB,EAAAv0B,OAAA4yB,GAAA,EAAA5yB,CAAAq0B,EAAA,GAWd4iI,EAXc1iI,EAAA,GAYd8iI,EAZc9iI,EAAA,GAad3gB,EAbc2gB,EAAA,GAsBZ0iI,IAGEA,EAAe/zI,WAAW2R,SAAS,OACrCoiI,EAAiBzzJ,EAAKzC,MAAMke,KAAKmX,MAAMK,MAAMwgI,IAI/CA,EAAiBzzJ,EAAKzC,MAAMke,KAAKmX,MAAMI,QACrCygI,EACA,SAGFA,EAAiBzzJ,EAAK9E,cAAc8R,MAAMymJ,GAAgB/zI,WAE1D1f,EAAKoD,SAAS,CACZqwJ,mBAGFzzJ,EAAK9E,cAAcgkB,UAAU,oBAAqBu0I,IAKhDI,GAEFA,EAAsB7zJ,EAAK9E,cAAc8R,MAAM6mJ,GAG3CuF,GAAkBp5J,EAAKzC,MAAMs2J,qBAAuB7zJ,EAAK9E,cAAcy0D,qBAAqB3vD,EAAKzC,MAAMs2J,oBAAoBzjJ,GAAesP,aAAem0I,EAAoBn0I,aAC/Km0I,EAAsBA,EAAoBrmJ,KAAK4rJ,IAGjDvF,EAAsB7zJ,EAAK9E,cAAcsV,iBAAiBqjJ,EAAoBzjJ,GAAesP,WAK7F1f,EAAKoD,SAAL5G,OAAA+pI,EAAA,EAAA/pI,CAAA,CACEq3J,uBADF,iBAAAj1J,OAEoBoB,EAAK3E,MAAM0J,eAAiB8uJ,KAIhD7zJ,EAAK9E,cAAcgkB,UAAU,kCAAkC20I,GAlEjD1hI,EAAAvlB,KAAA,iBAAAulB,EAAAxlB,KAAA,GAAAwlB,EAAA7C,GAAA6C,EAAA,SAqEhBnyB,EAAK9E,cAAcgkB,UAAU,iCAA7BiT,EAAA7C,IArEgB,yBAAA6C,EAAArkB,SAAAikB,EAAA52B,KAAA,qEAyEpB+4J,yCAAsB,SAAAtyH,IAAA,IAAAlN,EAAAI,EAAAg9C,EAAA9oB,EAAAqwG,EAAAnxF,EAAA2+C,EAAAyyC,EAAAp2J,EAAA,OAAA0qB,EAAA3wB,EAAAwP,KAAA,SAAAs1B,GAAA,cAAAA,EAAAp1B,KAAAo1B,EAAAn1B,MAAA,UAEf5M,EAAKzC,MAAMke,MAASzb,EAAK3E,MAAMs1B,oBAFhB,CAAAoR,EAAAn1B,KAAA,eAAAm1B,EAAAlkB,OAAA,UAGX,GAHW,cAQd6W,EAAY,GACZI,EAAoB,GACpBg9C,EAAoBzkE,SAASrN,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,IACzDmrD,EAAoBhpD,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAEpE/Q,EAAK3E,MAAMoqG,6BACbjpG,OAAOC,KAAKuD,EAAK3E,MAAMoqG,6BAA6B9oG,QAAS,SAAA43B,GAC3DO,EAAkBP,GAAa,GAC/B,IAAM23B,EAAalsD,EAAK3E,MAAMoqG,4BAA4BlxE,GAC1D/3B,OAAOC,KAAKyvD,GAAYvvD,QAAS,SAAA6gC,GAC/B,IAAM7xB,EAAkB3L,EAAK3E,MAAMoqG,4BAA4BlxE,GAAWiJ,GAC1EhhC,OAAOC,KAAKkP,GAAiBhP,QAAS,SAAA0B,GACpC,IAAMC,EAAcqN,EAAgBtN,GAEpC2B,EAAK9E,cAAcgkB,UAAU,qCAAqC7gB,EAAOC,EAAY8J,SACrF0sB,EAAkBP,GAAW7rB,KAAK1I,EAAKy4J,uBAAuBp6J,EAAOC,EAAY8J,QAAS9J,EAAY2lC,IAAK1P,IAE3Gv0B,EAAK9E,cAAcgkB,UAAU,qCAAqC5gB,EAAY4wB,KAAK7wB,MAAOC,EAAY4wB,KAAK9mB,SAC3G0sB,EAAkBP,GAAW7rB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAY4wB,KAAK7wB,MAAOC,EAAY4wB,KAAK9mB,QAAS9J,EAAY4wB,KAAK+U,IAAK1P,IAEtIj2B,EAAYyJ,UAAUpL,QAAtB,eAAAugC,EAAA1gC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8B,SAAAslB,EAAO/0B,EAAEqL,GAAT,OAAA2lB,EAAA3wB,EAAAwP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,OAC5B5M,EAAK9E,cAAcgkB,UAAU,6BAA6BtiB,EAAEyB,MAAM,YAAYzB,GAC9Ek4B,EAAkBP,GAAW7rB,KAAK1I,EAAKy4J,uBAAuB77J,EAAEyB,MAAOzB,EAAEwL,QAASxL,EAAEqnC,IAAK1P,IAF7D,wBAAA1C,EAAA/jB,SAAA6jB,EAAAx2B,SAA9B,gBAAA8nC,EAAAC,GAAA,OAAAhG,EAAAlvB,MAAA7S,KAAA8S,YAAA,WAWForJ,EAAwBr5J,EAAK9E,cAAc6V,gBAAgB,CAAC,YAAY+gE,MAE5Et1E,OAAOC,KAAK48J,GAAuB18J,QAAS,SAAA+d,GAC1C,IAAM+6D,EAAe4jF,EAAsB3+I,GAC3C,GAA6B,OAAzB+6D,EAAartE,SAAyC,OAArBqtE,EAAaxxC,IAAa,CAC7D,IAAM1P,EAAYkhD,EAAalhD,UAAYlnB,SAASooE,EAAalhD,WAAau9C,EAE9Ep9C,EAAUhsB,KAAK1I,EAAKy4J,uBAAuB/9I,EAAc+6D,EAAartE,QAASqtE,EAAaxxC,IAAK1P,IACjGO,EAAkBg9C,GAAmBppE,KAAK1I,EAAKy4J,uBAAuB/9I,EAAc+6D,EAAartE,QAASqtE,EAAaxxC,IAAK1P,QAK5H2zC,EAAYloE,EAAK9E,cAAc6V,gBAAgB,CAAC,gBAEpDvU,OAAOC,KAAKyrE,GAAWvrE,QAAS,SAAA0B,GAC9B,IAAMwnC,EAAiBqiC,EAAU7pE,GAC5BwnC,EAAe5W,SAGpB+5B,EAAkBrsD,QAAS,SAAA43B,GAEzB,IAAMkD,EAAkBoO,EAAem3C,WAAan3C,EAAem3C,UAAUzoD,GAAasR,EAAem3C,UAAUzoD,GAAasR,EAAez9B,QAC/IpI,EAAK9E,cAAcgkB,UAAU,qCAAsC7gB,EAAOo5B,GACtEpqB,SAASknB,KAAelnB,SAASykE,IACnCp9C,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBp6J,EAAOo5B,EAAiBoO,EAAe5B,MAEpFnP,EAAkBP,GAAW7rB,KAAK1I,EAAKy4J,uBAAuBp6J,EAAOo5B,EAAiBoO,EAAe5B,IAAK1P,QAK5Gv0B,EAAK3E,MAAMs1B,qBAEbn0B,OAAOC,KAAKuD,EAAK3E,MAAMs1B,qBAAqBh0B,QAAS,SAAA6gC,GACnD,IAAM7xB,EAAkB3L,EAAK3E,MAAMs1B,oBAAoB6M,GACvDhhC,OAAOC,KAAKkP,GAAiBhP,QAAS,SAAA0B,GACpC,IAAMC,EAAcqN,EAAgBtN,GAgBpC,GAdA2B,EAAK9E,cAAcgkB,UAAU,qCAAqC7gB,EAAOC,EAAY8J,SACrFssB,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBp6J,EAAOC,EAAY8J,QAAS9J,EAAY2lC,MAGnFjkC,EAAK9E,cAAcgkB,UAAU,qCAAqC5gB,EAAY4wB,KAAK7wB,MAAOC,EAAY4wB,KAAK9mB,SAC3GssB,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAY4wB,KAAK7wB,MAAOC,EAAY4wB,KAAK9mB,QAAS9J,EAAY4wB,KAAK+U,MAG9G3lC,EAAYyJ,UAAUpL,QAAtB,eAAAm1B,EAAAt1B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA8B,SAAA6zB,EAAOtjC,EAAEqL,GAAT,OAAA2lB,EAAA3wB,EAAAwP,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,OAC5B5M,EAAK9E,cAAcgkB,UAAU,6BAA6BtiB,EAAEyB,MAAM,YAAYzB,GAC9E83B,EAAUhsB,KAAK1I,EAAKy4J,uBAAuB77J,EAAEyB,MAAOzB,EAAEwL,QAASxL,EAAEqnC,MAFrC,wBAAA5D,EAAAvyB,SAAAoyB,EAAA/kC,SAA9B,gBAAA6nC,EAAAoB,GAAA,OAAAtS,EAAA9jB,MAAA7S,KAAA8S,YAAA,IAMI3P,EAAY44B,UAAU,CAExB,GAAI54B,EAAY44B,UAAU4pB,YAAY,CACpC,IAAMA,EAAcxiD,EAAY44B,UAAU4pB,YAC1C9gD,EAAK9E,cAAcgkB,UAAU,6BAA6B4hC,EAAYl+C,KAAK,YAAYk+C,GACvFpsB,EAAUhsB,KAAK1I,EAAKy4J,uBAAuB33G,EAAYl+C,KAAMk+C,EAAY14C,QAAS04C,EAAY7c,MAWhG,GAPI3lC,EAAY44B,UAAU0rE,cACxBtkG,EAAY44B,UAAU0rE,aAAajmG,QAAnC,eAAAq1B,EAAAx1B,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAA2C,SAAA20B,EAAOpkC,EAAEqL,GAAT,OAAA2lB,EAAA3wB,EAAAwP,KAAA,SAAA00B,GAAA,cAAAA,EAAAx0B,KAAAw0B,EAAAv0B,MAAA,OACzC5M,EAAK9E,cAAcgkB,UAAU,6BAA6BtiB,EAAEyB,MAAM,YAAYzB,GAC9E83B,EAAUhsB,KAAK1I,EAAKy4J,uBAAuB77J,EAAEyB,MAAOzB,EAAEwL,QAASxL,EAAEqnC,MAFxB,wBAAA9C,EAAArzB,SAAAkzB,EAAA7lC,SAA3C,gBAAAksC,EAAAC,GAAA,OAAAtV,EAAAhkB,MAAA7S,KAAA8S,YAAA,IAME3P,EAAY44B,UAAUC,kBAAkB,CAC1C,IAAMA,EAAoB74B,EAAY44B,UAAUC,kBAChDn3B,EAAK9E,cAAcgkB,UAAU,6BAA6BiY,EAAkBv0B,KAAK,YAAYu0B,GAC7FzC,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBthI,EAAkBv0B,KAAMu0B,EAAkB/uB,QAAS+uB,EAAkB8M,YAOpH4iF,EAAiB7mH,EAAK9E,cAAc6V,gBAAgB,CAAC,aAAa,aACpE/Q,EAAK3E,MAAMsC,mBACbnB,OAAOC,KAAKuD,EAAK3E,MAAMsC,mBAAmBhB,QAAS,SAAA4B,GACjD,IAAMs1E,EAAS7zE,EAAK3E,MAAMsC,kBAAkBY,GAC5C/B,OAAOC,KAAKo3E,GAAQl3E,QAAS,SAAA0B,GAC3B,IAAMC,EAAcu1E,EAAOx1E,GACtBwoH,EAAe79D,oBAAqB69D,EAAe79D,kBAAkB33B,SAASygD,KAC7ExzE,EAAY2lC,KACdvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,MAE/FvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYQ,GAAG8D,KAAKtE,EAAYQ,GAAGsJ,QAAQ9J,EAAYQ,GAAGmlC,MACrGvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYS,GAAG6D,KAAKtE,EAAYS,GAAGqJ,QAAQ9J,EAAYS,GAAGklC,MACrGvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAY0jC,IAAIp/B,KAAKtE,EAAY0jC,IAAI55B,QAAQ9J,EAAY0jC,IAAIiC,MACxGvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYQ,GAAGk9B,WAAWp5B,KAAKtE,EAAYQ,GAAGk9B,WAAW5zB,QAAQ9J,EAAYQ,GAAGk9B,WAAWiI,MACtIvP,EAAUhsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYS,GAAGi9B,WAAWp5B,KAAKtE,EAAYS,GAAGi9B,WAAW5zB,QAAQ9J,EAAYS,GAAGi9B,WAAWiI,OAGpI3lC,EAAY2lC,KACdnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYD,MAAMC,EAAY8J,QAAQ9J,EAAY2lC,IAAI,IAE9GnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYQ,GAAG8D,KAAKtE,EAAYQ,GAAGsJ,QAAQ9J,EAAYQ,GAAGmlC,IAAI,IACpHnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYS,GAAG6D,KAAKtE,EAAYS,GAAGqJ,QAAQ9J,EAAYS,GAAGklC,IAAI,IACpHnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAY0jC,IAAIp/B,KAAKtE,EAAY0jC,IAAI55B,QAAQ9J,EAAY0jC,IAAIiC,IAAI,IACvHnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYQ,GAAGk9B,WAAWp5B,KAAKtE,EAAYQ,GAAGk9B,WAAW5zB,QAAQ9J,EAAYQ,GAAGk9B,WAAWiI,IAAI,IACrJnP,EAAkB,GAAGpsB,KAAK1I,EAAKy4J,uBAAuBn6J,EAAYS,GAAGi9B,WAAWp5B,KAAKtE,EAAYS,GAAGi9B,WAAW5zB,QAAQ9J,EAAYS,GAAGi9B,WAAWiI,IAAI,QAKrJq1H,EAAe98J,OAAOuB,OAAO,GAAGiC,EAAKzC,MAAMm3B,WACjDA,EAAU/3B,QAAS,SAAA84E,GACjB,GAAIA,EAAa,CACf,IAAM8jF,EAAgBD,EAAaxuI,KAAM,SAAA6J,GAAC,OAAIA,EAAE/xB,OAAO6yE,EAAa7yE,OACpE,GAAK22J,EAEE,CACL,IAAMC,EAAgBF,EAAarhJ,QAAQshJ,GAC3CD,EAAaE,GAAiB/jF,OAH9B6jF,EAAa5wJ,KAAK+sE,MAUlBvyE,EAAW,CACf4xB,oBACAJ,UAAU4kI,EACVj3C,sBAAqB,GArKHtgF,EAAAlkB,OAAA,SAwKb7d,EAAKoD,SAASF,IAxKD,yBAAA6+B,EAAAj0B,SAAA8zB,EAAAzmC,WA2KtBm5B,wDAAoB,SAAAkN,EAAO9mB,GAAP,IAAA+Z,EAAAn2B,EAAA,OAAAsvB,EAAA3wB,EAAAwP,KAAA,SAAAi1B,GAAA,cAAAA,EAAA/0B,KAAA+0B,EAAA90B,MAAA,WACd6nB,EAAWz0B,EAAKzC,MAAMm3B,UAAU5J,KAAK,SAAA6J,GAAC,OAAIA,EAAE/xB,OAAS8X,OAExC1a,EAAK3E,MAAMiD,YAHV,CAAAojC,EAAA90B,KAAA,eAIVtO,EAAc0B,EAAK3E,MAAMiD,YAJfojC,EAAA90B,KAAA,EAKC5M,EAAKgkC,aAAatpB,EAAcpc,EAAY8J,QAAS9J,EAAY2lC,KALlE,OAKhBxP,EALgBiN,EAAAhyB,KAAA,cAAAgyB,EAAA7jB,OAAA,SAQX4W,EAAWA,EAASA,SAAW,MARpB,wBAAAiN,EAAA5zB,SAAA0zB,EAAArmC,iEAWpBizD,sCAAmB,SAAA9rB,IAAA,IAAAlyB,EAAA,OAAAwd,EAAA3wB,EAAAwP,KAAA,SAAAm2B,GAAA,cAAAA,EAAAj2B,KAAAi2B,EAAAh2B,MAAA,UACbwD,EAAgB,KAEfpQ,EAAKzC,MAAM6S,cAHC,CAAAwyB,EAAAh2B,KAAA,eAAAg2B,EAAAh2B,KAAA,EAKO5M,EAAK9E,cAAckzD,iBAAiBpuD,EAAK3E,MAAM0J,eALtD,OAKfqL,EALewyB,EAAAlzB,KAOf1P,EAAKoD,SAAS,CACZgN,kBARawyB,EAAAh2B,KAAA,uBAAAg2B,EAAAh2B,KAAA,GAWQ,IAAIsQ,QAAJ,eAAAu8I,EAAAj9J,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAa,SAAAy2B,EAAOxlB,EAASC,GAAhB,OAAAqQ,EAAA3wB,EAAAwP,KAAA,SAAAs2B,GAAA,cAAAA,EAAAp2B,KAAAo2B,EAAAn2B,MAAA,OAClC0Q,EAAQtd,EAAKzC,MAAM6S,eADe,wBAAA2yB,EAAAj1B,SAAAg1B,EAAA3nC,SAAb,gBAAAkuC,EAAAC,GAAA,OAAAmwH,EAAAzrJ,MAAA7S,KAAA8S,YAAA,IAXR,QAWfmC,EAXewyB,EAAAlzB,KAAA,eAAAkzB,EAAA/kB,OAAA,SAgBVzN,GAhBU,yBAAAwyB,EAAA90B,SAAAw0B,EAAAnnC,WAmBnB0yB,sDAAkB,SAAAwV,EAAOx3B,GAAP,IAAA4oB,EAAA,OAAA7G,EAAA3wB,EAAAwP,KAAA,SAAAo3B,GAAA,cAAAA,EAAAl3B,KAAAk3B,EAAAj3B,MAAA,cAAAi3B,EAAAj3B,KAAA,EACO5M,EAAKs0B,kBAAkBt0B,EAAK3E,MAAM0J,eADzC,UACV0vB,EADUoP,EAAAn0B,KAAA,CAAAm0B,EAAAj3B,KAAA,eAId5M,EAAK9E,cAAc84B,eAAe,sBAAuBh0B,EAAK3E,MAAM0J,eAJtD8+B,EAAAhmB,OAAA,SAKP,MALO,UAQX4W,EAASsgB,QAAT,UARW,CAAAlR,EAAAj3B,KAAA,eASd5M,EAAKg0B,eAAe,+BATN6P,EAAAhmB,OAAA,SAUP,MAVO,cAAAgmB,EAAAj3B,KAAA,GAaH6nB,EAASsgB,QAAQ2kH,UAAU7tJ,GAASopC,OAAOiQ,MAAM,SAAA9qC,GAC5Dpa,EAAK9E,cAAcgkB,UAAnB,iBAAAtgB,OAA8CoB,EAAK3E,MAAM0J,cAAzD,YAAkFqV,KAdpE,eAAAypB,EAAAhmB,OAAA,SAAAgmB,EAAAn0B,MAAA,yBAAAm0B,EAAA/1B,SAAAu1B,EAAAloC,iEAkBlBw+J,2BAA6B,WAE3B,IAAMhkB,EACyB,qBAAtB31I,EAAK3E,MAAMypD,QACiC,qBAA5C9kD,EAAK3E,MAAMypD,OAAO6wF,sBACrB31I,EAAK3E,MAAMypD,OAAO6wF,sBAClB,EAEAie,EACJ5zJ,EAAKzC,MAAMk2J,eAAiB9d,EAE9B31I,EAAKoD,SAAS,CACZwwJ,yBAIJn8B,gEAA4B,SAAA9yF,EAAOozH,GAAP,OAAAnqI,EAAA3wB,EAAAwP,KAAA,SAAAk6B,GAAA,cAAAA,EAAAh6B,KAAAg6B,EAAA/5B,MAAA,OAErB5M,EAAKzC,MAAMsO,UACd7L,EAAK3E,MAAM28J,sBAAsBD,GAEjC/3J,EAAK45J,uBALmB,wBAAAjzH,EAAA74B,SAAA62B,EAAAxpC,iEAS5BsjB,mBAAqB,WAClB,IAAM8V,EAAyC,qBAAtBv0B,EAAK3E,MAAMypD,QAAuE,qBAAtC9kD,EAAK3E,MAAMypD,OAAOvmB,gBAAkCv+B,EAAK3E,MAAMypD,OAAOvmB,gBAAkB51B,IAAc+S,QAAQ6iB,gBAEnL,MAAO,CACL1gC,GAAI02B,EACJ3xB,KAHkB2xB,GAAa5rB,IAAc+S,QAAQstC,kBAAkBz0B,GAAa5rB,IAAc+S,QAAQstC,kBAAkBz0B,GAAW3xB,KAAO,cAOlJ+oC,uCAAoB,SAAApH,IAAA,IAAAhQ,EAAA4J,EAAA+4G,EAAA2iB,EAAA5rJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAg4B,GAAA,cAAAA,EAAA93B,KAAA83B,EAAA73B,MAAA,UAAO2nB,EAAPslI,EAAAn9J,OAAA,QAAAiuB,IAAAkvI,EAAA,GAAAA,EAAA,GAAiB,KAC7B17H,EAAcn+B,EAAK9E,cAAcojC,iBADrBmG,EAAAnV,GAKNjiB,SAASknB,GALHkQ,EAAAnV,GAAA,CAAAmV,EAAA73B,KAAA,eAAA63B,EAAA73B,KAAA,EAKuBuxB,EAAY1gB,IAAI8/C,IAAIC,QAL3C,OAAA/4B,EAAAnV,GAAAmV,EAAA/0B,KAAA,UAKlB6kB,EALkBkQ,EAAAnV,GAAAmV,EAAA0P,GAMEn0C,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoBwjB,EAAU,SAN9EkQ,EAAA0P,GAAA,CAAA1P,EAAA73B,KAAA,gBAAA63B,EAAA73B,KAAA,GAMgGuxB,EAAY1gB,IAAI8/C,IAAIu8F,iBANpH,QAAAr1H,EAAA0P,GAAA1P,EAAA/0B,KAAA,eAMZwnI,EANYzyG,EAAA0P,GAAA1P,EAAA5mB,OAAA,SAQX,CACLhgB,GAAG02B,EACH3xB,KAAKs0I,IAVW,yBAAAzyG,EAAA32B,SAAAy2B,EAAAppC,WAcrB4+J,kCAAe,SAAArxH,IAAA,OAAA9a,EAAA3wB,EAAAwP,KAAA,SAAAu8B,GAAA,cAAAA,EAAAr8B,KAAAq8B,EAAAp8B,MAAA,cAAAo8B,EAAAr8B,KAAA,EAAAq8B,EAAAnrB,OAAA,SAEJ7d,EAAKzC,MAAMke,KAAKgC,IAAI8/C,IAAIC,MAAM,SAACpjD,EAAOma,GAC3C,IAAIK,EAAOp4B,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMme,QAAQkZ,SACtCA,EAAQ/2B,GAAK02B,EACb,IAAI7Y,EAAUlf,OAAOuB,OAAO,GAAGiC,EAAKzC,MAAMme,SAC1CA,EAAQkZ,QAAUA,EAClBlZ,EAAQmZ,iBAAmBlsB,IAAc+S,QAAQg6H,gBAAgBrkH,SAASkD,GAC1Ev0B,EAAKoD,SAAS,CAAEsY,eARP,OAAAstB,EAAAr8B,KAAA,EAAAq8B,EAAA1Z,GAAA0Z,EAAA,SAWXhpC,EAAK9E,cAAcgkB,UAAU,6BAA7B8pB,EAAA1Z,IAXW,wBAAA0Z,EAAAl7B,SAAA46B,EAAAvtC,KAAA,cAef44J,kCAAe,SAAAvsH,IAAA,IAAAjT,EAAA7Y,EAAA65I,EAAAyE,EAAAntC,EAAAotC,EAAAhsJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAA87B,GAAA,cAAAA,EAAA57B,KAAA47B,EAAA37B,MAAA,cAAO2nB,EAAP0lI,EAAAv9J,OAAA,QAAAiuB,IAAAsvI,EAAA,GAAAA,EAAA,GAAiB,MACxBv+I,EADOlf,OAAA84B,EAAA,EAAA94B,CAAA,GACOwD,EAAKzC,MAAMme,UAEvB8Y,SAAWx0B,EAAKye,qBAHX8pB,EAAA37B,KAAA,EAIW5M,EAAK2rC,kBAAkBpX,GAJlC,cAIb7Y,EAAQkZ,QAJK2T,EAAA74B,KAMP6lJ,IAAuB75I,EAAQkZ,QAAQ/2B,GAC7C6d,EAAQmZ,kBAAoB0gI,GAAsB75I,EAAQkZ,QAAQ/2B,KAAO6d,EAAQ8Y,SAAS32B,GAC1F6d,EAAQwwI,oBAAsBxwI,EAAQkZ,QAAQ/2B,IAAM8K,IAAc+S,QAAQg6H,gBAAgBrkH,SAAS3V,EAAQkZ,QAAQ/2B,IAE7Gm8J,EAAwBt+I,EAAQkZ,QAAQ/2B,IAAM6d,EAAQkZ,QAAQ/2B,KAAOmC,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,GAChGgvH,EAAyBnxG,EAAQ8Y,SAAS32B,IAAM6d,EAAQ8Y,SAAS32B,KAAOmC,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,KAEnFmC,EAAKzC,MAAMme,QAAQkZ,QAAQ/2B,IAAMm8J,GAAyBntC,IAA2B7sH,EAAKzC,MAAMg4J,qBAIrHv1J,EAAKoD,SAAS,CACZsY,UACA65I,uBAnBShtH,EAAA1qB,OAAA,SAuBNnC,GAvBM,yBAAA6sB,EAAAz6B,SAAA05B,EAAArsC,WA0BfigB,gEAA4B,SAAAsuB,EAAOhvB,EAAcw/I,GAArB,IAAAn/I,EAAA/U,EAAA7C,EAAAsxD,EAAAb,EAAAsN,EAAAjkD,EAAAk9I,EAAAtuJ,EAAA6oB,EAAAD,EAAA2lI,EAAA1mG,EAAAgB,EAAA31C,EAAAs7I,EAAAC,EAAAC,EAAAC,EAAAzB,EAAA0B,EAAAxsJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAk9B,GAAA,cAAAA,EAAAh9B,KAAAg9B,EAAA/8B,MAAA,UAAqCmO,EAArC0/I,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAA8C,GAAIz0J,EAAlDy0J,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAA0D,KAAMt3J,EAAhEs3J,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAA2E,KAAMhmG,EAAjFgmG,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAAoG,KAAM7mG,EAA1G6mG,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAAqH,KAAMv5F,EAA3Hu5F,EAAA/9J,OAAA,QAAAiuB,IAAA8vI,EAAA,GAAAA,EAAA,GAAoI,KAEzJz6J,EAAKzC,MAAMme,QAAQmZ,iBAFE,CAAA8U,EAAA/8B,KAAA,eAIxB5M,EAAKzC,MAAMuuI,OAAO/2F,QAAQy/G,wBAJF7qH,EAAA9rB,OAAA,UAKjB,GALiB,UASrB7d,EAAKzC,MAAMsO,QATU,CAAA89B,EAAA/8B,KAAA,gBAUxB5M,EAAK45J,sBACmB,oBAAbz2J,GACTA,EAAS,KAAK,yBAZQwmC,EAAA9rB,OAAA,UAcjB,GAdiB,YAkBtB7d,EAAKzC,MAAMq2J,kBAlBW,CAAAjqH,EAAA/8B,KAAA,gBAmBxB5M,EAAKu0J,oBACmB,oBAAbpxJ,GACTA,EAAS,KAAK,uBArBQwmC,EAAA9rB,OAAA,UAuBjB,GAvBiB,YA8BtBZ,EAAcjd,EAAK01J,kBAAkBx0F,IAC7BxoC,OAASwhI,EAErBl6J,EAAK21J,eAAe14I,GAGpBA,EAAYrhB,KAAO,WACnBqhB,EAAY/P,OAAS,UACrB+P,EAAYlC,OAASA,EAGrB/a,EAAK65D,kBAAkB58C,GAzCGk9I,EA2CKn6J,EAAKzC,MAA5BsO,EA3CkBsuJ,EA2ClBtuJ,QAAS6oB,EA3CSylI,EA2CTzlI,UACbD,EAAWC,EAAU5J,KAAK,SAAA6J,GAAC,OAAIA,EAAE/xB,OAAS8X,IA5CpB,CAAAivB,EAAA/8B,KAAA,eA8CA,oBAAbzJ,GACTA,EAAS,KAAK,sBA/CQwmC,EAAA9rB,OAAA,SAiDjB7d,EAAK9E,cAAcgkB,UAAnB,yBAAAtgB,OAAsD8b,KAjDrC,eAoD1B+Z,EAAWA,EAASA,SAOhB2lI,EAA8B,KA3DRzwH,EAAAh9B,KAAA,GA+DnB3G,IACHA,EAAQhG,EAAK9E,cAAc8R,MAAM,IAGnChN,EAAK9E,cAAcgkB,UAAU,4BAA4BxE,EAAa+Z,EAASmS,SAAS/6B,EAAQquJ,EAAen/I,EAAQ/U,EAAQ,CAAEuB,KAAMsE,EAAS7F,SAAU,CAAEuB,KAAMsE,IAnE1I89B,EAAA/8B,KAAA,IAsER8mD,EAAAj/B,EAASsgB,SAAQmlH,GAAjBlsJ,MAAA0lD,EAAAl3D,OAAA0/B,GAAA,EAAA1/B,CAAoCue,IACjDm5C,YAAYluD,EAAQ,CAAEuB,KAAMsE,EAAS7F,SAAU,CAAEuB,KAAMsE,IACvDq5C,MAAM,SAAAhjD,GAAC,OAAImyB,QAAQja,MAAMlY,KAxEJ,eAsEpB6c,EAtEoB4qB,EAAAj6B,QA6EtBqP,GADAA,EAAM/e,EAAK9E,cAAc8R,MAAM+R,IACrBvR,KAAKuR,EAAIvW,MAAMxI,EAAK9E,cAAc8R,MAAM,SAG9C4mD,GAAY70C,EAAIrR,GAAG1N,EAAK9E,cAAc8R,MAAM4mD,MAC9C70C,EAAM/e,EAAK9E,cAAc8R,MAAM4mD,IAIjC70C,EAAM/e,EAAKzC,MAAMke,KAAKmX,MAAMF,KAAK3T,EAAIywC,aAAah8B,KAAUi8B,eAGxD4qG,EAAuB,SAACvlG,EAAoBC,GAI5CqlG,GACFx5I,OAAOC,aAAau5I,GAKtBn9I,EAAYy9I,mBAAqB,EAEjC,IAAMlgD,GAAiB7xG,IAAc+S,QAAQ85H,UAAgC,oBAAbryI,GAA2D,IAAhC8Z,EAAYy9I,kBAGjGC,EAAsB36J,EAAK3E,MAAMypD,OAAO2wF,uBAAyB,EAEjC,IAAlCx4H,EAAYy9I,kBAEdz9I,EAAY/P,OAAS,YACZ+P,EAAYy9I,kBAInBz9I,EAAYy9I,oBAAsBC,EAGhC5lG,EAAQ7nD,OACV+P,EAAY/P,OAAS,UACX6nD,EAAQ7nD,SAClB+P,EAAY/P,OAAS,SAEd+P,EAAYy9I,kBAKnBlgD,IAEEzlD,IACF93C,EAAY2xB,UAAYmmB,GAE1B93C,EAAY29I,YAAc,eAC1B56J,EAAK65D,kBAAkB58C,GAEvB9Z,EAAS8Z,GAETjd,EAAK9E,cAAcgkB,UAAU,YAAa41C,EAAoBC,EAAS93C,KAIrEq9I,EAAqB,SAArBA,EAAsBx/I,EAAgBo2H,GAC1C,IAAKp2H,EACH,OAAO,EAET9a,EAAKzC,MAAMke,KAAKgC,IAAI+3B,sBAAsB16B,EAAgB,SAAC4C,EAAIkxB,GACzDA,GAAaA,EAAU1hC,QACzBlN,EAAK9E,cAAcgkB,UAAU,wBAAyB0vB,GACtDyrH,EAAqB,EAAEzrH,IAEvBwrH,EAA8Bx5I,OAAOjB,WAAY,kBAAM26I,EAAmBx/I,EAAgBo2H,IAAWA,MAKrGqpB,EAAkB,SAAAxlG,GAIlBqlG,GACFx5I,OAAOC,aAAau5I,GAIlBrlG,IACF93C,EAAY2xB,UAAYmmB,GAE1B93C,EAAY29I,YAAc,UAGtBjyJ,IAAc+S,QAAQ85H,UACxBv4H,EAAY/P,OAAS,UACG,oBAAb/J,GACTA,EAAS8Z,KAGXjd,EAAK65D,kBAAkB58C,GAGnB83C,EAAQ7nD,SACVktJ,EAA8Bx5I,OAAOjB,WAAY,kBAAM26I,EAAmBvlG,EAAQj6C,gBAAgB,MAAO,QAlLvF6uB,EAAA9rB,OAAA,UA0LjB62C,EAAAjgC,EAASsgB,SAAQmlH,GAAjBlsJ,MAAA0mD,EAAAl4D,OAAA0/B,GAAA,EAAA1/B,CAAoCue,IACxC4M,KAAK3hB,EAAQ,CAAEuB,KAAMsE,EAAS7F,QAAO+Y,OAAoB,CAAExX,KAAMsE,EAASkT,QAC1E61C,GAAG,kBAAmB,SAAA3xD,GAGrB,GAFAjD,EAAK9E,cAAcgkB,UAAU,sBAAuBjc,IAE/CA,EAEH,OADAjD,EAAK9E,cAAcgkB,UAAU,yCAA0Cjc,IAChE,EAGTga,EAAYnC,gBAAkB7X,EAC9Bga,EAAY/P,OAAS,UACrB+P,EAAY29I,YAAc,kBAC1B56J,EAAK65D,kBAAkB58C,GAEnBw3C,GACFA,EAAiBx3C,GAIfjd,EAAK3E,MAAM4C,WACTm8J,GACFx5I,OAAOC,aAAau5I,GAEtBA,EAA8Bx5I,OAAOjB,WAAY,kBAAM26I,EAAmBr3J,EAAK,MAAQ,QAG1F2xD,GAAG,UAAW2lG,GACd3lG,GAAG,eAAgBylG,GACnBzlG,GAAG,QAAS,SAAAx6C,GAEXia,QAAQ8a,IAAI,WAAW/0B,GAEvB,IAAMogJ,KAAapgJ,IAASA,EAAM+R,SAA6C,oBAA3B/R,EAAM+R,QAAQkF,WAA0BjX,EAAM+R,QAAQkF,SAAS,qCASnH,GANApU,EAAY/P,OAAS,QACrB+P,EAAY29I,YAAc,QAC1B56J,EAAK65D,kBAAkB58C,IAIlBu9I,EAAW,CACd55I,OAAOuvF,cAAcC,WAAW,uBAAwB,CACtDlnG,KAAM,QACNqnG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAM0oD,EAAU3+I,aAAiBo7C,MAEJ,qBAAlBp7C,EAAM+R,QACfnsB,EAAK20J,0BAA0B,KAAKv6I,EAAM+R,SACjCnsB,EAAK9E,cAAcysD,kBAAoBoxG,GAChDI,KAAwB/+I,GAIJ,oBAAbjX,GACTA,EAAS8Z,EAAY7C,MAxPH,eAAAuvB,EAAAh9B,KAAA,GAAAg9B,EAAAra,GAAAqa,EAAA,UA6PxBtV,QAAQ8a,IAAI,iBAAZxF,EAAAra,IAEArS,EAAY/P,OAAS,QACrBlN,EAAK65D,kBAAkB58C,GAIvB2D,OAAOuvF,cAAcC,WAAW,4CAA6C,CAC3ElnG,KAAM,QACNqnG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdmqD,KAAa7wH,EAAAra,KAASqa,EAAAra,GAAMnD,UAAUwd,EAAAra,GAAMnD,QAAQkF,SAAS,qCAE7D0nI,EAAUpvH,EAAAra,cAAiBkmC,MAC5Bx1D,EAAK9E,cAAcysD,kBAAoBoxG,IAAYyB,GACtDrB,KAAAxvH,EAAAra,IAGsB,oBAAbnsB,GAETA,EAAS8Z,EAAD0sB,EAAAra,IAtRcqa,EAAA9rB,OAAA,UAyRjB,GAzRiB,yBAAA8rB,EAAA77B,SAAA47B,EAAAvuC,KAAA,wEA8R5Bu6J,kBAAoB,WAAiB,IAAhBx0F,EAAgBjzD,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KACtBgP,EAAWzgB,OAAA84B,EAAA,EAAA94B,CAAA,GACV0kE,GAUL,OARAjkD,EAAY2xB,UAAY,GACxB3xB,EAAYkjC,QAAU/xC,KAAK04B,MAC3B7pB,EAAYy9I,kBAAoB,EAChCz9I,EAAY/P,OAAS,cACrB+P,EAAY49I,YAAczsJ,KAAK04B,MAC/B7pB,EAAY5e,MAAQ2B,EAAK3E,MAAM0J,cAC/BkY,EAAYugB,SAAWx9B,EAAK3E,MAAM8T,iBAClC8N,EAAYsX,UAAYv0B,EAAK9E,cAAc6V,gBAAgB,CAAC,UAAU,oBAC/DkM,KAGT04I,eAAiB,SAAA14I,GACf,IAAMtD,EAAYnd,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMoc,cACrCA,EAAY,KAAA/a,OAAMqe,EAAYkjC,UAAaljC,EAC3Cjd,EAAKoD,SAAS,CAAEuW,oBAIlBkgD,kBAAoB,SAAAihG,GAClB,IAAMnhJ,EAAYnd,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMoc,cAC/BsD,EAAWzgB,OAAA84B,EAAA,EAAA94B,CAAA,GAAQs+J,GAezB,OAdA79I,EAAY49I,YAAczsJ,KAAK04B,MAC/BntB,EAAY,KAAA/a,OAAMk8J,EAAmB36G,UAAaljC,EAClDjd,EAAKoD,SAAS,CAAEuW,iBAIZsD,EAAYnC,kBAEd9a,EAAK9E,cAAcw2E,kBAGnB1xE,EAAK9E,cAAco/C,qBAAnB,KAAA17C,OAA6Cqe,EAAYkjC,SAAUljC,IAG9DA,KAIT80I,qBAAuB,SAAA7vJ,GACJ,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKssJ,uBAAwB,EAEpChyJ,EAAKoD,SAAS,CAAE0oI,cAGlB8tB,oBAAsB,SAAA13J,GACH,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKssJ,uBAAwB,EACpChyJ,EAAKoD,SAAS,CAAE0oI,OAAQA,OAG1BqmB,4BAA8B,SAAAjwJ,GACX,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK0sJ,0BAA2B,EACvCpyJ,EAAKoD,SAAS,CAAE0oI,cAGlB8oB,2BAA6B,SAAA1yJ,GACV,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK0sJ,0BAA2B,EACvCtmB,EAAOpmI,KAAK4uJ,kCAAmC,EAC/CxoB,EAAOpmI,KAAKssJ,uBAAwB,EAEpChyJ,EAAKoD,SAAS,CAAE0oI,cAGlBmnB,2BAA6B,SAAA/wJ,GACV,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKytJ,kBAAmB,EAC/BnzJ,EAAKoD,SAAS,CAAE0oI,cAGlB6oB,0BAA4B,SAACzyJ,EAAEkY,GACZ,qBAANlY,GAAqBA,GAC9BA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKytJ,iBAAmB/4I,EAE/Bpa,EAAKoD,SAAS,CAAE0oI,cAGlB+mB,0BAA4B,SAAA3wJ,GAM1B,GALiB,qBAANA,GACTA,EAAE6H,kBAIC/J,EAAKzC,MAAMuuI,OAAOpmI,KAAKqtJ,gBAC1B,OAAO,EAGT,IAAIjnB,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKqtJ,iBAAkB,EAC9B/yJ,EAAKoD,SAAS,CAAE0oI,cAGlB4oB,yBAA2B,SAACxyJ,EAAEkY,GACX,qBAANlY,GAAqBA,GAC9BA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAGjB,oBAAR1xH,IACFA,EAAQ,mCAGNpa,EAAKzC,MAAMuuI,OAAOpmI,KAAKqtJ,kBAAoB34I,IAE7C0xH,EAAOpmI,KAAKqtJ,gBAAkB34I,EAC9Bpa,EAAKoD,SAAS,CAAE0oI,eAIpBwmB,iCAAmC,SAAApwJ,GAChB,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK6sJ,qBAAsB,EAClCvyJ,EAAKoD,SAAS,CAAE0oI,cAGlB+oB,gCAAkC,SAAA3yJ,GACf,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK6sJ,qBAAsB,EAClCvyJ,EAAKoD,SAAS,CAAE0oI,cAGlBulB,wBAA0B,SAAAnvJ,GACP,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK4rJ,0BAA2B,EACvCtxJ,EAAKoD,SAAS,CAAE0oI,cAGlB2oB,uBAAyB,SAAAvyJ,GACN,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK4rJ,0BAA2B,EACvCtxJ,EAAKoD,SAAS,CAAE0oI,cAGlB0lB,mBAAqB,SAAAtvJ,GACF,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK+rJ,qBAAsB,EAClCzxJ,EAAKoD,SAAS,CAAE0oI,cAGlBivB,kBAAoB,SAAA74J,GACD,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAK+rJ,qBAAsB,EAClCzxJ,EAAKoD,SAAS,CAAE0oI,cAGlB6lB,uBAAyB,SAAAzvJ,GACN,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKksJ,yBAA0B,EACtC5xJ,EAAKoD,SAAS,CAAE0oI,cAGlB0oB,sBAAwB,SAAAtyJ,GACL,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKksJ,yBAA0B,EACtC5xJ,EAAKoD,SAAS,CAAE0oI,cAGlB2mB,mBAAqB,SAAAvwJ,GACF,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKgtJ,qBAAsB,EAClC1yJ,EAAKoD,SAAS,CAAE0oI,cAGlByoB,kBAAoB,SAAAryJ,GACD,qBAANA,GACTA,EAAE6H,iBAGJ,IAAI+hI,EAAMtvI,OAAA84B,EAAA,EAAA94B,CAAA,GAAQwD,EAAKzC,MAAMuuI,QAC7BA,EAAOpmI,KAAKgtJ,qBAAsB,EAClC1yJ,EAAKoD,SAAS,CAAE0oI,cAGlBvuI,MAAQ,CACNke,KAAM,KACNoyI,QAAQ,KACRhiJ,QAAS,KACT6oB,UAAW,GACXiiH,SAAU,KACVvsF,SAAU,KACVlb,WAAW,KACXqoH,cAAc,EACd59I,aAAc,GACd65I,cAAc,GACdwH,YAAa,KACbzH,aAAa,KACbnjJ,cAAc,KACd0gC,eAAgB,KAChB2iH,eAAgB,KAChB3+H,kBAAmB,GACnB+uH,iBAAkB,KAClBoO,iBAAkB,KAClBgE,kBAAiB,EACjBtC,kBAAkB,KAClBsH,kBAAmB,KACnBvH,SAAU1zJ,EAAK0zJ,SACfE,kBAAmB,KACnB2B,oBAAmB,EACnBzoC,oBAAmB,EACnB50D,qBAAqB,KACrBgjG,uBAAuB,GACvB74C,sBAAqB,EACrBuuC,YAAa5wJ,EAAK4wJ,YAClBqD,yBAA0B,KAC1B3pG,aAActqD,EAAKsqD,aACnBtmB,aAAchkC,EAAKgkC,aACnB8vH,eAAgB9zJ,EAAK8zJ,eACrBhC,gBAAiB9xJ,EAAK8xJ,gBACtBkC,iBAAkBh0J,EAAKg0J,iBACvB5lG,iBAAkBpuD,EAAKouD,iBACvBsiD,kBAAmB1wG,EAAK0wG,kBACxBwjD,oBAAqBl0J,EAAKk0J,oBAC1BC,qBAAsBn0J,EAAKm0J,qBAC3B/4I,0BAA2Bpb,EAAKob,0BAChCq8G,0BAA2Bz3H,EAAKy3H,0BAChC28B,yBAA0Bp0J,EAAK3E,MAAM+4J,yBACrC14I,QAAS,CACPkZ,QAAS,GACTJ,SAAU,GACVK,iBAAkB,KAClBk/H,aAAc/zJ,EAAK+zJ,cAErBjoB,OAAQ,CACNpmI,KAAM,CACJqtJ,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBqC,uBAAwB,KACxBzC,wBAAyB,KACzBQ,yBAA0B,KAC1B6B,yBAA0B,KAC1BK,iCAAkC,KAClC7C,oBAAqBzxJ,EAAKyxJ,oBAC1BH,yBAA0BtxJ,EAAKsxJ,0BAEjCv8G,QAAS,CACPw/G,kBAAmBv0J,EAAKu0J,kBACxBwG,kBAAmB/6J,EAAK+6J,kBACxBvJ,mBAAoBxxJ,EAAKwxJ,mBACzBiB,mBAAoBzyJ,EAAKyyJ,mBACzBmH,oBAAqB55J,EAAK45J,oBAC1B7H,qBAAsB/xJ,EAAK+xJ,qBAC3ByC,sBAAuBx0J,EAAKw0J,sBAC5B7C,uBAAwB3xJ,EAAK2xJ,uBAC7B8C,uBAAwBz0J,EAAKy0J,uBAC7BpD,wBAAyBrxJ,EAAKqxJ,wBAC9BqD,yBAA0B10J,EAAK00J,yBAC/B7B,0BAA2B7yJ,EAAK6yJ,0BAChC8B,0BAA2B30J,EAAK20J,0BAChC1B,2BAA4BjzJ,EAAKizJ,2BACjC2B,2BAA4B50J,EAAK40J,2BACjCzC,4BAA6BnyJ,EAAKmyJ,4BAClC2C,gCAAiC90J,EAAK80J,gCACtCD,gCAAiC70J,EAAK60J,gCACtCE,iCAAkC/0J,EAAK+0J,iCACvCzC,iCAAkCtyJ,EAAKsyJ,mCAG3Cr1I,YAAa,CACXvX,KAAM,CACJiU,aAAc,MAEhBq7I,KAAM,GACNjgH,QAAS,gFA7yDX,IAAM15C,EAAQmB,OAAOuB,OAAO,GAAG5C,KAAKE,OACpCA,EAAMogB,KAAOtgB,KAAKoC,MAAMke,KACxBpgB,EAAMwQ,QAAU1Q,KAAKoC,MAAMsO,QAC3BxQ,EAAMq5B,UAAYv5B,KAAKoC,MAAMm3B,UACzBv5B,KAAKD,cACPC,KAAKD,cAAcE,SAASC,GAE5BF,KAAKD,cAAgB,IAAII,KAAcD,kDAKzCF,KAAK4H,oBAAqB,yKAI1B5H,KAAKI,qBACCJ,KAAK44J,sBAGPnzI,OAAOwd,UACTxd,OAAOwd,SAASw2B,GAAG,iBAAnB,eAAAvyB,EAAA7lC,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAAqC,SAAA49B,EAAO1V,GAAP,OAAA3G,EAAA3wB,EAAAwP,KAAA,SAAAy9B,GAAA,cAAAA,EAAAv9B,KAAAu9B,EAAAt9B,MAAA,OACnCpR,EAAK45J,qBAAqB7gI,GADS,wBAAA2V,EAAAp8B,SAAAm8B,EAAA9uC,SAArC,gBAAA2uC,GAAA,OAAAzH,EAAAr0B,MAAA7S,KAAA8S,YAAA,IAMF2S,OAAO8yI,SAAWv4J,KAAKu4J,SACvB9yI,OAAOgwI,YAAcz1J,KAAKy1J,+IAsxD1B,IAAMuK,EAA+E,kBAA3ChgK,KAAKoC,MAAMuuI,OAAOpmI,KAAKqtJ,iBAAgC53J,KAAKoC,MAAMuuI,OAAOpmI,KAAKqtJ,gBAAgBr2J,OAAO,EACzI0+J,EAAiF,kBAA5CjgK,KAAKoC,MAAMuuI,OAAOpmI,KAAKytJ,kBAAiCh4J,KAAKoC,MAAMuuI,OAAOpmI,KAAKytJ,iBAAiBz2J,OAAO,EAClJ,OACEqH,EAAA9G,EAAAC,cAAA,WACE6G,EAAA9G,EAAAC,cAACm2J,GAAyBgI,SAA1B7+J,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2K,MAAO7K,KAAKoC,SAEdwG,EAAA9G,EAAAC,cAACo+J,GAAD9+J,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEywI,OAAQ3wI,KAAKoC,MAAMuuI,OACnBpwH,QAASvgB,KAAKoC,MAAMme,QACpB7P,QAAS1Q,KAAKoC,MAAMsO,QACpB5N,SAAU9C,KAAKE,MAAM4C,SACrB2yJ,YAAaz1J,KAAKoC,MAAMqzJ,YACxB7C,aAAc5yJ,KAAKE,MAAM0yJ,aACzB+D,gBAAiB32J,KAAKoC,MAAMu0J,gBAC5BG,iBAAkB92J,KAAKoC,MAAM00J,iBAC7BG,yBAA0Bj3J,KAAKoC,MAAM60J,yBACrC6B,yBAA0B94J,KAAKoC,MAAM02J,4BAEvClwJ,EAAA9G,EAAAC,cAACq+J,GAAD,CACEzvB,OAAQ3wI,KAAKoC,MAAMuuI,OACnBjgI,QAAS1Q,KAAKoC,MAAMsO,QACpBgiJ,QAAS1yJ,KAAKE,MAAMwyJ,QACpB15C,OAAQinD,IAEVr3J,EAAA9G,EAAAC,cAACs+J,GAAD,CACE1vB,OAAQ3wI,KAAKoC,MAAMuuI,OACnBjgI,QAAS1Q,KAAKoC,MAAMsO,QACpBgiJ,QAAS1yJ,KAAKE,MAAMwyJ,QACpB15C,OAAQgnD,EACRpN,aAAc5yJ,KAAKE,MAAM0yJ,eAE3BhqJ,EAAA9G,EAAAC,cAACu+J,GAAD,CACEhgJ,KAAMtgB,KAAKoC,MAAMke,KACjB1Z,MAAO5G,KAAKE,MAAM0G,MAClB2Z,QAASvgB,KAAKoC,MAAMme,QACpBwzI,eAAgB/zJ,KAAKE,MAAM6zJ,yBAj2DLz6C,IAAMp3G,WAAhC83J,GACGuG,SAAWrI,GAAyBqI,SAu2D9BvG,4BCjxDA7gD,8MAvLb/2G,MAAQ,KAKRrC,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,4JAK9CF,KAAKI,kQAKLJ,KAAKI,iMAGkBiC,EAAWC,sEAElCtC,KAAKI,aAEDJ,KAAKE,MAAMqgB,SAAYvgB,KAAKE,MAAMqgB,QAAQmZ,2DACrC,yIAIF,IAAAr5B,EAAAL,KAEHwgK,EAAU,kBACVC,EAAa,CAAC,OAAO,QACLzgK,KAAKD,cAAcssD,mBAErCo0G,EAAa,CAAC,OAAO,QACrBD,EAAU,6BAEZ,IAAME,EAAoB1gK,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa,YAE3E,OACEhN,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEvC,MAAO,CACLqG,KAAM,IACNF,MAAO,IACPyB,OAAQ,GACRD,SAAU,aAGZrF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpH,EAAG,EACHP,WAAY,SACZE,eAAgB,SAChB6N,gBAAiB,YACjB9N,cAAe,CAAC,SAAS,QAEzByH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,QACPuI,UAAW,UAFb,sCAMAvF,EAAA9G,EAAAC,cAACq/G,GAAA,EAAD,CACEgL,GAAI,EACJr9G,GAAI,EACJiN,GAAI,CAAC,EAAE,GACPvW,GAAI,CAAC,EAAE,GACPY,GAAI,OACJT,MAAO,QACPU,MAAO,CACLoC,QAAQ,OACRxB,aAAa,MACb/F,cAAc,MACdD,WAAW,YAEb+N,gBAAiB,UACjBgY,KAAM,uEAdR,YAiBEre,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJiC,KAAM,QACN9B,MAAO,QACP6B,KAAM,yBAKZmB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE+Z,GAAI,CAAC,EAAE,GACP5Z,GAAI,OACJqnB,GAAI,cACJpvB,MAAO,CAAC,MAAM,QACdsF,SAAU,CAAC,OAAO,SAClBrF,WAAY,CAAC,SAAS,eAEtB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,CAAC,EAAG,GACRxE,MAAO,CAAC,GAAK,MAEb2H,EAAA9G,EAAAC,cAACgzJ,GAAA,EAAD,CACEr6H,GAAG,KAEH9xB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwF,IAAKmyJ,EACLvyJ,SAAU,WACV5I,OAAQo7J,MAId73J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,CAAC,GAAI,EAAE,IACdC,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEujH,GAAI,CAAC,EAAE,GACPlrH,WAAY,SACZC,cAAe,OAGbu/J,GACE93J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrBrI,QAAU,SAACiB,GAAD,OAAO0e,OAAO8V,SAASzzB,KAAK,iBANxC,eAYD9H,KAAKE,MAAM4C,UACV8F,EAAA9G,EAAAC,cAAA6G,EAAA9G,EAAAuwG,SAAA,KACEzpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEG,GAAI,EACJtD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrBrI,QAAS,SAACiB,GAAO1G,EAAKN,cAAc06B,SAASzL,SAASC,eAAe,YAAY0xI,UAAU,OAP7F,cAWA/3J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVE,MAAO,QACPC,WAAY,QACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrBrI,QAAS,SAACiB,GAAO1G,EAAKN,cAAc06B,SAASzL,SAASC,eAAe,OAAO0xI,UAAU,OANxF,oBAxJCrnD,IAAMp3G,qBCPZ,SAAS0+J,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRt7I,OAAOgV,SAAS,EAAG,IAClB,CAAComI,IAEG,+BCwCMG,8MAxCb5+J,MAAQ,2EAGN,OACEwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,KAAOxE,gBAAiByK,GAAI,CAAC,EAAE,GAAI4T,GAAI,CAAC,MAAO,QAC7Dha,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,KAAOvE,iBACvBoE,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKoF,SAAU,WAAYC,OAAQ,IACjCtF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUD,WAAY,SAAUqF,SAAU,CAAC,OAAQ,QAASyC,GAAI,OAAQmF,UAAW,SAAUyU,GAAI,CAAC,MAAO,QAC5Hha,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwiJ,GAAT,CAAYhgJ,WAAY,YAAawoG,WAAY,QAASzlG,GAAI,QAAS1I,SAAU,CAAC,QAAQ,GAAIyI,UAAW,SAAUvI,MAAO,SAA1H,4BAGAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAY75G,WAAY,YAAawoG,WAAY,QAASzlG,GAAI,QAASzI,WAAY,EAAGD,SAAU,CAAC,QAAQ,GAAIyI,UAAW,SAAUvI,MAAO,SAAzI,wDAGAgD,EAAA9G,EAAAC,cAACgzJ,GAAA,EAAD,CAAYr6H,GAAG,IAAIp0B,MAAO,CAAC20H,eAAe,SACxCryH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEC,UAAWm4J,KAAcxwI,eACzBvpB,aAAc,EACdQ,MAAM1H,KAAKE,MAAM4C,SAAW,UAC5BqE,UAAW,OACXo3G,cAAe,QACf54G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbsD,GAAI,OACJgG,GAAI,CAAC,EAAE,GACPgN,GAAI,GAVN,sBAkBRpT,EAAA9G,EAAAC,cAACs3G,EAAA,EAAD,cAnCmBn3G,aCyCZg/J,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIv8J,EAAK3E,MAAMqgB,QACb,OAAQ1b,EAAK3E,MAAMqgB,QAAQ7d,IACzB,KAAK,EACH0+J,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBn6J,aAAc,MACd+H,gBAAiBjP,KAAKmhK,wBACtB97J,OAAQ,MACRpE,MAAO,OAGT,OACE2H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKvC,MAAO+6J,EAAehjJ,GAAI,IAC/BzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMvC,MAAO,CAAEk7G,cAAe,eAC3BxhH,KAAKE,MAAMqgB,QAAQ9Y,cAxCA6xG,IAAMp3G,WCW9Bo/J,GAAkB,SAAAphK,GAAK,OAC3B0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKmT,GAAI,EAAG0mG,UAAW,EAAGr2G,YAAY,UAAUuW,GAAI,GAClDha,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQwG,GAAT,CAAYlB,UAAW,UAAvB,cACAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE/C,QAAS5F,EAAMywI,OAAO/2F,QAAQy/G,sBAC9B3xJ,KAAK,QACL2W,GAAI,EACJjQ,GAAI,GAJN,0BASAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE/C,QAAS5F,EAAMywI,OAAO/2F,QAAQ6kH,oBAC9B/2J,KAAK,QACL2W,GAAI,EACJjQ,GAAI,GAJN,cAQAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS5F,EAAMywI,OAAO/2F,QAAQ6/G,2BAC9Bp7I,GAAI,EACJjQ,GAAI,GAJN,sBAQAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS5F,EAAMywI,OAAO/2F,QAAQ8/G,gCAC9Br7I,GAAI,EACJjQ,GAAI,GAJN,uBAQAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS,SAAAuvH,GACPn1H,EAAMywI,OAAO/2F,QAAQw/G,kBAAkB/jC,IAEzCh3G,GAAI,EACJjQ,GAAI,GANN,aAUAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS5F,EAAMywI,OAAO/2F,QAAQ0/G,uBAC9Bj7I,GAAI,EACJjQ,GAAI,GAJN,oBAQAxF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS5F,EAAMywI,OAAO/2F,QAAQgmH,kBAC9BvhJ,GAAI,EACJjQ,GAAI,GAJN,eAuOWmzJ,oLA1NX,OACE34J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM5H,MAAO,QAAS+H,GAAI,OAAQgG,GAAI,GACpCpG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAY/2G,UAAW,UAAvB,iBAEAvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,QAASyY,GAAI,IACvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,wCAIJD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UACflB,KAAKE,MAAMogB,KACV1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,QAASyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,MAAOyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,kCAGA7I,KAAKE,MAAMogB,KAgBT,KAfF1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGvE,WAAY,SAAUE,eAAgB,iBACjDwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,OAAO4W,GAAI,EAAGzY,MAAM,SAC/BgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,QAAZ,8BAGFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEoe,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBpe,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,SAArB,6BAQP1H,KAAKE,MAAMogB,KACV1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEkG,GAAI,EACJD,GAAI,EACJ4zG,UAAW,EACXtG,aAAc,EACd/vG,YAAa,UACb8B,UAAW,SACX/M,eAAgB,eAChBF,WAAY,UAEZ0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnB,KAAK,QACL5B,QAAS9F,KAAKE,MAAMo8H,0BACpBl1H,UAAWpH,KAAKE,MAAMogB,MAHxB,sBAOA1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,eACAD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAQnB,KAAK,QAAQN,UAAQ,GAA7B,6BAIA,KAEJwB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UACflB,KAAKE,MAAMqgB,QAAQmZ,iBAClB9wB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,QAASyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,MAAOyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,yBAGD7I,KAAKE,MAAMogB,OAAStgB,KAAKE,MAAMqgB,QAAQmZ,iBACtC9wB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGvE,WAAY,SAAUE,eAAgB,iBACjDwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,OAAO4W,GAAI,EAAGzY,MAAM,SAC/BgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJzY,MAAM,OACNU,MAAO,CAAEk7G,cAAe,eAH1B,oBAOA54G,EAAA9G,EAAAC,cAACy/J,GAAD,CAAiBjhJ,QAASvgB,KAAKE,MAAMqgB,QAAQkZ,WAE/C7wB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEwV,GAAI,EACJzY,MAAM,OACNU,MAAO,CAAEk7G,cAAe,eAH1B,qBAOA54G,EAAA9G,EAAAC,cAACy/J,GAAD,CAAiBjhJ,QAASvgB,KAAKE,MAAMqgB,QAAQ8Y,cAKnDzwB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,QAAQ5B,QAAS9F,KAAKE,MAAM04J,cAAjD,kBAIA,KACH54J,KAAKE,MAAMogB,MAAQtgB,KAAKE,MAAMw5B,iBAC7B9wB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGvE,WAAY,UACvB0H,EAAA9G,EAAAC,cAACy/J,GAAD,CAAiBjhJ,QAASvgB,KAAKE,MAAMqgB,QAAQkZ,WAE7C,MAGN7wB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UACflB,KAAKE,MAAMwQ,SAAW1Q,KAAKE,MAAM42J,iBAChCluJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,QAASyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,MAAOyY,GAAI,IAEvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,uCAGA7I,KAAKE,MAAMwQ,UACb1Q,KAAKE,MAAMogB,MACVtgB,KAAKE,MAAMk3J,oBAWR,KAVFxuJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGvE,WAAY,SAAUE,eAAgB,iBACjDwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,OAAO4W,GAAI,EAAGzY,MAAM,SAC/BgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,QAAZ,gCAGFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,QAAQ5B,QAAS9F,KAAKE,MAAMu1J,aAAjD,YAKHz1J,KAAKE,MAAMwQ,SAAW1Q,KAAKE,MAAMogB,KAChC1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGvE,WAAY,UACvB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ7B,MAAO,QAASyY,GAAI,IACvCzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,QAAZ,oBAAqC5F,KAAKE,MAAMwQ,SAChD9H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAO5F,KAAKE,MAAMu4J,kBAAoB,MAAQ,QAApD,mBACmBz4J,KAAKE,MAAMo4J,kBAIhC,KAEHt4J,KAAKE,MAAMk3J,oBACVxuJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,EAAGrE,eAAgB,iBAC3BwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ4W,GAAI,EAAGzY,MAAM,QAChCgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,OAAZ,kCAGFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,QAAQ5B,QAAS9F,KAAKE,MAAMu1J,aAAjD,YAIA,KAE8B,OAAhCz1J,KAAKE,MAAM42J,mBACqB,IAAhC92J,KAAKE,MAAM42J,mBACb92J,KAAKE,MAAMogB,KAgBP,KAfF1X,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJqJ,GAAI,EACJ5N,WAAY,SACZE,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,OAAO4W,GAAI,EAAGzY,MAAM,SAC/BgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,QAAZ,yBAGFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,QAAQ5B,QAAS9F,KAAKE,MAAMy2J,iBAAjD,cAM6B,IAAhC32J,KAAKE,MAAM42J,iBACVluJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpD,GAAI,EACJqJ,GAAI,EACJ5N,WAAY,SACZE,eAAgB,iBAEhBwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ4W,GAAI,EAAGzY,MAAM,QAChCgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,OAAZ,yBAGFgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAO0oJ,QAAR,CAAgB7pJ,KAAK,QAAQ5B,QAAS9F,KAAKE,MAAMy2J,iBAAjD,aAIA,MAEmC,IAAtC32J,KAAKE,MAAMg5J,uBACVtwJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpD,GAAI,GACRmD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMpB,KAAK,QAAQ4W,GAAI,EAAGzY,MAAM,QAChCgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAM,OAAZ,yBAEA,MAGNgD,EAAA9G,EAAAC,cAAC0/J,GAAoBzhK,KAAKE,OAE1B0I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAaq3J,SAAd,CAAuB31C,IAAK,SAAAm3C,GAAI,OAAKj8I,OAAOuvF,cAAgB0sD,aAtNzCpoD,IAAMp3G,+BC/BhBy/J,GAhDgB,CAC7BrgJ,YAAa,CACX0P,QAAS,+BACTkkF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTvnG,KAAM,eAER6zJ,QAAS,CACP5wI,QAAS,6BACTkkF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTvnG,KAAM,eAERqf,QAAS,CACP4D,QAAS,iCACTkkF,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTvnG,KAAM,eAER8zJ,UAAW,CACT7wI,QAAS,wBACTkkF,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTvnG,KAAM,eAER6f,QAAS,CACPoD,QAAS,6BACTskF,QAAS,UACTvnG,KAAM,eAERkR,MAAO,CACL+R,QAAS,0BACTkkF,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTvnG,KAAM,UCoJG+zJ,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACP3gK,OAAOC,KAAK0gK,GAAgBzgK,SAC1BF,OAAOC,KAAK2gK,GAAmB1gK,UAKrC2gK,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAY9gK,OAAOC,KAAK2gK,GAAmBtwJ,OAAO,SAAA7N,GACtD,OAAQzC,OAAOC,KAAK0gK,GAAgB9rI,SAASpyB,KAE/C,OAAOm+J,EAAkBE,GAEzB,OAAO9gK,OAAOC,KAAK2gK,GAAmBh/J,IAAI,SAAAa,GACxC,OAAOm+J,EAAkBn+J,QAM/Bs+J,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2B5gK,OAAOC,KAAK0gK,GACpC/+J,IAAI,SAAAa,GACH,OACEk+J,EAAel+J,GAAK47J,cAAgBuC,EAAkBn+J,GAAK47J,YAEpDuC,EAAkBn+J,GAElB,OAGV6N,OAAO,SAAA0wJ,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAA/+J,OAAM8+J,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIrwJ,EAAK,KACL8wJ,EAAY,GACZC,EAAS,GAEb,GAAI99J,EAAKk9J,uBAAuBC,EAAgBC,GAC9CrwJ,EAAK/M,EAAKq9J,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAY79J,EAAKu9J,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAAS99J,EAAKy9J,6BACZI,EAAU19G,QACVg9G,GAMAU,EAAU3wJ,SAAW4wJ,EAAO5wJ,SAC9BH,EAAK8wJ,GAGT,OAAO9wJ,KAITgxJ,0BAA4B,SAAAvgK,GAC1B,IAAIuP,EAAK,KACLvQ,OAAOC,KAAKuD,EAAK3E,MAAMse,cAAcjd,SACvCqQ,EAAK/M,EAAK49J,sBACRpgK,EAAUmc,aACV3Z,EAAK3E,MAAMse,eAIX5M,GACF/M,EAAKg+J,qBAAqBjxJ,MAI9BixJ,qBAAuB,SAAA/gJ,GAGrB,IAAIghJ,EAAYj+J,EAAKk+J,wBAAwBjhJ,GAC7CghJ,EAAU3tD,WAAatwG,EAAK3E,MAAMqQ,UAClCuyJ,EAAUE,WAAY,EAItBv9I,OAAOuvF,cAAcC,WAAW,IAAK6tD,MAGvCC,wBAA0B,SAAAjhJ,GACxB,IAAImhJ,EAAuB,GAG3B,OAFanhJ,EAAY/P,QAGvB,IAAK,cACHkxJ,EAAuBtB,GAAyBrgJ,YAChD,MACF,IAAK,UACH2hJ,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyBv0I,QAChD,MACF,IAAK,YACH61I,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyB/zI,QAChD,MACF,IAAK,QACHq1I,EAAuBtB,GAAyB1iJ,MAOpD,IAAIikJ,EAAoB,GACxB,OAAQphJ,EAAYyb,QAClB,IAAK,kBACH2lI,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoBphJ,EAAYyb,OAAO4lI,OAAO,GAAGttJ,cAAgBiM,EAAYyb,OAAOnX,OAAO,GAM/F,IAAIg9I,GAFJH,EAAuBhzJ,KAAKkV,MAAMlV,KAAKC,UAAU+yJ,KAEXjyI,QAAQ6I,QAAQ,WAAWqpI,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGttJ,cAAgButJ,EAAWppJ,MAAM,GACnEipJ,EAAqBjyI,QAAUoyI,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqB9tD,WAAatwG,EAAK3E,MAAMqQ,UAEtC0yJ,qFAGU5gK,EAAWC,GAC5BtC,KAAK4iK,0BAA0BvgK,oCAI/B,OACEuG,EAAA9G,EAAAC,cAAA,WACE6G,EAAA9G,EAAAC,cAAC8G,EAAA,EAAaq3J,SAAd,CAAuB31C,IAAK,SAAAm3C,GAAI,OAAKj8I,OAAOuvF,cAAgB0sD,aAtLjCpoD,IAAMp3G,WCsBnCmhK,GAAU/pD,IAAMgqD,KAAK,kBAAM/7I,EAAAxgB,EAAA,GAAAmkH,KAAA3jG,EAAA7G,KAAA,cAC3B6iJ,GAAYjqD,IAAMgqD,KAAK,kBAAMvhJ,QAAAqD,IAAA,CAAAmC,EAAAxgB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAAAwgB,EAAAxgB,EAAA,KAAAmkH,KAAA3jG,EAAA7G,KAAA,cAC7B8iJ,GAAalqD,IAAMgqD,KAAK,kBAAMvhJ,QAAAqD,IAAA,CAAAmC,EAAAxgB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAAAwgB,EAAAxgB,EAAA,KAAAmkH,KAAA3jG,EAAA7G,KAAA,cAmnCrB+iJ,8MAhnCbrhK,MAAQ,CACNme,QAAS,KACTwP,WAAY,GACZukF,SAAU,KACVovD,WAAY,KACZC,YAAa,IACbhqF,MAAO,UACPppE,UAAW,QACXqzJ,YAAY,EACZzgK,YAAa,KACb0gK,aAAc,KACdj9G,cAAe,KACfo6D,cAAe,KACfp3G,cAAe,KACfk6J,cAAel9J,IACfmtJ,eAAgB,KAChBlB,eAAgB,KAChBriJ,gBAAiB,KACjBuzJ,gBAAgB,EAChBpmD,iBAAkB,KAClB3pG,iBAAkB,KAClBgwJ,kBAAmB,KACnBpH,mBAAoB,KACpB37J,MAAOwkB,OAAOw+I,WACdzuI,oBAAqB,KACrBnwB,OAAQogB,OAAOy+I,YACfv6G,OAAOn8C,IAAc+S,QACrB4jJ,uBAAwB,KACxBlL,0BAA0B,EAC1B3uD,4BAA6B,QAI/BvqG,cAAgB,OAUhBqkK,kBAAoB,SAACr9J,GACfA,GACFA,EAAE6H,iBAEJ/J,EAAKoD,SAAS,CACZ+7J,kBAAmB,UAIvBK,iBAAmB,SAACnkK,GAClB2E,EAAKoD,SAAS,CACZ+7J,kBAAmB9jK,OAIvBokK,mBAAqB,SAACpkK,EAAOmC,OAyB7Bk0E,qCAAkB,SAAA90D,IAAA,IAAAzZ,EAAAwuE,EAAAG,EAAA5mD,EAAAw0I,EAAAC,EAAA1xJ,UAAA,OAAA2f,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAAOzJ,EAAPw8J,EAAAjjK,OAAA,QAAAiuB,IAAAg1I,EAAA,GAAAA,EAAA,GAAkB,KAAMhuF,EAAxBguF,EAAAjjK,OAAA,QAAAiuB,IAAAg1I,EAAA,IAAAA,EAAA,GAEX3/J,EAAKzC,MAAMme,QAFA,CAAAoB,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,UAGP,GAHO,cAMVi0D,EAAoB9xE,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,IAEhDqtB,EARU1uB,OAAA84B,EAAA,EAAA94B,CAAA,GAQQwD,EAAKzC,MAAM2tB,aACpB4mD,IACbt1E,OAAOC,KAAKyuB,EAAW4mD,IAAoBn1E,QAAQ,SAAAsC,GAErB,OADfisB,EAAW4mD,GAAmB7yE,GAClC+yE,uBACA9mD,EAAW4mD,GAAmB7yE,MAKrCygK,EAAmB/tF,EAAY,GAAK3xE,EAAK9E,cAAcy/C,cAAc,gBACnD+kH,EAAiB5tF,IACvCt1E,OAAOC,KAAKijK,EAAiB5tF,IAAoBn1E,QAAS,SAAAsC,GAEtB,OADfygK,EAAiB5tF,GAAmB7yE,GACxC+yE,uBACN0tF,EAAiB5tF,GAAmB7yE,KAKjDe,EAAK9E,cAAculB,gBAAgB,aAAci/I,GAAkB,GA5BnD5iJ,EAAAlQ,KAAA,GA8BV5M,EAAKoD,SAAS,CAClB8nB,cACC,WACuB,oBAAb/nB,GACTA,MAlCY,eAAA2Z,EAAAe,OAAA,UAsCT,GAtCS,yBAAAf,EAAAhP,SAAA8O,EAAAzhB,WAyClBgwB,cAAgB,SAAClsB,EAAKyG,GAA8C,IAAxC8zB,EAAwCvrB,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAlC,KAAM4jE,EAA4B5jE,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,IAAAA,UAAA,GAElE,IAAKjO,EAAKzC,MAAMme,QACd,OAAO,EAGTzc,EAAMA,EAAIoJ,cACV,IAAM6tB,EAAc7oB,SAASe,KAAK04B,MAAM,KAClCgrC,EAAoB9xE,EAAKzC,MAAMme,QAAQ8Y,SAAS32B,GAChD+hK,EAAiB5/J,EAAKzC,MAAM2tB,WAAW4mD,GAAqB9xE,EAAKzC,MAAM2tB,WAAW4mD,GAAmB7yE,GAAO,KAE9GygK,EAAmB1/J,EAAK9E,cAAcy/C,cAAc,cAAa,EAAK,IACpEklH,EAAiBH,EAAiB5tF,GAAqB4tF,EAAiB5tF,GAAmB7yE,GAAO,KAElG6gK,EAAoBjuF,KAAqBguF,GAAsD,OAAlCA,EAAe7tF,gBAA2B6tF,EAAe7tF,gBAAkB97C,GAAgB9qB,KAAKC,UAAUw0J,EAAen6J,QAAU0F,KAAKC,UAAU3F,IAGjN+mB,GAAS,EAEb,IAJoBmzI,GAAsD,OAAlCA,EAAe5tF,gBAA2B4tF,EAAe5tF,gBAAkB97C,GAAgB9qB,KAAKC,UAAUu0J,EAAel6J,QAAU0F,KAAKC,UAAU3F,IAAUo6J,EAIpL,CACd,IAAM9tF,EAAiBx4C,EAAMtD,EAAesD,EAAO,KAG/Cq4C,IACG6tF,KACHA,EAAmB,IACF5tF,GAAqB,IAKxC4tF,EAAgBljK,OAAA84B,EAAA,EAAA94B,CAAA,GACXkjK,EADWljK,OAAA+pI,EAAA,EAAA/pI,CAAA,GAEbs1E,EAFat1E,OAAA84B,EAAA,EAAA94B,CAAA,GAGTkjK,EAAiB5tF,GAHRt1E,OAAA+pI,EAAA,EAAA/pI,CAAA,GAIXyC,EAAM,CACLyG,OACAssE,sBAKNhyE,EAAK9E,cAAculB,gBAAgB,aAAai/I,GAAiB,IAInE1/J,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5BytB,WAAW1uB,OAAA84B,EAAA,EAAA94B,CAAA,GACNiB,EAAUytB,WADL1uB,OAAA+pI,EAAA,EAAA/pI,CAAA,GAEPs1E,EAFOt1E,OAAA84B,EAAA,EAAA94B,CAAA,GAGHiB,EAAUytB,WAAW4mD,GAHlBt1E,OAAA+pI,EAAA,EAAA/pI,CAAA,GAILyC,EAAM,CACLyG,OACAssE,wBAIJ,WACFpxD,OAAOsK,WAAalrB,EAAKzC,MAAM2tB,aAGjCuB,GAAS,EAGX,OAAOA,KAGTurI,sBAAwB,SAACD,GACvB/3J,EAAKoD,SAAS,CACZ20J,0BAIJj2G,iBAAmB,SAACC,GAEdA,IAAkBA,EAAc15C,cAAcunC,MAAM,gBACtDmS,EAAgB,MAGdA,IAAkB/hD,EAAKzC,MAAMwkD,eAC/B/hD,EAAKoD,SAAS,CACZ2+C,gBACAqyG,0BAA0B,OAgUhCpqI,uBAAyB,WACvB,IAAM9mB,EAAW,CACf9G,MAAO4D,EAAKzC,MAAMnB,MAClBoE,OAAQR,EAAKzC,MAAMiD,QAGfu/J,EAAen/I,OAAOw+I,aAAep/J,EAAKzC,MAAMnB,MAChD4jK,EAAgBp/I,OAAOy+I,cAAgBr/J,EAAKzC,MAAMiD,OAExD,OAAIu/J,GAAgBC,GACdD,IACF78J,EAAS9G,MAAQwkB,OAAOw+I,YAEtBY,IACF98J,EAAS1C,OAASogB,OAAOy+I,aAEpBr/J,EAAKoD,SAASF,IAGhB,iFA9fH/H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,iFA6KhC6G,EAAG+9J,4FACV9kK,KAAKiI,SAAS,SAAA7F,GAAK,OAAAf,OAAA84B,EAAA,EAAA94B,CAAA,GAAUe,EAAV,CAAiBuhK,YAAamB,gSAIlD/8J,EAAW,GACXytB,EAAsB,GACtB80E,EAA8B,GAC9BlnE,EAAkBpjC,KAAKoC,MAAMme,SAAWvgB,KAAKoC,MAAMme,QAAQmZ,iBAAoB15B,KAAKoC,MAAMme,QAAQkZ,QAAQ/2B,IAAM1C,KAAKoC,MAAMme,QAAQ8Y,SAAS32B,GAAM1C,KAAKoC,MAAMunD,OAAOvmB,gBAK1K/hC,OAAOC,KAAKkP,MAAiBmB,OAAQ,SAAAynB,GAAS,OAAI/4B,EAAKN,cAAc6V,gBAAgB,CAAC,UAAU,oBAAoBsgB,SAAShkB,SAASknB,MAAc53B,QAAS,SAAA43B,GAC3JkxE,EAA4BlxE,GAAa,GACzC/3B,OAAOC,KAAKkP,KAAgB4oB,IAAY53B,QAAQ,SAAC6gC,GAE/CioE,EAA4BlxE,GAAWiJ,GAAYhhC,OAAOC,KAAKkP,KAAgB4oB,GAAWiJ,IAAW4D,OAAO,SAAC91B,EAAejN,GAC1H,IAAMC,EAAcqN,KAAgB4oB,GAAWiJ,GAAUn/B,GACnD6hK,GAAc5hK,EAAYoyI,cAAgBpyI,EAAYoyI,YAAYh0I,QAAU4B,EAAYoyI,YAAYr/G,SAAS71B,EAAK+B,MAAMshK,YAI9H,OAHIvgK,EAAY2wB,SAAWixI,IACzB50J,EAAcjN,GAASC,GAElBgN,GACN,IAEC+B,SAASknB,KAAelnB,SAASkxB,KACnC5N,EAAoB6M,GAAYioE,EAA4BlxE,GAAWiJ,QAK7Et6B,EAASytB,oBAAsBA,EAC/BztB,EAASuiG,4BAA8BA,GAKjCt2F,EAAmBhU,KAAKoC,MAAM4R,mBACZwhB,EAAoBxhB,KAC1CjM,EAASyI,gBAAkBglB,EAAoBxhB,IAGzCpK,EAAgB5J,KAAKoC,MAAMwH,gBACZ7B,EAASyI,gBAAgB5G,KAC5C7B,EAAS5E,YAAc4E,EAASyI,gBAAgB5G,eAM9C5J,KAAKiI,SAASF,uLAGCiM,EAAkBpK,uGAAc+zG,iCAAiB,KAEhE31G,EAAW,WACfwC,EAAKw6J,uBAIDj9J,EAAW,CACf5E,YAAcyG,EAAuB5J,KAAKoC,MAAMe,YAAlB,KAC9BqN,gBAAkB5G,EAAuB5J,KAAKoC,MAAMoO,gBAAlB,KAClC5G,cAAgBA,EAAgC5J,KAAKoC,MAAMwH,cAA3BA,EAChCoK,iBAAmBA,EAAsChU,KAAKoC,MAAM4R,iBAA9BA,GAIpCA,GAAoBhU,KAAKoC,MAAMozB,qBAAuBxhB,IAAqBhU,KAAKoC,MAAM4R,kBAAoB3S,OAAOC,KAAKtB,KAAKoC,MAAMozB,qBAAqBU,SAASliB,EAAiB9G,eAClLnF,EAASiM,iBAAmBA,EAAiB9G,cAEpB,aAAnB8G,GAA+BA,IAAmBhU,KAAKoC,MAAM4R,mBAEnEjM,EAASiM,iBAAmBA,EAAiB9G,eAI1CtD,GAAiBA,IAAkB5J,KAAKoC,MAAMwH,gBAEzB,aAAnBoK,EAGExR,MAAqBnB,OAAOC,KAAKkB,KAAkBm7G,IAAmBznF,SAAStsB,KAChF7B,EAAS6B,cAAgBA,EACzB7B,EAASyI,gBAAkBhO,KAC3BuF,EAAS41G,iBAAmBA,EAC5B51G,EAAS5E,YAAcX,KAAkBm7G,GAAkB/zG,IAGxD5J,KAAKoC,MAAMoO,iBAAmBnP,OAAOC,KAAKtB,KAAKoC,MAAMoO,iBAAiB0lB,SAAStsB,EAAciM,gBACpG9N,EAAS6B,cAAgBA,EAAciM,cACvC9N,EAAS5E,YAAcnD,KAAKoC,MAAMoO,gBAAgB5G,IAE3C5J,KAAKoC,MAAMozB,qBAAuBn0B,OAAOC,KAAKtB,KAAKoC,MAAMozB,oBAAoBxhB,IAAmBkiB,SAAStsB,EAAciM,iBAC9H9N,EAAS6B,cAAgBA,EAAciM,cACvC9N,EAAS5E,YAAcnD,KAAKoC,MAAMozB,oBAAoBxhB,GAAkBjM,EAAS6B,eACjF7B,EAASyI,gBAAkBxQ,KAAKoC,MAAMozB,oBAAoBxhB,cAMxDhU,KAAKiI,SAASF,EAAUC,2LAIPo7B,wFAAgB6hI,kCACvC7hI,EAAkBlxB,SAASkxB,IACvB51B,IAAc+S,QAAQg6H,gBAAgBrkH,SAASkN,0BACjDpjC,KAAKD,cAAculB,gBAAgB,kBAAkB8d,IAEjD6hI,GAAqBjlK,KAAKoC,MAAM2xJ,gBAAgD,YAA9B/zJ,KAAKoC,MAAM2xJ,iBAC/D/zJ,KAAKD,cAAcy9B,iBAAiB4F,YAEzBpjC,KAAKiI,SAAS,SAAA3F,GAAS,MAAK,CACvCqnD,OAAOtoD,OAAA84B,EAAA,EAAA94B,CAAA,GACFiB,EAAUqnD,OADT,CAEJvmB,8OAMUpvB,mFAEVhM,EAAW,WACfkwG,EAAK8sD,uBAEP9rI,QAAQ8a,IAAI,aAAah0C,KAAKoC,MAAMozB,sBAEhCxhB,GAAoBA,IAAqBhU,KAAKoC,MAAM4R,mBAAqB3S,OAAOC,KAAKtB,KAAKoC,MAAMozB,qBAAqBU,SAASliB,EAAiB9G,gBAAmC,aAAnB8G,yBACjKA,EAAmBA,EAAiB9G,uBAC9BlN,KAAKiI,SAAS,CAClB+L,oBACChM,oCACOgM,oCACJhU,KAAKiI,SAAS,CAClB+L,oBACChM,gLAIQ4B,qFAEP5B,EAAW,WACfgkH,EAAKg5C,wBAGHp7J,GAAiBA,IAAkB5J,KAAKoC,MAAMwH,gBAAiBvI,OAAOC,KAAKtB,KAAKoC,MAAMoO,iBAAiB0lB,SAAStsB,EAAciM,sCAChIjM,EAAgBA,EAAciM,eACxB9N,EAAW,CACf6B,kBAEOzG,YAAcnD,KAAKoC,MAAMoO,gBAAgB5G,YAC5C5J,KAAKiI,SAASF,EAAUC,oCACpB4B,oCACJ5J,KAAKiI,SAAS,CAClB2B,gBACAzG,YAAa,MACZ6E,oQAMLhI,KAAKI,YAELqlB,OAAO5T,MAAQ7R,KAAKD,cAAc8R,MAGb4T,OAAO8V,SAASkK,OAAOv4B,cAAcgpB,SAAS1oB,IAAc0+C,QAAQh/C,iBAEvFuY,OAAOyT,QAAQja,MAAQ,aACvBwG,OAAOyT,QAAQgsI,KAAO,cAGxBz/I,OAAO0/I,OAASA,IAEZ1/I,OAAOR,cACTjlB,KAAKD,cAAck1D,iBAAiB,YAGhC1kD,EAAYvQ,KAAKD,cAAcy/C,cAAc,aAAa,KAE9Dx/C,KAAKolK,aAAa70J,IAGd6yB,EAAkBpjC,KAAKD,cAAcy/C,cAAc,mBAAkB,KAEzEx/C,KAAKumI,mBAAmBnjG,GAG1B3d,OAAO4/I,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAUv2I,SAASw2I,qBAAqB,UACrC14J,EAAI,EAAGA,EAAIy4J,EAAQhkK,OAAQuL,IAAK,CACvC,IAAM24J,EAASF,EAAQz4J,GACnB24J,EAAOC,gBAAkBJ,GAC3B7/I,OAAO0/I,OAAOM,GAAQE,QAAQ,qBAAqB,GAAG5c,WAK5DtjI,OAAOmJ,iBAAiB,SAAU5uB,KAAK6uB,wBAEvC7uB,KAAK4lK,yBACL5lK,KAAK6lK,6RAICnC,EAAa1jK,KAAKD,cAAcosD,wBACtCnsD,KAAKiI,SAAS,CACZy7J,cADFriK,OAAAmxB,EAAA,EAAAnxB,CAAAoxB,EAAA3wB,EAAAoP,KAEG,SAAAykB,IAAA,OAAAlD,EAAA3wB,EAAAwP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,OAQDq/G,EAAKk0C,sBARJ,wBAAA/uI,EAAAtjB,SAAAgjB,EAAA31B,wJAaH,IAAKA,KAAKoC,MAAMwkD,eAES,WADA5mD,KAAKD,cAAc8uD,kBAAkB,UAC3B,CAC/B,IAAMjI,EAAgB5mD,KAAKD,cAAc2mD,mBACrCE,GAAiBA,IAAkB5mD,KAAKoC,MAAMwkD,eAChD5mD,KAAKiI,SAAS,CACZ2+C,kEAQRnhC,OAAOqJ,oBAAoB,SAAU9uB,KAAK6uB,qEAGxB,IAAAmiG,EAAAhxH,KAEZqgE,EAAUrgE,KAAKD,cAAcy/C,cAAc,WAAW,GAE5D,GAD6B6gB,IAAY7yD,IAAc6yD,QAC7B,CACxBnnC,QAAQ8a,IAAR,+BAAAvwC,OAA2C48D,EAA3C,QAAA58D,OAAyD+J,IAAc6yD,UACvE,IAAMylG,EAAgB9lK,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,aAElE5V,KAAKu2E,gBAAgB,WAEnBy6C,EAAKjxH,cAAcm1D,gBAAgB,CAAC,iBAAkB,gBAAiB,YAAa,oBACpF87D,EAAKjxH,cAAculB,gBAAgB,UAAW9X,IAAc6yD,UAC3DylG,GAGL5sI,QAAQ8a,IAAR,mBAAAvwC,OAA+B+J,IAAc6yD,qDAG5Bh+D,EAAWC,GAI5B,GAHAtC,KAAKI,YAEyBkC,EAAUyxJ,iBAAmB/zJ,KAAKoC,MAAM2xJ,eAEpE,GAAkC,YAA9B/zJ,KAAKoC,MAAM2xJ,eACb/zJ,KAAKolK,aAAa,SAAS,OACtB,CAEL,IAAM70J,EAAYvQ,KAAKD,cAAcy/C,cAAc,aAAa,IAAUx/C,KAAKD,cAAc6V,gBAAgB,CAAC,YAAa,QAAS,SACpI5V,KAAKolK,aAAa70J,IAIMjO,EAAUie,SAAWvgB,KAAKoC,MAAMme,SAE1DvgB,KAAK+lK,qBAGP,IAAMC,EAAe1jK,EAAUsH,gBAAkB5J,KAAKoC,MAAMwH,cACtDq8J,EAAkB3jK,EAAU0R,mBAAqBhU,KAAKoC,MAAM4R,iBAC5DkyJ,EAAiBj2J,KAAKC,UAAU5N,EAAUie,WAAatQ,KAAKC,UAAUlQ,KAAKoC,MAAMme,UAEnFylJ,GAAgBC,GAAmBC,IACrClmK,KAAKglK,kEAcP,GAHAv/I,OAAO4+I,iBAAmBrkK,KAAKqkK,iBAC/B5+I,OAAO2+I,kBAAoBpkK,KAAKokK,kBAE5Bn/I,aAAc,CAChB,IAAI+7F,EAAgB/7F,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChG2tI,EAAiB5tI,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAO8V,SAAStU,KAAKiP,SAAS,mBAEjD8qF,EAAgB,aAChB6xC,EAAiB,UAInB7yJ,KAAK4yJ,aAAa5xC,EAAe6xC,sCA0B3Bl5E,GACR,OAAO35E,KAAKiI,SAAS,CAAE0xE,gDAGX5yE,GAIZ,OAHIA,GACFA,EAAE6H,iBAEG5O,KAAKiI,SAAS,CACnBqsG,SAAU,KACVyvD,gBAAgB,yCAIPh9J,EAAGutG,GAGd,OAFAvtG,EAAE6H,iBAEK5O,KAAKiI,SAAS,CACnBqsG,WACAyvD,gBAAgB,wJAMlB/jK,KAAKiI,SAAS,CACZ2+C,cAAe,OAGjB5mD,KAAKu2E,gBAAgB,WAEnB4/C,EAAKp2H,cAAcm1D,gBAAgB,CAAC,UAAW,YAAa,YAAa,aAAa,2JAI/E30C,GACTvgB,KAAKiI,SAAS,CACZsY,UACAiV,oBAAoB,4CAIXwrF,EAAe6xC,GAAgB,IAAAz8B,EAAAp2H,KAEtC0zJ,EAAgBlmJ,IAAc6gI,WAAWrtB,EAAc9zG,eAO3D,IANKwmJ,GAAiBb,IACpBa,EAAgBlmJ,IAAc6gI,WAAWwkB,EAAe3lJ,gBAKrDwmJ,IAAkBA,EAAc5/H,SAA+B,aAAlBktF,IAAiC3/G,OAAOC,KAAKkM,IAAc6gI,YAAYn4G,SAAS8qF,EAAc9zG,gBAAoB2lJ,IAAmBxxJ,OAAOC,KAAKkM,IAAc6gI,YAAYn4G,SAAS28H,EAAe3lJ,eACnP8zG,EAAgB,SAChB6xC,EAAiB,cACZ,GAAsB,aAAlB7xC,EAA8B,CACvC,IAAMmlD,EAAc3U,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQe,GACN,IAAK,YACEsT,GAAerU,IAClBe,EAAiB,UAEnB,MACF,IAAK,UACEf,GAAaqU,IAChBtT,EAAiB,aAWzB,OAHA7yJ,KAAKD,cAAculB,gBAAgB,gBAAiB07F,GACpDhhH,KAAKD,cAAculB,gBAAgB,iBAAkButI,GAE9C7yJ,KAAKiI,SAAS,CACnB+4G,gBACA6xC,kBACC,WACDz8B,EAAKyvC,2DAIIt1J,GAAyB,IAAd61J,IAActzJ,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,GAChCgxJ,EAAgB,KAGd12B,EAAkBptI,KAAKD,cAAc6V,gBAAgB,CAAC,YAAa,QAAS,oBAKlF,OAJkB,SAAdrF,GAAyB68H,IAC3B78H,EAAY,SAGNA,GACN,QACA,IAAK,QACHuzJ,EAAgBl9J,IAChB,MACF,IAAK,OACHk9J,EAAgBuC,EAIhBD,GACFpmK,KAAKD,cAAculB,gBAAgB,YAAa/U,GAGlDvQ,KAAKiI,SAAS,CACZsI,YACAuzJ,4DAIc/P,GAChB/zJ,KAAKiI,SAAS,CACZ8rJ,oDAIK,IAAAuS,EAAAtmK,KACD8C,EAAW9C,KAAKoC,MAAMnB,OAAS,IAC/By/J,EAAoB1gK,KAAKD,cAAc6V,gBAAgB,CAAC,aAAc,YAItE2wJ,EACJ39J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPsuB,UAAW,QACXruB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB6N,gBAAiB,YAEjBrG,EAAA9G,EAAAC,cAAC65G,GAAA,EAAD,CACEj9F,UAAW,CACTguG,SAAU,EACVhnH,WAAY,GAEd+gB,YAAa,CACXtY,GAAI,EACJ1G,KAAM,OACN9B,MAAO,WAET5E,UAAW,CACT8N,GAAI,EACJ3N,cAAe,UAEjBqE,KAAM,MAKZ,OACEoD,EAAA9G,EAAAC,cAACgzJ,GAAA,EAAD,KACEnsJ,EAAA9G,EAAAC,cAAC6+J,GAAD,MACAh4J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjC,MAAO5G,KAAKoC,MAAM0hK,eAElBl7J,EAAA9G,EAAAC,cAACykK,EAAA1kK,EAAD,CACE2kK,QAASvjI,IACTmrG,WAAYA,GACZq4B,YAAa,WAEb99J,EAAA9G,EAAAC,cAAC4kK,EAAA,aAAD,CACEC,yBAAyB,EACzBC,yBAAyB,GAExB,SAAAnU,GAEC,OACE9pJ,EAAA9G,EAAAC,cAAC+kK,GAAD,CACEpU,QAASA,EACT5vJ,SAAUA,EACVurI,WAAYA,GACZ1kF,OAAQ28G,EAAKlkK,MAAMunD,OACnB/iD,MAAO0/J,EAAKlkK,MAAM0hK,cAClB/zI,WAAYu2I,EAAKlkK,MAAM2tB,WACvB5sB,YAAamjK,EAAKlkK,MAAMe,YACxBX,kBAAmBA,KACnBu4J,WAAYuL,EAAKvL,WAAWr6I,KAAK4lJ,GACjC1/G,cAAe0/G,EAAKlkK,MAAMwkD,cAC1Bh9C,cAAe08J,EAAKlkK,MAAMwH,cAC1Bo3G,cAAeslD,EAAKlkK,MAAM4+G,cAC1B+yC,eAAgBuS,EAAKlkK,MAAM2xJ,eAC3BlB,eAAgByT,EAAKlkK,MAAMywJ,eAC3BD,aAAc0T,EAAK1T,aAAalyI,KAAK4lJ,GACrC91J,gBAAiB81J,EAAKlkK,MAAMoO,gBAC5Bwf,cAAes2I,EAAKt2I,cAActP,KAAK4lJ,GACvC/vF,gBAAiB+vF,EAAK/vF,gBAAgB71D,KAAK4lJ,GAC3C1J,mBAAoB0J,EAAKlkK,MAAMw6J,mBAC/BpnI,oBAAqB8wI,EAAKlkK,MAAMozB,oBAChCqnI,sBAAuByJ,EAAKzJ,sBAAsBn8I,KAAK4lJ,GACvDrN,yBAA0BqN,EAAKlkK,MAAM62J,yBACrC3uD,4BAA6Bg8D,EAAKlkK,MAAMkoG,6BAExC1hG,EAAA9G,EAAAC,cAAC+kK,GAAWvG,SAAZ,KACG,SAAAv+I,GA0CK,IAzCJ1B,EAyCI0B,EAzCJ1B,KACAqwH,EAwCI3uH,EAxCJ2uH,OACApwH,EAuCIyB,EAvCJzB,QACA7P,EAsCIsR,EAtCJtR,QACA6nJ,EAqCIv2I,EArCJu2I,SACAtpG,EAoCIjtC,EApCJitC,SACAusF,EAmCIx5H,EAnCJw5H,SACAjiH,EAkCIvX,EAlCJuX,UACAwa,EAiCI/xB,EAjCJ+xB,WACAqF,EAgCIp3B,EAhCJo3B,YACAt3B,EA+BIE,EA/BJF,YACA2zI,EA8BIzzI,EA9BJyzI,YACA5sH,EA6BI7mB,EA7BJ6mB,aACA+vH,EA4BI52I,EA5BJ42I,aACAp6I,EA2BIwD,EA3BJxD,aACA2wC,EA0BIntC,EA1BJmtC,aACAipG,EAyBIp2I,EAzBJo2I,aAEAziH,GAuBI3zB,EAxBJ/M,cAwBI+M,EAvBJ2zB,gBACA2iH,EAsBIt2I,EAtBJs2I,eAEA3B,GAoBI30I,EArBJ+kJ,eAqBI/kJ,EApBJ20I,iBACAkC,EAmBI72I,EAnBJ62I,iBACA/B,EAkBI90I,EAlBJ80I,iBACA7jG,EAiBIjxC,EAjBJixC,iBACAsiD,EAgBIvzF,EAhBJuzF,kBACA57E,EAeI3X,EAfJ2X,kBACA8+H,EAcIz2I,EAdJy2I,kBACA2B,EAaIp4I,EAbJo4I,mBACAzoC,EAYI3vG,EAZJ2vG,mBACA+mC,EAWI12I,EAXJ02I,oBACAtB,EAUIp1I,EAVJo1I,oBACA2B,EASI/2I,EATJ+2I,oBACAh8F,EAQI/6C,EARJ+6C,qBACAi8F,EAOIh3I,EAPJg3I,qBACA9xC,EAMIllG,EANJklG,qBACAgyC,EAKIl3I,EALJk3I,uBACAJ,EAII92I,EAJJ82I,yBACAx8B,EAGIt6G,EAHJs6G,0BACAr8G,EAEI+B,EAFJ/B,0BACA+mJ,EACIhlJ,EADJglJ,2BAEA,OACEp+J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,KACED,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,KACEr+J,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,CACElhK,KAAK,kDACL2vG,OACE,SAACx1G,GAAD,OACE0I,EAAA9G,EAAAC,cAACmlK,EAAA,SAAD,CACEC,SAAUZ,GAEV39J,EAAA9G,EAAAC,cAACwhK,GAADliK,OAAAuB,OAAA,GACM1C,EADN,CAEEogB,KAAMA,EACNqwH,OAAQA,EACRpwH,QAASA,EACTmyI,QAASA,EACThiJ,QAASA,EACTsM,aAAa,EACbu7I,SAAUA,EACV/c,SAAUA,EACV14I,SAAUA,EACVmsD,SAAUA,EACV11B,UAAWA,EACXwa,WAAYA,EACZqF,YAAaA,EACbq8G,YAAaA,EACb2C,aAAcA,EACdjpG,aAAcA,EACdtmB,aAAcA,EACdrqB,aAAcA,EACd81F,SAAUgyD,EAAKlkK,MAAMkyG,SACrBi4C,OAAQ+Z,EAAK/Z,OAAO7rI,KAAK4lJ,GACzB3wH,eAAgBA,EAChB2iH,eAAgBA,EAChB/nJ,UAAW+1J,EAAKlkK,MAAMmO,UACtB3J,MAAO0/J,EAAKlkK,MAAM0hK,cAClBnN,gBAAiBA,EACjB+M,WAAY4C,EAAKlkK,MAAMshK,WACvBE,WAAY0C,EAAKlkK,MAAMwhK,WACvB7zI,WAAYu2I,EAAKlkK,MAAM2tB,WACvBq3I,SAAUd,EAAKc,SAAS1mJ,KAAK4lJ,GAC7BxP,iBAAkBA,EAClB7jG,iBAAkBA,EAClB4lG,iBAAkBA,EAClB11J,YAAamjK,EAAKlkK,MAAMe,YACxBw2B,kBAAmBA,EACnBn3B,kBAAmBA,KACnB+yG,kBAAmBA,EACnBkjD,kBAAmBA,EACnB9mC,mBAAoBA,EACpByoC,mBAAoBA,EACpBxwJ,cAAe08J,EAAKlkK,MAAMwH,cAC1Bo3G,cAAeslD,EAAKlkK,MAAM4+G,cAC1BqmD,YAAaf,EAAKe,YAAY3mJ,KAAK4lJ,GACnClP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgByT,EAAKlkK,MAAMywJ,eAC3BkR,eAAgBuC,EAAKlkK,MAAM2hK,eAC3BhnG,qBAAsBA,EACtBmqD,qBAAsBA,EACtBogD,aAAchB,EAAKgB,aAAa5mJ,KAAK4lJ,GACrCtN,qBAAsBA,EACtBuO,gBAAiBjB,EAAKkB,UAAU9mJ,KAAK4lJ,GACrC1T,aAAc0T,EAAK1T,aAAalyI,KAAK4lJ,GACrClB,aAAckB,EAAKlB,aAAa1kJ,KAAK4lJ,GACrC91J,gBAAiB81J,EAAKlkK,MAAMoO,gBAC5Bi3J,cAAenB,EAAKmB,cAAc/mJ,KAAK4lJ,GACvCt2I,cAAes2I,EAAKt2I,cAActP,KAAK4lJ,GACvCtyJ,iBAAkBsyJ,EAAKlkK,MAAM4R,iBAC7B2pG,iBAAkB2oD,EAAKlkK,MAAMu7G,iBAC7Bu7C,uBAAwBA,EACxB3iF,gBAAiB+vF,EAAK/vF,gBAAgB71D,KAAK4lJ,GAC3CnjC,iBAAkBmjC,EAAKnjC,iBAAiBziH,KAAK4lJ,GAC7CxN,yBAA0BA,EAC1BtjI,oBAAqB8wI,EAAKlkK,MAAMozB,oBAChCk/H,kBAAmB4R,EAAK5R,kBAAkBh0I,KAAK4lJ,GAC/ChqC,0BAA2BA,EAC3Br8G,0BAA2BA,EAC3BsmH,mBAAoB+/B,EAAK//B,mBAAmB7lH,KAAK4lJ,GACjDU,2BAA4BA,EAC5BnK,sBAAuByJ,EAAKzJ,sBAAsBn8I,KAAK4lJ,GACvDh8D,4BAA6Bg8D,EAAKlkK,MAAMkoG,mCAQhDo2D,GACE93J,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,CACElhK,KAAK,kCACL2vG,OACE,SAACx1G,GAAD,OACE0I,EAAA9G,EAAAC,cAACmlK,EAAA,SAAD,CACEC,SAAUZ,GAEV39J,EAAA9G,EAAAC,cAACyhK,GAADniK,OAAAuB,OAAA,GACM1C,EADN,CAEEogB,KAAMA,EACNqwH,OAAQA,EACRpwH,QAASA,EACTmyI,QAASA,EACThiJ,QAASA,EACT6nJ,SAAUA,EACV/c,SAAUA,EACV14I,SAAUA,EACVmsD,SAAUA,EACVy4G,cAAc,EACdnuI,UAAWA,EACXwa,WAAYA,EACZqF,YAAaA,EACbq8G,YAAaA,EACbtmG,aAAcA,EACdtmB,aAAcA,EACd+vH,aAAcA,EACdp6I,aAAcA,EACd81F,SAAUgyD,EAAKlkK,MAAMkyG,SACrBi4C,OAAQ+Z,EAAK/Z,OAAO7rI,KAAK4lJ,GACzBhO,eAAgBA,EAChB/nJ,UAAW+1J,EAAKlkK,MAAMmO,UACtB3J,MAAO0/J,EAAKlkK,MAAM0hK,cAClBnN,gBAAiBA,EACjB+M,WAAY4C,EAAKlkK,MAAMshK,WACvBE,WAAY0C,EAAKlkK,MAAMwhK,WACvB7zI,WAAYu2I,EAAKlkK,MAAM2tB,WACvBq3I,SAAUd,EAAKc,SAAS1mJ,KAAK4lJ,GAC7BxP,iBAAkBA,EAClB7jG,iBAAkBA,EAClB4lG,iBAAkBA,EAClB11J,YAAamjK,EAAKlkK,MAAMe,YACxBw2B,kBAAmBA,EACnB47E,kBAAmBA,EACnBkjD,kBAAmBA,EACnB9mC,mBAAoBA,EACpByoC,mBAAoBA,EACpBxwJ,cAAe08J,EAAKlkK,MAAMwH,cAC1Bo3G,cAAeslD,EAAKlkK,MAAM4+G,cAC1BqmD,YAAaf,EAAKe,YAAY3mJ,KAAK4lJ,GACnClP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgByT,EAAKlkK,MAAMywJ,eAC3BkR,eAAgBuC,EAAKlkK,MAAM2hK,eAC3B78C,qBAAsBA,EACtBogD,aAAchB,EAAKgB,aAAa5mJ,KAAK4lJ,GACrCtN,qBAAsBA,EACtBuO,gBAAiBjB,EAAKkB,UAAU9mJ,KAAK4lJ,GACrC1T,aAAc0T,EAAK1T,aAAalyI,KAAK4lJ,GACrClB,aAAckB,EAAKlB,aAAa1kJ,KAAK4lJ,GACrC91J,gBAAiB81J,EAAKlkK,MAAMoO,gBAC5Bi3J,cAAenB,EAAKmB,cAAc/mJ,KAAK4lJ,GACvCt2I,cAAes2I,EAAKt2I,cAActP,KAAK4lJ,GACvCtyJ,iBAAkBsyJ,EAAKlkK,MAAM4R,iBAC7BklJ,uBAAwBA,EACxB3iF,gBAAiB+vF,EAAK/vF,gBAAgB71D,KAAK4lJ,GAC3CnjC,iBAAkBmjC,EAAKnjC,iBAAiBziH,KAAK4lJ,GAC7CxN,yBAA0BA,EAC1BtjI,oBAAqB8wI,EAAKlkK,MAAMozB,oBAChCk/H,kBAAmB4R,EAAK5R,kBAAkBh0I,KAAK4lJ,GAC/ChqC,0BAA2BA,EAC3Br8G,0BAA2BA,EAC3BsmH,mBAAoB+/B,EAAK//B,mBAAmB7lH,KAAK4lJ,GACjDzJ,sBAAuByJ,EAAKzJ,sBAAsBn8I,KAAK4lJ,GACvDh8D,4BAA6Bg8D,EAAKlkK,MAAMkoG,mCAQtD1hG,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,KACEr+J,EAAA9G,EAAAC,cAAC4lK,GAAD,CACEh3B,OAAQA,EACRpwH,QAASA,EACTmyI,QAASA,EACThiJ,QAASA,EACT6nJ,SAAUA,EACVz1J,SAAUA,EACVy2B,UAAWA,EACXk8H,YAAaA,EACb5sH,aAAcA,EACdyrE,SAAUgyD,EAAKlkK,MAAMkyG,SACrBgkD,eAAgBA,EAChB/L,OAAQ+Z,EAAK/Z,OAAO7rI,KAAK4lJ,GACzB3P,gBAAiBA,EACjBiN,WAAY0C,EAAKlkK,MAAMwhK,WACvB9M,iBAAkBA,EAClB7jG,iBAAkBA,EAClB4lG,iBAAkBA,EAClBuO,SAAU,SAAArgK,GAAOu/J,EAAKc,SAASrgK,IAC/B5D,YAAamjK,EAAKlkK,MAAMe,YACxBw2B,kBAAmBA,EACnB47E,kBAAmBA,EACnBkjD,kBAAmBA,EACnB2B,mBAAoBA,EACpBxwJ,cAAe08J,EAAKlkK,MAAMwH,cAC1Bo3G,cAAeslD,EAAKlkK,MAAM4+G,cAC1Bo2C,oBAAqBA,EACrBsB,oBAAqBA,EACrB7F,eAAgByT,EAAKlkK,MAAMywJ,eAC3BkR,eAAgBuC,EAAKlkK,MAAM2hK,eAC3B78C,qBAAsBA,EACtBogD,aAAchB,EAAKgB,aAAa5mJ,KAAK4lJ,GACrCtN,qBAAsBA,EACtBuO,gBAAiBjB,EAAKkB,UAAU9mJ,KAAK4lJ,GACrC1T,aAAc0T,EAAK1T,aAAalyI,KAAK4lJ,GACrC91J,gBAAiB81J,EAAKlkK,MAAMoO,gBAC5Bi3J,cAAenB,EAAKmB,cAAc/mJ,KAAK4lJ,GACvCpN,uBAAwBA,EACxBJ,yBAA0BA,EAC1Bx8B,0BAA2BA,EAC3BiK,mBAAoB+/B,EAAK//B,mBAAmB7lH,KAAK4lJ,GACjDh8D,4BAA6Bg8D,EAAKlkK,MAAMkoG,8BAInB,eAArBg8D,EAAKlkK,MAAMu3E,OACT/wE,EAAA9G,EAAAC,cAAC6lK,GAAD,CACEtnJ,KAAMA,EACN5P,QAASA,EACT4nJ,eAAgBA,EAChBI,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbuD,qBAAsBA,EACtB5B,oBAAqBA,EACrBN,iBAAkBA,EAClBgC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBvC,gBAAiBA,EACjBr6B,0BAA2BA,EAC3BqU,OAAQA,EACRpwH,QAASA,EACTuB,YAAaA,IAMI,YAArBwkJ,EAAKlkK,MAAMu3E,OACT/wE,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,KACEr+J,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,CAAOY,OAAK,EAAC9hK,KAAK,IAChB2vG,OAAQ,SAACx1G,GAAD,OACN0I,EAAA9G,EAAAC,cAACmlK,EAAA,SAAD,CACEC,SAAUZ,GAEV39J,EAAA9G,EAAAC,cAACshK,GAADhiK,OAAAuB,OAAA,GACM1C,EADN,CAEEogB,KAAMA,EACNC,QAASA,EACT7P,QAASA,EACT5N,SAAUA,EACVmsD,SAAUA,EACV11B,UAAWA,EACXsP,aAAcA,EACdo7H,WAAYqC,EAAKlkK,MAAMnB,MACvBsrJ,OAAQ+Z,EAAK/Z,OAAO7rI,KAAK4lJ,GACzBpC,YAAaoC,EAAKlkK,MAAMiD,OACxBizJ,eAAgBA,EAChB/nJ,UAAW+1J,EAAKlkK,MAAMmO,UACtB3J,MAAO0/J,EAAKlkK,MAAM0hK,cAClBsD,SAAU,SAAArgK,GAAMu/J,EAAKc,SAASrgK,IAC9BgpB,WAAYu2I,EAAKlkK,MAAM2tB,WACvB2zI,WAAY4C,EAAKlkK,MAAMshK,WACvBE,WAAY0C,EAAKlkK,MAAMwhK,WACvBD,YAAa2C,EAAKlkK,MAAMuhK,YACxBxgK,YAAamjK,EAAKlkK,MAAMe,YACxBs1J,kBAAmBA,EACnBljD,kBAAmBA,EACnB/yG,kBAAmBA,KACnBm3B,kBAAmBA,EACnBygI,mBAAoBA,EACpBxzG,cAAe0/G,EAAKlkK,MAAMwkD,cAC1Bh9C,cAAe08J,EAAKlkK,MAAMwH,cAC1B8uJ,oBAAqBA,EACrB0L,kBAAmBkC,EAAKlC,kBACxBl9C,qBAAsBA,EACtBogD,aAAchB,EAAKgB,aAAa5mJ,KAAK4lJ,GACrClB,aAAckB,EAAKlB,aAAa1kJ,KAAK4lJ,GACrChC,mBAAoBgC,EAAKhC,mBACzB9zJ,gBAAiB81J,EAAKlkK,MAAMoO,gBAC5Bwf,cAAes2I,EAAKt2I,cAActP,KAAK4lJ,GACvCwB,kBAAmBxB,EAAKkB,UAAU9mJ,KAAK4lJ,GACvCtC,kBAAmBsC,EAAKlkK,MAAM4hK,kBAC9BztF,gBAAiB+vF,EAAK/vF,gBAAgB71D,KAAK4lJ,GAC3C9wI,oBAAqB8wI,EAAKlkK,MAAMozB,oBAChCk/H,kBAAmB4R,EAAK5R,kBAAkBh0I,KAAK4lJ,GAC/ChqC,0BAA2BA,EAC3BiK,mBAAoB+/B,EAAK//B,mBAAmB7lH,KAAK4lJ,GACjDh8D,4BAA6Bg8D,EAAKlkK,MAAMkoG,+BAE1C1hG,EAAA9G,EAAAC,cAACkoH,GAAAnoH,EAAD,CACEimK,QAAS,IACT3+J,WAAY,KACZmyB,SAAU,SACVysI,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1B5hK,MAAO,CAAE4E,WAAY,yBAA0BgD,OAAQ,WACvD0lJ,YAAa,CAAElrJ,QAAS5F,EAAW,QAAU,OAAQmM,gBAAiB,UAAWrJ,MAAO,QAASuiK,UAAWrlK,EAAW,MAAQ,SAE/H8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,MAAOD,WAAY,CAAC,aAAc,UAAWE,eAAgB,aAAcu1H,UAAW,CAAC,QAAS,WAAYrwH,MAAOxD,EAAW,CAAEslK,UAAW,UAAa,MAC3Kx/J,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOH,QAAS,CAAC,OAAQ,SAAU2F,IAAK,oBAAqBpN,MAAO,OAAQoE,OAAQ,SACpFuD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMxC,GAAI,CAAC,EAAG,GAAIT,MAAO,YAAaF,SAAU,EAAGyI,UAAW,WAA9D,4RAC2RvF,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMoe,KAAM,gEAAiEF,OAAQ,SAAUC,IAAI,+BAA+BnhB,WAAY,QAA9I,iBAD3R,+LASV+C,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,CAAOY,OAAK,EAAC9hK,KAAK,qBAChB6C,EAAA9G,EAAAC,cAACsmK,EAAD,OAEFz/J,EAAA9G,EAAAC,cAACklK,GAAA,EAAD,KACEr+J,EAAA9G,EAAAC,cAACumK,GAAD,UAOZ1/J,EAAA9G,EAAAC,cAACwmK,GAAD,CACE/pJ,aAAcA,EACdjO,UAAW+1J,EAAKlkK,MAAMmO,4BAhmClCrO,aClBEsmK,QACW,cAA7B/iJ,OAAO8V,SAASktI,UAEe,UAA7BhjJ,OAAO8V,SAASktI,UAEhBhjJ,OAAO8V,SAASktI,SAASh0H,MACvB,2DCX2B,cAA7BhvB,OAAO8V,SAASktI,UAClBzK,IAAY,CACV0K,IAAK,6DACLC,WAFU,SAECtzC,EAAOuzC,GAChB,IAAIt3I,EAAS+jG,EACPp2G,EAAQ2pJ,EAAKC,kBAMnB,OALI5pJ,GAASA,EAAM+R,SACb/R,EAAM+R,QAAQyjB,MAAM,iDACtBnjB,GAAS,GAGNA,KAKbw3I,IAASpzD,OAAO9sG,EAAA9G,EAAAC,cAACgnK,GAAD,MAAS/5I,SAASC,eAAe,SD0G3C,kBAAmB44H,WACrBA,UAAUmhB,cAAcC,MAAM/9C,KAAK,SAAAg+C,GACjCA,EAAaC,+OEiJJC,6MA3QbhnK,MAAQ,CACNmE,SAAS,GACTc,SAAS,IACTsvH,UAAU,IACVznH,UAAS,EACTm6J,cAAc,CACZt3J,OAAO,KACPu3J,OAAO,KACPhgC,QAAQ,SAIZigC,UAAY,SAAC53J,EAAO9G,GAClBhG,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B+mK,cAAchoK,OAAA84B,EAAA,EAAA94B,CAAA,GACTiB,EAAU+mK,cADFhoK,OAAA+pI,EAAA,EAAA/pI,CAAA,GAEVsQ,EAAQ9G,UAKf2+J,aAAe,WAAiB,IAAhBC,IAAgB32J,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,GACS,oBAA5BjO,EAAK3E,MAAMspK,cACpB3kK,EAAK3E,MAAMspK,aAAa3kK,EAAKzC,MAAMinK,eAEjCI,GACF5kK,EAAK6kK,kBAITC,YAAc,SAACh4J,GACb9M,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B+mK,cAAchoK,OAAA84B,EAAA,EAAA94B,CAAA,GACTiB,EAAU+mK,cADFhoK,OAAA+pI,EAAA,EAAA/pI,CAAA,GAEVsQ,EAAQ,SAEV,WACD9M,EAAK2kK,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgB32J,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,KAAAA,UAAA,GAC9BjO,EAAKoD,SAAS,CACZohK,cAAc,CACZt3J,OAAO,KACPu3J,OAAO,KACPhgC,QAAQ,OAEV,WACuC,oBAA5BzkI,EAAK3E,MAAM0pK,cACpB/kK,EAAK3E,MAAM0pK,eAETH,GACF5kK,EAAK6kK,oBAKXA,aAAe,WACb7kK,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B4M,UAAW5M,EAAU4M,qFAIhB,IAAA7O,EAAAL,KACP,OACE4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEuF,GAAI,EACJ5B,IAAK,EACLvL,MAAO,EACPiN,OAAQ,EACR/M,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChB6M,SAAU,CAAC,WAAW,aAEtBrF,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACH/N,MAAM,CAAC,EAAGjB,KAAKoC,MAAM8M,SAAWlP,KAAKoC,MAAMmE,SAAWvG,KAAKoC,MAAMiF,UACjEf,MAAM,CACJujK,WAAW,2BAGfluJ,eAAiB3b,KAAKoC,MAAM8M,SAC5BjK,YAAejF,KAAKoC,MAAM8M,SAA+B,KAApBlP,KAAK0pK,cAE1C9gK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPqF,MAAO,CACL8I,OAAO,WAETlO,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0E,QAAU9F,KAAKoC,MAAM8M,SAAWlP,KAAK0pK,aAAe,MAEpD9gK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,IACZC,MAAO,aAHT,WAOAgD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEjD,MAAO,YACP8B,KAAO1H,KAAKE,MAAM4C,SAAW,QAAU,QACvC2E,KAAOzH,KAAKoC,MAAM8M,SAAW,QAAU,UAG3CtG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACfmF,MAAO,CACLE,SAAS,SACTqjK,WAAW,8BACXlzC,UAAU32H,KAAKoC,MAAM8M,SAAWlP,KAAKoC,MAAMu0H,UAAY,IAGzD/tH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJjN,GAAI,EACJ9N,MAAO,EACPE,cAAe,MACfuhH,UAAS,aAAAj/G,OAAemD,IAAMC,OAAOC,UAGnCzF,OAAOC,KAAKtB,KAAKE,MAAM4pK,SAAS7mK,IAAI,SAAC8mK,GACnC,IAAMC,EAAe3pK,EAAKH,MAAM4pK,QAAQC,GACxC,OACEnhK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,SACf2C,IAAG,UAAAL,OAAYsmK,GACfzjK,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,YAGPtnB,EAAA9G,EAAAC,cAACkoK,EAAA,EAAD,CACEzwD,GAAI,EACJ7zG,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAENmkK,EAAel0J,eAGhBxU,OAAOC,KAAK0oK,GAAc/mK,IAAI,SAACinK,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAY/pK,EAAK+B,MAAMinK,cAAcU,KAAkBG,EAC7D,OACEthK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEiG,GAAI,EACJpJ,SAAU,CAAC,EAAE,GACbkI,MAAOu8J,EACP9oD,QAAS+oD,EACTthK,UAAWC,IAAOwnB,SAClBzsB,IAAG,UAAAL,OAAYsmK,EAAZ,KAAAtmK,OAA8BymK,GACjC/sJ,SAAW,SAAApW,GAAC,OAAI1G,EAAKkpK,UAAUQ,EAAeG,YAUhEthK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE1H,cAAe,OAEfyH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAOzC,KAAR,CACET,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyB,UAAW,YACXrB,QAAS9F,KAAKwpK,cAJhB,iBAQA5gK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAOzC,KAAR,CACEX,GAAI,EACJE,WAAY,EACZD,SAAU,CAAC,EAAE,GACbyB,UAAW,YACXrB,QAAS9F,KAAK4pK,cALhB,aAaH5pK,KAAKoC,MAAM8M,UAAYlP,KAAKE,MAAMmpK,eAAiBhoK,OAAOqQ,OAAO1R,KAAKE,MAAMmpK,eAAe13J,OAAQ,SAAAhH,GAAC,OAAW,OAANA,IAAcpJ,OAAO,GAC7HqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,EACJ/a,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BC,OAAOC,KAAKtB,KAAKE,MAAMmpK,eAAepmK,IAAI,SAAConK,GACzC,IAAMH,EAAc7pK,EAAKH,MAAMmpK,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAAc9pK,EAAKH,MAAM4pK,QAAQO,GAAYH,GACnD,OACEthK,EAAA9G,EAAAC,cAACkxG,EAAA,EAAD,CACE33F,UAAW,CACTvM,GAAG,EACHC,GAAG,EACHZ,GAAG,CAAC,EAAE,GACNiQ,GAAG,CAAC,EAAE,GACNpd,MAAM,CAAC,EAAEZ,EAAK+B,MAAMiF,WAEtBsU,eAAe,EACf7X,IAAG,UAAAL,OAAY4mK,IAEfzhK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPqF,MAAO,CACL8I,OAAO,WAETlO,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0E,QAAS,SAAAiB,GAAC,OAAI1G,EAAKspK,YAAYU,KAE/BzhK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,IACZC,MAAO,WACPU,MAAO,CACLk7G,cAAc,eAGf2oD,GAEHvhK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,QACN7B,MAAO,WACP8B,KAAOrH,EAAKH,MAAM4C,SAAW,QAAU,YAMjD,OAAO,OAGX8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEmT,GAAI,CAAC,EAAE,GACPtW,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,GACbC,MAAO,YACPC,WAAY,YACZsI,UAAW,CAAC,SAAS,QACrBrI,QAAU,SAAAiB,GAAC,OAAI1G,EAAKupK,cAAa,KAPnC,8BA3PuB1nK,aCG/B2kH,6MAEJzkH,MAAQ,CACNyqD,KAAK,EACLy9G,QAAQ,GACRC,WAAW,EACXvrJ,SAAQ,EACRwrJ,SAAS,KACTC,WAAW,KACXpB,cAAc,CACZt3J,OAAO,KACPu3J,OAAO,KACPhgC,QAAQ,MAEVwgC,QAAQ,CACNxgC,QAAQ,CACN79G,QAAQ,UACR/M,OAAO,SACP8N,KAAK,OACLK,QAAQ,UACRnB,QAAQ,UACRe,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXjb,OAAO,CACLob,UAAU,YACVC,QAAQ,UACRC,OAAO,UAETi8I,OAAO,IAEToB,YAAY,KACZhnI,aAAa,KACb8zB,gBAAgB,QAIlBz3D,cAAgB,OAmChBypK,aAAe,SAAAH,GACbxkK,EAAKoD,SAAS,CACZohK,iBACA,WACAxkK,EAAK43C,kBAITmtH,aAAe,WACb/kK,EAAKoD,SAAS,CACZohK,cAAc,CACZt3J,OAAO,KACPu3J,OAAO,KACPhgC,QAAQ,OAEV,WACAzkI,EAAK43C,kBAmGTA,WAAa,WAAe,IAAdoQ,EAAc/5C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAEjB+5C,EAAOA,GAAchoD,EAAKzC,MAAMyqD,KAEhC,IAAMi6D,EAAmBzlH,OAAOC,KAAKuD,EAAKzC,MAAM0nK,QAAQxgC,SAASrmI,IAAK,SAAA6O,GAAM,OAAKA,EAAO5E,gBAGlFy9J,EAAatpK,OAAOqQ,OAAO7M,EAAKzC,MAAMkoK,SACvB34J,OAAO,SAAAC,GAAE,QAAOxE,WAAWwE,EAAG/G,SAC9B8G,OAAO,SAAAC,GAAE,OAC6B,OAApC/M,EAAKzC,MAAMinK,cAAct3J,QAAoBH,EAAGG,QAAUH,EAAGG,OAAO7E,gBAAkBrI,EAAKzC,MAAMinK,cAAct3J,OAAO7E,iBAClF,OAApCrI,EAAKzC,MAAMinK,cAAcC,QAAoB13J,EAAG1O,OAAS0O,EAAG1O,MAAMgK,gBAAkBrI,EAAKzC,MAAMinK,cAAcC,OAAOp8J,gBACnH0E,EAAGE,QAAUg1G,EAAiB5wF,SAAStkB,EAAGE,OAAO5E,iBAAwD,OAArCrI,EAAKzC,MAAMinK,cAAc//B,SAAqB13H,EAAGE,OAAO5E,gBAAkBrI,EAAKzC,MAAMinK,cAAc//B,QAAQp8H,iBAElLmgC,KAAK,SAACvrC,EAAEo5B,GAAH,OAAUp5B,EAAEqQ,UAAY+oB,EAAE/oB,WAAc,EAAI,IAGhEq4J,EAAWG,EAAWppK,OACtBkpK,EAAaz4J,KAAKwF,KAAKgzJ,EAAS3lK,EAAKzC,MAAMmoK,YAE3C7mI,EAAe,GAIrBinI,EAAWnpK,QAAQ,SAACoQ,EAAI9E,GACtB,IAAMlD,EAAgBgI,EAAG1O,MACnBC,EAAc0B,EAAK3E,MAAMsQ,iBAAmB3L,EAAK3E,MAAMsQ,gBAAgB5G,GAAiB/E,EAAK3E,MAAMsQ,gBAAgB5G,GAAiB/E,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,SAAShM,EAAciM,gBACvMhV,EAAWmR,KAAKC,IAAI9O,EAAYtC,SAAS,GAEzC4V,EAAO,IAAIxD,KAAkB,IAAbrB,EAAGO,WACnBL,EAASF,EAAGE,OAASF,EAAGE,OAASjN,EAAK9E,cAAc67B,YAAYhqB,EAAGzO,GAEnEynK,EAAcx9J,WAAWwE,EAAGQ,aAE5Byf,EAAS+4I,EAAe/lK,EAAK3E,MAAM4C,SAAW8nK,EAAYt9J,QAAQ,GAAKs9J,EAAYt9J,QAAQzM,GAAa,IACxGmV,EAAanR,EAAK9E,cAAciT,YAAYyD,GAGlD7E,EAAGE,OAASA,EACZF,EAAGigB,OAASA,EACZjgB,EAAGoE,WAAaA,EAChBpE,EAAGG,OAASH,EAAGG,OAASH,EAAGG,OAAS,YAEhCjF,IAAK+/C,EAAK,GAAGhoD,EAAKzC,MAAMmoK,YAAez9J,GAAI+/C,EAAK,GAAGhoD,EAAKzC,MAAMmoK,WAAY1lK,EAAKzC,MAAMmoK,YACvF7mI,EAAan2B,KAAKqE,KAQtB/M,EAAKoD,SAAS,CACZ+W,SAHc,EAIdwrJ,WACAC,aACA/mI,6FA3ME1jC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,wCAIvC6G,GACHA,GACFA,EAAE6H,iBAEJ,IAAMi+C,EAAO76C,KAAKqE,IAAI,EAAErW,KAAKoC,MAAMyqD,KAAK,GACxC7sD,KAAKiI,SAAS,CACZ4kD,0CAIK9lD,GACHA,GACFA,EAAE6H,iBAEJ,IAAMi+C,EAAO76C,KAAKC,IAAIjS,KAAKoC,MAAMqoK,WAAWzqK,KAAKoC,MAAMyqD,KAAK,GAAG7sD,KAAKy8C,WAAWoQ,GAC/E7sD,KAAKiI,SAAS,CACZ4kD,6JAKF7sD,KAAKI,YACLJ,KAAK6qK,+LAuBkBxoK,EAAWC,mFAClCtC,KAAKI,YACColH,EAAsBv1G,KAAKC,UAAU7N,EAAUmc,gBAAkBvO,KAAKC,UAAUlQ,KAAKE,MAAMse,gBAC5EvO,KAAKC,UAAU7N,EAAU8N,iBAAmBF,KAAKC,UAAUlQ,KAAKE,MAAMiQ,kBAEvEq1G,yBAClBxlH,KAAKiI,SAAS,CACZ4kD,KAAK,EACLy9G,QAAQ,IACR,WACAjqK,EAAKwqK,+BAEA,UAEWvoK,EAAUuqD,OAAS7sD,KAAKoC,MAAMyqD,MAEhD7sD,KAAKy8C,0LAIKgzD,8IAAqB,SAC5BzvG,KAAKE,MAAMwQ,kDACP,aAGT++F,EAAQA,GAAgB,EAExBzvG,KAAKiI,SAAS,CACZ+W,SAAQ,IAGJy4B,EAAmBz3C,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,qBAGnE00J,iBAActqK,KAAKoC,MAAMkoK,SACzB9yG,EAAkBxlD,KAAKqE,IAAIohC,EAAiBz3C,KAAKoC,MAAMo1D,kBAEvDrnD,EAAgBnQ,KAAKE,MAAMiQ,gBACRA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKtB,KAAKE,MAAMsQ,kBAGnC84J,iBAAatpK,KAAKoC,MAAM0nK,QAAQR,QAEtCn5J,EAAc3O,QAAQ,SAAC0B,GACrBomK,EAAOpmK,GAASA,IAGdomI,EAAUtpI,KAAKE,MAAM4mH,kBAAXzlH,OAAA84B,EAAA,EAAA94B,CAAA,GAAmCrB,KAAKoC,MAAM0nK,QAAQxgC,UAE9DwhC,EAAsD,qBAA9B9qK,KAAKE,MAAM4qK,eAAiC9qK,KAAKE,MAAM4qK,eAAiB,IAEnFvpK,SACjB+nI,EAAU,GACVwhC,EAAetpK,QAAS,SAAAsQ,GACtBw3H,EAAQx3H,EAAO5E,eAAiB4E,UAIf9R,KAAKE,MAAMgjH,wDAA0BljH,KAAKD,cAAc0Q,gBAAgBzQ,KAAKE,MAAMwQ,QAAQ8mD,EAAgB,SAASrnD,sCAAnIQ,SAKcA,EAAapP,QAC/BoP,EAAanP,QAAQ,SAACoQ,GAChBA,EAAGo8B,QACLs8H,EAAQ14J,EAAGo8B,SAAWp8B,EAEtB04J,EAAO,IAAA7mK,OAAKmO,EAAGO,YAAeP,KAK9B2D,EAASlU,OAAOqQ,OAAO44J,GAASx1J,QAGxBS,EAAO8O,eAAiBrkB,KAAKoC,MAAMo1D,iBAAmBjiD,EAAO8O,YAAYrkB,KAAKoC,MAAMo1D,mBAChGA,EAAkBtlD,SAASqD,EAAO8O,aAAa,qBAG1CrkB,KAAKiI,SAAU,SAAA3F,GAAS,MAAK,CAClCgoK,UACAtrJ,SAAQ,EACRw4C,kBACAsyG,QAAQzoK,OAAA84B,EAAA,EAAA94B,CAAA,GACHiB,EAAUwnK,QADR,CAELR,SACAhgC,cAEA,WACF9+H,EAAKiyC,qJAgEA,IAAAy7D,EAAAl4G,KAED+qK,EAAmB1pK,OAAOqQ,OAAO1R,KAAKoC,MAAMinK,eAAe13J,OAAQ,SAAAhH,GAAC,OAAW,OAANA,IAAcpJ,OAAO,EAG9FmiC,EAAe1jC,KAAKoC,MAAMshC,aAAeriC,OAAOqQ,OAAO1R,KAAKoC,MAAMshC,cAAgB,KAExF,OACE96B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,SAAUF,MAAO,EAAG+pK,EAAG,UAExChrK,KAAKoC,MAAM4c,QACTpW,EAAA9G,EAAAC,cAAC65G,EAAA,EAAD,CACE56G,UAAW,CACTG,cAAc,MACdouB,UAAUvvB,KAAKE,MAAMmF,QAEvBqhB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,4BAGRoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPgN,SAAU,WACV9M,cAAe,SACfuB,GAAI,8BACJkgB,GAAI,CAAC,EAAGmoJ,EAAmB,QAAU,IAErCniK,EAAA9G,EAAAC,cAACkpK,EAAD5pK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4pK,QAAS9pK,KAAKoC,MAAM0nK,QACpBT,cAAerpK,KAAKoC,MAAMinK,cAC1BO,aAAc5pK,KAAK4pK,aAAalpJ,KAAK1gB,MACrCwpK,aAAcxpK,KAAKwpK,aAAa9oJ,KAAK1gB,SAGrC0jC,GAAgBA,EAAaniC,OAC3BqH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE5H,MAAO,EACPE,cAAe,UAEfyH,EAAA9G,EAAAC,cAACw3G,EAAA,EAAD,CACE12G,KAAM7C,KAAKE,MAAM2C,KACjBC,SAAU9C,KAAKE,MAAM4C,WAEvB8F,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnG,GAAI,oBACJvB,cAAe,UAGbuiC,EAAazgC,IAAK,SAAC2O,EAAG5L,GACpB,IAAM+Y,EAASnN,EAAG9J,KACZojK,EAAYt5J,EAAGo8B,QAKrB,OACEplC,EAAA9G,EAAAC,cAACuwG,EAAA,EAADjxG,OAAAuB,OAAA,GACMs1G,EAAKh4G,MADX,CAEEuyG,SAAU,CACR92F,eAAc,GAEhB7T,KAAMiX,EACN+C,YAAalQ,EACb9N,IAAG,MAAAL,OAAQuC,GACXf,YAbgB,SAAC8B,GACnB,OAAQgY,EAAS0G,OAAO+xD,KAAK0gC,EAAKn4G,cAAcmnB,2BAA2BnI,IAAW,MAapFvb,MAAK,UAAAC,OAAYynK,GACjBrnK,OAAM,WAAAJ,OAAaynK,GACnBnnK,eAAgBmtB,UAM1BtoB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACExD,OAAQ,OACRnE,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBsB,GAAI,gCAEJkG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMwV,GAAI,GACRzV,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMwV,GAAI,EAAGvY,QAAU,SAAAiB,GAAC,OAAImxG,EAAKizD,SAASpkK,KACxC6B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,oBACNC,KAAM,MACN9B,MAAQ5F,KAAKoC,MAAMyqD,KAAK,EAAI,cAAgB,mBAGhDjkD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM/C,QAAU,SAAAiB,GAAC,OAAImxG,EAAKkzD,SAASrkK,KACjC6B,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEpB,KAAM,qBACNC,KAAM,MACN9B,MAAQ5F,KAAKoC,MAAMyqD,KAAK7sD,KAAKoC,MAAMqoK,WAAa,cAAgB,oBAItE7hK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,WAAY,UAChB0H,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACEnD,SAAU,EACVC,WAAY,EACZC,MAAO,YAHT,QAKQ5F,KAAKoC,MAAMyqD,KALnB,OAK6B7sD,KAAKoC,MAAMqoK,eAM9C7hK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAQq8G,GAAT,CAAY/2G,UAAW,SAAU9C,WAAY,YAAa1F,WAAY,EAAGD,SAAU,CAAC,GAAIE,MAAO,aAA/F,sCA9Wa1D,aA2XhB2kH,4OC1XT4c,6MAEJrhI,MAAQ,CACNo4D,MAAM,EACNx7C,SAAQ,EACRlN,OAAO,UACPgN,WAAW,CACT8gG,QAAQ,CACN7gG,OAAO,KACPC,SAAQ,GAEV0M,QAAQ,CACN3M,OAAO,KACPC,SAAQ,GAEVN,OAAO,CACLK,OAAO,KACPC,SAAQ,IAGZ+5F,WAAW,GACX2oB,WAAU,EACV2pC,aAAa,KACbC,cAAc,KACdC,eAAc,EACdjuD,gBAAe,EACfr7E,iBAAiB,KACjBk9E,oBAAoB,GACpBvoD,mBAAmB,KACnB40G,sBAAqB,EACrB1yB,yBAAwB,EACxBjiF,yBAAyB,KACzBqrE,0BAA0B,QAI5BniI,cAAgB,OAUhBwxH,UAAY,SAACz/G,GACI,OAAXA,GACFjN,EAAKoD,SAAS,CACZ6J,cAKN25J,oBAAsB,SAACF,GACrB1mK,EAAKoD,SAAS,CACZsjK,kBAG4C,oBAAnC1mK,EAAK3E,MAAMurK,qBACpB5mK,EAAK3E,MAAMurK,oBAAoBF,MAInCnsD,iBAAmB,SAACr4G,GAClB,IAAKlC,EAAKzC,MAAM0P,OACd,OAAO,EAET,IAAM+f,EAAS9qB,EAAEggB,OAAOlc,MAAMtJ,SAAWf,MAAMuG,EAAEggB,OAAOlc,OAAShG,EAAK9E,cAAc8R,MAAM9K,EAAEggB,OAAOlc,OAAShG,EAAK9E,cAAc8R,MAAM,GAErIhN,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B68G,oBAAoB99G,OAAAqqK,EAAA,EAAArqK,CAAA,GACfiB,EAAU68G,oBADI99G,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEhBwD,EAAKzC,MAAM0P,OAAS,OAEvBinG,WAAW13G,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUy2G,WADL13G,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAAS+f,UAK3B8tF,oBAAsB,WAAiB,IAAhB9tF,EAAgB/e,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKjO,EAAKzC,MAAM0P,OACd,OAAO,EAEJ+f,IACHA,EAAShtB,EAAKzC,MAAM22G,WAAWl0G,EAAKzC,MAAM0P,SAE5C,IAAIwrG,GAAiB,EACrB,GAAIzrF,EAEF,OADAyrF,EAAiBzrF,EAAOuC,IAAI,GACpBvvB,EAAKzC,MAAM0P,QACjB,IAAK,UACL,IAAK,SACHwrG,EAAiBA,GAAkBzrF,EAAOpc,GAAG5Q,EAAKzC,MAAMkpK,eAM9DzmK,EAAKoD,SAAS,CACZq1G,sBAIJiC,cAAgB,WACd,IAAK16G,EAAKzC,MAAM0P,QAAgE,OAAtDjN,EAAKzC,MAAM+8G,oBAAoBt6G,EAAKzC,MAAM0P,QAClE,OAAO,EAGT,IAAI+f,EAAS,KACP2tF,EAAqB36G,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAM+8G,oBAAoBt6G,EAAKzC,MAAM0P,SAASwS,IAAI,KAE3G,OAAOzf,EAAKzC,MAAM0P,QAChB,IAAK,UACL,IAAK,SACH+f,EAAShtB,EAAKzC,MAAMkpK,cAAgBzmK,EAAK9E,cAAc8R,MAAMhN,EAAKzC,MAAMkpK,eAAej+J,MAAMmyG,GAAsB,KAMvH36G,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5By2G,WAAW13G,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUy2G,WADL13G,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAAS+f,UAK3B6tF,uBAAyB,SAACt+F,GACxB,IAAKvc,EAAKzC,MAAM0P,OACd,OAAO,EAETjN,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B68G,oBAAoB99G,OAAAqqK,EAAA,EAAArqK,CAAA,GACfiB,EAAU68G,oBADI99G,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEhBwD,EAAKzC,MAAM0P,OAASsP,UAK3BwqJ,mCAAgB,SAAAnqJ,IAAA,IAAAs3F,EAAA/5F,EAAA83C,EAAA+0G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvqJ,EAAA5f,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAERsnG,EAAal0G,EAAKzC,MAAM22G,WAAWl0G,EAAKzC,MAAM0P,SAEhDjN,EAAKzC,MAAMk7G,gBAAmBvE,IAAcl0G,EAAK9E,cAAc8R,MAAMknG,GAAY3kF,IAAI,GAJ3E,CAAAzS,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,UAKL,GALK,OAQR1D,GAAU,EARF2C,EAAAwS,GAUNtvB,EAAKzC,MAAM0P,OAVL6P,EAAAlQ,KAWP,WAXOkQ,EAAAwS,GAAA,qBAaLtvB,EAAK3E,MAAMiD,YAAY44B,WAAcl3B,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAbjE,CAAAhkC,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,UAcD,GAdC,cAiBJo0C,EAAkBjyD,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAYl+C,KAE/DokK,EAAoBhnK,EAAK9E,cAAcy0D,qBAAqBukD,EAAW,KAGtD,EACD,KAUhBgzD,GADAD,EAAgG,IAClDvqK,SAAyD,IAA/CuqK,EAA6BhvJ,QAAQ,KAAcjY,EAAK9E,cAAc8R,MAAM,MAAWhN,EAAK9E,cAAc8R,MAAM,KAExKm6J,EAAiB,SAACp6J,EAAGqN,GACzB,IAAMikC,EAA4B,YAAdtxC,EAAGG,OAGjBmN,EAAY,CAChBC,cAAa,aACbG,YAAaza,EAAK3E,MAAM0J,cACxBwV,WAAYxN,EAAGG,OACfsuG,WAAYnuG,SAAS6mG,IAGnB95F,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAG9Cra,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADLzd,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAAQ,CAClBiN,OAAO,KACPC,SAAQ,QAKVkkC,GACFr+C,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5By2G,WAAW13G,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUy2G,WADL13G,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAASjN,EAAK9E,cAAc8R,MAAM,SAMhDo6J,EAAwB,SAACr6J,GAC7B,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADLzd,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAFJzQ,OAAAqqK,EAAA,EAAArqK,CAAA,GAGHiB,EAAUwc,WAAWja,EAAKzC,MAAM0P,QAH7B,CAINiN,iBAMRla,EAAK3E,MAAM+f,0BAA0B62C,EAAiB,kBAAmB,CACvE+0G,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCpqJ,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,oBAgGd7d,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADLzd,OAAAsqK,EAAA,EAAAtqK,CAAA,GAEPwD,EAAKzC,MAAM0P,OAFJzQ,OAAAqqK,EAAA,EAAArqK,CAAA,GAGHiB,EAAUwc,WAAWja,EAAKzC,MAAM0P,QAH7B,CAINkN,iBArGQ,yBAAA2C,EAAAhP,SAAA8O,EAAAzhB,WAoJhBksK,8BAAgC,SAACpzB,GAC/Bj0I,EAAKoD,SAAS,CACZ6wI,+BAIJqzB,oDAAiC,SAAAjqJ,IAAA,IAAAiuE,EAAAi8E,EAAAt1G,EAAAqhE,EAAA,OAAAz2G,EAAA5f,EAAAwP,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,WAC3B5M,EAAK3E,MAAMiD,YAAY44B,YAAal3B,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAD1C,CAAA3Z,EAAA5Q,KAAA,YAEvB0+E,EAAwBtrF,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBACzDowI,EAAwBj8E,EAAsB1oF,MAC1B5C,EAAK9E,cAAco5B,kBAAkBizI,GAJlC,CAAA/pJ,EAAA5Q,KAAA,gBAMrBqlD,EAAkBjyD,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAYl+C,KAN1C4a,EAAA5Q,KAAA,EAOC5M,EAAK9E,cAAc2kE,mBAAmB5N,EAAgBq5B,EAAsBljF,QAAQpI,EAAK3E,MAAMwQ,SAPhG,cAOrBynH,EAPqB91G,EAAA9N,KAAA8N,EAAAK,OAAA,SAQpBy1G,GARoB,eAAA91G,EAAAK,OAAA,UAWxB,GAXwB,yBAAAL,EAAA1P,SAAAuP,EAAAliB,WAcjCoiC,oCAAiB,SAAAjxB,IAAA,IAAA6N,EAAAijB,EAAAopI,EAAAgB,EAAAx1G,EAAAqrE,EAAAr7B,EAAAykE,EAAA10G,EAAA8c,EAAA44F,EAAAC,EAAAz1G,EAAAnR,EAAA3pB,EAAAyD,EAAAC,EAAAgiG,EAAA35H,EAAAykK,EAAA,OAAA9qJ,EAAA5f,EAAAwP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEV5M,EAAK3E,MAAMiD,aAAgB0B,EAAK3E,MAAMwQ,QAF5B,CAAAa,EAAAE,KAAA,eAAAF,EAAAmR,OAAA,UAGN,GAHM,UAMX1D,GAAU,EACdna,EAAKoD,SAAS,CACZ+W,UACAF,WAAW,CACT8gG,QAAQ,CACN7gG,OAAO,KACPC,SAAQ,GAEV0M,QAAQ,CACN3M,OAAO,KACPC,SAAQ,GAEVN,OAAO,CACLK,OAAO,KACPC,SAAQ,MAKVijB,GAAmB,EACnBopI,EAAe,aACfgB,EAAyB,KACzBx1G,EAA2B,KAC3BqrE,GAA4B,EAC5Br7B,EAAgBhiG,EAAK9E,cAAc8R,MAAM,GACzCy5J,EAAgBzmK,EAAK9E,cAAc8R,MAAM,GACzC+kD,EAAqB/xD,EAAK9E,cAAc8R,MAAM,GAC5C6hE,OAA6ClkD,IAA7B3qB,EAAK3E,MAAMwzE,eAA8B7uE,EAAK3E,MAAMwzE,eAGtE7uE,EAAK3E,MAAMiD,YAAY44B,YAAal3B,EAAK3E,MAAMiD,YAAY44B,UAAUjI,QApC1D,CAAAviB,EAAAE,KAAA,YAqCP66J,EAAkBznK,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YACnD4mH,EAAiBD,EAAgBxjI,IACjCguB,EAAkBw1G,EAAgB7kK,MACpCk+C,EAAc9gD,EAAK9E,cAAco5B,kBAAkB29B,MAGnCy1G,EA3CP,CAAAh7J,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CS5M,EAAK3E,MAAM2oC,aAAaiuB,EAAgBw1G,EAAgBr/J,QAAQs/J,GA5CzE,QA4CX5mH,EA5CWp0C,EAAAgD,KAAA,YA+CTynB,EAAoBn3B,EAAK9E,cAAco5B,kBAAkBt0B,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAAkBv0B,SAEtF5C,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAAkB8M,IAjDhE,CAAAv3B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDe5M,EAAK3E,MAAM2oC,aAAahkC,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAAkBv0B,KAAK5C,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAAkB/uB,QAAQpI,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBAAkB8M,KAlD7M,QAkDX9M,EAlDWzqB,EAAAgD,KAAA,YAqDToxC,IAAe3pB,EArDN,CAAAzqB,EAAAE,KAAA,gBAuDX45J,EAAexmK,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAYziD,MAvDjDqO,EAAAE,KAAA,GA8DDsQ,QAAQqD,IAAI,CAEpBvgB,EAAK9E,cAAckzD,iBAAiB6D,GAEpCjyD,EAAKsnK,iCAELtnK,EAAK9E,cAAcwgC,mBAAmBu2B,EAAgBjyD,EAAK3E,MAAMwQ,SAEhEgjE,EAAgB7uE,EAAK9E,cAAcgzB,oBAAoB+jC,EAAgB,cAAgB,OAtE/E,QAAAr3B,EAAAluB,EAAAgD,KAAAmrB,EAAAr+B,OAAAgkB,EAAA,EAAAhkB,CAAAo+B,EAAA,GA0DTo3B,EA1DSn3B,EAAA,GA2DTwiG,EA3DSxiG,EAAA,GA4DTk3B,EA5DSl3B,EAAA,GA6DTmnE,EA7DSnnE,EAAA,GA2EPk3B,IAEF00G,EAAgBzmK,EAAK9E,cAAcsV,iBAAiBuhD,EAAmBC,GACnEgwC,IACFA,EAAgBhiG,EAAK9E,cAAcsV,iBAAiBwxF,EAAchiG,EAAK3E,MAAMiD,YAAYtC,UACzFwrK,EAAyBxnK,EAAK9E,cAAc8R,MAAMy5J,GAAej+J,MAAMxI,EAAK9E,cAAc8R,MAAMg1F,KAGlG5kE,EAAmBp9B,EAAK9E,cAAc8R,MAAM+kD,GAAoBnhD,GAAG,IAnF1D,WAwFfuJ,GAAU,EAGJ0iH,EAAY78H,EAAK3E,MAAMwhI,UAEvB35H,EAAW,CACfiX,UACA0iH,YACA2pC,eACAC,gBACArpI,mBACA20B,qBACAy1G,yBACAx1G,2BACAqrE,8BAGEr9H,EAAK3E,MAAMs7I,SAzGA,CAAAjqI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgB5M,EAAK9E,cAAc66D,oBAAoB/1D,EAAK3E,MAAMwQ,SA1GlE,SA0GP87J,EA1GOj7J,EAAAgD,QA2GUi4J,EAAe/pG,UACpC16D,EAASyjK,sBAAuB,GA5GrB,cAgHoC,oBAAxC3mK,EAAK3E,MAAMiiI,0BACpBt9H,EAAK3E,MAAMiiI,yBAAyBlgG,GAjHvB1wB,EAAAmR,OAAA,SAuHR7d,EAAKoD,SAASF,IAvHN,yBAAAwJ,EAAAoB,SAAAxB,EAAAnR,WA0HjBysK,0DAAsB,SAAAv4J,EAAOnN,GAAP,IAAAopF,EAAA,OAAAzuE,EAAA5f,EAAAwP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAChB1K,GACFA,EAAE6H,iBAEEuhF,EAAwBtrF,EAAK3E,MAAMiD,YAAY44B,UAAUC,kBACrCn3B,EAAK9E,cAAco5B,kBAAkBg3D,EAAsB1oF,OAEnF5C,EAAKqhE,aAAa,KAAKrhE,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAYl+C,KAAK0oF,EAAsBljF,SAP7E,wBAAAmH,EAAAzB,SAAAuB,EAAAlU,iEAWtBygB,uCAAoB,SAAAwC,IAAA,OAAAvB,EAAA5f,EAAAwP,KAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,OAClB5M,EAAKoD,SAAS,CACZ6W,WAAY,CACV8gG,QAAQ,CACN7gG,OAAO,KACPC,SAAQ,GAEV0M,QAAQ,CACN3M,OAAO,KACPC,SAAQ,GAEVN,OAAO,CACLK,OAAO,KACPC,SAAQ,MAbI,wBAAAmE,EAAAxQ,SAAAsQ,EAAAjjB,WAmBpB0sK,uDAAmB,SAAAzoJ,EAAOld,GAAP,IAAAopF,EAAA0vB,EAAAC,EAAA,OAAAp+F,EAAA5f,EAAAwP,KAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,UACb1K,GACFA,EAAE6H,iBAEEuhF,EAAwBtrF,EAAK3E,MAAMiD,YAAY44B,UAAUC,mBACrCn3B,EAAK9E,cAAco5B,kBAAkBg3D,EAAsB1oF,MALpE,CAAA2c,EAAA3S,KAAA,eAAA2S,EAAA3S,KAAA,EASyB5M,EAAKsnK,iCAT9B,OAAA/nJ,EAAA7P,KA8Eb1P,EAAKoD,SAAS,CACZi6H,2BAA0B,KAlEtBriB,EAAkB,SAACjuG,EAAGqN,GAE1B,IAAMC,EAAY,CAChBC,cAAe,UACfG,YAAa,UACbF,WAAYxN,EAAKA,EAAGG,OAAS,MAGzBmxC,EAActxC,GAAoB,YAAdA,EAAGG,OAIzBkN,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAG9Cra,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B4/H,0BAA2Bh/E,EAC3BpkC,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER8gG,QAAQ,CACN7gG,OAAO,KACPC,SAAQ,QAK4B,oBAA/Bna,EAAK3E,MAAM2/G,iBAAkC38D,GACtDr+C,EAAK3E,MAAM2/G,gBAAgBjuG,GAG7B/M,EAAKu9B,kBAGD09E,EAAyB,SAACluG,GAC9B,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER8gG,QAAQv+G,OAAAqqK,EAAA,EAAArqK,CAAA,GACHiB,EAAUwc,WAAW8gG,QADnB,CAEL7gG,iBAMRla,EAAK9E,cAAcsmE,YAAYxhE,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAYl+C,KAAK0oF,EAAsBljF,QAAQ4yG,EAAgBC,GAE/Hj7G,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER8gG,QAAQ,CACN7gG,OAAO,KACPC,SAAQ,KAGZkjH,2BAA0B,MA3Ef,wBAAA99G,EAAAzR,SAAAsR,EAAAjkB,iEAqFnB0rB,8CAAU,SAAA/G,EAAO5d,EAAE4lK,GAAT,IAAAx8E,EAAAn0D,EAAA4wI,EAAAC,EAAA7oC,EAAAN,EAAA4nC,EAAAvnC,EAAA+oC,EAAApzB,EAAAxoD,EAAA67E,EAAAtyG,EAAAkoE,EAAAD,EAAA,OAAAhhH,EAAA5f,EAAAwP,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UACR1K,EAAE6H,iBAEIuhF,EAAwBtrF,EAAK3E,MAAMiD,YAAY44B,UAAUC,oBACzDA,EAAoBn3B,EAAK9E,cAAco5B,kBAAkBg3D,EAAsB1oF,OAJ7E,CAAAud,EAAAvT,KAAA,YAaEm7J,EAAkB,SAACh7J,EAAGqN,IAErBA,GAASrN,GAAoB,UAAdA,EAAGG,OACrBkN,EAAQ,CACN+R,QAAQ,kBAEApf,GAAMqN,IAChBrN,EAAK,CACHG,OAAO,UAIX,IAAMmxC,EAActxC,GAAoB,YAAdA,EAAGG,OAGvBmN,EAAY,CAChBC,cAAe,UACfG,YAAaqtJ,EACbvtJ,WAAYxN,EAAKA,EAAGG,OAAS,KAC7BsuG,WAAYnuG,SAASo5J,IAGnBrsJ,IACFC,EAAUE,WAAava,EAAK9E,cAAcyf,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUnN,SACrBlN,EAAK9E,cAAc0f,yBAAyBP,GAK1CgkC,GAEFz9B,OAAOuvF,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPzwG,EAAK3E,MAAMkiI,mBAA6D,oBAAjCv9H,EAAK3E,MAAMkiI,mBACpDv9H,EAAK3E,MAAMkiI,kBAAkBxwH,KAI/B6T,OAAOuvF,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXzwG,EAAKu9B,kBAGPv9B,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5B2/B,kBAAiBihB,EACjBpkC,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER4M,QAAQ,CACN3M,OAAO,KACPC,SAAQ,SAMV6tJ,EAAyB,SAACj7J,GAC9B,IAAMmN,EAASnN,EAAG+N,gBAClB9a,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER4M,QAAQrqB,OAAAqqK,EAAA,EAAArqK,CAAA,GACHiB,EAAUwc,WAAW4M,QADnB,CAEL3M,iBAMFilH,EAAiB,WACoB,oBAA9Bn/H,EAAK3E,MAAM8jI,gBACpBn/H,EAAK3E,MAAM8jI,kBAITN,GAAqC,IAAzB7+H,EAAK3E,MAAMwjI,WAAuB7+H,EAAK3E,MAAMs7I,UAAY32I,EAAKzC,MAAM02I,0BAA4Bj0I,EAAKzC,MAAMopK,qBAGvHF,EAAgBzmK,EAAKzC,MAAMkpK,cAC3BvnC,EAAYl/H,EAAK3E,MAAM2jI,oBAAsBh/H,EAAK9E,cAAcs0D,aAAaxvD,EAAK9E,cAAcy0D,qBAAqB3vD,EAAKzC,MAAM22G,WAAWl0G,EAAKzC,MAAM0P,QAAQjN,EAAKzC,MAAMy0D,2BAA6BhyD,EAAK9E,cAAcs0D,aAAaxvD,EAAKzC,MAAMw0D,oBAGnPk2G,EAAsE,qBAA9CjoK,EAAK3E,MAAMiD,YAAY4nJ,mBAAqClmJ,EAAK3E,MAAMiD,YAAY4nJ,mBAAqBlmJ,EAAK9E,cAAc6V,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnM8jI,EAAwB,MAExBozB,EApHA,CAAA9nJ,EAAAvT,KAAA,cAwHAioI,EADEhW,EACsB7+H,EAAK9E,cAAc6V,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnE/Q,EAAK9E,cAAc6V,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAAoP,EAAAvT,KAAA,gBAAAuT,EAAAvT,KAAA,GA8H8B5M,EAAK9E,cAAcs0B,oBAAoBi3I,EAAczmK,EAAK3E,MAAM0J,cAAc/E,EAAK3E,MAAMiD,aAAY,GA9HnI,QAAA6hB,EAAAzQ,KA+HoB6wD,IAAIvgE,EAAK9E,cAAc8R,MAAM6nI,MAC/CozB,GAAiB,GAhInB,QAuI2B,oBAF3B57E,EAAkBrsF,EAAK3E,MAAMgxF,gBAAkBrsF,EAAK3E,MAAMgxF,gBAAkB,CAAC6yC,EAAUl/H,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YAAY14C,QAAQpI,EAAK3E,MAAMiD,YAAY4wB,KAAK9mB,QAAQpI,EAAK3E,MAAMiD,YAAY8J,QAAQ6/J,MAGjN57E,EAAkBA,EAAgB6yC,IAIhCL,GACIjpE,GAAoBsyG,EAAA/wI,EAAkB4d,SAAQ+yH,GAA1B95J,MAAAk6J,EAAA1rK,OAAA+2G,EAAA,EAAA/2G,CAA8C6vF,IAAiBp1B,YACzFj3D,EAAK9E,cAAcg/D,+BAA+BoxB,EAAsB1oF,KAAMgzD,EAAmBmyG,EAAiBC,KAG5GlqC,EAAiB99H,EAAK9E,cAAco5B,kBAAkBt0B,EAAK3E,MAAMiD,YAAYsE,MAC7Ei7H,EAAevyC,EAAsBzvD,UAAU/Q,KAAM,SAAA2zC,GAAC,OAAIA,EAAE77D,OAASklK,IACvE9nK,EAAK3E,MAAMwhI,WAAaiB,EAC1B99H,EAAK9E,cAAcw7D,iBAAiB12D,EAAK3E,MAAMiD,YAAYsE,KAAM5C,EAAK3E,MAAMwQ,QAASy/E,EAAsB1oF,KAAMi7H,EAAazgE,WAAYivB,EAAiB07E,EAAiBC,EAAwB7oC,GAGpMn/H,EAAK9E,cAAckgB,0BAA0BkwE,EAAsB1oF,KAAMklK,EAAiBz7E,EAAiB07E,EAAiBC,IAMhIhoK,EAAKoD,SAAS,SAAC3F,GAAD,MAAgB,CAC5Bwc,WAAWzd,OAAAqqK,EAAA,EAAArqK,CAAA,GACNiB,EAAUwc,WADL,CAER4M,QAAQ,CACN3M,OAAO,KACPC,SAAQ,QAlKV,eAAAgG,EAAAtC,OAAA,UAyKD,GAzKC,yBAAAsC,EAAArS,SAAAgS,EAAA3kB,4IA7fJA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAiN9CF,KAAKI,YACLJ,KAAKoiC,yGAOY//B,EAAUC,GAC3BtC,KAAKI,YAEL,IAAMixB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDs8J,EAAkB3qK,EAAUm5I,WAAax7I,KAAKE,MAAMs7I,SACpDyxB,EAAmB5qK,EAAUq/H,YAAc1hI,KAAKE,MAAMwhI,WACvCr/H,EAAUuH,gBAAkB5J,KAAKE,MAAM0J,gBAAmBvH,EAAUc,aAAenD,KAAKE,MAAMiD,aAE/FkuB,GAAkB27I,GAAmBC,IACvDjtK,KAAKoiC,iBAGP,IAAMq+E,EAAgBzgH,KAAKoC,MAAM0P,SAAWxP,EAAUwP,OAChDo7J,EAA6BltK,KAAKoC,MAAM+8G,oBAAoBn/G,KAAKoC,MAAM0P,UAAYxP,EAAU68G,oBAAoBn/G,KAAKoC,MAAM0P,SAC9H2uG,GAAiBysD,IACnBltK,KAAKu/G,gBAGmBj9G,EAAUy2G,aAAe/4G,KAAKoC,MAAM22G,YAE5D/4G,KAAK2/G,sBAGyBr9G,EAAU4/H,4BAA8BliI,KAAKoC,MAAM8/H,2BAGvC,oBAA/BliI,KAAKE,MAAM2/G,iBACpB7/G,KAAKE,MAAM2/G,gBAAgB7/G,KAAKoC,MAAM8/H,4DAkbnC,IAAA7hI,EAAAL,KAEP,IAAKA,KAAKE,MAAMiD,cAAgBnD,KAAKE,MAAM0J,cACzC,OAAO,KAGT,IAAMs1G,EAAmBl/G,KAAKE,MAAMwhI,WAAa1hI,KAAKoC,MAAM8/H,0BACtDiH,EAAqBnpI,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,mBACjEu3J,EAAwBhkC,EAAmBr1G,SAAkG,qBAAhFq1G,EAAmBjpI,MAAMsQ,gBAAgBxQ,KAAKE,MAAMiD,YAAY4wB,KAAK7wB,OAClIkmI,EAA+BD,EAAmBtG,eAIlDuqC,EAAyB,SAACltK,GAAD,OAC7BmtK,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACTsH,GAAG,EACH42F,GAAG,EACHxqG,GAAG,EACHZ,GAAG,EACH1F,QAAQ,OACRxH,WAAW,SACXC,cAAc,SACdC,eAAe,SACf4a,GAAG3b,EAAK+B,MAAMmpK,cAAgB,EAAI,IAGpC8B,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEtsK,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBisK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7lK,KAAM,QACN9B,MAAO,WACP6B,KAAM,iBAGV4lK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEl0I,UAAU,EACVgoF,QAAShhH,EAAK+B,MAAMmpK,cACpB39J,MAAK,wCACLuP,SAAW,SAAApW,GAAC,OAAI1G,EAAKorK,oBAAoB1kK,EAAEggB,OAAOs6F,cAKlDmsD,EAAkBxtK,KAAKD,cAAc6V,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgB5V,KAAKoC,MAAMopK,qBAExH,OACExrK,KAAKoC,MAAM4c,SAAWhf,KAAKE,MAAMwQ,QAC/B28J,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,EACFua,GAAG,EACHuT,UAAU,QACVjpB,MAAM,CACJoC,QAAQ,OACRxH,WAAW,SACXE,eAAe,YAInBisK,EAAAvrK,EAAAC,cAAC0rK,EAAA,EAAD,CACEzsK,UAAW,CACTG,cAAc,OAEhBulB,YAAa,CACXhf,KAAK,QAEPiX,UAAW,CACTlZ,GAAG,GAELD,KAAM,2BAITxF,KAAKoC,MAAM6/B,mBAAqBjiC,KAAKoC,MAAMmpK,cAC1C8B,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CAAKtsK,MAAO,IAEPjB,KAAKE,MAAM0jI,iBACZypC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,IAGJ4rK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACErsK,WAAY,SACZC,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7lK,KAAM,QACN9B,MAAO,WACP6B,KAAOzH,KAAKE,MAAM0jI,gBAAkB,YAAc,YAEpDypC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAEwB,OAAjCnO,KAAKE,MAAMwtK,kBAA6B1tK,KAAKE,MAAMwtK,kBAAoB,KACtC,OAAjC1tK,KAAKE,MAAMwtK,mBACXL,EAAAvrK,EAAAC,cAAA,WARJ,OAUS/B,KAAKE,MAAM0jI,gBAA4B,GAAV,QAVtC,SAU0DypC,EAAAvrK,EAAAC,cAAA,cAAS/B,KAAKoC,MAAMkpK,cAAch+J,QAAQ,GAA1C,IAA+CtN,KAAKoC,MAAMipK,aAA1D,IAAyErrK,KAAKoC,MAAMiqK,uBAAX,IAAA5oK,OAAwCzD,KAAKoC,MAAMiqK,uBAAuB/+J,QAAQ,GAAlF,KAAA7J,OAAwFzD,KAAKE,MAAM0J,cAAnG,KAAsH,IAVzP,eAUiRyjK,EAAAvrK,EAAAC,cAAA,WAClP,OAA3B/B,KAAKE,MAAMytK,YAAuB3tK,KAAKE,MAAMytK,YAAc,+EAOzCn+I,IAA3BxvB,KAAKE,MAAMyjI,aAA6B3jI,KAAKE,MAAMyjI,cAClD0pC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,WAGZnB,KAAKE,MAAM0jI,iBACVypC,EAAAvrK,EAAAC,cAACqrK,EAAD,MAEJC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CAAMn/J,GAAI,GAAV,sBAGAi/J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACErsK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBisK,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACVv5G,EAAKkxH,UAAU,aAGnB51G,eAAe,EACfkC,SAAiC,YAAtB7d,KAAKoC,MAAM0P,QAEtBu7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEz+J,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBisK,EAAAvrK,EAAAC,cAAC6rK,EAAA,EAAD,CACE9rJ,YAAa,CACXhQ,OAAO,WAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITgvJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7nK,SAAU,EACVC,WAAY,GAFd,aAQJ0nK,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,EACFR,MAAM,IACN24G,YAAY,WACVv5G,EAAKkxH,UAAU,YAGnB51G,eAAe,EACfkC,SAAiC,WAAtB7d,KAAKoC,MAAM0P,QAEtBu7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEz+J,GAAI,EACJ5N,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBisK,EAAAvrK,EAAAC,cAAC6rK,EAAA,EAAD,CACE9rJ,YAAa,CACXhQ,OAAO,UAET+d,UAAW,CACTpoB,KAAK,OACLvH,MAAM,CACJme,GAAG,MAITgvJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7nK,SAAU,EACVC,WAAY,GAFd,cAYY,YAAtB3F,KAAKoC,MAAM0P,OACTu7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ5N,GAAI,EACJjN,cAAe,UAGZgsK,GAAyB/jC,IAAiCppI,KAAKE,MAAM0jI,iBACpEypC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEn/J,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBisK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEp/J,UAAW,SACXtI,WAAY,UACZohB,KAAI,sBAAAxjB,OAAwB0lI,EAAmBxvD,MAA3C,KAAAl2E,OAAoDzD,KAAKE,MAAMiD,YAAY4wB,KAAK7wB,QAHtF,wDAOAmqK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE9nK,GAAI,EACJiC,KAAM,MACN9B,MAAO,UACP6B,KAAM,qBAKZy3G,EACEl/G,KAAKoC,MAAM0c,WAAW4M,QAAQ1M,QAC5BquJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAAC8rK,EAAA,EAADxsK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE4H,KAAM9H,KAAKoC,MAAM0c,WAAW4M,QAAQ3M,OACpC4B,WAAU,kCACVF,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,MAC/C4gB,SAAW5gB,KAAKE,MAAM0gB,SAAW5gB,KAAKE,MAAM0gB,SAAW,yBACvDkG,eAAiB9mB,KAAKE,MAAMs7I,UAAYx7I,KAAKoC,MAAM02I,wBAA0B,8BAAgC,6BAG/G94I,KAAKE,MAAM2jI,oBACbwpC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEn/J,GAAI,EACJnN,MAAO,EACPE,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEn/J,GAAI,EACJlN,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMqhH,oBAAsB,gBAAkB,YAGjEvhH,KAAKE,MAAMqhH,qBACT8rD,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEtsK,MAAO,EACPsF,SAAU,MACVrF,WAAY,SACZC,cAAe,OAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7nK,SAAU,EACVC,WAAY,EACZwI,UAAW,OACX7H,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfd,MAAO5F,KAAKE,MAAMqhH,oBAAoB37G,MAAQ5F,KAAKE,MAAMqhH,oBAAoB37G,MAAQ,aAEpF5F,KAAKE,MAAMqhH,oBAAoB/7G,OAMtCxF,KAAKoC,MAAMkpK,eACT+B,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEtsK,MAAO,EACPsF,SAAU,MACVrF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBisK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7nK,SAAU,EACVC,WAAY,EACZC,MAAO,YACPuI,UAAW,QACXtI,WAAY,YACZC,QAAU,SAACiB,GAAD,OAAO1G,EAAKq/G,uBAAuB,OAN/C,YAQY1/G,KAAKoC,MAAMkpK,cAAch+J,QAAQ,GAR7C,IAQkDtN,KAAKE,MAAM0J,iBAMrEyjK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEt7J,IAAK,EACLxR,KAAM,SACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZ0G,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACX0pG,YAAa,gBACb17F,SAAUnd,KAAKo/G,iBAAiB1+F,KAAK1gB,MACrCoF,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,SAC7C+D,MAAO7K,KAAKoC,MAAM22G,WAAW/4G,KAAKoC,MAAM0P,QAAU9R,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM22G,WAAW/4G,KAAKoC,MAAM0P,SAASxE,UAAY,KAEnI+/J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ9a,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6B,IAAK,SAAAme,GAAU,OAC5BisJ,EAAAvrK,EAAAC,cAAC+rK,EAAA,EAAD,CACE1sJ,WAAYA,EACZtd,IAAG,YAAAL,OAAc2d,GACjBw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuBt+F,IAC7CvD,SAAUxd,EAAK+B,MAAM+8G,oBAAoB9+G,EAAK+B,MAAM0P,UAAYI,SAASkP,SAMnFisJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ/a,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGdpB,KAAKE,MAAMiD,YAAY44B,UAAUC,kBAAkB0E,UAAUz9B,IAAI,SAACy/H,EAAa51H,GAC7E,IAAMihK,EAAerrC,EAAaj7H,KAClC,OACE4lK,EAAAvrK,EAAAC,cAACisK,EAAA,EAAD,CACE7oK,YAAa,CACXlE,MAAM,CAAC,EAAE,IACTmG,SAAS/G,EAAK+B,MAAMk7G,eACpBn2G,UAAU9G,EAAKH,MAAM0G,MAAMC,OAAO6kB,SAEpC5nB,IAAG,WAAAL,OAAaqJ,GAChB7H,YAAc,SAAA8B,GAAC,OAAI1G,EAAKqrB,QAAQ3kB,EAAEgnK,KAEhCrrC,EAAa90H,WAQ3By/J,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLqxJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACErsK,WAAY,SACZC,cAAe,UAGbnB,KAAKE,MAAM+tK,eACTZ,EAAAvrK,EAAAC,cAACwrK,EAAA,EACKvtK,KAAKE,MAAM+tK,gBAGjBZ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7lK,KAAM,QACN9B,MAAO,WACP6B,KAAOzH,KAAKE,MAAM4jI,cAAgB9jI,KAAKE,MAAM4jI,cAAiB9jI,KAAKE,MAAM0jI,gBAAkB,YAAc,WAI/GypC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGTnO,KAAKE,MAAM+jI,cACTopC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAK5mJ,KAAN,CACEunJ,mBAAoBluK,KAAKE,MAAMguK,mBAC/B3+J,wBAAyB,CACvBC,OAAOxP,KAAKE,MAAM+jI,iBAKtBopC,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAK5mJ,KAAN,CACE/gB,MAAO,YADT,oDAGqD5F,KAAKE,MAAM0jI,gBAAkB5jI,KAAKoC,MAAMkpK,cAAch+J,QAAQ,GAAK,MAHxH,IAGiItN,KAAKoC,MAAMipK,aAAerrK,KAAKE,MAAM0jI,gBAAX,kBAAAngI,OAA+CzD,KAAKE,MAAMiD,YAAYD,MAAtE,KAAAO,OAA+EzD,KAAKE,MAAM8T,iBAA1F,aAAwH,GAHnR,MAQNq5J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEtsK,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhBosK,GACEH,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEx+J,GAAI,EACJC,GAAI,EACJgN,GAAI,EACJ/a,MAAO,EACPiG,aAAc,EACdhG,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB6N,gBAAiB,cACjB7J,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOwkB,YAE7CgiJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGTnO,KAAKE,MAAMs7I,SAAX,0HAGE,4GAINx7I,KAAKE,MAAMs7I,UACT6xB,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJqd,UAAU,EACVzrB,MAAO,gCACPyzG,QAASrhH,KAAKoC,MAAM02I,wBACpB37H,SAAW,SAAApW,GAAC,OAAI1G,EAAK6rK,8BAA8BnlK,EAAEggB,OAAOs6F,aAMpErhH,KAAKE,MAAMiD,YAAY44B,UAAUC,kBAAkB0E,UAAUz9B,IAAI,SAACy/H,EAAa51H,GAC7E,IAAMihK,EAAerrC,EAAaj7H,KAClC,OACE4lK,EAAAvrK,EAAAC,cAACisK,EAAA,EAAD,CACE7oK,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,IACTkG,UAAU9G,EAAKH,MAAM0G,MAAMC,OAAO6kB,SAEpC5nB,IAAG,WAAAL,OAAaqJ,GAChB7H,YAAc,SAAA8B,GAAC,OAAI1G,EAAKqrB,QAAQ3kB,EAAEgnK,KAEhCrrC,EAAa90H,YAS3B5N,KAAKoC,MAAM0c,WAAW8gG,QAAQ5gG,QAChCquJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAAC8rK,EAAA,EAADxsK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE0gB,SAAQ,uBACR9Y,KAAM9H,KAAKoC,MAAM0c,WAAW8gG,QAAQ7gG,OACpC4B,WAAU,gCACVF,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,UAInDqtK,EAAAvrK,EAAAC,cAACurK,EAAA,EAAD,CACEhyJ,UAAW,CACT7Z,EAAE,EACFua,GAAG,IAGLqxJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACErsK,WAAY,SACZC,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACE7lK,KAAM,QACND,KAAM,WACN7B,MAAO,aAETynK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAGTnO,KAAKE,MAAMiuK,YAAcnuK,KAAKE,MAAMiuK,YAApC,mBAAA1qK,OAAuEzD,KAAKE,MAAM0jI,gBAA0B,GAAR,MAApG,KAAAngI,OAAmHzD,KAAKoC,MAAMipK,aAA9H,mDAGJgC,EAAAvrK,EAAAC,cAACisK,EAAA,EAAD,CACE7oK,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAK0sK,iBAAiBhsJ,KAAK1gB,OAL1C,cAeTA,KAAKoC,MAAM0c,WAAW9e,KAAKoC,MAAM0P,QAAQkN,QAmExCquJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAAC8rK,EAAA,EAADxsK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEugB,kBAAmBzgB,KAAKygB,kBAAkBC,KAAK1gB,MAC/C8H,KAAM9H,KAAKoC,MAAM0c,WAAW9e,KAAKoC,MAAM0P,QAAQiN,OAC/C4B,WAAU,cAAAld,OAAgBzD,KAAKoC,MAAM0P,OAA3B,eACV8O,SAAQ,GAAAnd,OAAKzD,KAAKD,cAAc8N,WAAW7N,KAAKoC,MAAM0P,QAA9C,qBA3EZu7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ7a,cAAe,UAEfksK,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEt7J,IAAK,EACLxR,KAAM,SACN44B,UAAU,EACVh0B,OAAQ,QACR6B,aAAc,EACdvB,WAAY,IACZmD,UAAWC,IAAO8nB,MAClBxkB,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXgO,SAAUnd,KAAKo/G,iBAAiB1+F,KAAK1gB,MACrCoF,OAAM,aAAA3B,OAAezD,KAAKE,MAAM0G,MAAMC,OAAOC,SAC7C+xG,YAAW,UAAAp1G,OAAYzD,KAAKoC,MAAMipK,aAAvB,WACXxgK,MAAoD,OAA7C7K,KAAKoC,MAAM22G,WAAW/4G,KAAKoC,MAAM0P,QAAmB9R,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM22G,WAAW/4G,KAAKoC,MAAM0P,SAASyS,WAAa,KAE7I8oJ,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ9a,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBisK,EAAAvrK,EAAAC,cAAC+rK,EAAA,EAAD,CACE1sJ,WAAY,GACZw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuB,KAC7C7hG,SAAU7d,KAAKoC,MAAM+8G,oBAAoBn/G,KAAKoC,MAAM0P,UAAYI,SAAS,MAE3Em7J,EAAAvrK,EAAAC,cAAC+rK,EAAA,EAAD,CACE1sJ,WAAY,GACZw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuB,KAC7C7hG,SAAU7d,KAAKoC,MAAM+8G,oBAAoBn/G,KAAKoC,MAAM0P,UAAYI,SAAS,MAE3Em7J,EAAAvrK,EAAAC,cAAC+rK,EAAA,EAAD,CACE1sJ,WAAY,GACZw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuB,KAC7C7hG,SAAU7d,KAAKoC,MAAM+8G,oBAAoBn/G,KAAKoC,MAAM0P,UAAYI,SAAS,MAE3Em7J,EAAAvrK,EAAAC,cAAC+rK,EAAA,EAAD,CACE1sJ,WAAY,IACZw4F,YAAa,kBAAIv5G,EAAKq/G,uBAAuB,MAC7C7hG,SAAU7d,KAAKoC,MAAM+8G,oBAAoBn/G,KAAKoC,MAAM0P,UAAYI,SAAS,QAG7Em7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEvxJ,GAAI,EACJ5a,eAAgB,UAEhBisK,EAAAvrK,EAAAC,cAACisK,EAAA,EAAD,CACE7oK,YAAa,CACXlE,MAAM,CAAC,EAAE,IACTmG,SAASpH,KAAKoC,MAAMk7G,eACpBh3G,MAAM,CACJk7G,cAAc,eAGlBv8G,YAAajF,KAAKoC,MAAMk7G,eAAiB,KAAOt9G,KAAK4rK,cAAclrJ,KAAK1gB,OAEvEA,KAAKoC,MAAM0P,WAsB1Bu7J,EAAAvrK,EAAAC,cAACwrK,EAAA,EAAD,CACEtsK,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZpB,KAAKE,MAAM0jI,iBAAmB5jI,KAAKoC,MAAM6/B,kBACzCorI,EAAAvrK,EAAAC,cAACqrK,EAAD,MAGFptK,KAAKE,MAAM2b,SAAW7b,KAAKE,MAAM2b,SAAW,aAp1CpC3Z,aA61CPuhI,8HCr2CTrf,qdAMqB/hH,EAAUC,kMAKjC,OACEkG,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACE2F,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfqH,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACE2jH,GAAI,EACJ9lH,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,WAEPhvB,WAAY,SACZE,eAAgB,cAGdpB,KAAKE,MAAM0F,OACX4C,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACE4V,GAAI,EACJpd,MAAO,OACPoE,OAAQ,OACR6B,aAAc,MACd+H,gBAAiBjP,KAAKE,MAAM0F,QAIhC4C,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZwI,UAAW,OACXvI,MAAO,YACPU,MAAO,CACLk7G,cAAc,eAGfxhH,KAAKE,MAAM0N,QAGhBpF,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACEnC,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,WAEPhvB,WAAY,SACZE,eAAgB,YAEhBoH,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZC,MAAO,WACPuI,UAAW,QACX7H,MAAO,CACLG,WAAW,UAEb8I,wBAAyB,CACvBC,OAAQxP,KAAKE,MAAM2K,kBAnEG3I,aA6ErBkiH,gKCzET+c,6MAEJ/+H,MAAQ,KAGRrC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,iMAGkBiC,EAAWC,mEAClCtC,KAAKI,kJAGE,IAAAC,EAAAL,KAEHmQ,EAAgBnQ,KAAKE,MAAMiQ,cAK/B,OAJKA,GAAkBA,EAAc5O,SACnC4O,EAAgB9O,OAAOC,KAAKtB,KAAKE,MAAMsQ,kBAIvC3O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,GAAG,wBAAwBzB,MAAO,EAAGE,cAAe,UACxDU,EAAAC,EAAAC,cAACqsK,EAAA,EAAD/sK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2C,KAAM7C,KAAKE,MAAM2C,KACjBC,SAAU9C,KAAKE,MAAM4C,YAEvBjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,GAAG,cAAcvB,cAAe,UAElCgP,EAAclN,IAAI,SAAAC,GAChB,IAAMC,EAAc9C,EAAKH,MAAMsQ,gBAAkBnQ,EAAKH,MAAMsQ,gBAAgBtN,GAAS,KACrF,OAAKC,EAIHtB,EAAAC,EAAAC,cAACsB,EAAA,EAADhC,OAAAuB,OAAA,CACEM,MAAOA,GACH7C,EAAKH,MAFX,CAGE4D,IAAG,SAAAL,OAAWP,GACdC,YAAaA,EACbK,MAAK,aAAAC,OAAeP,GACpBW,OAAM,cAAAJ,OAAgBP,GACtBa,eAAgB1D,EAAKH,MAAM6D,gBAAkB43G,OAVxC,gBA1CEz5G,aA+DVi/H,wuFCrEfh9H,EAAAC,QAAA,CAAkBiqK,OAAA,uBAAApoK,KAAA,00PCGZ02G,EAAY,SAAA5rG,GAAA,IAAE8K,EAAF9K,EAAE8K,SAAUq9F,EAAZnoG,EAAYmoG,UAAch5G,EAA1BmB,OAAAitK,EAAA,EAAAjtK,CAAA0P,EAAA,iCAChBw9J,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACE/sK,EAAG,EACH2D,OAAQ,EACR4D,GAAI,OACJ8F,GAAI,OACJzJ,OAAQ,OACR6B,aAAc,EACdV,SAAU,OACVvF,MAAQf,EAAMe,MAAQf,EAAMe,MAAQ,OACpCoG,SAAWnH,EAAMmH,SAAWnH,EAAMmH,SAAW,OAC7Cd,SAAWrG,EAAMqG,SAAWrG,EAAMqG,SAAW,SAE7CgoK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEhiK,IAAK,IACL0B,OAAQ,EACRzB,MAAO,IACPwB,SAAU,YAEVsgK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAOpoK,KAAR,CACEkrJ,UAAQ,EACRvjJ,KAAM,QACNrG,KAAM,QACN5B,QAASozG,EACT/xG,UAAYjH,EAAMiH,UAAYjH,EAAMiH,UAAa,eAGrDonK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEnpK,OAAQ,OACR6qB,KAAM,WACN/uB,cAAe,SACf2H,UAAW,CAAE5I,EAAMuuK,QAAU1lK,IAAOsnB,GAAK,MACzC/pB,MAAO,CACLE,SAAU,OACVkoK,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiB1uK,EAAMgL,WAAqB,KAAR,MACpC2jK,gBAAgB,mCAChB3jK,WAAYhL,EAAMgL,WAAahL,EAAMgL,WAAa,MAEpD+D,gBAAiB,UAEhB4M,KAKP8gG,EAAUxD,OAAS,SAACj5G,GAAD,OACjBquK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEvtK,MAAO,EACPmN,GAAI,CAAC,EAAE,GACPorG,GAAI,CAAC,EAAE,GACP52F,GAAK1iB,EAAM0iB,GAAK1iB,EAAM0iB,GAAM1iB,EAAM6N,KAAO,EAAI,CAAC,EAAE,GAChDquG,aAAel8G,EAAMk8G,aAAel8G,EAAMk8G,aAAe,kBAEzDmyD,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEx/J,GAAI,CAAC,EAAE,GACP9N,WAAY,SACZC,cAAe,UAEbjB,EAAM6N,MAAQwgK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CAAOvtK,MAAQf,EAAM08G,WAAa18G,EAAM08G,WAAa,OAASvuG,IAAKnO,EAAM6N,OACzFwgK,EAAAzsK,EAAAC,cAACysK,EAAA,EAAQtpD,GAAT7jH,OAAAuB,OAAA,CACEwL,GAAI,EACJ1I,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,SACX6N,GAAI9b,EAAM6N,KAAO,EAAI,EACrB1C,WAAY,aACRnL,EAAM4zG,YAET5zG,EAAM4nB,OAGP5nB,EAAM4nH,UACNymD,EAAAzsK,EAAAC,cAACysK,EAAA,EAAQn/J,GAAThO,OAAAuB,OAAA,CACEggB,GAAI,CAAC,EAAE,GACPjd,WAAY,EACZD,SAAU,CAAC,EAAE,GACbmuG,WAAY,IACZjuG,MAAO,YACPuI,UAAW,UACPjO,EAAM4uK,eAET5uK,EAAM4nH,UAIT5nH,EAAMsyJ,WACN+b,EAAAzsK,EAAAC,cAACysK,EAAA,EAAQn/J,GAAT,CAAYuT,GAAI,EAAGld,SAAU,CAAC,EAAE,GAAIyI,UAAW,SAAUxI,WAAY,EAAGkuG,WAAY,IAAKjuG,MAAO,aAC7F1F,EAAMsyJ,cAOjB71C,EAAUvD,KAAO,SAAAnlG,GAAA,IAAE4H,EAAF5H,EAAE4H,SAAa3b,EAAfmB,OAAAitK,EAAA,EAAAjtK,CAAA4S,EAAA,qBACfs6J,EAAAzsK,EAAAC,cAACysK,EAAA,EAADntK,OAAAuB,OAAA,CACE3B,MAAO,EACP+N,GAAI,CAAC,EAAE,IACH9O,GAEH2b,IAaL8gG,EAAUtD,OAAS,SAAAr3F,GAAA,IAAEnG,EAAFmG,EAAEnG,SAAFxa,OAAAitK,EAAA,EAAAjtK,CAAA2gB,EAAA,qBACjBusJ,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEt+I,KAAM,WACN9uB,eAAgB,SAChBshH,UAAW,EACXr2G,YAAa,aACb2C,GAAI,CAAC,EAAE,GACPD,GAAI,GAEH8M,IAKL8gG,EAAUoyD,WAAa,SAAAtvI,GAAA,IAAE35B,EAAF25B,EAAE35B,QAAFzE,OAAAitK,EAAA,EAAAjtK,CAAAo+B,EAAA,oBACrB8uI,EAAAzsK,EAAAC,cAACysK,EAAA,EAAD,CACEvgK,SAAU,WACVzB,IAAK,IACLG,KAAM,IACNq+J,EAAG,EACH36I,GAAI,SAEJk+I,EAAAzsK,EAAAC,cAACysK,EAAA,EAAOjd,QAAR,CACEzrJ,QAASA,EACTwrJ,UAAQ,EACRvjJ,KAAM,YACNrG,KAAM,YAKGi1G,uCCtJfp1F,EAAAld,EAAAod,EAAA,sBAAAsB,IAAAxB,EAAAld,EAAAod,EAAA,sBAAAgD,IAAAlD,EAAAld,EAAAod,EAAA,sBAAAqG,IAAAvG,EAAAld,EAAAod,EAAA,sBAAAuG,IAAA,IAAAghJ,EAAAznJ,EAAA,IAGMqC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPxB,KAAM,UACNkmJ,SAAU,UACVxkJ,MAAO,UACPqD,OAAQ,UACRE,IAAK,UACLkhJ,QAAS,UACTC,cAAe,WAIXtoK,EAAS,CACbqoK,QAAS,CACPlmJ,KAAMY,EAAWslJ,QACjB1pK,KAAM4pK,YAAcxlJ,EAAWslJ,SAC/B/lJ,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWslJ,UACnCzyJ,KAAM,CAAC,KAAMiR,YAAM,GAAK9D,EAAWslJ,WAErCnmJ,KAAM,CACJC,KAAMY,EAAWb,KACjBvjB,KAAM4pK,YAAcxlJ,EAAWb,MAC/BI,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWb,OACnCtM,KAAM,CAAC,KAAMiR,YAAM,GAAK9D,EAAWb,QAErC0B,MAAO,CACLzB,KAAMY,EAAWa,MACjBjlB,KAAMokB,EAAWW,MACjBpB,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWa,QACnChO,KAAM,CAAC,KAAMiR,YAAM,GAAK9D,EAAWa,SAErCqD,OAAQ,CACN9E,KAAMY,EAAWkE,OACjBtoB,KAAM4pK,YAAcxlJ,EAAWkE,QAC/B3E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWkE,SACnCrR,KAAM,CAAC,KAAMiR,YAAM,GAAK9D,EAAWkE,UAErCE,IAAK,CACHhF,KAAMY,EAAWoE,IACjBxoB,KAAM4pK,YAAcxlJ,EAAWoE,KAC/B7E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWoE,MACnCvR,KAAM,CAAC,KAAMiR,YAAM,GAAK9D,EAAWoE,QAKjCjF,EAAOliB,EAAOkiB,KACd0B,EAAQ5jB,EAAO4jB,MACfqD,EAASjnB,EAAOinB,OAChBE,EAAMnnB,EAAOmnB,IAOJpE,wKCtDT0+F,6MAEJlmH,MAAQ,CACNimG,SAAS,KACTgnE,kBAAkB,QAIpBtvK,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKsvK,oMAGkBjtK,EAAUC,yEACjCtC,KAAKI,YACC8mH,EAAuB7kH,EAAU6kH,uBAAyBlnH,KAAKE,MAAMgnH,uBACvC7kH,EAAUmzB,qBAAuBvlB,KAAKC,UAAU7N,EAAUmzB,uBAAyBvlB,KAAKC,UAAUlQ,KAAKE,MAAMs1B,sBAC/G0xF,IAChClnH,KAAKsvK,0RAMD9lE,EAAcxpG,KAAKE,MAAMspG,cAAe,EAEzCxpG,KAAKE,MAAMs1B,qBAAwBx1B,KAAKE,MAAMgnH,wBAAyB1d,IAAexpG,KAAKoC,MAAMimG,oDAC7F,cAGLroG,KAAKE,MAAMmoG,WAAYroG,KAAKE,MAAMmvK,2DAC7BrvK,KAAKiI,SAAS,CACnBogG,SAASroG,KAAKE,MAAMmoG,SACpBgnE,kBAAkBrvK,KAAKE,MAAMmvK,+BAI3BE,EAA8BvvK,KAAKE,MAAMqvK,6BAA+B,EAAC,EAAK/lE,GAKpC,oBAArCxpG,KAAKE,MAAMsoH,wDAA6CgnD,EAAAxvK,KAAKE,OAAMsoH,sBAAX31G,MAAA28J,EAAAnuK,OAAA+2G,EAAA,EAAA/2G,CAAoCkuK,iEAAqCE,EAAAzvK,KAAKD,eAAcupG,mBAAnBz2F,MAAA48J,EAAApuK,OAAA+2G,EAAA,EAAA/2G,CAAyCkuK,8CAFnLrwI,WACAmpE,aAGEgnE,EAAoBrvK,KAAKD,cAAc8R,MAAM,GAC5C7R,KAAKD,cAAc8R,MAAMw2F,GAAU7nG,SAAYR,KAAKD,cAAc8R,MAAMqtB,GAAQ1+B,UACnF6uK,EAAoBhnE,EAASh2F,KAAKg2F,EAASh7F,MAAM6xB,EAAO5a,IAAI,0BAGvDtkB,KAAKiI,SAAS,CACnBogG,WACAgnE,2JAIK,IAAAhvK,EAAAL,KACP,OAAOA,KAAKoC,MAAMimG,SAChB/hF,EAAAxkB,EAAAC,cAAC2tK,EAAA,EAADruK,OAAAuB,OAAA,CACE3B,MAAO,GACHjB,KAAKE,MAAMc,WAEfslB,EAAAxkB,EAAAC,cAAC4tK,EAAA7tK,EAAD,CACEooH,MAAO,EACPrpH,SAAU,EACV4uD,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACVC,MAAOxtB,WAAWpN,KAAKoC,MAAMimG,UAC7Bz3C,IAAKxjD,WAAWpN,KAAKoC,MAAMitK,mBAC3BhlD,aAAe,SAAA7yF,GAAC,MAAI,KAAKn3B,EAAKN,cAAcW,YAAY82B,EAAE,KAEzD,SAAAvjB,GAAA,IAAGq2G,EAAHr2G,EAAGq2G,WAAHr2G,EAAe2mB,MAAf,OACCtU,EAAAxkB,EAAAC,cAAA,QACEuE,MAAQjG,EAAKH,MAAM6pH,aAAe1pH,EAAKH,MAAM6pH,aAAe,CAC1DrhH,QAAQ,QACR9C,MAAM,YACNa,WAAW,SACX4E,WAAWhL,EAAKH,MAAM0G,MAAM0E,MAAM2c,QAClCtiB,WAAWtF,EAAKH,MAAM0G,MAAM2V,YAAY,GACxCpO,UAAW9N,EAAKH,MAAM4C,SAAW,SAAW,QAC5C4C,SAAUrF,EAAKH,MAAM4C,SAAW,QAAUzC,EAAKH,MAAM0G,MAAMyV,UAAU,IAEvEkuG,IAAKD,OAKuB,qBAAxBtqH,KAAKE,MAAM4nH,UAA4B9nH,KAAKE,MAAM4nH,WACxDxhG,EAAAxkB,EAAAC,cAAC6tK,EAAA,EAADvuK,OAAAuB,OAAA,CACE+C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPuI,UAAW,CAAC,SAAS,UACjBnO,KAAKE,MAAM4uK,eAEfxoJ,EAAAxkB,EAAAC,cAAC2tK,EAAA,EAAK/oJ,KAAN,CAAWhhB,WAAY,UAAWC,MAAO,UAAWF,SAAU,WAAY1F,KAAKE,MAAM4nH,UAAY,6BAMzGxhG,EAAAxkB,EAAAC,cAAC2tK,EAAA,EAAD,CACEzuK,MAAO,EACPC,WAAY,SACZE,eAAgBpB,KAAKE,MAAMqoH,aAAe,UAE1CjiG,EAAAxkB,EAAAC,cAAC2tK,EAAA,EAAD,CACEhoK,KAAM,iBAtHoBxF,aA6HrBomH,uGChITunD,mLAEK,IAAAhrK,EAAA7E,KAED8vK,EAAgB,kBACpBxoK,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACE5B,MAAiC,OAAzBf,EAAK3E,MAAM+oH,UAAsB,UAAY,UACrDxhH,KAAgC,OAAzB5C,EAAK3E,MAAM+oH,UAAsB,cAAgB,gBACxDvhH,KAAO7C,EAAK3E,MAAMoF,SAAWT,EAAK3E,MAAMoF,SAAaT,EAAK3E,MAAM4C,SAAW,QAAU,SAIzF,OACEwE,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACEtG,WAAY,SACZC,cAAe,MACfF,MAAQjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAQ,EAC9CG,eAAgBpB,KAAKE,MAAMkB,eAAiBpB,KAAKE,MAAMkB,eAAiB,YAGpEpB,KAAKE,MAAM6vK,SAAgC,SAArB/vK,KAAKE,MAAM6vK,UACjCzoK,EAAAxF,EAAAC,cAAC+tK,EAAD,MAEH9vK,KAAKE,MAAM2b,SAEW,UAArB7b,KAAKE,MAAM6vK,SACTzoK,EAAAxF,EAAAC,cAAC+tK,EAAD,cA1BkB5tK,aAiCf2tK,2BCnCf1rK,EAAAC,QAAA,CAAkBoY,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,m0OCAlBvY,EAAAC,QAAA,CAAkB4rK,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,2vkDCEZt0D,mLAEF,OACE72G,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACE3B,MAAO,EACPC,WAAY,SACZE,eAAgB,UACZpB,KAAKE,MAAMc,WAEf+D,EAAAjD,EAAAC,cAACiD,EAAA,EAAWhF,KAAKE,MAAMwmB,aAErB1mB,KAAKE,MAAMsF,MACTT,EAAAjD,EAAAC,cAACiD,EAAA,EAAShF,KAAKE,MAAMye,UAAY3e,KAAKE,MAAMsF,cAZ/BtD,aAmBV05G,8JChBT6F,6MAGJ1hH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiC,EAAUC,mEACjCtC,KAAKI,kJAIL,OACEyB,EAAAC,EAAAC,cAAC2Z,EAAA,EAAD,CACEJ,UAASja,OAAAwN,EAAA,EAAAxN,CAAA,CACPI,EAAE,EACFua,GAAG,GACAhc,KAAKE,MAAMob,YAGhBzZ,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACE9M,WAAY,SACZC,cAAe,UAEfU,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEtG,KAAM,QACND,KAAM,QACN7B,MAAO,aAET/D,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACEgO,GAAI,EACJtW,SAAU,EACVE,MAAO,WACPuI,UAAW,UAJb,uDAQAtM,EAAAC,EAAAC,cAACouK,EAAA,EAAD,CACEhrK,YAAa,CACX6W,GAAG,EACH/a,MAAM,CAAC,EAAE,KAEXgE,YAAajF,KAAKE,MAAMo8H,2BAL1B,oBA/Cep6H,aA8DVu/G,6OCxDTz9G,6MAEJ5B,MAAQ,CACN6mK,OAAM,KAIRlpK,cAAgB,OAChB6H,oBAAqB,IA8DrBupB,+BAAY,SAAA1P,IAAA,IAAA2uJ,EAAAnoK,EAAA4nB,EAAA4B,EAAA82C,EAAAc,EAAA/lE,EAAAooH,EAAA2kD,EAAAC,EAAAh/I,EAAAg2B,EAAAD,EAAAkpH,EAAAl9I,EAAAtD,EAAA9b,EAAA+N,EAAAwuJ,EAAAC,EAAA55J,EAAArD,EAAAk9J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzM,EAAA1xJ,UAAA,OAAA7B,EAAAnP,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAAM2+J,EAAN5L,EAAAjjK,OAAA,QAAAiuB,IAAAg1I,EAAA,GAAAA,EAAA,GAAgB,MAEtB3/J,EAAK+C,oBAAuB/C,EAAK3E,MAAMkD,UAAayB,EAAK3E,MAAMgD,OAAU2B,EAAK3E,MAAMiD,aAAgB0B,EAAK3E,MAAMgnH,qBAFzG,CAAAvlG,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,UAGD,GAHC,UAMJza,EAAyB,OAAdmoK,EACXvgJ,EAAYhrB,EAAK3E,MAAM2vB,UACxBugJ,IACHA,EAAYvgJ,EAAUpoB,MAGlBgqB,EAAa5B,EAAU3vB,MACvBqoE,EAAkD,qBAA5B1jE,EAAK3E,MAAMqoE,cAA+B1jE,EAAK3E,MAAMqoE,aAC3Ec,EAAgD,qBAA3BxkE,EAAK3E,MAAMmpE,aAA8BxkE,EAAK3E,MAAMmpE,YACzE/lE,EAAkD,qBAA5BuB,EAAK3E,MAAMoD,cAA+BuB,EAAK3E,MAAMoD,aAE3EooH,EAAiB7mH,EAAK9E,cAAc6V,gBAAgB,CAAC,aACrDy6J,EAAoBxrK,EAAK9E,cAAc8N,WAAW69G,EAAe/nH,GAAG2jH,UACpEgpD,EAAoBzrK,EAAK9E,cAAc8N,WAAW69G,EAAe9nH,GAAG0jH,UAEtEh2F,EAAS,MACTzsB,EAAK3E,MAAMgD,MAtBL,CAAAye,EAAAlQ,KAAA,SAAAkQ,EAAAwS,GAuBAi8I,EAvBAzuJ,EAAAlQ,KAwBD,aAxBCkQ,EAAAwS,GAAA,uBA0BEmzB,EAAep1C,SAASe,KAAK04B,MAAM,KACnC0b,EAAiBC,EAAc,OAGjCipH,EAAe,GACbl9I,EA/BF,mBAAA5vB,OA+BqCoB,EAAK3E,MAAMiD,YAAY8J,WAG7C,QAFb8iB,EAAalrB,EAAK9E,cAAc+yC,cAAczf,KAEzBtD,EAAW,IAAMA,EAAW,GAAGxlB,MAAQwlB,EAAW,GAAGxlB,KAAKhJ,OAAO,GAlCxF,CAAAogB,EAAAlQ,KAAA,SAmCF8+J,EAAexgJ,EAnCbpO,EAAAlQ,KAAA,wBAAAkQ,EAAAlQ,KAAA,GAwCQsQ,QAAQqD,IAAI,CACpBvgB,EAAK9E,cAAcknD,uBAAuBpiD,EAAK3E,MAAMiD,YAAYQ,GAAGsJ,QAAQo6C,EAAeC,GAC3FziD,EAAK9E,cAAcknD,uBAAuBpiD,EAAK3E,MAAMiD,YAAYS,GAAGqJ,QAAQo6C,EAAeC,KA1C3F,QAAArzC,EAAA0N,EAAApN,KAAAyN,EAAA3gB,OAAA6vK,EAAA,EAAA7vK,CAAA4S,EAAA,GAsCAu8J,EAtCAxuJ,EAAA,GAuCAyuJ,EAvCAzuJ,EAAA,GA6CEnL,EAAY,EACZrD,EAAgB,EACdk9J,EAAgBF,EAAcjvK,OAC9BovK,EAAgBF,EAAclvK,OAEpCgvK,EAAahjK,KAAK,CAChB3H,MAAM8lH,EAAe/nH,GAAGiC,MAAM44G,IAC9B97G,GAAE,GAAAe,OAAIoB,EAAK3E,MAAMgD,MAAf,KAAAO,OAAwB4sK,EAAxB,QACF9lK,KAAKimK,EAAcvtK,IAAI,SAACoH,EAAEyC,GACxB,IAAM4J,EAAI7R,EAAK9E,cAAciT,YAAwB,IAAZ3I,EAAE8H,WAAgBiE,OAAO,oBAC5DO,EAAIvJ,WAAWvI,EAAK9E,cAAc8rC,QAAQhnC,EAAK9E,cAAcsV,iBAAiBhL,EAAEyhC,IAAI,IAAIxnB,IAAI,MAAMjX,MAAM,MAG9G,OAFAmG,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY65J,EAAc,UAKzD75J,EAAY,EACZ05J,EAAahjK,KAAK,CAChB3H,MAAM8lH,EAAe9nH,GAAGgC,MAAM44G,IAC9B97G,GAAE,GAAAe,OAAIoB,EAAK3E,MAAMgD,MAAf,KAAAO,OAAwB6sK,EAAxB,QACF/lK,KAAKkmK,EAAcxtK,IAAI,SAACoH,EAAEyC,GACxB,IAAM4J,EAAI7R,EAAK9E,cAAciT,YAAwB,IAAZ3I,EAAE8H,WAAgBiE,OAAO,oBAC5DO,EAAIvJ,WAAWvI,EAAK9E,cAAc8rC,QAAQhnC,EAAK9E,cAAcsV,iBAAiBhL,EAAEyhC,IAAI,IAAIxnB,IAAI,MAAMjX,MAAM,MAG9G,OAFAmG,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY85J,EAAc,UAKrDJ,EAAahvK,QAAUgvK,EAAa,GAAGhmK,KAAKhJ,OAAO,GACrDsD,EAAK9E,cAAciwB,cAAcqD,EAAck9I,GA5E/C,eAiFgC,IAAhCA,EAAa,GAAGhmK,KAAKhJ,UACjBqvK,EAAWvvK,OAAOuB,OAAO,GAAG2tK,EAAa,GAAGhmK,KAAK,KAC9CmM,EAAI7R,EAAK9E,cAAciT,YAAY49J,EAAS,oBAAoBt9C,IAAI,EAAE,SAASl9G,OAAO,oBAC/Fm6J,EAAa,GAAGhmK,KAAKgD,KAAKqjK,IAGxBC,EAAgB,EAChBC,EAAiB,GAEfC,EAAiB,WACrB,IAAMI,EAAqBtsK,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMsD,OACnL,GAAI2tK,EAAmB,CACrB,IAAMC,EAAsB3rJ,OAAO0/I,OAAOgM,GAC1CN,EAAgBO,EAAoBnN,aAAa72J,WAAWgkK,EAAoBC,IAAI,kBAAkBjkK,WAAWgkK,EAAoBC,IAAI,iBACzIP,EAAiBM,EAAoBlN,cACjC2M,IAAkBhsK,EAAKzC,MAAMyuK,eAAkBhsK,EAAKzC,MAAM0uK,gBAC5DjsK,EAAKyD,aAAa,CAChBuoK,gBACAC,eAAgBjsK,EAAKzC,MAAM0uK,eAAiBjsK,EAAKzC,MAAM0uK,eAAiBA,SAQhFrrJ,OAAOqJ,oBAAoB,SAAUiiJ,EAAerwJ,KAAfrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MACrC4gB,OAAOmJ,iBAAiB,SAAUmiJ,EAAerwJ,KAAfrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MAG5BmsK,EAAex2J,IAEfy2J,EAAgB,CACpB34J,UAAU,EACVi5J,UAAU,EACVh5J,SAAQ,EACRC,SAAS,KACTzO,SAAQ,EACR+N,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB2C,eAAc,EACd9U,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACdgT,cAAa/T,EAAK3E,MAAM4C,UAAmB,IAC3C+U,QAAQ,SAAAhN,GAAK,OAAIuC,WAAWvC,GAAOyC,QAAQ,GAAG,KAC9CiM,KAAK,CACH,CAAEk7B,MAAO,CAAE/xC,GAAImC,EAAK3E,MAAMgD,OAAUR,GAAI,iBAE1C6J,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CkN,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEu3J,EAAA1vK,EAAAC,cAAC0vK,EAAA,EAAD,CACE13J,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAO1Y,QAC/CyY,EAAMC,OAAOhX,IAAI,SAAA8W,GACf,IAAMhN,EAAegN,EAAMK,QACrBs3J,EAAkB33J,EAAMxP,KAAK8P,WAEnC,OACEm3J,EAAA1vK,EAAAC,cAAC4vK,EAAA,EAAD,CACE7tK,IAAKiW,EAAMrX,GACXkD,MAAOmU,EAAMnU,MACbgI,MAAOb,EACPlC,MAAO6mK,SAUnB7sK,EAAK3E,MAAMqJ,YAET1E,EAAK3E,MAAMqJ,YAAclI,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAYhI,QAC9DF,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAY/H,QAAQ,SAAAC,GACzCwvK,EAAcxvK,GAAKoD,EAAK3E,MAAMqJ,WAAW9H,KAK3CwG,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACN+H,eACAT,eACAU,gBACAJ,gBACAC,mBAGJx/I,EAASi/I,EArLL5uJ,EAAAe,OAAA,2BAAAf,EAAAlQ,KAAA,GAwLW5M,EAAK9E,cAAc2oE,iBAAiB0nG,EAAU3+I,EAAW5sB,EAAK3E,MAAMkD,SAASyB,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMqD,QAAQsB,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwD,cAAcmB,EAAK3E,MAAMwQ,QAAQ63D,EAAac,EAAY/lE,GAxLxN,oBAyLWksB,KADf8B,EAxLI3P,EAAApN,OAyLwBtM,GAC1BpD,EAAKyD,aAALjH,OAAAuwK,EAAA,EAAAvwK,CAAA,CACE4nK,OAAM,GACLmH,EAAW9+I,IA5LZ3P,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,SAmMH4O,GAnMG,yBAAA3P,EAAAhP,SAAA8O,EAAAzhB,oFA3DNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAK4H,oBAAqB,yPAI1B5H,KAAKI,kQAILJ,KAAKmxB,2LAIYppB,wFAASC,iCAAS,KAC9BhI,KAAK4H,4DACD5H,KAAKiI,SAASF,EAASC,oCAEzB,4LAGgB3F,EAAWC,oGAClCtC,KAAKI,YAEC4lK,EAAe3jK,EAAUa,QAAUlD,KAAKE,MAAMgD,MAC9CmuB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDmhK,EAAiBxvK,EAAUkB,UAAYvD,KAAKE,MAAMqD,QAClD8M,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDgvK,EAAkBzvK,EAAUe,WAAapD,KAAKE,MAAMkD,SACpDkN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,UACtDwhK,EAAe1vK,EAAUwtB,UAAUpoB,OAASzH,KAAKE,MAAM2vB,UAAUpoB,KACjEy/G,GAAwB7kH,EAAU6kH,sBAAwBlnH,KAAKE,MAAMgnH,qBACrEwK,GAA2BrvH,EAAUke,SAAWvgB,KAAKE,MAAMqgB,SAAale,EAAUke,SAAWvgB,KAAKE,MAAMqgB,SAAWtQ,KAAKC,UAAU7N,EAAUke,QAAQ8Y,YAAcppB,KAAKC,UAAUlQ,KAAKE,MAAMqgB,QAAQ8Y,UACpMmsF,EAAsBnjH,EAAUmc,cAAgBxe,KAAKE,MAAMse,cAAgBnd,OAAOqQ,OAAOrP,EAAUmc,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,SAAWF,OAAOqQ,OAAO1R,KAAKE,MAAMse,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,OAEjPwwK,GAAgB/L,GAAgB8L,GAAmBD,GAAkBxgJ,GAAkBm0F,GAAuB0B,GAAwBwK,EAExI1xH,KAAKsI,aAAa,CAChB2gK,OAAM,GACN,WACA5oK,EAAK8wB,eAEE9gB,GAAiBC,KAEpB05G,EAAW3oH,OAAOuB,OAAO,GAAG5C,KAAKoC,OACvCpC,KAAKsI,aAAa,CAChB2gK,OAAM,GACN,WACA5oK,EAAK4H,SAAS+hH,6IA2MZ,IAAAx/G,EAAAxK,KACFsxB,EAAS,KACPzB,EAAY7vB,KAAKE,MAAM2vB,UAEvBtnB,OADsCinB,IAAzBK,EAAUphB,YAA4BohB,EAAUphB,WACtC+iK,EAAA1vK,EAAAC,cAACwrK,EAAA,EAAD,CAAQ7lK,KAAK,SAAa,KAEjD+pB,EAAa,CACjB9rB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACN5E,UAAU,CACRI,eAAe,eAKfyuB,EAAU3vB,OAASmB,OAAOC,KAAKuuB,EAAU3vB,OAAOqB,QAClDF,OAAOC,KAAKuuB,EAAU3vB,OAAOsB,QAAQ,SAAAC,GACnCgwB,EAAWhwB,GAAKouB,EAAU3vB,MAAMuB,KAKhCouB,EAAUkjF,WAAa1xG,OAAOC,KAAKuuB,EAAUkjF,WAAWxxG,QAC1DF,OAAOC,KAAKuuB,EAAUkjF,WAAWvxG,QAAQ,SAAAC,GACH,oBAAzBouB,EAAUkjF,UAAUtxG,KAC7BgwB,EAAWhwB,GAAKouB,EAAUkjF,UAAUtxG,GAAG+I,EAAKtK,UAQlD,IAAMY,EAAe2wB,GAAcvf,SAASuf,EAAW3wB,eAAe,EAAI2wB,EAAW3wB,aAAe,EAC9FD,EAAW4wB,GAAcvf,SAASuf,EAAW5wB,WAAW,EAAI4wB,EAAW5wB,SAAab,KAAKE,MAAM4C,SAAW,EAAI,EAC9G/B,EAAe0wB,GAAcvf,SAASuf,EAAW1wB,eAAe,EAAI0wB,EAAW1wB,aAAiBf,KAAKE,MAAM4C,SAAW,EAAI,EAG1H9B,EAAYywB,EAAWzwB,UAG7B,cAFOywB,EAAWzwB,UAEV6uB,EAAUpoB,MAChB,IAAK,eACH,IAAMxD,EAAiBjE,KAAKD,cAAc6V,gBAAgB,CAAC,QAAS,YAAa5V,KAAKE,MAAMkD,WACtF0K,EAAe7J,GAAkBA,EAAe8J,KAAO9J,EAAe8J,KAAvD,GAAAtK,OAAiEzD,KAAKE,MAAMkD,SAA5E,QACrBkuB,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,CAAOyL,IAAG,oBAAA5K,OAAsBqK,IAAoB2jB,IAExD,MACA,IAAK,oBAEH,GADAH,EAAS,KACLtxB,KAAKoC,MAAM4vK,mBAAqBhyK,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM4vK,mBAAmBv8J,GAAG,GAAG,CAC/F,IAAMw8J,EAAWjyK,KAAKD,cAAca,iBAAiBZ,KAAKoC,MAAM4vK,kBAAmB,EAAGlxK,EAAc,GAAnF,IAAA2C,OAA4FzD,KAAKE,MAAMgD,OACxHouB,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAAD,CACEx8I,UAAW,MACXC,QAAO,oDAAAvtB,OAAsDwuK,IAE7DT,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,CAAOyL,IAAG,2BAAiCojB,KAInD,MACA,IAAK,cACHH,EAAS,KACT,IAAI4gJ,EAAY,KACZC,EAAa,KAEZnyK,KAAKoC,MAAMgwK,aAGVpyK,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAMgwK,aAAa38J,GAAG,IACtDy8J,EAAY,eACZC,EAAa,iBAEbD,EAAY,aACZC,EAAa,cAEf7gJ,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAAD,CACEv+J,GAAI,EACJD,GAAI,EACJ7H,aAAc,EACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAiBkjK,GAEjBX,EAAA1vK,EAAAC,cAACwrK,EAAA,EAAD,CACE7nK,SAAU,EACVC,WAAY,EACZC,MAAO,SAENssK,KAvBP5gJ,EAAS/oB,EA4Bb,MACA,IAAK,kBACH,IAAMu1G,EAAiB99G,KAAKD,cAAc6V,gBAAgB,CAAC,WAAW5V,KAAKE,MAAMqD,UACjF+tB,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,CACEnB,EAAG,MACHyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAe,QAAAxL,OAAUq6G,EAAel4G,MAAM6uI,IAAI9mI,KAAK,KAAxC,UACX3M,GAEJwwK,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,GACM6uB,EADN,CAEE1T,MAAO,SACPtW,KAAMq2G,EAAe/vG,KACrBnI,MAAOk4G,EAAel4G,MAAM44G,QAIpC,MACA,IAAK,YACH,IAAMr7G,EAAcnD,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS5V,KAAKE,MAAMgD,MAAM2S,gBACpFiwG,EAAY3iH,GAAeA,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAsEzD,KAAKE,MAAMgD,MAAjF,QAClBouB,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,CAAOyL,IAAKy3G,GAAer0F,IAE/B,MACA,IAAK,SACH,IAAM4gJ,EAAyC,oBAApBxiJ,EAAUjiB,MAAuBiiB,EAAUjiB,MAAM5N,KAAKE,OAAS2vB,EAAUjiB,MACpG0jB,EACEkgJ,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,GAAY6uB,EAAZ,CAAwB3rB,QAAS,kBAAM2rB,EAAWxsB,YAAYuF,EAAKtK,UAAUmyK,GAEjF,MACA,IAAK,SACH/gJ,EACEkgJ,EAAA1vK,EAAAC,cAACuwK,EAAA,EAAD,CACEn2E,IAAKn8F,KAAKE,MACV2vB,UAAWA,IAGjB,MACA,IAAK,cACHyB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAMmwK,aAAevyK,KAAKoC,MAAMmwK,YAAYhnG,WAAavrE,KAAKoC,MAAMmwK,YAAYjnG,QAChHkmG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAMmwK,YAAYjnG,SACvC1wC,MAAOxtB,WAAWpN,KAAKoC,MAAMmwK,YAAYhnG,WACzC8+C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAA0+B,GAAA,IAAG6qF,EAAH7qF,EAAG6qF,WAAH7qF,EAAe7E,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,kBACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAMipE,iBAAmBrrE,KAAKoC,MAAMipE,gBAAgBP,eAAiB9qE,KAAKoC,MAAMipE,gBAAgBJ,YAChIumG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAMipE,gBAAgBJ,aAC3CrwC,MAAOxtB,WAAWpN,KAAKoC,MAAMipE,gBAAgBP,eAC7Cu/C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAA2+B,GAAA,IAAG4qF,EAAH5qF,EAAG4qF,WAAH5qF,EAAe9E,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,wBACH,GAAIvI,KAAKoC,MAAMytB,EAAUpoB,MAAM,CAC7B,IAAIgrK,EAAiB,IAAAhvK,OAAIzD,KAAKE,MAAMgD,MAAf,MAAAO,OAAyBzD,KAAKoC,MAAMytB,EAAUpoB,MAAMykE,QAAQ5+D,QAAQzM,GAAU,MACnGQ,OAAOC,KAAKtB,KAAKoC,MAAMytB,EAAUpoB,MAAMukE,WAAWxqE,QAAS,SAAAmsE,GACzD,IAAM9iE,EAAQL,EAAKpI,MAAMytB,EAAUpoB,MAAMukE,UAAU2B,GAAUrgE,QAAQzM,GACrE4xK,EAAellK,KAAf,GAAA9J,OAAuBkqE,EAAvB,MAAAlqE,OAAoCoH,EAApC,QAGF4nK,EAAiBA,EAAe9kK,KAAK,MACrC,IAAM2/D,EAAettE,KAAKoC,MAAMytB,EAAUpoB,MAAM6lE,aAE9Ch8C,EADEjwB,OAAOC,KAAKtB,KAAKoC,MAAMytB,EAAUpoB,MAAMukE,WAAWzqE,OAAO,EAEzDiwK,EAAA1vK,EAAAC,cAAC2wK,EAAA,EAAD,CACEzhJ,aAAc,CACZF,UAAU,SAEZvrB,KAAM8nE,EACN3uD,UAAW8S,EACXT,QAASyhJ,IAIHjB,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,GAAU6uB,EAAV,CAAsBliB,wBAAyB,CAACC,OAAO89D,WAGnEh8C,OAAyC9B,IAA/BxvB,KAAKoC,MAAMytB,EAAUpoB,MAAsBc,EAAS,KAElE,MACA,IAAK,WACH+oB,EAAStxB,KAAKoC,MAAMmuK,aAClBiB,EAAA1vK,EAAAC,cAAC4wK,EAAA,EAADtxK,OAAAuB,OAAA,GACM5C,KAAKoC,MAAM6uK,cADjB,CAEExwK,KAAMT,KAAKoC,MAAM4uK,aACjBzmK,KAAMvK,KAAKoC,MAAMmuK,aACjBtvK,MAAOjB,KAAKoC,MAAMyuK,cAClBxrK,OAAQrF,KAAKoC,MAAM0uK,kBAEnBvoK,EACN,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACH+oB,EAAStxB,KAAKoC,MAAMytB,EAAUpoB,OAASpG,OAAOC,KAAKtB,KAAKoC,MAAMytB,EAAUpoB,OAAOlG,OAAO,EACpFiwK,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,CACE3B,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZyuB,EAAUzP,aAGZ/e,OAAOC,KAAKtB,KAAKoC,MAAMytB,EAAUpoB,OAAOxE,IAAK,SAAC0qE,EAAS40B,GACrD,IAAM73D,EAAiBlgC,EAAKpI,MAAMytB,EAAUpoB,MAAMkmE,GAClD,OACE6jG,EAAA1vK,EAAAC,cAAC6wK,EAAA,EAAD,CACE1vK,MAAOyqE,EACPxqE,YAAaunC,EACb5mC,IAAG,SAAAL,OAAW8+F,GACd1yE,UAAW,CACTpoB,KAAK,cACLwpB,aAAa,CACXD,QAAQ,GAAAvtB,OAAGkqE,IAAYnjE,EAAKpI,MAAMw8F,+BAAiCp0F,EAAKpI,MAAMw8F,8BAA8BjxB,GAArF,KAAAlqE,OAAsG+G,EAAKpI,MAAMw8F,8BAA8BjxB,GAAUrgE,QAAQzM,GAAjK,KAAA4C,OAA8KinC,EAAepU,sBAA7L,yBAA4O,KAErQp2B,MAAM,CACJgH,aAAa,MACb+G,SAAS,WACT5I,OAAO,CAAC,QAAQ,OAChBI,GAAG88F,EAAgB,QAAU,EAC7Br0F,OAAO7M,OAAOqQ,OAAOlH,EAAKpI,MAAMytB,EAAUpoB,OAAOlG,OAAOghG,EACxDpzF,UAAU,CAAC,kCAAkC,0CAQzDnP,KAAKoC,MAAMytB,EAAUpoB,MACvB+pK,EAAA1vK,EAAAC,cAACwrK,EAAA,EAAS97I,EAAV,KACElpB,EACN,MACA,QACE,IAAIsqK,EAAiB7yK,KAAKoC,MAAMytB,EAAUpoB,MACtCzH,KAAKoC,MAAMytB,EAAUpoB,OAASzH,KAAKoC,MAAMytB,EAAUpoB,MAAMqrK,eAC3DD,EAAiB7yK,KAAKoC,MAAMytB,EAAUpoB,MAAM6F,QAAQzM,IAGtDywB,EAAStxB,KAAKoC,MAAMytB,EAAUpoB,MAC5B+pK,EAAA1vK,EAAAC,cAACwrK,EAAA,EAADlsK,OAAAuB,OAAA,GAAU6uB,EAAV,CAAsBliB,wBAAyB,CAACC,OAAOqjK,WACrBrjJ,IAA/BxvB,KAAKoC,MAAMytB,EAAUpoB,MAAsBc,EAAS,KAG7D,OAAO+oB,SA1hBgBpvB,aA8hBZ8B,sGCviBTo9G,mLAGF,OACE95G,EAAAxF,EAAAC,cAACyF,EAAA,EAADnG,OAAAuB,OAAA,CACEgD,MAAO,OACPmhB,OAAQ,SACRC,IAAK,gCACDhnB,KAAKE,OAERF,KAAKE,MAAM2b,iBAVE3Z,aAgBPk/G,8nkBChBT4D,mLACK,IAAAngH,EAAA7E,KACDE,EAAQ,CACZyF,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YACNuI,UAAU,SACV0lG,WAAW,WAIT7zG,KAAKE,OAASmB,OAAOC,KAAKtB,KAAKE,OAAOqB,QACxCF,OAAOC,KAAKtB,KAAKE,OAAOsB,QAAQ,SAAAC,GAC9BvB,EAAMuB,GAAKoD,EAAK3E,MAAMuB,KAI1B,IAAMsxK,EAAmB/yK,KAAKE,MAAMw7G,UAAY17G,KAAKE,MAAMw7G,UAAYuJ,IAAQomC,GAE/E,OACE/jJ,EAAAxF,EAAAC,cAACgxK,EACK7yK,EAEHF,KAAKE,MAAM2b,iBAvBA3Z,aA6BL8iH,yKCvBT3L,6MAGJt5G,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,+IAIL,IAAM4yK,GAAW,IAAI//J,MAAOggK,cACtBvS,EAAoB1gK,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa,YACrEs9J,EAAcxS,EAAoB,IAAM,EAAE,EAChD,OACEvgJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACErrB,GAAI,EACJ3D,GAAI,SACJxB,WAAY,SACZC,cAAe,SACf2H,UAAWC,IAAOslK,OAClBp/J,gBAAiB,QACjB7N,eAAgB,cAEhB+e,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACEzwB,MAAO,EACP+N,GAAI,CAAC,EAAE,GACP5N,eAAgB,UAEhB+e,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACEzwB,MAAO,EACPoE,OAAQ,CAAC,OAAO,QAChBnE,WAAY,aACZqF,SAAU,CAAC,OAAO,QAClBnF,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBgf,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,CAAC,EAAEiyK,GAAc/xK,cAAe,SAAUkE,OAAQ,CAAC,OAAO,SACrE8a,EAAAre,EAAAC,cAAC2vB,EAAA,EAAQwzF,GAAT,CAAY/2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIoJ,GAAI,EAAGlJ,MAAO,aAAlG,aAGAua,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,EAAGE,cAAe,UAC7Bgf,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CACE35D,GAAI,CAAC,EAAE,GACP5zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB8Y,KAAM,mCAEN9G,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAlzJ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CACE35D,GAAI,CAAC,EAAE,GACP5zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB8Y,KAAM,mFAEN9G,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACuxK,EAAA,EAAD,CACE1tK,MAAO,OACP80B,GAAG,oBACH5xB,UAAWC,IAAO9C,MAElBka,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACE/rB,WAAY,EACZC,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,SAErBgS,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJlzJ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CACE35D,GAAI,CAAC,EAAE,GACP5zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB8Y,KAAM,mDAEN9G,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAlzJ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CACE35D,GAAI,CAAC,EAAE,GACP5zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZwF,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB8Y,KAAM,iEAEN9G,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF3S,GACEvgJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,CAAC,EAAEiyK,GAAc/xK,cAAe,SAAUkE,OAAQ,CAAC,OAAO,SACrE8a,EAAAre,EAAAC,cAAC2vB,EAAA,EAAQwzF,GAAT,CAAY/2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIoJ,GAAI,EAAGlJ,MAAO,aAAlG,cAGAua,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,EAAGE,cAAe,UAC7Bgf,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACuxK,EAAA,EAAD,CACE1tK,MAAO,OACP80B,GAAI,cACJ5xB,UAAWC,IAAO9C,MAElBka,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACuxK,EAAA,EAAD,CACE1tK,MAAO,OACPkD,UAAWC,IAAO9C,KAClBy0B,GAAI,yBAEJva,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACuxK,EAAA,EAAD,CACE1tK,MAAO,OACPkD,UAAWC,IAAO9C,KAClBy0B,GAAI,2BAEJva,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,6BACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAM8nF,GAAI,CAAC,EAAE,GAAIv4G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnD+e,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,sGACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,CAAC,EAAEiyK,GAAc/xK,cAAe,SAAUkE,OAAQ,CAAC,OAAO,SACrE8a,EAAAre,EAAAC,cAAC2vB,EAAA,EAAQwzF,GAAT,CAAY/2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIoJ,GAAI,EAAGlJ,MAAO,aAAlG,wBAGAua,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvjB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIE,MAAO,OAAQC,WAAY,QACvGsa,EAAAre,EAAAC,cAAA,QAAMqxK,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFlzJ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMzwB,MAAO,CAAC,EAAEiyK,GAAc/xK,cAAe,UAC3Cgf,EAAAre,EAAAC,cAAC2vB,EAAA,EAAQwzF,GAAT,CAAY/2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAa3F,SAAU,CAAC,EAAE,GAAIoJ,GAAI,EAAGlJ,MAAO,aAAlG,WAGAua,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAMvwB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1D+e,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,mCACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,4BAA4BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAEjHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,4BACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,6BAA6BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAElHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,8BACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,4BAA4BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAEjHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,mCACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,2BAA2BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAEhHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,iCACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,2BAA2BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAEhHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,gDACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,6BAA6BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,SAElHiZ,EAAAre,EAAAC,cAACoxK,EAAA,EAAD,CAASlsJ,KAAK,mCACZ9G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CAAOrjB,IAAI,+BAA+BhJ,OAAQ,QAASgZ,GAAI,CAAC,OAAO,GAAIvP,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGjI,aAAc,aAM5HiZ,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACEzwB,MAAO,EACPoE,OAAQ,CAAC,OAAO,QAChBlE,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1B+e,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACEjwB,EAAG,EACHR,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChB6N,gBAAiB,YACjB9N,cAAe,CAAC,SAAS,QAEzBgf,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACE9rB,MAAO,QACPuI,UAAW,CAAC,SAAS,aAFvB,QAIU6kK,EAJV,qBAMA7yJ,EAAAre,EAAAC,cAACuxK,EAAA,EAAD,CACE1tK,MAAO,OACP80B,GAAI,oBACJp0B,MAAO,CAAC20H,eAAe,SAEvB96G,EAAAre,EAAAC,cAAC2vB,EAAA,EAAD,CACErrB,GAAI,EACJT,MAAO,OACPuI,UAAW,CAAC,SAAS,aAHvB,+BAzOOjM,aAwPNm3G,+GC7PTk6D,mLAGF,OACEjsK,EAAAxF,EAAAC,cAAC6b,EAAA,EAAD,CACE9Z,IAAK9D,KAAKE,MAAM6Z,MAAMrX,GACtB4Y,UAAW,CACTvM,GAAG,EACHC,GAAG,EACH/N,MAAM,EACN0L,KAAM3M,KAAKE,MAAM6Z,MAAMxP,KAAKwM,QAAQ,GAAK,QAAU,MAGrDzP,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACEvG,MAAO,EACPE,cAAe,UAGbnB,KAAKE,MAAM6Z,MAAMxP,KAAKipK,YACpBlsK,EAAAxF,EAAAC,cAACyF,EAAA,EAAD,CACE4G,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WACPuI,UAAW,QAEVnO,KAAKE,MAAM6Z,MAAMxP,KAAKipK,YAG5BxzK,KAAKE,MAAM2b,kBA7BM3Z,aAoCbqxK,uGCrCTE,mLAGF,OACE1uK,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEoJ,GAAI,EACJnN,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf4D,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEonH,GAAI,EACJ9lH,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,WAEPhvB,WAAY,SACZE,eAAgB,cAGdpB,KAAKE,MAAM0F,OACXb,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEqZ,GAAI,EACJpd,MAAO,OACPoE,OAAQ,OACR6B,aAAc,MACd+H,gBAAiBjP,KAAKE,MAAM0F,QAIhCb,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEU,SAAU,EACVC,WAAY,EACZwI,UAAW,OACXvI,MAAO,YACPU,MAAO,CACLG,WAAW,SACX+6G,cAAc,eAGfxhH,KAAKE,MAAM0N,QAGhB7I,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEsB,MAAO,CACLo4G,UAAU,IACVxuF,KAAK,WAEPhvB,WAAY,SACZE,eAAgB,YAEhB2D,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEU,SAAU,EACVC,WAAY,EACZC,MAAO,WACPuI,UAAW,QACX7H,MAAO,CACLG,WAAW,UAEb8I,wBAAyB,CACvBC,OAAQxP,KAAKE,MAAM2K,kBA5DF3I,aAsEhBuxK,0HCrETxJ,mLACK,IAAAplK,EAAA7E,KAED0zK,EAAW,SAACxzK,GAAD,OACf6E,EAAAjD,EAAAC,cAACC,EAAA,EAAQqN,GAAThO,OAAAuB,OAAA,CACE+C,WAAY,CAAC,EAAE,GACfC,MAAO,YACPU,MAAO,CACLrF,MAAM,OACNwF,WAAW,UAEbf,SAAU,CAAC,OAAO,GAClBmuG,WAAY,WACR3zG,EACAA,EAAM6C,WAET7C,EAAM2b,WAIX,OACE9W,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAOjB,KAAKE,MAAMe,OAGfjB,KAAKE,MAAMw5G,MAAQ15G,KAAKE,MAAMw5G,KAAKn4G,OAAO,EACzCwD,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,UAEZ6D,EAAAjD,EAAAC,cAAC2xK,EACK1zK,KAAKE,OAEX6E,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACEsE,MAAO,CACL8I,OAAO,WAETtJ,QAAU,SAAAiB,GAAC,OAAIlC,EAAK3E,MAAM6nH,iBAAiBljH,EAAK3E,MAAM4nB,MAAMjjB,EAAK3E,MAAMw5G,QAEvE30G,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACE+uB,UAAW,MACXC,QAAS,iCAETjsB,EAAAjD,EAAAC,cAACC,EAAA,EAAD,CACEyD,GAAI,EACJgC,KAAM,OACN7B,MAAO,YACPkD,UAAWC,IAAOgC,QAClBrD,KAAO1H,KAAKE,MAAM4C,SAAW,MAAQ,aAM7CiC,EAAAjD,EAAAC,cAAC2xK,EACK1zK,KAAKE,eAtDOgC,aA+Df+nK,sIC/DT9lD,qdAMqB9hH,EAAUC,kMAKjC,OACET,EAAAC,EAAAC,cAAC4xK,EAAA,EAAD,CACE7vK,IAAK9D,KAAKE,MAAM6Z,MAAMrX,GACtB4Y,UAAW,CACTvM,GAAG,EACHC,GAAG,EACH/N,MAAM,EACN0L,KAAM3M,KAAKE,MAAM6Z,MAAMxP,KAAKwM,SAAW/W,KAAKE,MAAM6Z,MAAMxP,KAAKwM,QAAQ,GAAK,QAAU,MAGtFlV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,EACPE,cAAe,UAGbnB,KAAKE,MAAM6Z,MAAMxP,KAAKipK,YACpB3xK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoM,GAAI,EACJ1I,SAAU,EACVC,WAAY,EACZC,MAAO,WACPuI,UAAW,QAEVnO,KAAKE,MAAM6Z,MAAMxP,KAAKipK,YAG5BxzK,KAAKE,MAAM2b,kBArCW3Z,aA4ClBiiH,iKCzCT4B,6MAEJ3jH,MAAQ,CACNyqD,KAAK,EACL+mH,YAAY,EACZnJ,WAAW,KACXoJ,cAAc,QAIhB9zK,cAAgB,OAkChB+zK,YAAc,WAAe,IAAdjnH,EAAc/5C,UAAAvR,OAAA,QAAAiuB,IAAA1c,UAAA,GAAAA,UAAA,GAAT,KAClB+5C,EAAOA,GAAchoD,EAAKzC,MAAMyqD,KAEhC,IAAMknH,EAAYlvK,EAAK3E,MAAMo7F,KAAK/5F,OAC5BkpK,EAAaz4J,KAAKwF,KAAKu8J,EAAUlvK,EAAKzC,MAAMwxK,aAE9CC,EAAgB,GAChBhvK,EAAK3E,MAAM+/H,kBACbp7H,EAAK3E,MAAMo7F,KAAK95F,QAAQ,SAAC26F,EAAKrvF,GACxBA,IAAK+/C,EAAK,GAAGhoD,EAAKzC,MAAMwxK,aAAgB9mK,GAAI+/C,EAAK,GAAGhoD,EAAKzC,MAAMwxK,YAAa/uK,EAAKzC,MAAMwxK,aACzFC,EAActmK,KAAK4uF,KAIvB03E,EAAgBhvK,EAAK3E,MAAMo7F,KAG7Bz2F,EAAKoD,SAAS,CACZwiK,aACAoJ,8FAlDE7zK,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK8zK,mMAGkBzxK,EAAWC,iFAClCtC,KAAKI,cAEe6P,KAAKC,UAAU7N,EAAUi5F,QAAUrrF,KAAKC,UAAUlQ,KAAKE,MAAMo7F,8BAG/Et7F,KAAKiI,SAAS,CACZ4kD,KAAK,GACL,WACAxsD,EAAKyzK,mCAEA,UAEWxxK,EAAUuqD,OAAS7sD,KAAKoC,MAAMyqD,MAEhD7sD,KAAK8zK,oJA2BA/sK,GACHA,GACFA,EAAE6H,iBAEJ,IAAMi+C,EAAO76C,KAAKqE,IAAI,EAAErW,KAAKoC,MAAMyqD,KAAK,GACxC7sD,KAAKiI,SAAS,CACZ4kD,0CAIK9lD,GACHA,GACFA,EAAE6H,iBAEJ,IAAMi+C,EAAO76C,KAAKC,IAAIjS,KAAKoC,MAAMqoK,WAAWzqK,KAAKoC,MAAMyqD,KAAK,GAAG7sD,KAAK8zK,YAAYjnH,GAChF7sD,KAAKiI,SAAS,CACZ4kD,0CAIK,IAAAriD,EAAAxK,KAEP,OACEwI,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAMtL,GAAG,wBAAwBzB,MAAO,EAAGE,cAAe,UACxDqH,EAAA1G,EAAAC,cAACqsK,EAAA,EAAD/sK,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEE2C,KAAM7C,KAAKE,MAAM2C,KACjBC,SAAU9C,KAAKE,MAAM4C,YAEvB0F,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAMtL,GAAG,cAAcvB,cAAe,UAElCnB,KAAKoC,MAAMyxK,cAAc5wK,IAAK,SAACk5F,EAAI63E,GACjC,OACExrK,EAAA1G,EAAAC,cAACkyK,EAAA,EAAD5yK,OAAAuB,OAAA,CACEu5F,IAAKA,GACD3xF,EAAKtK,MAFX,CAGE4D,IAAG,SAAAL,OAAWuwK,GACdjwK,eAAgBmwK,IAChB1wK,MAAK,aAAAC,OAAeuwK,GACpBnwK,OAAM,cAAAJ,OAAgBuwK,SAO9Bh0K,KAAKE,MAAM+/H,mBACTz3H,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CACE3I,OAAQ,OACRnE,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBsB,GAAI,gCAEJ8F,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAMqQ,GAAI,GACR7V,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAMqQ,GAAI,EAAGvY,QAAU,SAAAiB,GAAC,OAAIyD,EAAK2gK,SAASpkK,KACxCyB,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CACEvG,KAAM,oBACNC,KAAM,MACN9B,MAAQ5F,KAAKoC,MAAMyqD,KAAK,EAAI,cAAgB,mBAGhDrkD,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAMlI,QAAU,SAAAiB,GAAC,OAAIyD,EAAK4gK,SAASrkK,KACjCyB,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CACEvG,KAAM,qBACNC,KAAM,MACN9B,MAAQ5F,KAAKoC,MAAMyqD,KAAK7sD,KAAKoC,MAAMqoK,WAAa,cAAgB,oBAItEjiK,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CAAM9M,WAAY,UAChBsH,EAAA1G,EAAAC,cAACiM,EAAA,EAAD,CACEtI,SAAU,EACVC,WAAY,EACZC,MAAO,YAHT,QAKQ5F,KAAKoC,MAAMyqD,KALnB,OAK6B7sD,KAAKoC,MAAMqoK,sBA/I/BvoK,aA0JV6jH,iKC/FAouD,6MArDbp0K,cAAgB,OAqBhBq0K,MAAQ,WAENvvK,EAAK9E,cAAc0f,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,UACbF,WAAYva,EAAK3E,MAAMw7J,SAGzB,IAAM4J,EAAItzJ,KAAKC,IAAIwT,OAAOw+I,WAAW,KAE/BvtJ,GAAK+O,OAAOw+I,WAAWqB,GAAG,EAEhC7/I,OAAO+xD,KAAP,yCAAA/zE,OAAqDoB,EAAK3E,MAAM4+G,OAAQ,SAAxE,8CAAAr7G,OADU,IACV,UAAAA,OAAyIiT,EAAzI,WAAAjT,OAAoJ6hK,EAApJ,YAAA7hK,OAHU,kFA5BNzD,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACP,OACI4I,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CACE3B,aAAc,EACdC,UAAW,UACXo3G,cAAe,QACfz4G,QAAU,SAAAiB,GAAO1G,EAAK+zK,UAEtBxrK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAM1H,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEwH,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAKC,UAAWC,IAAOunB,cACvB1nB,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAO,QAASD,WAAY,EAAGF,GAAI,GAAKzF,KAAKE,MAAMsF,KAAOxF,KAAKE,MAAMsF,KAAO,kBAjD7DtD,gCCE3B08G,6MAGJ7+G,cAAgB,OAqBhB41G,iDAAa,SAAAl0F,EAAO3P,GAAP,OAAA2gB,EAAA3wB,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,WACW5M,EAAK9E,cAAc6rD,mBAEvB8B,UAAUC,OAAO/H,OAAO9xB,QAH/B,CAAAnS,EAAAlQ,KAAA,eAAAkQ,EAAAlQ,KAAA,EAIH5M,EAAK9E,cAAc0f,yBAAyB,CAChDN,cAAe,QACfG,YAAaxN,EACbsN,WAAY,eAPL,OASTva,EAAK3E,MAAMy1G,aATFh0F,EAAAlQ,KAAA,eAWT5M,EAAK3E,MAAMy1G,aAXF,wBAAAh0F,EAAAhP,SAAA8O,EAAAzhB,0IAnBPA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACD8+G,EAAQr5F,OAAO4uJ,OAAOr0K,KAAKE,MAAM4+G,OACjCw1D,EAAa,CAAC9kK,OAAQxP,KAAKE,MAAMsF,MACvC,OACEoD,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAOmwG,OAAQh5G,KAAKE,MAAM84G,QACxBpwG,EAAA9G,EAAAC,cAAC46G,EAAA,EAAD,CAAWzD,UAAWl5G,KAAKE,MAAMy1G,YAE7B31G,KAAKE,MAAM2+G,iBACXj2G,EAAA9G,EAAAC,cAACwyK,EAAAzyK,EAAD,CACEwE,MAAO,CAAE2H,SAAU,QAAQC,OAAS,MACpCm8I,KAAK,EACLmqB,SAAS,EACTvzK,MAAOwkB,OAAOw+I,WACd5+J,OAAQogB,OAAOy+I,cAGnBt7J,EAAA9G,EAAAC,cAAC46G,EAAA,EAAUxD,OAAX,CAAkBrxF,MAAO9nB,KAAKE,MAAM4nB,MAAO/Z,KAAM/N,KAAKE,MAAM6N,OAC5DnF,EAAA9G,EAAAC,cAAC46G,EAAA,EAAUvD,KAAX,KACExwG,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMiG,GAAI,EAAG7N,MAAO,EAAGE,cAAe,SAAU6H,GAAI,QAClDJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMjD,MAAO,YAAauI,UAAW,SAAUzI,SAAU,EAAG0I,GAAI,EAAGmB,wBAAyB+kK,KAE9F1rK,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMuF,GAAI,EAAGjN,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EwH,EAAA9G,EAAAC,cAAC0yK,EAAD,CAAoB31D,MAAOA,EAAOt5G,KAAM,YAAak2J,OAAQ,eAC7D9yJ,EAAA9G,EAAAC,cAAC8G,EAAA,EAAD,CAAMmT,GAAI,EAAGlW,QAAU,SAAAiB,GAAC,OAAI1G,EAAKs1G,WAAW,6BAA8B9vG,WAAY,QAAtF,uCA9DWyzG,IAAMp3G,WAuEhB08G,+IC9ETs1D,6MAEJ9xK,MAAQ,KAGRrC,cAAgB,OAChB6H,oBAAqB,6EAGf5H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAK4H,oBAAqB,yPAI1B5H,KAAKI,gbAOkBiC,EAAWC,mEAClCtC,KAAKI,kJAGC,IAAAC,EAAAL,KACA6vB,EAAY7vB,KAAKE,MAAM2vB,UAEvB4B,EAAa,CACjB9rB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YAIJiqB,EAAU3vB,OAASmB,OAAOC,KAAKuuB,EAAU3vB,OAAOqB,QAClDF,OAAOC,KAAKuuB,EAAU3vB,OAAOsB,QAAQ,SAAAC,GACnCgwB,EAAWhwB,GAAKouB,EAAU3vB,MAAMuB,KAKhCouB,EAAUkjF,WAAa1xG,OAAOC,KAAKuuB,EAAUkjF,WAAWxxG,QAC1DF,OAAOC,KAAKuuB,EAAUkjF,WAAWvxG,QAAQ,SAAAC,GACH,oBAAzBouB,EAAUkjF,UAAUtxG,KAC7BgwB,EAAWhwB,GAAKouB,EAAUkjF,UAAUtxG,GAAGpB,EAAKH,UAKlD,IAAI6xB,EAAkB,KAClB2iJ,GAAuB,EACrBvoC,EAAYt8G,EAAUpvB,KACtBk0K,EAAY9kJ,EAAU9pB,KACxBisB,EAAc2iJ,EAAY30K,KAAKD,cAAckyB,aAAa0iJ,EAAU30K,KAAKE,MAAMi8F,KAAO,KAE1F,OAAQgwC,GACN,IAAK,QACHp6G,EAAkBG,IAClBT,EAAWpjB,IAAM2jB,EACnB,MACA,IAAK,SACHA,EAAchyB,KAAKD,cAAc8R,MAAMmgB,GAAazN,WACpDwN,EAAkBjyB,IAClB2xB,EAAWlxB,OAASyxB,EACtB,MACA,IAAK,OACHD,EAAkB5rB,IACpB,MACA,IAAK,OACH4rB,EAAkBI,IAClBV,EAAWhqB,KAAOuqB,EACpB,MACA,IAAK,SACHD,EAAkB,SAAC7xB,GAAD,OAChBsI,EAAA1G,EAAAC,cAAC6yK,EAAA,EAAD,CACEnzK,EAAG,MACHyF,aAAc,MACdhG,WAAY,SACZE,eAAgB,SAChB6N,gBAAiB/O,EAAMsxB,SAEvBhpB,EAAA1G,EAAAC,cAAC6yK,EAAA,EAAD,CACE72J,MAAO,SACPtW,KAAMuqB,EACNpsB,MAAO1F,EAAM0F,MACb8B,KAAMrH,EAAKH,MAAM4C,SAAW,MAAQ,YAI1C2uB,EAAWhqB,KAAOuqB,EACpB,MACA,IAAK,SACHD,EAAkB+wF,IAClB4xD,GAAuB,EACvB1iJ,EAAcnC,EAAUjiB,OAAS6jB,EAAW7jB,MAC5C6jB,EAAW3rB,QAAQ,kBAAM2rB,EAAWxsB,YAAY5E,EAAKH,QACvD,MACA,QACE6xB,EAAkB3rB,IAClBsuK,GAAuB,EAI3B,IAAK1iJ,EACH,OAAO,KAIT,GAAI2iJ,EAAU,CACZ,IAAME,EAAkBxzK,OAAOqQ,OAAOijK,GAAW7/J,MACjD,GAAI9U,KAAKE,MAAMi8F,IAAX,GAAA14F,OAAkBoxK,EAAlB,UAA0C,CAC5C,IAAMC,EAAmB90K,KAAKE,MAAMi8F,IAAX,GAAA14F,OAAkBoxK,EAAlB,UAErBC,GAAoBzzK,OAAOC,KAAKwzK,GAAkBvzK,QACpDF,OAAOC,KAAKwzK,GAAkBtzK,QAAQ,SAAAC,GACpCgwB,EAAWhwB,GAAKqzK,EAAiBrzK,MAMzC,OAAOswB,EAAmB2iJ,EAAwBlsK,EAAA1G,EAAAC,cAACgwB,EAAoBN,EAAaO,GAAmCxpB,EAAA1G,EAAAC,cAACgwB,EAAoBN,GAAoB,YAjI1IvvB,aAqIXgyK,sGCvITvxD,mLAIF,IAAM7/G,EAA0C,qBAAxB9C,KAAKE,MAAM4C,UAA2B9C,KAAKE,MAAM4C,SACnEkb,EAAQhe,KAAKE,MAAMs4G,SAAYzzG,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CAAO3B,MAAO,OAAQoN,IAAKrO,KAAKE,MAAMs4G,UAAcx4G,KAAKE,MAAM+d,aAAoBje,KAAKE,MAAMqF,SAAYR,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CAAM6E,KAAMzH,KAAKE,MAAMqF,UAAcvF,KAAKE,MAAMke,YAAiB,KAC1M+5F,EAAWpzG,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CAAMmJ,UAAYrL,EAAW,OAAS,SAAU4C,SAAU,EAAGC,WAAY,EAAGC,MAAO,aAAc5F,KAAKE,MAAMi4G,SAE7H,OACIpzG,EAAAjD,EAAAC,cAACiD,EAAA,EAAD3D,OAAAuB,OAAA,CACEgD,MAAO,QACPsB,aAAc,EACd8H,GAAKlM,EAAW,CAAC,EAAE,GAAK,EACxBiM,GAAKjM,EAAW,EAAI,CAAC,EAAE,GACvBgM,GAAKhM,EAAW,EAAI,CAAC,EAAE,GACvBkG,GAAKlG,EAAW,EAAI,CAAC,EAAE,GACvBgD,QAAU9F,KAAKE,MAAM+E,YACrBI,OAASvC,EAAW,OAAS,CAAC,QAAQ,SACtCqE,UAAWnH,KAAKE,MAAM2d,SAAW,cAAgB,SACjD0gG,cAAev+G,KAAKE,MAAM2d,SAAW,cAAgB,SACrD5c,MAAOjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAS6B,EAAW,OAAS,CAAC,QAAQ,SAC3EwD,MAAOtG,KAAKE,MAAM0zJ,YAAc5zJ,KAAKE,MAAM0zJ,YAAe9wJ,EAAW,CAAC1B,eAAe,cAAgB,MACjGpB,KAAKE,MAAMiF,aAEfJ,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAAuwG,SAAA,KAEIryG,KAAKE,MAAM+lJ,OACTlhJ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEiJ,SAAU,WACV/G,aAAc,OACd+H,gBAAkBjP,KAAKE,MAAM+lJ,MAAMz0H,QAAUxxB,KAAKE,MAAM+lJ,MAAMz0H,QAAU,OACxElrB,MAAQxD,EAAW,CAAC2J,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpEwC,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEXhK,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CACEW,WAAY,EACZD,SAAU,OACVE,MAAQ5F,KAAKE,MAAM+lJ,MAAMrgJ,MAAQ5F,KAAKE,MAAM+lJ,MAAMrgJ,MAAQ,QAE3D5F,KAAKE,MAAM+lJ,MAAMzgJ,OAKxBT,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CAAM7D,cAAgB2B,EAAW,MAAQ,SAAU1B,eAAiB0B,EAAW,aAAe,SAAU5B,WAAY,UAClH6D,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CAAM/D,MAAQ6B,EAAW,OAAS,EAAIub,GAAKvb,EAAW,EAAI,EAAI1B,eAAiB0B,EAAW,aAAe,UACrG9C,KAAKE,MAAMklJ,YAAwC,QAA1BplJ,KAAKE,MAAMklJ,WAAuBjtC,EAAUn6F,GAEzEjZ,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CAAM/D,MAAQ6B,EAAW,OAAS,EAAI3B,cAAe,SAAUC,eAAiB0B,EAAW,aAAe,UACtG9C,KAAKE,MAAMklJ,YAAwC,QAA1BplJ,KAAKE,MAAMklJ,WAAuBpnI,EAAQm6F,EAEnEn4G,KAAKE,MAAM4oI,YAAc9oI,KAAKE,MAAM4oI,WAAWn9E,MAAM,MAAM1oD,IAAI,SAAC0H,EAAEmC,GAKhE,OAHIA,IACFnC,EAAK5F,EAAAjD,EAAAC,cAAA,aAAQ4I,IAGb5F,EAAAjD,EAAAC,cAACiD,EAAA,EAAD,CAAMlB,IAAG,cAAAL,OAAgBqJ,GAAK+mG,WAAY,MAAO1lG,UAAYrL,EAAW,OAAS,SAAU8C,MAAO,WAAYD,WAAY,EAAGD,SAAU,GAAIiF,gBA1DvIzI,aAqEXygH,sGCrET9F,mLAEF,IAAM13G,EAAc9D,OAAOuB,OAAO,CAChC3B,MAAM,EACN0E,WAAW,EACXN,OAAO,OACPK,SAAS,CAAC,EAAE,GACZyJ,UAAU,KACVjI,aAAa,EACbC,UAAU,QACVnH,KAAKE,MAAMiF,aAEb,OACGmC,EAAAxF,EAAAC,cAACyF,EAAA,EAADnG,OAAAuB,OAAA,GACKuC,EADL,CAECW,QAAS9F,KAAKE,MAAM+E,cAEnBjF,KAAKE,MAAM2b,iBAjBM3Z,aAuBX26G,uPCbTlB,6MAEJv5G,MAAQ,CACN6mK,OAAM,KAIRlpK,cAAgB,OAChB6H,oBAAqB,IAyDrBupB,+BAAY,SAAA1P,IAAA,IAAA2uJ,EAAAr8J,EAAA9L,EAAA4nB,EAAA4B,EAAA82C,EAAA1nE,EAAAk0K,EAAAzjJ,EAAAy7C,EAAA6xB,EAAAnsF,EAAAwB,EAAAiuB,EAAAlgB,EAAAytD,EAAAD,EAAA/vC,EAAA6xC,EAAAD,EAAA3xC,EAAAvM,EAAAk4C,EAAAw5B,EAAAt5B,EAAAD,EAAA/3C,EAAAzO,EAAAwqD,EAAA0lG,EAAAzlG,EAAA0lG,EAAAlwJ,EAAA8P,EAAAqgJ,EAAApqG,EAAAsG,EAAAnG,EAAAmlC,EAAAvpC,EAAA6/B,EAAAjkE,EAAAk9D,EAAAw1E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAhF,GAAAl9I,GAAAtD,GAAAs3B,GAAA1wC,GAAA7J,GAAAymH,GAAA78G,GAAAJ,GAAAk/J,GAAA3+J,GAAA4+J,GAAA7E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAyE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAvwK,GAAAy+J,GAAA1xJ,UAAA,OAAA7B,EAAAnP,EAAAwP,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,UAAM2+J,EAAN5L,GAAAjjK,OAAA,QAAAiuB,IAAAg1I,GAAA,GAAAA,GAAA,GAAgB,MAItB3/J,EAAK+C,oBAAuB/C,EAAK3E,MAAMgD,OAAU2B,EAAK3E,MAAMiD,aAAgB0B,EAAK3E,MAAMgnH,qBAJjF,CAAAvlG,EAAAlQ,KAAA,eAAAkQ,EAAAe,OAAA,SAKD,MALC,UAQJ3O,EAAyC,SAAhClP,EAAK3E,MAAM8T,iBAEpB/L,EAAyB,OAAdmoK,EACXvgJ,EAAYhrB,EAAK3E,MAAM2vB,UACxBugJ,IACHA,EAAYvgJ,EAAUpoB,MAGlBgqB,EAAa5B,EAAU3vB,MACvBqoE,EAAkD,qBAA5B1jE,EAAK3E,MAAMqoE,cAA+B1jE,EAAK3E,MAAMqoE,aAE3E1nE,EAAW4wB,GAAcA,EAAW5wB,SAAW4wB,EAAW5wB,SAAagE,EAAK3E,MAAM4C,SAAW,EAAI,EACjGiyK,EAAmBlwK,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS/Q,EAAK3E,MAAMgD,MAAM2S,gBAE3Fyb,EAAS,MACTzsB,EAAK3E,MAAMgD,MAvBL,CAAAye,EAAAlQ,KAAA,UAAAkQ,EAAAwS,GAwBAi8I,EAxBAzuJ,EAAAlQ,KAyBD,iBAzBCkQ,EAAAwS,GAAA,GAiCD,cAjCCxS,EAAAwS,GAAA,GAyCD,eAzCCxS,EAAAwS,GAAA,GAqDD,QArDCxS,EAAAwS,GAAA,GA6DD,oBA7DCxS,EAAAwS,GAAA,GAyED,eAzECxS,EAAAwS,GAAA,GAiFD,qBAjFCxS,EAAAwS,GAAA,GAyFD,kCAzFCxS,EAAAwS,GAAA,GA8GD,6BA9GCxS,EAAAwS,GAAA,GAmID,aAnICxS,EAAAwS,GAAA,GA2ID,gBA3ICxS,EAAAwS,GAAA,GAoKD,yBApKCxS,EAAAwS,GAAA,GA4LD,oBA5LCxS,EAAAwS,GAAA,GAqND,sBArNCxS,EAAAwS,GAAA,GA6ND,UA7NCxS,EAAAwS,GAAA,IAsOD,SAtOCxS,EAAAwS,GAAA,IA8OD,sBA9OCxS,EAAAwS,GAAA,IAuPD,iBAvPCxS,EAAAwS,GAAA,IAgQD,QAhQCxS,EAAAwS,GAAA,IA4QD,WA5QCxS,EAAAwS,GAAA,IAkTD,aAlTCxS,EAAAwS,GAAA,IAiUD,aAjUCxS,EAAAwS,GAAA,IAgVD,qBAhVCxS,EAAAwS,GAAA,IAgWD,QAhWCxS,EAAAwS,GAAA,IAoXD,oBApXCxS,EAAAwS,GAAA,IA2ZD,aA3ZCxS,EAAAwS,GAAA,IAskBD,qBAtkBCxS,EAAAwS,GAAA,IAsrBD,WAtrBCxS,EAAAwS,GAAA,6BAAAxS,EAAAlQ,KAAA,GA0BW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GA1BlH,eA0BJj3C,EA1BI3P,EAAApN,OA2BUtM,GACZpD,EAAKyD,aAAa,CAChB03B,aAAa1O,EAAO/M,aA7BpB5C,EAAAe,OAAA,4BAkCEqqD,EAAYloE,EAAK9E,cAAc09F,kBAAkB54F,EAAK3E,MAAMiD,aAlC9Dwe,EAAAlQ,KAAA,GAmCwC5M,EAAK9E,cAAc6+F,8BAA8B/5F,EAAK3E,MAAMiD,aAnCpG,eAmCEy7F,EAnCFj9E,EAAApN,KAoCJ1P,EAAKyD,aAAa,CAChBykE,YACA6xB,kCAtCEj9E,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GA0CW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GA1ClH,eA0CJj3C,EA1CI3P,EAAApN,OA2CUtM,IACRwK,EAAa,KAC+B,qBAArC5N,EAAK3E,MAAMiD,YAAY2vI,WAA6BjuI,EAAK3E,MAAMiD,YAAY2vI,aACpFrgI,EAAa6e,EAAO/M,YAEtB1f,EAAKyD,aAAa,CAChBmK,gBAjDAkP,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAsDW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAtDlH,eAsDJj3C,EAtDI3P,EAAApN,OAuDUtM,GACZpD,EAAKyD,aAAa,CAChB0sE,IAAI1jD,EAAO/M,aAzDX5C,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAgEM5M,EAAK9E,cAAcqiC,eAAev9B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAhElF,eAAAt0D,EAAA0N,EAAApN,KA+DF2tB,EA/DEjuB,EA+DFiuB,4BAGEj6B,GAAYi6B,IACdr9B,EAAKyD,aAAa,CAChBiuK,gBAAgBr0I,EAA4B3d,aAE9C+M,EAAS4Q,GAtEPvgB,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GA0EW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GA1ElH,eA0EJj3C,EA1EI3P,EAAApN,OA2EUtM,GACZpD,EAAKyD,aAAa,CAChB+I,WAAWigB,EAAO/M,aA7ElB5C,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAkFW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAlFlH,eAkFJj3C,EAlFI3P,EAAApN,OAmFUtM,GACZpD,EAAKyD,aAAa,CAChBmM,iBAAiB6c,EAAO/M,aArFxB5C,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GA6FM5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GA7F7G,eAAAvmD,EAAAL,EAAApN,KA2FFk7D,EA3FEztD,EA2FFytD,2BACAD,EA5FExtD,EA4FFwtD,8BAGiCC,IAC7BxnE,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACNx5F,4BACAD,gCAIJl+C,EAAS,CACPm+C,4BACAD,gCA1GA7tD,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAkHM5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAlH7G,eAAA9oC,EAAA9d,EAAApN,KAgHF+8D,EAhHE7xC,EAgHF6xC,sBACAD,EAjHE5xC,EAiHF4xC,yBAG4BC,IACxBrpE,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACN33F,uBACAD,2BAIJ//C,EAAS,CACPggD,uBACAD,2BA/HA1vD,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAoIW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GApIlH,eAoIJj3C,EApII3P,EAAApN,OAqIUtM,GACZpD,EAAKyD,aAAa,CAChB21H,SAAS3sG,EAAO/M,aAvIhB5C,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GA4I0CsQ,QAAQqD,IAAI,CACxDvgB,EAAKssB,UAAU,mBACftsB,EAAK9E,cAAcukG,aAAaz/F,EAAK3E,MAAMiD,eA9IzC,eAAAu8B,EAAA/d,EAAApN,KAAA4e,EAAA9xB,OAAA6vK,EAAA,EAAA7vK,CAAAq+B,EAAA,GA4IG2rC,EA5IHl4C,EAAA,GA4ImB0xE,EA5InB1xE,EAAA,GAiJAk4C,GAAmBA,EAAgBP,eAAiBO,EAAgBJ,aAAe45B,IAE/Et5B,EAAYF,EAAgBP,cAAcz9D,MAAMw3F,GAChDv5B,EAAUD,EAAgBJ,YAAY59D,MAAMw3F,GAE9C58F,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACN39F,UACAC,cAIJj6C,EAAS,CACPg6C,UACAC,cAhKA5pD,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GAqKwDsQ,QAAQqD,IAAI,CACtEvgB,EAAK9E,cAAc2yE,cACnB7tE,EAAK9E,cAAcouE,eAAe,gBAAgBtpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAC7G1jE,EAAK9E,cAAcouE,eAAe,kBAAkBtpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,KAxK7G,eAAAh1C,EAAA5R,EAAApN,KAAAuQ,EAAAzjB,OAAA6vK,EAAA,EAAA7vK,CAAAkyB,EAAA,GAqKG+7C,EArKHxqD,EAAA,GAqKYkwJ,EArKZlwJ,EAAA,IAqK+ByqD,EArK/BzqD,EAAA,KA2KmBkwJ,GAAsB1lG,IACrC2lG,EAAmB1lG,EAAgB95D,GAAG,GAAK85D,EAAgBliE,MAAMiiE,EAAShrD,IAAI,MAAMjS,KAAK2iK,GAAsB,EAEjH/sK,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACNgM,mBACAD,uBAIJ1jJ,EAAS,CACP2jJ,mBACAD,uBAxLArzJ,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,GA6L8CsQ,QAAQqD,IAAI,CAC5DvgB,EAAK9E,cAAcouE,eAAe,MAAMtpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GACnG1jE,EAAK9E,cAAcouE,eAAe,WAAWtpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GACxG1jE,EAAK9E,cAAcouE,eAAe,aAAatpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,KAhMxG,eAAAxjD,EAAApD,EAAApN,KAAAsgB,EAAAxzB,OAAA6vK,EAAA,EAAA7vK,CAAA0jB,EAAA,GA6LCmwJ,EA7LDrgJ,EAAA,GA6LWi2C,EA7LXj2C,EAAA,IA6LyBu8C,EA7LzBv8C,EAAA,KAoMei2C,GAAiBoqG,IAC5BjqG,EAAcmG,EAAY37D,GAAG,GAAK27D,EAAY/jE,MAAM6nK,EAAU5wJ,IAAI,MAAMjS,KAAKy4D,GAAiB,EAEhG7iE,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACNh+F,cACAH,kBAIJx5C,EAAS,CACP25C,cACAH,kBAjNAnpD,EAAAe,OAAA,4BAAAf,EAAAlQ,KAAA,IAsNW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAtNlH,gBAsNJj3C,EAtNI3P,EAAApN,OAuNUtM,GACZpD,EAAKyD,aAAa,CAChBypE,kBAAkBzgD,EAAO/M,aAzNzB5C,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IA8NqB5M,EAAK9E,cAAcgwG,cAAclrG,EAAK3E,MAAMiD,YAAY4Q,GA9N7E,gBA8NEq8F,EA9NFzuF,EAAApN,KA+NAtM,GACFpD,EAAKyD,aAAa,CAChB2zF,MAAMmU,IAA0B,IAGpC9+E,EAAS8+E,EApOLzuF,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAuOW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAvOlH,gBAuOJj3C,EAvOI3P,EAAApN,OAwOUtM,GACZpD,EAAKyD,aAAa,CAChB+iC,SAAS/Z,EAAO/M,aA1OhB5C,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IA+OW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GA/OlH,gBA+OJj3C,EA/OI3P,EAAApN,OAgPUtM,GACZpD,EAAKyD,aAAa,CAChBkuK,2BAA2BppK,WAAWkkB,GAAQ,EAAI,KAAO,OACzDmlJ,kBAAkBrpK,WAAWkkB,GAAQhkB,QAAQzM,KAnP7C8gB,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAwPW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAxPlH,gBAwPJj3C,EAxPI3P,EAAApN,OAyPUtM,GACZpD,EAAKyD,aAAa,CAChBkkE,aAAap/D,WAAWkkB,GAAQhkB,QAAQzM,GACxC61K,sBAAsBtpK,WAAWkkB,GAAQ,EAAI,KAAO,SA5PpD3P,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAiQW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAjQlH,gBAiQJj3C,EAjQI3P,EAAApN,OAkQUtM,IACR4+D,EAAW,KAC+B,qBAAnChiE,EAAK3E,MAAMiD,YAAY0vI,SAA2BhuI,EAAK3E,MAAMiD,YAAY0vI,WAClFhsE,EAAWz5D,WAAWkkB,GAAQhkB,QAAQzM,IAExCgE,EAAKyD,aAAa,CAChBu+D,cAxQAllD,EAAAe,OAAA,0BA6QA7d,EAAK3E,MAAMiD,YAAY44B,YAAal3B,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,YA7QrE,CAAAhkC,EAAAlQ,KAAA,iBA8QIi1F,EAAiBrlG,OAAOuB,OAAO,GAAGiC,EAAK3E,MAAMiD,cACpC4wB,KAAO1yB,OAAOuB,OAAO,GAAGiC,EAAK3E,MAAMiD,YAAY44B,UAAU4pB,aACxE+gD,EAAe95F,UAAYvL,OAAOqQ,OAAO7M,EAAK3E,MAAMiD,YAAYyJ,WAGhE85F,EAAe3yE,KAAK7wB,MAAQwjG,EAAe3yE,KAAKtsB,KAG5Ci/F,EAAe3qE,UAAU0rE,cAC3Bf,EAAe3qE,UAAU0rE,aAAajmG,QAAS,SAAAkmG,GAC7C,IAAM7L,EAAgB6K,EAAe95F,UAAU+iB,KAAM,SAAAluB,GAAC,OAAKA,EAAEgG,OAASigG,EAAYjgG,OAClF,GAAIo0F,EAAc,CAChB,IAAM8L,EAAcjB,EAAe95F,UAAUkQ,QAAQ++E,GACrD6K,EAAe95F,UAAU+6F,GAAeD,KA3R5C/lF,EAAAlQ,KAAA,IAgSa5M,EAAK9E,cAAcouE,eAAe,MAAMtpE,EAAK3E,MAAMgD,MAAMwjG,EAAe7hG,EAAK3E,MAAMwQ,SAAQ,GAhSxG,SAgSF4gB,EAhSE3P,EAAApN,KAAAoN,EAAAlQ,KAAA,0BAAAkQ,EAAAlQ,KAAA,IAmSa5M,EAAKssB,UAAU,YAnS5B,SAmSFG,EAnSE3P,EAAApN,KAAA,gBAsSA+c,GAAUrpB,IACPqpB,EAAO9wB,QAKVqE,EAAKyD,aAAa,CAChBquK,QAAO,IALT9xK,EAAKyD,aAAa,CAChBquK,OAAOvpK,WAAWkkB,GAAQhkB,QAAQzM,MAzSpC8gB,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAmTW5M,EAAK9E,cAAcouE,eAAe,MAAMtpE,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,SAAQ,GAnT9G,gBAmTJ4gB,EAnTI3P,EAAApN,OAqTUtM,IACPqpB,EAAO9wB,QAKVqE,EAAKyD,aAAa,CAChBsuK,eAAc,IALhB/xK,EAAKyD,aAAa,CAChBsuK,cAAcxpK,WAAWkkB,GAAQhkB,QAAQzM,MAxT3C8gB,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAkUW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAlUlH,gBAkUJj3C,EAlUI3P,EAAApN,OAoUUtM,IACPqpB,EAAO9wB,QAKVqE,EAAKyD,aAAa,CAChBgnE,UAAS,IALXzqE,EAAKyD,aAAa,CAChBgnE,SAASliE,WAAWkkB,GAAQhkB,QAAQzM,MAvUtC8gB,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAiVW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAjVlH,gBAiVJj3C,EAjVI3P,EAAApN,OAmVUtM,IACPqpB,EAAO9wB,QAKVqE,EAAKyD,aAAa,CAChBumE,kBAAiB,IALnBhqE,EAAKyD,aAAa,CAChBumE,kBAAqC,IAAnBzhE,WAAWkkB,IAAahkB,QAAQzM,MAtVpD8gB,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAiWW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAjWlH,cAiWJj3C,EAjWI3P,EAAApN,QAoWUtM,EApWV,CAAA0Z,EAAAlQ,KAAA,aAqWG6f,EAAO9wB,QArWV,CAAAmhB,EAAAlQ,KAAA,aAsWMgxB,EAAWr1B,WAAWkkB,GAAQhkB,QAAQzM,MACvBgE,EAAK3E,MAAM4C,eAAuC0sB,IAA1BK,EAAUw3F,aAA6Bx3F,EAAUw3F,aAvW9F,CAAA1lG,EAAAlQ,KAAA,iBAAAkQ,EAAAlQ,KAAA,IAwW0C5M,EAAK9E,cAAcy/F,iBAAiB36F,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,aAxW1G,SAAAwe,EAAAq3B,GAAAr3B,EAAApN,KAAAoN,EAAAlQ,KAAA,mBAAAkQ,EAAAq3B,GAwWyH,KAxWzH,SAwWM2mD,EAxWNh+E,EAAAq3B,GAyWAn0C,EAAKyD,aAAa,CAChBm6B,WACAk9D,kBA3WFh+E,EAAAlQ,KAAA,mBA8WA5M,EAAKyD,aAAa,CAChBm6B,UAAS,IA/WX,gBAAA9gB,EAAAe,OAAA,6BAqXAyyJ,GAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMwB,EAA4B7nJ,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMsD,OACnK,GAAIqzK,EAA0B,CAC5B,IAAMC,EAA6BrxJ,OAAO0/I,OAAO0R,GACjD1B,GAAuB2B,EAA2B7S,aAAa72J,WAAW0pK,EAA2BzF,IAAI,kBAAkBjkK,WAAW0pK,EAA2BzF,IAAI,iBACrK+D,GAAwB0B,EAA2B5S,cAGnDiR,GAAuBjjK,SAASijK,IAAsB,EAAInjK,KAAKC,IAAIkjK,GAAqBC,IAAyBA,GACjHA,GAAwBD,GAGpBA,KAAyBtwK,EAAKzC,MAAM+yK,sBAClCltK,GACFpD,EAAKyD,aAAa,CAChB6sK,wBACAC,gCASV3vJ,OAAOqJ,oBAAoB,SAAUumJ,GAAsB30J,KAAtBrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MACrC4gB,OAAOmJ,iBAAiB,SAAUymJ,GAAsB30J,KAAtBrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MAE9BoD,GACFpD,EAAKyD,aAAa,CAChB6sK,wBACAC,2BAvZAzzJ,EAAAe,OAAA,yBA6ZE4yJ,GAAuBvhK,EAASlP,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/G2/J,GAAyBxhK,EAASuhK,GAAsB,OAActjK,KAAKqE,IAAIxR,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAASrN,EAAK9E,cAAciT,YAAYnO,EAAK9E,cAAciT,YAAY,IAAIC,MAAQmD,OAAO,uBAAuB,uBAAuBjD,SAAS,EAAE,QAAQmoC,GAAGznC,UAAU,MAGxU08J,GAAe,KACbl9I,GAlaF,YAAA5vB,OAka8BoB,EAAK3E,MAAMiD,YAAY8J,QAlarD,KAAAxJ,OAkagEsQ,GAC9Dgc,GAAalrB,EAAK9E,cAAc+yC,cAAczf,IAEpDk9I,GAAe,CAAC,CACd7tK,GAAGmC,EAAK3E,MAAMgD,MACd0C,MAAOf,EAAK3E,MAAM0F,MAAQf,EAAK3E,MAAM0F,MAAQ,OAAOmvK,EAAiBnvK,MAAM8H,IAAIC,KAAK,KAAK,IACzFpD,KAAM,OAGW,OAAfwlB,IAAuBA,GAAW,IAAMA,GAAW,GAAGxlB,MAAQwlB,GAAW,GAAGxlB,KAAKhJ,OAAO,GA3axF,CAAAogB,EAAAlQ,KAAA,UA4aF8+J,GAAexgJ,GA5abpO,EAAAlQ,KAAA,sBAgbuB,SAArB5M,EAAK3E,MAAMgD,MAhbb,CAAAye,EAAAlQ,KAAA,UAobA,IAHA8+J,GAAa,GAAGhmK,KAAO,GACjB88C,IAAiB,IAAIp0C,MAAOY,UAC9B8C,GAAI,GACC7J,GAAE,EAAGA,IAAG,GAAIA,KACbymH,GAAQ1uH,EAAK9E,cAAciT,YAAYq0C,IAAgBisE,IAAIxmH,GAAE,OAC7D4J,GAAI68G,GAAMn9G,OAAO,oBAElBtJ,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzB6J,IAAiB,EAAd3E,KAAK+kK,SAAW,EAInBpgK,IAAiB,EAAd3E,KAAK+kK,SAAW,EAGrBxG,GAAa,GAAGhmK,KAAKgD,KAAK,CAACmJ,KAAEC,OAhc/BgL,EAAAlQ,KAAA,0BAmcM6E,GAAmBzR,EAAK9E,cAAc2zD,oBAAoB,OAAO,IAncvE/xC,EAAAlQ,KAAA,IAuciC5M,EAAK9E,cAAcuU,gBAAgBzP,EAAK3E,MAAMiD,YAAY8J,QAAQ8G,EAAOwhK,GAAuBD,IAAqB,EAAMh/J,IAvc5J,SAucMk/J,GAvcN7zJ,EAAApN,KAycIsC,GAAY,EACV4+J,GAAaD,GAAmBj0K,OAEtCi0K,GAAmBh0K,QAAQ,SAAC6I,EAAEyC,GAC5B,IAAM4J,EAAI7R,EAAK9E,cAAciT,YAAwB,IAAZ3I,EAAE2K,WAAgBoB,OAAO,oBAC5DO,EAAIvJ,WAAWvI,EAAK9E,cAAcsV,iBAAiBhL,EAAE2xF,SAAS,KAC9DjlF,EAAU/E,KAAKgF,MAAMH,KAAY4+J,GAAW,KAClDlF,GAAa,GAAGhmK,KAAKgD,KAAK,CAAEmJ,IAAGC,IAAGI,cAhdpC,SAodEw5J,GAAa,GAAGhmK,KAAKhJ,OAAO,GAC9BsD,EAAK9E,cAAciwB,cAAcqD,GAAck9I,IArd/C,gBA0dgC,IAAhCA,GAAa,GAAGhmK,KAAKhJ,UACjBqvK,GAAWvvK,OAAOuB,OAAO,GAAG2tK,GAAa,GAAGhmK,KAAK,KAC9CmM,EAAI7R,EAAK9E,cAAciT,YAAY49J,GAAS,oBAAoBt9C,IAAI,EAAE,SAASl9G,OAAO,oBAC/Fm6J,GAAa,GAAGhmK,KAAKgD,KAAKqjK,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMI,EAAqBniJ,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMsD,OAC5J,GAAI2tK,EAAmB,CACrB,IAAMC,EAAsB3rJ,OAAO0/I,OAAOgM,GAC1CN,GAAgBO,EAAoBnN,aAAa72J,WAAWgkK,EAAoBC,IAAI,kBAAkBjkK,WAAWgkK,EAAoBC,IAAI,iBACzIP,GAAiBM,EAAoBlN,cACjC2M,KAAkBhsK,EAAKzC,MAAMyuK,eAAkBhsK,EAAKzC,MAAM0uK,gBAC5DjsK,EAAKyD,aAAa,CAChBuoK,iBACAC,eAAgBjsK,EAAKzC,MAAM0uK,eAAiBjsK,EAAKzC,MAAM0uK,eAAiBA,UAQhFrrJ,OAAOqJ,oBAAoB,SAAUiiJ,GAAerwJ,KAAfrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MACrC4gB,OAAOmJ,iBAAiB,SAAUmiJ,GAAerwJ,KAAfrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MAG5BmsK,GAAex2J,IAEfy2J,GAAgB,CACpB34J,UAAU,EACVi5J,UAAU,EACVh5J,SAAQ,EACRC,SAAS,KACTzO,SAAQ,EACR+N,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB2C,eAAc,EACd9U,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACdoxK,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAGtxK,MAAO,WACpB,CAAEsxK,OAAQ,GAAItxK,MAAO,cAG3BgT,cAAa/T,EAAK3E,MAAM4C,UAAmB,IAC3C+U,QAAQ,SAAAhN,GAAK,OAAIuC,WAAWvC,GAAOyC,QAAQ,GAAG,KAC9CiM,KAAK,CACH,CAAEk7B,MAAO,CAAE/xC,GAAImC,EAAK3E,MAAMgD,OAAUR,GAAI,iBAE1C6J,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CkN,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEu3J,EAAA1vK,EAAAC,cAACo1K,EAAA,EAAD,CACEp9J,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAO1Y,QAC/CyY,EAAMC,OAAOhX,IAAI,SAAA8W,GACf,IAAMhN,EAAegN,EAAMK,QACrBs3J,EAAkB33J,EAAMxP,KAAK8P,WAEnC,OACEm3J,EAAA1vK,EAAAC,cAACq1K,EAAA,EAAD,CACEtzK,IAAKiW,EAAMrX,GACXkD,MAAOmU,EAAMnU,MACbgI,MAAOb,EACPlC,MAAO6mK,SAUnB7sK,EAAK3E,MAAMqJ,YAET1E,EAAK3E,MAAMqJ,YAAclI,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAYhI,QAC9DF,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAY/H,QAAQ,SAAAC,GACzCwvK,GAAcxvK,GAAKoD,EAAK3E,MAAMqJ,WAAW9H,KAK3CwG,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACN+H,gBACAT,gBACAU,iBACAJ,iBACAC,oBAGJx/I,EAASi/I,GApkBL5uJ,EAAAe,OAAA,6BAukBAgzJ,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMuB,EAA6BroJ,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMua,UAAYuU,SAASC,eAAepqB,EAAK3E,MAAMsD,OACpK,GAAI6zK,EAA2B,CAC7B,IAAMC,EAA8B7xJ,OAAO0/I,OAAOkS,GAClDzB,GAAwB0B,EAA4BrT,aAAa72J,WAAWkqK,EAA4BjG,IAAI,kBAAkBjkK,WAAWkqK,EAA4BjG,IAAI,iBACzKwE,GAAyByB,EAA4BpT,cACjD0R,KAA0B/wK,EAAKzC,MAAMwzK,uBAA0B/wK,EAAKzC,MAAMyzK,wBAC5EhxK,EAAKyD,aAAa,CAChBstK,yBACAC,uBAAwBhxK,EAAKzC,MAAMyzK,uBAAyBhxK,EAAKzC,MAAMyzK,uBAAyBA,UAQxGpwJ,OAAOqJ,oBAAoB,SAAUgnJ,GAAuBp1J,KAAvBrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MACrC4gB,OAAOmJ,iBAAiB,SAAUknJ,GAAuBp1J,KAAvBrf,OAAAiwK,EAAA,EAAAjwK,QAAAiwK,EAAA,EAAAjwK,CAAAwD,MAE5BkxK,GAAelxK,EAAK9E,cAAciT,YAAYnO,EAAK9E,cAAciT,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOiD,OAAO,oBAAoB,oBACtI4/J,GAAiBD,GAAa7iK,QAAQC,SAAS,EAAE,QAGjD8iK,GAAuBjkK,KAAKqE,IAAIxR,EAAK9E,cAAc6V,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS8jK,GAAe16H,GAAGznC,UAAU,MA/mBtJ8N,EAAAlQ,KAAA,IAknBmC5M,EAAK9E,cAAcuU,gBAAgBzP,EAAK3E,MAAMiD,YAAY8J,QAAQ8G,EAAOkiK,GAAoB,MAAK,EAAM,OAlnB3I,gBAknBAC,GAlnBAv0J,EAAApN,KAonBE4hK,GAAuBD,GAA2BjzK,IAAI,SAACoH,EAAEyC,GAC7D,IAAI6J,EAAI,EACFD,EAAI7R,EAAK9E,cAAciT,YAAwB,IAAZ3I,EAAE2K,WAAgBoB,OAAO,oBAC5D3D,EAAa5N,EAAK9E,cAAcsV,iBAAiBhL,EAAE+K,UAAUvQ,EAAK3E,MAAMiD,YAAYtC,UAY1F,OAVK60K,GAGH/+J,EAAIvJ,WAAWqF,EAAW6R,IAAIoxJ,IAAiBpjK,MAAM,GAAGjF,MAAM,MAF9DqoK,GAAkBjjK,EAKG,OAAnBkjK,KACFA,GAAiBzjK,SAAS7H,EAAEktK,cAGvB,CAAE7gK,IAAGC,OAGRy/J,GAAuB,CAAC,CAC5B1zK,GAAG,OACHkD,MAAO,OAAOmvK,EAAiBnvK,MAAM8H,IAAIC,KAAK,KAAK,IACnDpD,KAAM4rK,KAIFE,GAAuB77J,IAEvB87J,GAAwB,CAC5Bh+J,UAAU,EACVi5J,UAAU,EACVh5J,SAAQ,EACRxO,SAAQ,EACRyO,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBnS,OAAO,SAAAwD,GAAC,OAAIA,EAAEzE,OACdqT,mBAAmB,GACnB1M,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG3C9H,EAAK3E,MAAMqJ,YAET1E,EAAK3E,MAAMqJ,YAAclI,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAYhI,QAC9DF,OAAOC,KAAKuD,EAAK3E,MAAMqJ,YAAY/H,QAAQ,SAAAC,GACzC60K,GAAsB70K,GAAKoD,EAAK3E,MAAMqJ,WAAW9H,KAKnDwG,GACFpD,EAAKyD,aAAa,CAChB2gK,OAAM,EACNoN,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJvkJ,EAAS8kJ,GAprBLz0J,EAAAe,OAAA,6BAurBE3c,GAAO8pB,EAAU9pB,MACvBurB,EAASzsB,EAAK9E,cAAckyB,aAAalsB,GAAKlB,EAAK3E,MAAMiD,eAEvD0B,EAAKyD,aAALjH,OAAAuwK,EAAA,EAAAvwK,CAAA,GACG+uK,EAAW9+I,IA3rBZ3P,EAAAe,OAAA,6BAAAf,EAAAlQ,KAAA,IAgsBW5M,EAAK9E,cAAcouE,eAAeiiG,EAAUvrK,EAAK3E,MAAMgD,MAAM2B,EAAK3E,MAAMiD,YAAY0B,EAAK3E,MAAMwQ,QAAQ63D,GAhsBlH,gBAgsBJj3C,EAhsBI3P,EAAApN,OAisBUtM,GACZpD,EAAKyD,aAALjH,OAAAuwK,EAAA,EAAAvwK,CAAA,CACE4nK,OAAM,GACLmH,EAAW9+I,IApsBZ3P,EAAAe,OAAA,6BAAAf,EAAAe,OAAA,SA2sBH4O,GA3sBG,0BAAA3P,EAAAhP,SAAA8O,EAAAzhB,oFAtDNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAK4H,oBAAqB,yPAI1B5H,KAAKI,kQAILJ,KAAKmxB,2LAGYppB,wFAASC,iCAAS,KAC9BhI,KAAK4H,4DACD5H,KAAKiI,SAASF,EAASC,oCAEzB,4LAGgB3F,EAAWC,gGAClCtC,KAAKI,YAEC4lK,EAAe3jK,EAAUa,QAAUlD,KAAKE,MAAMgD,MAC9CmuB,EAAiBhvB,EAAUqO,UAAY1Q,KAAKE,MAAMwQ,QAClDL,EAAgBhO,EAAUS,WAAa9C,KAAKE,MAAM4C,SAClDwN,EAAmBjO,EAAUkO,YAAcvQ,KAAKE,MAAMqQ,UACtDwhK,EAAe1vK,EAAUwtB,UAAUpoB,OAASzH,KAAKE,MAAM2vB,UAAUpoB,KACjEy/G,GAAwB7kH,EAAU6kH,sBAAwBlnH,KAAKE,MAAMgnH,qBACrEwK,GAA2BrvH,EAAUke,SAAWvgB,KAAKE,MAAMqgB,SAAale,EAAUke,SAAWvgB,KAAKE,MAAMqgB,SAAWtQ,KAAKC,UAAU7N,EAAUke,QAAQ8Y,YAAcppB,KAAKC,UAAUlQ,KAAKE,MAAMqgB,QAAQ8Y,UACpMmsF,EAAsBnjH,EAAUmc,cAAgBxe,KAAKE,MAAMse,cAAgBnd,OAAOqQ,OAAOrP,EAAUmc,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,SAAWF,OAAOqQ,OAAO1R,KAAKE,MAAMse,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBxQ,OAEjPwwK,GAAgB/L,GAAgB30I,GAAkBm0F,GAAuB0B,GAAwBwK,EACnG1xH,KAAKsI,aAAa,CAChB2gK,OAAM,GACN,WACA5oK,EAAK8wB,eAEE9gB,GAAiBC,KACpB05G,EAAW3oH,OAAOuB,OAAO,GAAG5C,KAAKoC,OACvCpC,KAAKsI,aAAa,CAChB2gK,OAAM,GACN,WACA5oK,EAAK4H,SAAS+hH,6IAmtBZ,IAAAx/G,EAAAxK,KACA6vB,EAAY7vB,KAAKE,MAAM2vB,UACzByB,EAAS,KAGP/oB,OADsCinB,IAAzBK,EAAUphB,YAA4BohB,EAAUphB,WACtC+iK,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAD,CAAQ9vK,KAAK,SAAa,KAEjD+pB,EAAa,CACjB9rB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACN5E,UAAU,CACRI,eAAe,eAKfyuB,EAAU3vB,OAASmB,OAAOC,KAAKuuB,EAAU3vB,OAAOqB,QAClDF,OAAOC,KAAKuuB,EAAU3vB,OAAOsB,QAAQ,SAAAC,GACnCgwB,EAAWhwB,GAAKouB,EAAU3vB,MAAMuB,KAKhCouB,EAAUkjF,WAAa1xG,OAAOC,KAAKuuB,EAAUkjF,WAAWxxG,QAC1DF,OAAOC,KAAKuuB,EAAUkjF,WAAWvxG,QAAQ,SAAAC,GACH,oBAAzBouB,EAAUkjF,UAAUtxG,KAC7BgwB,EAAWhwB,GAAKouB,EAAUkjF,UAAUtxG,GAAG+I,EAAKtK,UAKlD,IAAM60K,EAAmB/0K,KAAKE,MAAMgD,MAAQlD,KAAKD,cAAc6V,gBAAgB,CAAC,QAAQ,SAAS5V,KAAKE,MAAMgD,MAAM2S,gBAAkB,KAC9H1S,EAAcnD,KAAKE,MAAMiD,aAAe4xK,EAExCj0K,EAAe2wB,GAAcA,EAAW3wB,aAAe2wB,EAAW3wB,aAAe,EACjFD,EAAW4wB,GAAcA,EAAW5wB,SAAW4wB,EAAW5wB,SAAab,KAAKE,MAAM4C,SAAW,EAAI,EACjG/B,EAAe0wB,GAAcA,EAAW1wB,aAAe0wB,EAAW1wB,aAAiBf,KAAKE,MAAM4C,SAAW,EAAI,EAE7GgjH,EAAYivD,GAAoBA,EAAiBhnK,KAAOgnK,EAAiBhnK,KAAQ5K,GAAeA,EAAY4K,KAAO5K,EAAY4K,KAA9C,iBAAAtK,OAAsEzD,KAAKE,MAAMgD,MAAjF,QAEvF,OAAQ2sB,EAAUpoB,MAChB,IAAK,cACH6pB,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,CACEmuB,UAAW,MACXC,QAAShxB,KAAKE,MAAMgD,OAChB2sB,EAAUoB,cAEdugJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,CAAOyL,IAAKy3G,GAAer0F,KAGjC,MACA,IAAK,OACHH,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,CAAOyL,IAAKy3G,GAAer0F,IAE/B,MACA,IAAK,YACH,IAAMa,EAAYyiJ,GAAoBA,EAAiBnnK,MAAQmnK,EAAiBnnK,MAAQ5N,KAAKE,MAAMgD,MACnGouB,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAaa,GAE3B,MACA,IAAK,eACH,IAAMsqG,EAAe58H,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAMiD,YAAYk/B,SAAS,SAClGu6F,IACFtrG,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,CAAOyL,IAAKuuH,GAAkBnrG,KAGpC,MACA,IAAK,eACH,IAAMmvG,EAAe5gI,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa5V,KAAKE,MAAMiD,YAAYk/B,SAAS,UACtG/Q,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAamvG,GAE3B,MACA,IAAK,eACHtvG,EAAStxB,KAAKoC,MAAM49B,aAClBwxI,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B1wB,aAAcA,EAAcR,OAAQP,KAAKoC,MAAM49B,gBAC1Ez3B,EACN,MACA,IAAK,MACH+oB,EAAStxB,KAAKoC,MAAM4yE,IAClBw8F,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B1wB,aAAcA,EAAcR,OAAQP,KAAKoC,MAAM4yE,OAC1EzsE,EACN,MACA,IAAK,aACH+oB,EAAStxB,KAAKoC,MAAMqQ,WAClB++J,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B1wB,aAAcA,EAAcR,OAAQP,KAAKoC,MAAMqQ,cAC1ElK,EACN,MACA,IAAK,kBACH+oB,EAAStxB,KAAKoC,MAAMm0K,gBAClB/E,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B1wB,aAAcA,EAAcR,OAAQP,KAAKoC,MAAMm0K,mBAC1EhuK,EACN,MACA,IAAK,mBACH+oB,EAAStxB,KAAKoC,MAAMqS,iBAClB+8J,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B1wB,aAAcA,EAAcR,OAAQP,KAAKoC,MAAMqS,oBAC1ElM,EACN,MACA,IAAK,gCACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAMotE,6BAA+BxvE,KAAKoC,MAAMqtE,0BAChF+hG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAMqtE,2BAC3B70C,MAAOxtB,WAAWpN,KAAKoC,MAAMotE,6BAC7B66C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAAk/B,GAAA,IAAGqqF,EAAHrqF,EAAGqqF,WAAHrqF,EAAerF,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,2BACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAMivE,wBAA0BrxE,KAAKoC,MAAMkvE,qBAC3EkgG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAMkvE,sBAC3B12C,MAAOxtB,WAAWpN,KAAKoC,MAAMivE,wBAC7Bg5C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAA20B,GAAA,IAAG40F,EAAH50F,EAAG40F,WAAH50F,EAAekF,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,cACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAMmpE,WAAavrE,KAAKoC,MAAMkpE,QAC9DkmG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAMkpE,SAC3B1wC,MAAOxtB,WAAWpN,KAAKoC,MAAMmpE,WAC7B8+C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAA60B,GAAA,IAAG00F,EAAH10F,EAAG00F,WAAH10F,EAAegF,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,uBACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAM4yK,oBAAsBh1K,KAAKoC,MAAM6yK,iBACvEzD,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAM6yK,kBAC3Br6I,MAAOxtB,WAAWpN,KAAKoC,MAAM4yK,oBAC7B3qD,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAA80B,GAAA,IAAGy0F,EAAHz0F,EAAGy0F,WAAHz0F,EAAe+E,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,kBACH+oB,EAAStxB,KAAKoC,MAAM6mK,OAASjpK,KAAKoC,MAAM0oE,eAAiB9qE,KAAKoC,MAAM6oE,YAClEumG,EAAA1vK,EAAAC,cAACywK,EAAA1wK,EAAD,CACEooH,MAAO,EACPz6D,QAAS,IACT06D,UAAW,GACXC,WAAW,EACXzvF,SAAU,QACV95B,SAAUA,EACV+vD,IAAKxjD,WAAWpN,KAAKoC,MAAM6oE,aAC3BrwC,MAAOxtB,WAAWpN,KAAKoC,MAAM0oE,eAC7Bu/C,aAAe,SAAA7yF,GAAC,OAAIhtB,EAAKzK,cAAca,iBAAiB42B,EAAE32B,EAASC,EAAaC,KAE/E,SAAAghC,GAAA,IAAGuoF,EAAHvoF,EAAGuoF,WAAHvoF,EAAenH,MAAf,OACC42I,EAAA1vK,EAAAC,cAAA,QAAMuE,MAAOmrB,EAAWnrB,MAAOikH,IAAKD,MAGtC/hH,EACN,MACA,IAAK,oBACH+oB,EAAStxB,KAAKoC,MAAM2vE,kBAClBy/F,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B5wB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKoC,MAAM2vE,qBAC1HxpE,EACN,MACA,IAAK,YACH+oB,EAAStxB,KAAKoC,MAAM2qE,WAAa1rE,OAAOC,KAAKtB,KAAKoC,MAAM2qE,WAAWxrE,OAAO,EACxEiwK,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAD,CACEv2K,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdC,OAAOqQ,OAAO1R,KAAKoC,MAAM2qE,WAAW9pE,IAAK,SAACynC,EAAe63D,GAAhB,OACvCivE,EAAA1vK,EAAAC,cAAC45G,EAAD,CACEz4G,MAAOwnC,EAAexnC,MACtBC,YAAaunC,EACb5mC,IAAG,SAAAL,OAAW8+F,GACd1yE,UAAW,CACTpoB,KAAK,cACLwpB,aAAa,CACXD,QAAQ,GAAAvtB,OAAGinC,EAAexnC,QAASsH,EAAKpI,MAAMw8F,+BAAiCp0F,EAAKpI,MAAMw8F,8BAA8Bl0D,EAAexnC,OAApG,KAAAO,OAAkH+G,EAAKpI,MAAMw8F,8BAA8Bl0D,EAAexnC,OAAOoK,QAAQzM,GAAzL,KAAA4C,OAAsMinC,EAAepU,sBAArN,yBAAoQ,KAEzSp2B,MAAM,CACJgH,aAAa,MACb+G,SAAS,WACT5I,OAAO,CAAC,QAAQ,OAChBI,GAAG88F,EAAgB,QAAU,EAC7Br0F,OAAO7M,OAAOqQ,OAAOlH,EAAKpI,MAAM2qE,WAAWxrE,OAAOghG,EAClDpzF,UAAU,CAAC,kCAAkC,0CAOvDnP,KAAKoC,MAAM2qE,UACbykG,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAV,KACElpB,EACN,MACA,IAAK,kBACH+oB,EAAStxB,KAAKoC,MAAMmtE,gBAClBiiG,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B5wB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKoC,MAAMmtE,mBAC1HhnE,EACN,MACA,IAAK,aACH+oB,EAAStxB,KAAKoC,MAAMiP,WAClBmgK,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B5wB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKoC,MAAMiP,cAC1H9I,EACN,MACA,IAAK,OACH+oB,EAAStxB,KAAKoC,MAAMipC,SAClBmmI,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B5wB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKoC,MAAMipC,YAC1H9iC,EACN,MACA,IAAK,QACH+oB,EAAUtxB,KAAKE,MAAMiD,aAAenD,KAAKE,MAAMiD,YAAY8nJ,kBAAsBumB,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAV,YAA0DjC,IAArBxvB,KAAKoC,MAAM65F,OAA4C,OAArBj8F,KAAKoC,MAAM65F,OAAkBj8F,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM65F,OAAOxmF,GAAG,GACjO+7J,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GAAiB6uB,EAAjB,CAA6B5wB,SAAU,EAAGN,OAAQP,KAAKoC,MAAM65F,SAC1Dj8F,KAAKD,cAAc8R,MAAM7R,KAAKoC,MAAM65F,OAAO7nE,IAAI,GAAMo9I,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAV,KAAkClpB,EAC9F,MACA,IAAK,eACH+oB,EAAStxB,KAAKoC,MAAMoqE,aACkB,qBAA5B38C,EAAUuxG,eAAiCvxG,EAAUuxG,cAC3DowC,EAAA1vK,EAAAC,cAAC21K,EAAA,EAAD,CACE50K,SAAU9C,KAAKE,MAAM4C,SACrBmmH,UAAWjpH,KAAKoC,MAAMs0K,uBAEtBlF,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMoqE,aAAlC,MAGFglG,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMoqE,aAAlC,KAEFjkE,EACJ,MACA,IAAK,oBACH+oB,EAAStxB,KAAKoC,MAAMq0K,kBACkB,qBAA5B5mJ,EAAUuxG,eAAiCvxG,EAAUuxG,cAC3DowC,EAAA1vK,EAAAC,cAAC21K,EAAA,EAAD,CACE50K,SAAU9C,KAAKE,MAAM4C,SACrBmmH,UAAWjpH,KAAKoC,MAAMo0K,4BAEtBhF,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMq0K,kBAAlC,MAGFjF,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMq0K,kBAAlC,KAEFluK,EACJ,MACA,IAAK,gBACH+oB,EAAStxB,KAAKoC,MAAMu1K,cAClBnG,EAAA1vK,EAAAC,cAAC21K,EAAA,EAAD,CACEzuD,UAAW,KACXnmH,SAAU9C,KAAKE,MAAM4C,UAErB0uK,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GACM6uB,EADN,CAEE5wB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKoC,MAAMu1K,kBAGrBpvK,EACN,MACA,IAAK,WACH+oB,EAAStxB,KAAKoC,MAAM67H,SAClBuzC,EAAA1vK,EAAAC,cAAC21K,EAAA,EAAD,CACEzuD,UAAW,KACXnmH,SAAU9C,KAAKE,MAAM4C,UAErB0uK,EAAA1vK,EAAAC,cAAC01K,EAAA,EAADp2K,OAAAuB,OAAA,GACM6uB,EADN,CAEE5wB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKoC,MAAM67H,aAGrB11H,EACN,MACA,IAAK,mBACH,IAAMqpH,EAAsB5xH,KAAKD,cAAc6V,gBAAgB,CAAC,aAAa,QAAQ,cAC/Eq+C,EAAkBj0D,KAAKD,cAAc6V,gBAAgB,CAAC,YAAYg8G,IACxEtgG,EAAStxB,KAAKoC,MAAMoxB,iBAClBg+I,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAV,IAAwBzxB,KAAKoC,MAAMoxB,iBAAiBlmB,QAAQzM,GAA5D,SAA6EozD,EAAgB39B,uBAC3F/tB,EACN,MACA,IAAK,wBACH+oB,EAAStxB,KAAKoC,MAAM6tH,sBAClBuhD,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAM6tH,sBAAsB3iH,QAAQzM,GAAhE,IAA4Eb,KAAKE,MAAMiD,YAAYmzB,uBACjG/tB,EACN,MACA,IAAK,oBACH+oB,EAAStxB,KAAKoC,MAAMooC,kBAClBgnI,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMooC,kBAAkBl9B,QAAQzM,IAC1D0H,EACN,MACA,IAAK,MACH+oB,EAAStxB,KAAKoC,MAAMykE,SAClB2qG,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAazxB,KAAKoC,MAAMykE,SAAWrmE,MAAM4M,WAAWpN,KAAKoC,MAAMykE,WAAmB,GAAN,KACpFt+D,EACN,MACA,IAAK,SACH+oB,OAA+B9B,IAAtBxvB,KAAKoC,MAAMu0K,OAClBnF,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,GAAmC,IAAtBzxB,KAAKoC,MAAMu0K,OAAmB32K,KAAKoC,MAAMu0K,OAAS,IAAKnF,EAAA1vK,EAAAC,cAAA,mBAC5EwG,EACN,MACA,IAAK,WACH+oB,OAAsC9B,IAA7BxvB,KAAKoC,MAAMw0K,cAClBpF,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,GAA0C,IAA7BzxB,KAAKoC,MAAMw0K,cAA0B52K,KAAKoC,MAAMw0K,cAAgB,IAAKpF,EAAA1vK,EAAAC,cAAA,mBAC1FwG,EACN,MACA,IAAK,WACH+oB,OAAiC9B,IAAxBxvB,KAAKoC,MAAMktE,SAClBkiG,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,GAAqC,IAAxBzxB,KAAKoC,MAAMktE,SAAqBtvE,KAAKoC,MAAMktE,SAAW,IAAKkiG,EAAA1vK,EAAAC,cAAA,mBAChFwG,EACN,MACA,IAAK,mBACH+oB,OAAyC9B,IAAhCxvB,KAAKoC,MAAMysE,iBAClB2iG,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,GAA6C,IAAhCzxB,KAAKoC,MAAMysE,iBAA6B7uE,KAAKoC,MAAMysE,iBAAmB,IAAK2iG,EAAA1vK,EAAAC,cAAA,mBAChGwG,EACN,MACA,IAAK,MACH+oB,OAAiC9B,IAAxBxvB,KAAKoC,MAAMqgC,SAClB+uI,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAD,CACEt2K,WAAY,SACZC,cAAe,OAEfqwK,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,GAAqC,IAAxBzxB,KAAKoC,MAAMqgC,SAAqBziC,KAAKoC,MAAMqgC,SAAW,IAAK+uI,EAAA1vK,EAAAC,cAAA,mBAEhF/B,KAAKoC,MAAMu9F,eAAiBt+F,OAAOC,KAAKtB,KAAKoC,MAAMu9F,eAAep+F,OAAO,GACvEiwK,EAAA1vK,EAAAC,cAAC45G,EAAD,CACE9rF,UAAW,CACTpoB,KAAK,UACLvH,MAAM,CACJke,UAAU,CACR3Y,GAAG,GAELsrB,UAAU,MACVC,QAAQ3vB,OAAOC,KAAKtB,KAAKoC,MAAMu9F,eAAe18F,IAAK,SAAA0qE,GACjD,IAAMr3C,EAAwB9rB,EAAKzK,cAAc6V,gBAAgB,CAAC,YAAY+3D,EAAS,0BACjFiqG,EAAcptK,EAAKzK,cAAc6V,gBAAgB,CAAC,YAAY+3D,EAAS,mBACzE9iE,EAAQL,EAAKpI,MAAMu9F,cAAchyB,GAAUrgE,QAAQzM,GACvD,OAAQ+2K,GACN,QACA,IAAK,MACH/sK,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAApH,OAAMoH,EAAN,KAAApH,OAAe6yB,GAGxB,SAAA7yB,OAAUkqE,EAAV,MAAAlqE,OAAuBoH,KACtB8C,KAAK,WAMlBpF,EACN,MACA,IAAK,SACH,IAAM8pK,EAAyC,oBAApBxiJ,EAAUjiB,MAAuBiiB,EAAUjiB,MAAM5N,KAAKE,OAAS2vB,EAAUjiB,MACpG0jB,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,GAAY6uB,EAAZ,CAAwB3rB,QAAS,kBAAM2rB,EAAWxsB,YAAYuF,EAAKtK,UAAUmyK,GAEjF,MACA,IAAK,mBACH/gJ,EAAStxB,KAAKoC,MAAMg0K,qBAClB5E,EAAA1vK,EAAAC,cAAC81K,EAAA,EAADx2K,OAAAuB,OAAA,GACM5C,KAAKoC,MAAMk0K,sBADjB,CAEE71K,KAAMT,KAAKoC,MAAMi0K,qBACjB9rK,KAAMvK,KAAKoC,MAAMg0K,qBACjBn1K,MAAOjB,KAAKoC,MAAMwzK,sBAClBvwK,OAAQrF,KAAKoC,MAAMyzK,0BAEnBttK,EACN,MACA,IAAK,kBACH+oB,EAAStxB,KAAKoC,MAAM+yK,sBAAwBn1K,KAAKoC,MAAMgzK,sBACrD5D,EAAA1vK,EAAAC,cAAC+1K,EAAA,EAADz2K,OAAAuB,OAAA,GACM5C,KAAKE,MADX,CAEEwmB,YAAa,CACXhf,KAAK,QAEP+nB,WAAY,GACZ7lB,cAAe5J,KAAKE,MAAMgD,MAC1BjC,MAAOjB,KAAKoC,MAAM+yK,qBAClB9vK,OAAQrF,KAAKoC,MAAMgzK,sBACnBnqK,OAAqC,qBAAtBjL,KAAKE,MAAM+K,QAAyBjL,KAAKE,MAAM+K,OAC9DwD,WAA6C,qBAA1BzO,KAAKE,MAAMuO,YAA6BzO,KAAKE,MAAMuO,cAEtElG,EACN,MACA,IAAK,UACH+oB,EACEkgJ,EAAA1vK,EAAAC,cAACy1K,EAAA,EACK/lJ,EAEJ+/I,EAAA1vK,EAAAC,cAACy1K,EAAA,EAADn2K,OAAAuB,OAAA,CACE6C,GAAI,EACJgC,KAAM,OACNC,KAAM,MACN9B,MAAO,aACH6rB,EAAWrT,aAIvB,MACA,IAAK,WACHkT,EAAStxB,KAAKoC,MAAMmuK,aAClBiB,EAAA1vK,EAAAC,cAAC81K,EAAA,EAADx2K,OAAAuB,OAAA,GACM5C,KAAKoC,MAAM6uK,cADjB,CAEExwK,KAAMT,KAAKoC,MAAM4uK,aACjBzmK,KAAMvK,KAAKoC,MAAMmuK,aACjBtvK,MAAOjB,KAAKoC,MAAMyuK,cAClBxrK,OAAQrF,KAAKoC,MAAM0uK,kBAEnBvoK,EACN,MACA,IAAK,SACH,IAAIwpB,EAAkB,KAClBC,EAAchyB,KAAKoC,MAAMytB,EAAUpoB,MACvC,OAAQooB,EAAUpvB,MAChB,IAAK,SACHuxB,EAAchyB,KAAKD,cAAc8R,MAAMmgB,GAAazN,WACpDwN,EAAkBjyB,IAClB2xB,EAAWlxB,OAASyxB,EACtB,MACA,IAAK,OACHD,EAAkB5rB,IACpB,MACA,IAAK,OACH4rB,EAAkBI,IAClBV,EAAWhqB,KAAOuqB,EACpB,MACA,QACED,EAAkB3rB,IAKtB,IAAMyuK,EAAkBxzK,OAAOqQ,OAAOme,EAAU9pB,MAAM+O,MACtD,GAAI9U,KAAKE,MAAMiD,YAAX,GAAAM,OAA0BoxK,EAA1B,UAAkD,CACpD,IAAMC,EAAmB90K,KAAKE,MAAMiD,YAAX,GAAAM,OAA0BoxK,EAA1B,UAErBC,GAAoBzzK,OAAOC,KAAKwzK,GAAkBvzK,QACpDF,OAAOC,KAAKwzK,GAAkBtzK,QAAQ,SAAAC,GACpCgwB,EAAWhwB,GAAKqzK,EAAiBrzK,KAKvC6vB,EAASU,EACPw/I,EAAA1vK,EAAAC,cAACgwB,EAAoBN,EAAaO,GAChCzpB,EACN,MACA,QACE,IAAIsqK,EAAiB7yK,KAAKoC,MAAMytB,EAAUpoB,MACtCzH,KAAKoC,MAAMytB,EAAUpoB,OAASzH,KAAKoC,MAAMytB,EAAUpoB,MAAMqrK,eAC3DD,EAAiB7yK,KAAKoC,MAAMytB,EAAUpoB,MAAM6F,QAAQzM,IAEtDywB,EAAStxB,KAAKoC,MAAMytB,EAAUpoB,MAC5B+pK,EAAA1vK,EAAAC,cAACy1K,EAAA,EAAS/lJ,EAAaohJ,GACrBtqK,EAGR,OAAO+oB,SAvwCcpvB,aA2wCVy5G","file":"static/js/main.56780a4f.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            \n               depositedTokens.map( token => {\n                const tokenConfig=this.props.availableTranches[token.protocol][token.token]\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token.token}\n                    addTokenName={false}\n                    tranche={token.tranche}\n                    protocol={token.protocol}\n                    rowId={`tranche-col-${token.protocol}`}\n                    tokenConfig={tokenConfig}\n                    trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                    cardId={`tranche-card-${token.protocol}`}\n                    key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            \n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n                const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('execute',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (latestHarvestBlock){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', latestHarvestBlock, parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo_1',trancheConfig.name,trancheConfig.blockNumber,'underlyingEventsFilters',underlyingEventsFilters);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={}\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche]\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={}\n            }\n            remainingTranches[protocol][tranche]={}\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche]\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      timeout:15000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}